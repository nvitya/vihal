/* SPDX-License-Identifier: BSD-3-Clause */
/*
 * Copyright (c) 2024 Rockchip Electronics Co., Ltd.
 */

#ifndef __RK3506_H
#define __RK3506_H
#ifdef __cplusplus
  extern "C" {
#endif

/****************************************************************************************/
/*                                                                                      */
/*                               Module Structure Section                               */
/*                                                                                      */
/****************************************************************************************/
#ifndef __ASSEMBLY__
/* DMA Register Structure Define */
struct DMA_CHANNEL_STATUS {
    __I  uint32_t CSR;
    __I  uint32_t CPC;
};
struct DMA_CHANNEL_CONFIG {
    __I  uint32_t SAR;
    __I  uint32_t DAR;
    __I  uint32_t CCR;
    __I  uint32_t LC0;
    __I  uint32_t LC1;
    __I  uint32_t PADDING[3];
};
struct DMA_REG {
    __I  uint32_t DSR;                                /* Address Offset: 0x0000 */
    __I  uint32_t DPC;                                /* Address Offset: 0x0004 */
         uint32_t RESERVED0008[6];                    /* Address Offset: 0x0008 */
    __IO uint32_t INTEN;                              /* Address Offset: 0x0020 */
    __I  uint32_t EVENT_RIS;                          /* Address Offset: 0x0024 */
    __I  uint32_t INTMIS;                             /* Address Offset: 0x0028 */
    __O  uint32_t INTCLR;                             /* Address Offset: 0x002C */
    __I  uint32_t FSRD;                               /* Address Offset: 0x0030 */
    __I  uint32_t FSRC;                               /* Address Offset: 0x0034 */
    __IO uint32_t FTRD;                               /* Address Offset: 0x0038 */
         uint32_t RESERVED003C;                       /* Address Offset: 0x003C */
    __I  uint32_t FTR[8];                             /* Address Offset: 0x0040 */
         uint32_t RESERVED0060[40];                   /* Address Offset: 0x0060 */
         struct DMA_CHANNEL_STATUS CHAN_STS[8];       /* Address Offset: 0x0100 */
         uint32_t RESERVED0140[176];                  /* Address Offset: 0x0140 */
         struct DMA_CHANNEL_CONFIG CHAN_CFG[8];       /* Address Offset: 0x0400 */
         uint32_t RESERVED0500[512];                  /* Address Offset: 0x0500 */
    __I  uint32_t DBGSTATUS;                          /* Address Offset: 0x0D00 */
    __O  uint32_t DBGCMD;                             /* Address Offset: 0x0D04 */
    __O  uint32_t DBGINST[2];                         /* Address Offset: 0x0D08 */
         uint32_t RESERVED0D10[60];                   /* Address Offset: 0x0D10 */
    __I  uint32_t CR[5];                              /* Address Offset: 0x0E00 */
    __I  uint32_t CRDN;                               /* Address Offset: 0x0E14 */
         uint32_t RESERVED0E18[26];                   /* Address Offset: 0x0E18 */
    __IO uint32_t WD;                                 /* Address Offset: 0x0E80 */
};
/* I2C Register Structure Define */
struct I2C_REG {
    __IO uint32_t CON;                                /* Address Offset: 0x0000 */
    __IO uint32_t CLKDIV;                             /* Address Offset: 0x0004 */
    __IO uint32_t MRXADDR;                            /* Address Offset: 0x0008 */
    __IO uint32_t MRXRADDR;                           /* Address Offset: 0x000C */
    __IO uint32_t MTXCNT;                             /* Address Offset: 0x0010 */
    __IO uint32_t MRXCNT;                             /* Address Offset: 0x0014 */
    __IO uint32_t IEN;                                /* Address Offset: 0x0018 */
    __IO uint32_t IPD;                                /* Address Offset: 0x001C */
    __I  uint32_t FCNT;                               /* Address Offset: 0x0020 */
    __IO uint32_t SCL_OE_DB;                          /* Address Offset: 0x0024 */
         uint32_t RESERVED0028[54];                   /* Address Offset: 0x0028 */
    __IO uint32_t TXDATA[8];                          /* Address Offset: 0x0100 */
         uint32_t RESERVED0120[56];                   /* Address Offset: 0x0120 */
    __I  uint32_t RXDATA[8];                          /* Address Offset: 0x0200 */
    __I  uint32_t ST;                                 /* Address Offset: 0x0220 */
    __IO uint32_t DBGCTRL;                            /* Address Offset: 0x0224 */
    __IO uint32_t CON1;                               /* Address Offset: 0x0228 */
};
/* UART Register Structure Define */
struct UART_REG {
    union {
        __I  uint32_t RBR;                                /* Address Offset: 0x0000 */
        __IO uint32_t DLL;                                /* Address Offset: 0x0000 */
        __O  uint32_t THR;                                /* Address Offset: 0x0000 */
    };
    union {
        __IO uint32_t DLH;                                /* Address Offset: 0x0004 */
        __IO uint32_t IER;                                /* Address Offset: 0x0004 */
    };
    union {
        __O  uint32_t FCR;                                /* Address Offset: 0x0008 */
        __I  uint32_t IIR;                                /* Address Offset: 0x0008 */
    };
    __IO uint32_t LCR;                                /* Address Offset: 0x000C */
    __IO uint32_t MCR;                                /* Address Offset: 0x0010 */
    __I  uint32_t LSR;                                /* Address Offset: 0x0014 */
    __I  uint32_t MSR;                                /* Address Offset: 0x0018 */
    __IO uint32_t SCR;                                /* Address Offset: 0x001C */
         uint32_t RESERVED0020[4];                    /* Address Offset: 0x0020 */
    union {
        __I  uint32_t SRBR;                               /* Address Offset: 0x0030 */
        __O  uint32_t STHR;                               /* Address Offset: 0x0030 */
    };
         uint32_t RESERVED0034[15];                   /* Address Offset: 0x0034 */
    __IO uint32_t FAR;                                /* Address Offset: 0x0070 */
    __I  uint32_t TFR;                                /* Address Offset: 0x0074 */
    __O  uint32_t RFW;                                /* Address Offset: 0x0078 */
    __I  uint32_t USR;                                /* Address Offset: 0x007C */
    __I  uint32_t TFL;                                /* Address Offset: 0x0080 */
    __I  uint32_t RFL;                                /* Address Offset: 0x0084 */
    __O  uint32_t SRR;                                /* Address Offset: 0x0088 */
    __IO uint32_t SRTS;                               /* Address Offset: 0x008C */
    __IO uint32_t SBCR;                               /* Address Offset: 0x0090 */
    __IO uint32_t SDMAM;                              /* Address Offset: 0x0094 */
    __IO uint32_t SFE;                                /* Address Offset: 0x0098 */
    __IO uint32_t SRT;                                /* Address Offset: 0x009C */
    __IO uint32_t STET;                               /* Address Offset: 0x00A0 */
    __IO uint32_t HTX;                                /* Address Offset: 0x00A4 */
    __O  uint32_t DMASA;                              /* Address Offset: 0x00A8 */
    __IO uint32_t TCR;                                /* Address Offset: 0x00AC */
    __IO uint32_t DE;                                 /* Address Offset: 0x00B0 */
    __IO uint32_t RE;                                 /* Address Offset: 0x00B4 */
    __IO uint32_t DET;                                /* Address Offset: 0x00B8 */
    __IO uint32_t TAT;                                /* Address Offset: 0x00BC */
         uint32_t RESERVED00C0[13];                   /* Address Offset: 0x00C0 */
    __I  uint32_t CPR;                                /* Address Offset: 0x00F4 */
    __I  uint32_t UCV;                                /* Address Offset: 0x00F8 */
    __I  uint32_t CTR;                                /* Address Offset: 0x00FC */
};
/* SPI Register Structure Define */
struct SPI_REG {
    __IO uint32_t CTRLR[2];                           /* Address Offset: 0x0000 */
    __IO uint32_t ENR;                                /* Address Offset: 0x0008 */
    __IO uint32_t SER;                                /* Address Offset: 0x000C */
    __IO uint32_t BAUDR;                              /* Address Offset: 0x0010 */
    __IO uint32_t TXFTLR;                             /* Address Offset: 0x0014 */
    __IO uint32_t RXFTLR;                             /* Address Offset: 0x0018 */
    __I  uint32_t TXFLR;                              /* Address Offset: 0x001C */
    __I  uint32_t RXFLR;                              /* Address Offset: 0x0020 */
    __I  uint32_t SR;                                 /* Address Offset: 0x0024 */
    __IO uint32_t IPR;                                /* Address Offset: 0x0028 */
    __IO uint32_t IMR;                                /* Address Offset: 0x002C */
    __IO uint32_t ISR;                                /* Address Offset: 0x0030 */
    __IO uint32_t RISR;                               /* Address Offset: 0x0034 */
    __O  uint32_t ICR;                                /* Address Offset: 0x0038 */
    __IO uint32_t DMACR;                              /* Address Offset: 0x003C */
    __IO uint32_t DMATDLR;                            /* Address Offset: 0x0040 */
    __IO uint32_t DMARDLR;                            /* Address Offset: 0x0044 */
    __I  uint32_t VERSION;                            /* Address Offset: 0x0048 */
    __IO uint32_t TIMEOUT;                            /* Address Offset: 0x004C */
    __IO uint32_t BYPASS;                             /* Address Offset: 0x0050 */
    __IO uint32_t BPENR;                              /* Address Offset: 0x0054 */
         uint32_t RESERVED0058[234];                  /* Address Offset: 0x0058 */
    __O  uint32_t TXDR;                               /* Address Offset: 0x0400 */
         uint32_t RESERVED0404[255];                  /* Address Offset: 0x0404 */
    __I  uint32_t RXDR;                               /* Address Offset: 0x0800 */
};
/* PWM Register Structure Define */
struct PWM_REG {
    __I  uint32_t VERSION_ID;                         /* Address Offset: 0x0000 */
    __IO uint32_t ENABLE;                             /* Address Offset: 0x0004 */
    __IO uint32_t CLK_CTRL;                           /* Address Offset: 0x0008 */
    __IO uint32_t CTRL;                               /* Address Offset: 0x000C */
    __IO uint32_t PERIOD;                             /* Address Offset: 0x0010 */
    __IO uint32_t DUTY;                               /* Address Offset: 0x0014 */
    __IO uint32_t OFFSET;                             /* Address Offset: 0x0018 */
    __IO uint32_t RPT;                                /* Address Offset: 0x001C */
    __IO uint32_t FILTER_CTRL;                        /* Address Offset: 0x0020 */
    __I  uint32_t CNT;                                /* Address Offset: 0x0024 */
    __IO uint32_t ENABLE_DELAY;                       /* Address Offset: 0x0028 */
    __IO uint32_t HPC;                                /* Address Offset: 0x002C */
    __IO uint32_t LPC;                                /* Address Offset: 0x0030 */
         uint32_t RESERVED0034[3];                    /* Address Offset: 0x0034 */
    __IO uint32_t BIPHASIC_COUNTER_CTRL0;             /* Address Offset: 0x0040 */
    __IO uint32_t BIPHASIC_COUNTER_CTRL1;             /* Address Offset: 0x0044 */
    __IO uint32_t BIPHASIC_COUNTER_TIMER_VALUE;       /* Address Offset: 0x0048 */
    __I  uint32_t BIPHASIC_COUNTER_RESULT_VALUE;      /* Address Offset: 0x004C */
    __I  uint32_t BIPHASIC_COUNTER_RESULT_VALUE_SYNC; /* Address Offset: 0x0050 */
         uint32_t RESERVED0054[7];                    /* Address Offset: 0x0054 */
    __IO uint32_t INTSTS;                             /* Address Offset: 0x0070 */
    __IO uint32_t INT_EN;                             /* Address Offset: 0x0074 */
    __IO uint32_t INT_MASK;                           /* Address Offset: 0x0078 */
         uint32_t RESERVED007C;                       /* Address Offset: 0x007C */
    __IO uint32_t WAVE_MEM_ARBITER;                   /* Address Offset: 0x0080 */
    __I  uint32_t WAVE_MEM_STATUS;                    /* Address Offset: 0x0084 */
    __IO uint32_t WAVE_CTRL;                          /* Address Offset: 0x0088 */
    __IO uint32_t WAVE_MAX;                           /* Address Offset: 0x008C */
    __IO uint32_t WAVE_MIN;                           /* Address Offset: 0x0090 */
    __IO uint32_t WAVE_OFFSET;                        /* Address Offset: 0x0094 */
    __IO uint32_t WAVE_MIDDLE;                        /* Address Offset: 0x0098 */
    __IO uint32_t WAVE_HOLD;                          /* Address Offset: 0x009C */
         uint32_t RESERVED00A0[8];                    /* Address Offset: 0x00A0 */
    __IO uint32_t GLOBAL_ARBITER;                     /* Address Offset: 0x00C0 */
    __IO uint32_t GLOBAL_CTRL;                        /* Address Offset: 0x00C4 */
         uint32_t RESERVED00C8[14];                   /* Address Offset: 0x00C8 */
    __IO uint32_t PWRMATCH_ARBITER;                   /* Address Offset: 0x0100 */
    __IO uint32_t PWRMATCH_CTRL;                      /* Address Offset: 0x0104 */
    __IO uint32_t PWRMATCH_LPRE;                      /* Address Offset: 0x0108 */
    __IO uint32_t PWRMATCH_HPRE;                      /* Address Offset: 0x010C */
    __IO uint32_t PWRMATCH_LD;                        /* Address Offset: 0x0110 */
    __IO uint32_t PWRMATCH_HD_ZERO;                   /* Address Offset: 0x0114 */
    __IO uint32_t PWRMATCH_HD_ONE;                    /* Address Offset: 0x0118 */
    __IO uint32_t PWRMATCH_VALUE[16];                 /* Address Offset: 0x011C */
    __I  uint32_t PWRCAPTURE_VALUE;                   /* Address Offset: 0x015C */
         uint32_t RESERVED0160[8];                    /* Address Offset: 0x0160 */
    __IO uint32_t IR_TRANS_ARBITER;                   /* Address Offset: 0x0180 */
    __IO uint32_t IR_TRANS_CTRL0;                     /* Address Offset: 0x0184 */
    __IO uint32_t IR_TRANS_CTRL1;                     /* Address Offset: 0x0188 */
    __IO uint32_t IR_TRANS_PRE;                       /* Address Offset: 0x018C */
    __IO uint32_t IR_TRANS_SPRE;                      /* Address Offset: 0x0190 */
    __IO uint32_t IR_TRANS_LD;                        /* Address Offset: 0x0194 */
    __IO uint32_t IR_TRANS_HD;                        /* Address Offset: 0x0198 */
    __IO uint32_t IR_TRANS_BURST_FRAME;               /* Address Offset: 0x019C */
    __IO uint32_t IR_TRANS_DATA_VALUE;                /* Address Offset: 0x01A0 */
    __I  uint32_t IR_TRANS_STATUS;                    /* Address Offset: 0x01A4 */
         uint32_t RESERVED01A8[6];                    /* Address Offset: 0x01A8 */
    __IO uint32_t FREQ_ARBITER;                       /* Address Offset: 0x01C0 */
    __IO uint32_t FREQ_CTRL;                          /* Address Offset: 0x01C4 */
    __IO uint32_t FREQ_TIMER_VALUE;                   /* Address Offset: 0x01C8 */
    __IO uint32_t FREQ_RESULT_VALUE;                  /* Address Offset: 0x01CC */
         uint32_t RESERVED01D0[12];                   /* Address Offset: 0x01D0 */
    __IO uint32_t COUNTER_ARBITER;                    /* Address Offset: 0x0200 */
    __IO uint32_t COUNTER_CTRL;                       /* Address Offset: 0x0204 */
    __I  uint32_t COUNTER_LOW;                        /* Address Offset: 0x0208 */
    __I  uint32_t COUNTER_HIGH;                       /* Address Offset: 0x020C */
         uint32_t RESERVED0210[124];                  /* Address Offset: 0x0210 */
    __IO uint32_t WAVE_MEM;                           /* Address Offset: 0x0400 */
};
/* GPIO Register Structure Define */
struct GPIO_REG {
    __IO uint32_t SWPORT_DR_L;                        /* Address Offset: 0x0000 */
    __IO uint32_t SWPORT_DR_H;                        /* Address Offset: 0x0004 */
    __IO uint32_t SWPORT_DDR_L;                       /* Address Offset: 0x0008 */
    __IO uint32_t SWPORT_DDR_H;                       /* Address Offset: 0x000C */
    __IO uint32_t INT_EN_L;                           /* Address Offset: 0x0010 */
    __IO uint32_t INT_EN_H;                           /* Address Offset: 0x0014 */
    __IO uint32_t INT_MASK_L;                         /* Address Offset: 0x0018 */
    __IO uint32_t INT_MASK_H;                         /* Address Offset: 0x001C */
    __IO uint32_t INT_TYPE_L;                         /* Address Offset: 0x0020 */
    __IO uint32_t INT_TYPE_H;                         /* Address Offset: 0x0024 */
    __IO uint32_t INT_POLARITY_L;                     /* Address Offset: 0x0028 */
    __IO uint32_t INT_POLARITY_H;                     /* Address Offset: 0x002C */
    __IO uint32_t INT_BOTHEDGE_L;                     /* Address Offset: 0x0030 */
    __IO uint32_t INT_BOTHEDGE_H;                     /* Address Offset: 0x0034 */
    __IO uint32_t DEBOUNCE_L;                         /* Address Offset: 0x0038 */
    __IO uint32_t DEBOUNCE_H;                         /* Address Offset: 0x003C */
    __IO uint32_t DBCLK_DIV_EN_L;                     /* Address Offset: 0x0040 */
    __IO uint32_t DBCLK_DIV_EN_H;                     /* Address Offset: 0x0044 */
    __IO uint32_t DBCLK_DIV_CON;                      /* Address Offset: 0x0048 */
         uint32_t RESERVED004C;                       /* Address Offset: 0x004C */
    __I  uint32_t INT_STATUS;                         /* Address Offset: 0x0050 */
         uint32_t RESERVED0054;                       /* Address Offset: 0x0054 */
    __I  uint32_t INT_RAWSTATUS;                      /* Address Offset: 0x0058 */
         uint32_t RESERVED005C;                       /* Address Offset: 0x005C */
    __IO uint32_t PORT_EOI_L;                         /* Address Offset: 0x0060 */
    __IO uint32_t PORT_EOI_H;                         /* Address Offset: 0x0064 */
         uint32_t RESERVED0068[2];                    /* Address Offset: 0x0068 */
    __I  uint32_t EXT_PORT;                           /* Address Offset: 0x0070 */
         uint32_t RESERVED0074;                       /* Address Offset: 0x0074 */
    __I  uint32_t VER_ID;                             /* Address Offset: 0x0078 */
         uint32_t RESERVED007C;                       /* Address Offset: 0x007C */
    __IO uint32_t STORE_ST_L;                         /* Address Offset: 0x0080 */
    __IO uint32_t STORE_ST_H;                         /* Address Offset: 0x0084 */
         uint32_t RESERVED0088[30];                   /* Address Offset: 0x0088 */
    __IO uint32_t GPIO_REG_GROUP_L;                   /* Address Offset: 0x0100 */
    __IO uint32_t GPIO_REG_GROUP_H;                   /* Address Offset: 0x0104 */
    __IO uint32_t GPIO_VIRTUAL_EN;                    /* Address Offset: 0x0108 */
         uint32_t RESERVED010C;                       /* Address Offset: 0x010C */
    __IO uint32_t GPIO_REG_GROUP1_L;                  /* Address Offset: 0x0110 */
    __IO uint32_t GPIO_REG_GROUP1_H;                  /* Address Offset: 0x0114 */
    __IO uint32_t GPIO_REG_GROUP2_L;                  /* Address Offset: 0x0118 */
    __IO uint32_t GPIO_REG_GROUP2_H;                  /* Address Offset: 0x011C */
    __IO uint32_t GPIO_REG_GROUP3_L;                  /* Address Offset: 0x0120 */
    __IO uint32_t GPIO_REG_GROUP3_H;                  /* Address Offset: 0x0124 */
};
/* SPINLOCK Register Structure Define */
struct SPINLOCK_REG {
    __IO uint32_t STATUS[8];                          /* Address Offset: 0x0000 */
};
/* TIMER Register Structure Define */
struct TIMER_REG {
    __IO uint32_t LOAD_COUNT[2];                      /* Address Offset: 0x0000 */
    __I  uint32_t CURRENT_VALUE[2];                   /* Address Offset: 0x0008 */
    __IO uint32_t CONTROLREG;                         /* Address Offset: 0x0010 */
         uint32_t RESERVED0014;                       /* Address Offset: 0x0014 */
    __IO uint32_t INTSTATUS;                          /* Address Offset: 0x0018 */
};
/* WDT Register Structure Define */
struct WDT_REG {
    __IO uint32_t CR;                                 /* Address Offset: 0x0000 */
    __IO uint32_t TORR;                               /* Address Offset: 0x0004 */
    __I  uint32_t CCVR;                               /* Address Offset: 0x0008 */
    __O  uint32_t CRR;                                /* Address Offset: 0x000C */
    __I  uint32_t STAT;                               /* Address Offset: 0x0010 */
    __I  uint32_t EOI;                                /* Address Offset: 0x0014 */
};
/* GRF Register Structure Define */
struct GRF_REG {
    __IO uint32_t SOC_CON0;                           /* Address Offset: 0x0000 */
    __IO uint32_t SOC_CON1;                           /* Address Offset: 0x0004 */
    __IO uint32_t SOC_CON2;                           /* Address Offset: 0x0008 */
    __IO uint32_t SOC_CON3;                           /* Address Offset: 0x000C */
    __IO uint32_t SOC_CON4;                           /* Address Offset: 0x0010 */
    __IO uint32_t SOC_CON5;                           /* Address Offset: 0x0014 */
    __IO uint32_t SOC_CON6;                           /* Address Offset: 0x0018 */
    __IO uint32_t SOC_CON7;                           /* Address Offset: 0x001C */
    __IO uint32_t SOC_CON8;                           /* Address Offset: 0x0020 */
    __IO uint32_t SOC_CON9;                           /* Address Offset: 0x0024 */
    __IO uint32_t SOC_CON10;                          /* Address Offset: 0x0028 */
    __IO uint32_t SOC_CON11;                          /* Address Offset: 0x002C */
         uint32_t RESERVED0030;                       /* Address Offset: 0x0030 */
    __IO uint32_t SOC_CON13;                          /* Address Offset: 0x0034 */
    __IO uint32_t SOC_CON14;                          /* Address Offset: 0x0038 */
    __IO uint32_t SOC_CON15;                          /* Address Offset: 0x003C */
    __IO uint32_t SOC_CON16;                          /* Address Offset: 0x0040 */
    __IO uint32_t SOC_CON17;                          /* Address Offset: 0x0044 */
    __IO uint32_t SOC_CON18;                          /* Address Offset: 0x0048 */
    __IO uint32_t SOC_CON19;                          /* Address Offset: 0x004C */
    __IO uint32_t SOC_CON20;                          /* Address Offset: 0x0050 */
    __IO uint32_t SOC_CON21;                          /* Address Offset: 0x0054 */
    __IO uint32_t SOC_CON22;                          /* Address Offset: 0x0058 */
    __IO uint32_t SOC_CON23;                          /* Address Offset: 0x005C */
    __IO uint32_t SOC_CON24;                          /* Address Offset: 0x0060 */
    __IO uint32_t SOC_CON25;                          /* Address Offset: 0x0064 */
    __IO uint32_t SOC_CON26;                          /* Address Offset: 0x0068 */
    __IO uint32_t SOC_CON27;                          /* Address Offset: 0x006C */
    __IO uint32_t SOC_CON28;                          /* Address Offset: 0x0070 */
    __IO uint32_t SOC_CON29;                          /* Address Offset: 0x0074 */
    __IO uint32_t SOC_CON30;                          /* Address Offset: 0x0078 */
    __IO uint32_t SOC_CON31;                          /* Address Offset: 0x007C */
    __IO uint32_t SOC_CON32;                          /* Address Offset: 0x0080 */
    __IO uint32_t SOC_CON33;                          /* Address Offset: 0x0084 */
         uint32_t RESERVED0088;                       /* Address Offset: 0x0088 */
    __IO uint32_t SOC_CON35;                          /* Address Offset: 0x008C */
    __IO uint32_t SOC_CON36;                          /* Address Offset: 0x0090 */
    __IO uint32_t SOC_CON37;                          /* Address Offset: 0x0094 */
    __IO uint32_t SOC_CON38;                          /* Address Offset: 0x0098 */
    __IO uint32_t SOC_CON39;                          /* Address Offset: 0x009C */
    __IO uint32_t SOC_CON40;                          /* Address Offset: 0x00A0 */
    __IO uint32_t SOC_CON41;                          /* Address Offset: 0x00A4 */
    __IO uint32_t SOC_CON42;                          /* Address Offset: 0x00A8 */
    __IO uint32_t SOC_CON43;                          /* Address Offset: 0x00AC */
         uint32_t RESERVED00B0[20];                   /* Address Offset: 0x00B0 */
    __IO uint32_t SOC_STATUS0;                        /* Address Offset: 0x0100 */
    __I  uint32_t SOC_STATUS1;                        /* Address Offset: 0x0104 */
    __IO uint32_t SOC_STATUS2;                        /* Address Offset: 0x0108 */
         uint32_t RESERVED010C;                       /* Address Offset: 0x010C */
    __I  uint32_t DDR_STATUS0;                        /* Address Offset: 0x0110 */
    __IO uint32_t DDR_STATUS1;                        /* Address Offset: 0x0114 */
    __IO uint32_t USBPHY_STATUS;                      /* Address Offset: 0x0118 */
         uint32_t RESERVED011C[13];                   /* Address Offset: 0x011C */
    __IO uint32_t USBOTG0_SIG_DETECT_CON;             /* Address Offset: 0x0150 */
    __I  uint32_t USBOTG0_SIG_DETECT_STATUS;          /* Address Offset: 0x0154 */
    __IO uint32_t USBOTG0_SIG_DETECT_CLR;             /* Address Offset: 0x0158 */
    __IO uint32_t USBOTG0_VBUSVALID_DETECT_CON;       /* Address Offset: 0x015C */
    __IO uint32_t USBOTG0_LINESTATE_DETECT_CON;       /* Address Offset: 0x0160 */
    __IO uint32_t USBOTG0_DISCONNECT_DETECT_CON;      /* Address Offset: 0x0164 */
    __IO uint32_t USBOTG0_BVALID_DETECT_CON;          /* Address Offset: 0x0168 */
    __IO uint32_t USBOTG0_ID_DETECT_CON;              /* Address Offset: 0x016C */
    __IO uint32_t USBOTG1_SIG_DETECT_CON;             /* Address Offset: 0x0170 */
    __I  uint32_t USBOTG1_SIG_DETECT_STATUS;          /* Address Offset: 0x0174 */
    __IO uint32_t USBOTG1_SIG_DETECT_CLR;             /* Address Offset: 0x0178 */
    __IO uint32_t USBOTG1_VBUSVALID_DETECT_CON;       /* Address Offset: 0x017C */
    __IO uint32_t USBOTG1_LINESTATE_DETECT_CON;       /* Address Offset: 0x0180 */
    __IO uint32_t USBOTG1_DISCONNECT_DETECT_CON;      /* Address Offset: 0x0184 */
    __IO uint32_t USBOTG1_BVALID_DETECT_CON;          /* Address Offset: 0x0188 */
    __IO uint32_t USBOTG1_ID_DETECT_CON;              /* Address Offset: 0x018C */
         uint32_t RESERVED0190[4];                    /* Address Offset: 0x0190 */
    __IO uint32_t MAC0_MCGR_ACK;                      /* Address Offset: 0x01A0 */
    __IO uint32_t MAC1_MCGR_ACK;                      /* Address Offset: 0x01A4 */
         uint32_t RESERVED01A8[22];                   /* Address Offset: 0x01A8 */
    __IO uint32_t OS_REG0;                            /* Address Offset: 0x0200 */
    __IO uint32_t OS_REG1;                            /* Address Offset: 0x0204 */
    __IO uint32_t OS_REG2;                            /* Address Offset: 0x0208 */
    __IO uint32_t OS_REG3;                            /* Address Offset: 0x020C */
    __IO uint32_t OS_REG4;                            /* Address Offset: 0x0210 */
    __IO uint32_t OS_REG5;                            /* Address Offset: 0x0214 */
    __IO uint32_t OS_REG6;                            /* Address Offset: 0x0218 */
    __IO uint32_t OS_REG7;                            /* Address Offset: 0x021C */
    __IO uint32_t OS_REG8;                            /* Address Offset: 0x0220 */
    __IO uint32_t OS_REG9;                            /* Address Offset: 0x0224 */
    __IO uint32_t OS_REG10;                           /* Address Offset: 0x0228 */
    __IO uint32_t OS_REG11;                           /* Address Offset: 0x022C */
         uint32_t RESERVED0230[52];                   /* Address Offset: 0x0230 */
    __IO uint32_t SOC_VERSION;                        /* Address Offset: 0x0300 */
};
/* MBOX Register Structure Define */
struct MBOX_REG {
    __IO uint32_t A2B_INTEN;                          /* Address Offset: 0x0000 */
    __IO uint32_t A2B_STATUS;                         /* Address Offset: 0x0004 */
    __IO uint32_t A2B_CMD;                            /* Address Offset: 0x0008 */
    __IO uint32_t A2B_DATA;                           /* Address Offset: 0x000C */
    __IO uint32_t B2A_INTEN;                          /* Address Offset: 0x0010 */
    __IO uint32_t B2A_STATUS;                         /* Address Offset: 0x0014 */
    __IO uint32_t B2A_CMD;                            /* Address Offset: 0x0018 */
    __IO uint32_t B2A_DATA;                           /* Address Offset: 0x001C */
};
/* INTMUX Register Structure Define */
struct INTMUX_REG {
    __IO uint32_t INT_ENABLE_GROUP[4];                /* Address Offset: 0x0000 */
         uint32_t RESERVED0010[28];                   /* Address Offset: 0x0010 */
    __I  uint32_t INT_FLAG_GROUP[4];                  /* Address Offset: 0x0080 */
};
/* SAI Register Structure Define */
struct SAI_REG {
    __IO uint32_t TXCR;                               /* Address Offset: 0x0000 */
    __IO uint32_t FSCR;                               /* Address Offset: 0x0004 */
    __IO uint32_t RXCR;                               /* Address Offset: 0x0008 */
    __IO uint32_t MONOCR;                             /* Address Offset: 0x000C */
    __IO uint32_t XFER;                               /* Address Offset: 0x0010 */
    __IO uint32_t CLR;                                /* Address Offset: 0x0014 */
    __IO uint32_t CKR;                                /* Address Offset: 0x0018 */
    __I  uint32_t TXFIFOLR;                           /* Address Offset: 0x001C */
    __I  uint32_t RXFIFOLR;                           /* Address Offset: 0x0020 */
    __IO uint32_t DMACR;                              /* Address Offset: 0x0024 */
    __IO uint32_t INTCR;                              /* Address Offset: 0x0028 */
    __I  uint32_t INTSR;                              /* Address Offset: 0x002C */
    __IO uint32_t TXDR;                               /* Address Offset: 0x0030 */
    __IO uint32_t RXDR;                               /* Address Offset: 0x0034 */
    __IO uint32_t PATH_SEL;                           /* Address Offset: 0x0038 */
    __IO uint32_t TX_SLOT_MASK[4];                    /* Address Offset: 0x003C */
    __IO uint32_t RX_SLOT_MASK[4];                    /* Address Offset: 0x004C */
    __I  uint32_t TX_DATA_CNT;                        /* Address Offset: 0x005C */
    __I  uint32_t RX_DATA_CNT;                        /* Address Offset: 0x0060 */
    __IO uint32_t TX_TIMING_SHIFT;                    /* Address Offset: 0x0064 */
    __IO uint32_t RX_TIMING_SHIFT;                    /* Address Offset: 0x0068 */
    __IO uint32_t STATUS;                             /* Address Offset: 0x006C */
    __I  uint32_t VERSION;                            /* Address Offset: 0x0070 */
    __IO uint32_t FSXN;                               /* Address Offset: 0x0074 */
    __IO uint32_t FS_TIMEOUT;                         /* Address Offset: 0x0078 */
};
/* CAN Register Structure Define */
struct CAN_REG {
    __IO uint32_t MODE;                               /* Address Offset: 0x0000 */
    __IO uint32_t CMD;                                /* Address Offset: 0x0004 */
    __I  uint32_t STATE;                              /* Address Offset: 0x0008 */
    __IO uint32_t INT;                                /* Address Offset: 0x000C */
    __IO uint32_t INT_MASK;                           /* Address Offset: 0x0010 */
         uint32_t RESERVED0014[59];                   /* Address Offset: 0x0014 */
    __IO uint32_t FD_NOMINAL_BITTIMING;               /* Address Offset: 0x0100 */
    __IO uint32_t FD_DATA_BITTIMING;                  /* Address Offset: 0x0104 */
    __IO uint32_t FD_TDC;                             /* Address Offset: 0x0108 */
    __IO uint32_t FD_BRS_CFG;                         /* Address Offset: 0x010C */
    __I  uint32_t FD_LOOP_CNT;                        /* Address Offset: 0x0110 */
         uint32_t RESERVED0114[2];                    /* Address Offset: 0x0114 */
    __IO uint32_t DMA_CTRL;                           /* Address Offset: 0x011C */
         uint32_t RESERVED0120[56];                   /* Address Offset: 0x0120 */
    __IO uint32_t FD_TXFRAMEINFO;                     /* Address Offset: 0x0200 */
    __IO uint32_t FD_TXID;                            /* Address Offset: 0x0204 */
    __IO uint32_t FD_TXDATA[16];                      /* Address Offset: 0x0208 */
         uint32_t RESERVED0248[46];                   /* Address Offset: 0x0248 */
    __I  uint32_t FD_RXFRAMEINFO;                     /* Address Offset: 0x0300 */
    __I  uint32_t FD_RXID;                            /* Address Offset: 0x0304 */
    __I  uint32_t FD_RXTIMESTAMP;                     /* Address Offset: 0x0308 */
    __IO uint32_t FD_RXDATA[16];                      /* Address Offset: 0x030C */
         uint32_t RESERVED034C[45];                   /* Address Offset: 0x034C */
    __I  uint32_t RX_FIFO_RDATA;                      /* Address Offset: 0x0400 */
         uint32_t RESERVED0404[127];                  /* Address Offset: 0x0404 */
    __IO uint32_t STR_CTL;                            /* Address Offset: 0x0600 */
    __I  uint32_t STR_STATE;                          /* Address Offset: 0x0604 */
    __IO uint32_t STR_TIMEOUT;                        /* Address Offset: 0x0608 */
    __IO uint32_t STR_WTM;                            /* Address Offset: 0x060C */
    __IO uint32_t EXTM_START_ADDR;                    /* Address Offset: 0x0610 */
    __IO uint32_t EXTM_SIZE;                          /* Address Offset: 0x0614 */
    __I  uint32_t EXTM_WADDR;                         /* Address Offset: 0x0618 */
    __IO uint32_t EXTM_RADDR;                         /* Address Offset: 0x061C */
    __IO uint32_t EXTM_AHB_TXTHR;                     /* Address Offset: 0x0620 */
    __I  uint32_t EXTM_LEFT_CNT;                      /* Address Offset: 0x0624 */
         uint32_t RESERVED0628[54];                   /* Address Offset: 0x0628 */
    __IO uint32_t ATF[5];                             /* Address Offset: 0x0700 */
    __IO uint32_t ATFM[5];                            /* Address Offset: 0x0714 */
    __IO uint32_t ATF_DLC;                            /* Address Offset: 0x0728 */
    __IO uint32_t ATF_CTL;                            /* Address Offset: 0x072C */
         uint32_t RESERVED0730[54];                   /* Address Offset: 0x0730 */
    __IO uint32_t AUTO_RETX_CFG;                      /* Address Offset: 0x0808 */
    __I  uint32_t AUTO_RETX_STATE0;                   /* Address Offset: 0x080C */
    __I  uint32_t AUTO_RETX_STATE1;                   /* Address Offset: 0x0810 */
    __IO uint32_t OLF_CFG;                            /* Address Offset: 0x0814 */
    __IO uint32_t RXINT_CTRL;                         /* Address Offset: 0x0818 */
    __IO uint32_t RXINT_TIMEOUT;                      /* Address Offset: 0x081C */
         uint32_t RESERVED0820;                       /* Address Offset: 0x0820 */
    __IO uint32_t WAVE_FILTER_CFG;                    /* Address Offset: 0x0824 */
         uint32_t RESERVED0828[2];                    /* Address Offset: 0x0828 */
    __IO uint32_t BUSOFF_RCY_CFG;                     /* Address Offset: 0x0830 */
    __IO uint32_t BUSOFF_RCY_THR;                     /* Address Offset: 0x0834 */
         uint32_t RESERVED0838[50];                   /* Address Offset: 0x0838 */
    __IO uint32_t ERROR_CODE;                         /* Address Offset: 0x0900 */
    __IO uint32_t ERROR_MASK;                         /* Address Offset: 0x0904 */
         uint32_t RESERVED0908[2];                    /* Address Offset: 0x0908 */
    __I  uint32_t RXERRORCNT;                         /* Address Offset: 0x0910 */
    __I  uint32_t TXERRORCNT;                         /* Address Offset: 0x0914 */
    __I  uint32_t ARBIT_FAIL_STATE;                   /* Address Offset: 0x0918 */
         uint32_t RESERVED091C[185];                  /* Address Offset: 0x091C */
    __I  uint32_t RX_RXSRAM_RDATA;                    /* Address Offset: 0x0C00 */
         uint32_t RESERVED0C04[194];                  /* Address Offset: 0x0C04 */
    __I  uint32_t RTL_VERSION;                        /* Address Offset: 0x0F0C */
};
/* PDM Register Structure Define */
struct PDM_REG {
    __IO uint32_t SYSCONFIG;                          /* Address Offset: 0x0000 */
    __IO uint32_t CTRL;                               /* Address Offset: 0x0004 */
    __IO uint32_t FILTER_CTRL;                        /* Address Offset: 0x0008 */
    __IO uint32_t FIFO_CTRL;                          /* Address Offset: 0x000C */
    __I  uint32_t DATA_VALID;                         /* Address Offset: 0x0010 */
    __I  uint32_t RXFIFO_DATA_REG;                    /* Address Offset: 0x0014 */
    __I  uint32_t DATA0R;                             /* Address Offset: 0x0018 */
    __I  uint32_t DATA0L;                             /* Address Offset: 0x001C */
    __I  uint32_t DATA1R;                             /* Address Offset: 0x0020 */
    __I  uint32_t DATA1L;                             /* Address Offset: 0x0024 */
    __I  uint32_t DATA2R;                             /* Address Offset: 0x0028 */
    __I  uint32_t DATA2L;                             /* Address Offset: 0x002C */
    __I  uint32_t DATA3R;                             /* Address Offset: 0x0030 */
    __I  uint32_t DATA3L;                             /* Address Offset: 0x0034 */
    __I  uint32_t VERSION;                            /* Address Offset: 0x0038 */
    __IO uint32_t GAIN_CTRL;                          /* Address Offset: 0x003C */
};
/* SPDIFTX Register Structure Define */
struct SPDIFTX_REG {
    __IO uint32_t CFGR;                               /* Address Offset: 0x0000 */
    __I  uint32_t SDBLR;                              /* Address Offset: 0x0004 */
    __IO uint32_t DMACR;                              /* Address Offset: 0x0008 */
    __IO uint32_t INTCR;                              /* Address Offset: 0x000C */
    __IO uint32_t INTSR;                              /* Address Offset: 0x0010 */
         uint32_t RESERVED0014;                       /* Address Offset: 0x0014 */
    __IO uint32_t XFER;                               /* Address Offset: 0x0018 */
         uint32_t RESERVED001C;                       /* Address Offset: 0x001C */
    __IO uint32_t SMPDR;                              /* Address Offset: 0x0020 */
         uint32_t RESERVED0024[15];                   /* Address Offset: 0x0024 */
    __IO uint32_t VLDFR[12];                          /* Address Offset: 0x0060 */
    __IO uint32_t USRDR[12];                          /* Address Offset: 0x0090 */
    __IO uint32_t CHNSR[12];                          /* Address Offset: 0x00C0 */
         uint32_t RESERVED00F0[4];                    /* Address Offset: 0x00F0 */
    __IO uint32_t BURSTINFO;                          /* Address Offset: 0x0100 */
    __IO uint32_t REPETTION;                          /* Address Offset: 0x0104 */
    __I  uint32_t BURSTINFO_SHD;                      /* Address Offset: 0x0108 */
    __IO uint32_t REPETTION_SHD;                      /* Address Offset: 0x010C */
         uint32_t RESERVED0110[32];                   /* Address Offset: 0x0110 */
    __I  uint32_t USRDR_SHDn;                         /* Address Offset: 0x0190 */
};
/* SPDIFRX Register Structure Define */
struct SPDIFRX_REG {
    __I  uint32_t VERSION;                            /* Address Offset: 0x0000 */
    __IO uint32_t CFGR;                               /* Address Offset: 0x0004 */
    __IO uint32_t CLR;                                /* Address Offset: 0x0008 */
    __IO uint32_t CDR;                                /* Address Offset: 0x000C */
    __IO uint32_t CDRST;                              /* Address Offset: 0x0010 */
    __IO uint32_t DMACR;                              /* Address Offset: 0x0014 */
    __IO uint32_t FIFOCTRL;                           /* Address Offset: 0x0018 */
    __IO uint32_t INTEN;                              /* Address Offset: 0x001C */
    __IO uint32_t INTMASK;                            /* Address Offset: 0x0020 */
    __I  uint32_t INTSR;                              /* Address Offset: 0x0024 */
    __IO uint32_t INTCLR;                             /* Address Offset: 0x0028 */
    __I  uint32_t SMPDR;                              /* Address Offset: 0x002C */
    __I  uint32_t USRDR[12];                          /* Address Offset: 0x0030 */
    __I  uint32_t CHNSR[12];                          /* Address Offset: 0x0060 */
    __IO uint32_t CDR_TIME;                           /* Address Offset: 0x0090 */
    __I  uint32_t STATUS;                             /* Address Offset: 0x0094 */
         uint32_t RESERVED0098[26];                   /* Address Offset: 0x0098 */
    __I  uint32_t BURSTINFO;                          /* Address Offset: 0x0100 */
};
/* MMC Register Structure Define */
struct MMC_REG {
    __IO uint32_t CTRL;                               /* Address Offset: 0x0000 */
    __IO uint32_t PWREN;                              /* Address Offset: 0x0004 */
    __IO uint32_t CLKDIV;                             /* Address Offset: 0x0008 */
    __IO uint32_t CLKSRC;                             /* Address Offset: 0x000C */
    __IO uint32_t CLKENA;                             /* Address Offset: 0x0010 */
    __IO uint32_t TMOUT;                              /* Address Offset: 0x0014 */
    __IO uint32_t CTYPE;                              /* Address Offset: 0x0018 */
    __IO uint32_t BLKSIZ;                             /* Address Offset: 0x001C */
    __IO uint32_t BYTCNT;                             /* Address Offset: 0x0020 */
    __IO uint32_t INTMASK;                            /* Address Offset: 0x0024 */
    __IO uint32_t CMDARG;                             /* Address Offset: 0x0028 */
    __IO uint32_t CMD;                                /* Address Offset: 0x002C */
    __I  uint32_t RESP[4];                            /* Address Offset: 0x0030 */
    __IO uint32_t MINTSTS;                            /* Address Offset: 0x0040 */
    __IO uint32_t RINTSTS;                            /* Address Offset: 0x0044 */
    __I  uint32_t STATUS;                             /* Address Offset: 0x0048 */
    __IO uint32_t FIFOTH;                             /* Address Offset: 0x004C */
    __I  uint32_t CDETECT;                            /* Address Offset: 0x0050 */
    __IO uint32_t WRTPRT;                             /* Address Offset: 0x0054 */
         uint32_t RESERVED0058;                       /* Address Offset: 0x0058 */
    __I  uint32_t TCBCNT;                             /* Address Offset: 0x005C */
    __I  uint32_t TBBCNT;                             /* Address Offset: 0x0060 */
    __IO uint32_t DEBNCE;                             /* Address Offset: 0x0064 */
    __IO uint32_t USRID;                              /* Address Offset: 0x0068 */
    __I  uint32_t VERID;                              /* Address Offset: 0x006C */
    __I  uint32_t HCON;                               /* Address Offset: 0x0070 */
    __IO uint32_t UHSREG;                             /* Address Offset: 0x0074 */
    __IO uint32_t RSTN;                               /* Address Offset: 0x0078 */
         uint32_t RESERVED007C;                       /* Address Offset: 0x007C */
    __IO uint32_t BMOD;                               /* Address Offset: 0x0080 */
    __O  uint32_t PLDMND;                             /* Address Offset: 0x0084 */
    __IO uint32_t DBADDR;                             /* Address Offset: 0x0088 */
    __IO uint32_t IDSTS;                              /* Address Offset: 0x008C */
    __IO uint32_t IDINTEN;                            /* Address Offset: 0x0090 */
    __IO uint32_t DSCADDR;                            /* Address Offset: 0x0094 */
    __IO uint32_t BUFADDR;                            /* Address Offset: 0x0098 */
         uint32_t RESERVED009C[25];                   /* Address Offset: 0x009C */
    __IO uint32_t CARDTHRCTL;                         /* Address Offset: 0x0100 */
    __IO uint32_t BACKEND_POWER;                      /* Address Offset: 0x0104 */
         uint32_t RESERVED0108;                       /* Address Offset: 0x0108 */
    __IO uint32_t EMMCDDR_REG;                        /* Address Offset: 0x010C */
         uint32_t RESERVED0110[4];                    /* Address Offset: 0x0110 */
    __IO uint32_t RDYINT_GEN;                         /* Address Offset: 0x0120 */
         uint32_t RESERVED0124[55];                   /* Address Offset: 0x0124 */
    __IO uint32_t FIFO_BASE;                          /* Address Offset: 0x0200 */
};
/* FSPI Register Structure Define */
struct FSPI_REG {
    __IO uint32_t CTRL0;                              /* Address Offset: 0x0000 */
    __IO uint32_t IMR;                                /* Address Offset: 0x0004 */
    __IO uint32_t ICLR;                               /* Address Offset: 0x0008 */
    __IO uint32_t FTLR;                               /* Address Offset: 0x000C */
    __IO uint32_t RCVR;                               /* Address Offset: 0x0010 */
    __IO uint32_t AX0;                                /* Address Offset: 0x0014 */
    __IO uint32_t ABIT0;                              /* Address Offset: 0x0018 */
    __IO uint32_t ISR;                                /* Address Offset: 0x001C */
    __IO uint32_t FSR;                                /* Address Offset: 0x0020 */
    __I  uint32_t SR;                                 /* Address Offset: 0x0024 */
    __I  uint32_t RISR;                               /* Address Offset: 0x0028 */
    __I  uint32_t VER;                                /* Address Offset: 0x002C */
    __IO uint32_t QOP;                                /* Address Offset: 0x0030 */
    __IO uint32_t EXT_CTRL;                           /* Address Offset: 0x0034 */
         uint32_t RESERVED0038;                       /* Address Offset: 0x0038 */
    __IO uint32_t DLL_CTRL0;                          /* Address Offset: 0x003C */
         uint32_t RESERVED0040;                       /* Address Offset: 0x0040 */
    __IO uint32_t EXT_AX;                             /* Address Offset: 0x0044 */
    __IO uint32_t SCLK_INATM_CNT;                     /* Address Offset: 0x0048 */
         uint32_t RESERVED004C;                       /* Address Offset: 0x004C */
    __O  uint32_t XMMC_WCMD0;                         /* Address Offset: 0x0050 */
    __O  uint32_t XMMC_RCMD0;                         /* Address Offset: 0x0054 */
    __IO uint32_t XMMC_CTRL;                          /* Address Offset: 0x0058 */
    __IO uint32_t MODE;                               /* Address Offset: 0x005C */
    __IO uint32_t DEVRGN;                             /* Address Offset: 0x0060 */
    __IO uint32_t DEVSIZE0;                           /* Address Offset: 0x0064 */
    __IO uint32_t TME0;                               /* Address Offset: 0x0068 */
         uint32_t RESERVED006C;                       /* Address Offset: 0x006C */
    __IO uint32_t XMMC_RX_WTMRK;                      /* Address Offset: 0x0070 */
         uint32_t RESERVED0074[3];                    /* Address Offset: 0x0074 */
    __IO uint32_t DMATR;                              /* Address Offset: 0x0080 */
    __IO uint32_t DMAADDR;                            /* Address Offset: 0x0084 */
    __IO uint32_t LEN_CTRL;                           /* Address Offset: 0x0088 */
    __IO uint32_t LEN_EXT;                            /* Address Offset: 0x008C */
         uint32_t RESERVED0090;                       /* Address Offset: 0x0090 */
    __IO uint32_t XMMCSR;                             /* Address Offset: 0x0094 */
         uint32_t RESERVED0098[26];                   /* Address Offset: 0x0098 */
    __O  uint32_t CMD;                                /* Address Offset: 0x0100 */
    __O  uint32_t ADDR;                               /* Address Offset: 0x0104 */
    __IO uint32_t DATA;                               /* Address Offset: 0x0108 */
         uint32_t RESERVED010C[61];                   /* Address Offset: 0x010C */
    __IO uint32_t CTRL1;                              /* Address Offset: 0x0200 */
         uint32_t RESERVED0204[4];                    /* Address Offset: 0x0204 */
    __IO uint32_t AX1;                                /* Address Offset: 0x0214 */
    __IO uint32_t ABIT1;                              /* Address Offset: 0x0218 */
         uint32_t RESERVED021C[4];                    /* Address Offset: 0x021C */
    __IO uint32_t DBG_IO_CTRL;                        /* Address Offset: 0x022C */
         uint32_t RESERVED0230[3];                    /* Address Offset: 0x0230 */
    __IO uint32_t DLL_CTRL1;                          /* Address Offset: 0x023C */
         uint32_t RESERVED0240[4];                    /* Address Offset: 0x0240 */
    __O  uint32_t XMMC_WCMD1;                         /* Address Offset: 0x0250 */
    __O  uint32_t XMMC_RCMD1;                         /* Address Offset: 0x0254 */
         uint32_t RESERVED0258[3];                    /* Address Offset: 0x0258 */
    __IO uint32_t DEVSIZE1;                           /* Address Offset: 0x0264 */
    __IO uint32_t TME1;                               /* Address Offset: 0x0268 */
};
/* ACDCDIG_DSM Register Structure Define */
struct ACDCDIG_DSM_REG {
    __IO uint32_t VUCTL;                              /* Address Offset: 0x0000 */
    __IO uint32_t VUCTIME;                            /* Address Offset: 0x0004 */
    __IO uint32_t DIGEN;                              /* Address Offset: 0x0008 */
    __IO uint32_t CLKCTRL;                            /* Address Offset: 0x000C */
         uint32_t RESERVED0010;                       /* Address Offset: 0x0010 */
    __IO uint32_t INTMOD_DIV;                         /* Address Offset: 0x0014 */
         uint32_t RESERVED0018[2];                    /* Address Offset: 0x0018 */
    __IO uint32_t INTSCLK_DIV;                        /* Address Offset: 0x0020 */
    __IO uint32_t DIV;                                /* Address Offset: 0x0024 */
    __IO uint32_t CTRL;                               /* Address Offset: 0x0028 */
         uint32_t RESERVED002C[6];                    /* Address Offset: 0x002C */
    __IO uint32_t CFG1;                               /* Address Offset: 0x0044 */
    __IO uint32_t MUTE;                               /* Address Offset: 0x0048 */
    __I  uint32_t MUTEST;                             /* Address Offset: 0x004C */
    __IO uint32_t VOLL[4];                            /* Address Offset: 0x0050 */
    __IO uint32_t VOLR[4];                            /* Address Offset: 0x0060 */
    __IO uint32_t VOGP;                               /* Address Offset: 0x0070 */
    __IO uint32_t RVOLL[4];                           /* Address Offset: 0x0074 */
    __IO uint32_t RVOLR[4];                           /* Address Offset: 0x0084 */
    __IO uint32_t LTM[3];                             /* Address Offset: 0x0094 */
    __IO uint32_t MIXCTRLL;                           /* Address Offset: 0x00A0 */
    __IO uint32_t MIXCTRLR;                           /* Address Offset: 0x00A4 */
    __IO uint32_t HPF;                                /* Address Offset: 0x00A8 */
         uint32_t RESERVED00AC[24];                   /* Address Offset: 0x00AC */
    __IO uint32_t I2S_RXCR0;                          /* Address Offset: 0x010C */
    __IO uint32_t I2S_RXCR1;                          /* Address Offset: 0x0110 */
    __IO uint32_t I2S_CKR0;                           /* Address Offset: 0x0114 */
    __IO uint32_t I2S_CKR1;                           /* Address Offset: 0x0118 */
    __IO uint32_t I2S_XFER;                           /* Address Offset: 0x011C */
    __IO uint32_t I2S_CLR;                            /* Address Offset: 0x0120 */
         uint32_t RESERVED0124[7];                    /* Address Offset: 0x0124 */
    __I  uint32_t VERSION;                            /* Address Offset: 0x0140 */
};
/* SPI2APB Register Structure Define */
struct SPI2APB_REG {
    __IO uint32_t CTRL0;                              /* Address Offset: 0x0000 */
         uint32_t RESERVED0004[8];                    /* Address Offset: 0x0004 */
    __I  uint32_t SR;                                 /* Address Offset: 0x0024 */
         uint32_t RESERVED0028;                       /* Address Offset: 0x0028 */
    __IO uint32_t IMR;                                /* Address Offset: 0x002C */
         uint32_t RESERVED0030;                       /* Address Offset: 0x0030 */
    __I  uint32_t RISR;                               /* Address Offset: 0x0034 */
    __IO uint32_t ICR;                                /* Address Offset: 0x0038 */
         uint32_t RESERVED003C[3];                    /* Address Offset: 0x003C */
    __I  uint32_t VERSION;                            /* Address Offset: 0x0048 */
         uint32_t RESERVED004C;                       /* Address Offset: 0x004C */
    __IO uint32_t QUICK_REG[3];                       /* Address Offset: 0x0050 */
};
/* GMAC Register Structure Define */
struct GMAC_REG {
    __IO uint32_t MAC_CONFIGURATION;                  /* Address Offset: 0x0000 */
    __IO uint32_t MAC_EXT_CONFIGURATION;              /* Address Offset: 0x0004 */
    __IO uint32_t MAC_PACKET_FILTER;                  /* Address Offset: 0x0008 */
    __IO uint32_t MAC_WATCHDOG_TIMEOUT;               /* Address Offset: 0x000C */
    __IO uint32_t MAC_HASH_TABLE_REG0;                /* Address Offset: 0x0010 */
    __IO uint32_t MAC_HASH_TABLE_REG1;                /* Address Offset: 0x0014 */
         uint32_t RESERVED0018[14];                   /* Address Offset: 0x0018 */
    __IO uint32_t MAC_VLAN_TAG;                       /* Address Offset: 0x0050 */
         uint32_t RESERVED0054;                       /* Address Offset: 0x0054 */
    __IO uint32_t MAC_VLAN_HASH_TABLE;                /* Address Offset: 0x0058 */
         uint32_t RESERVED005C[5];                    /* Address Offset: 0x005C */
    __IO uint32_t MAC_Q0_TX_FLOW_CTRL;                /* Address Offset: 0x0070 */
         uint32_t RESERVED0074[7];                    /* Address Offset: 0x0074 */
    __IO uint32_t MAC_RX_FLOW_CTRL;                   /* Address Offset: 0x0090 */
         uint32_t RESERVED0094[7];                    /* Address Offset: 0x0094 */
    __I  uint32_t MAC_INTERRUPT_STATUS;               /* Address Offset: 0x00B0 */
    __IO uint32_t MAC_INTERRUPT_ENABLE;               /* Address Offset: 0x00B4 */
    __I  uint32_t MAC_RX_TX_STATUS;                   /* Address Offset: 0x00B8 */
         uint32_t RESERVED00BC;                       /* Address Offset: 0x00BC */
    __IO uint32_t MAC_PMT_CONTROL_STATUS;             /* Address Offset: 0x00C0 */
    union {
        __IO uint32_t MAC_RWK_PACKET_FILTER;              /* Address Offset: 0x00C4 */
        __IO uint32_t RWK_FILTER0_BYTE_MASK;              /* Address Offset: 0x00C4 */
        __IO uint32_t RWK_FILTER1_BYTE_MASK;              /* Address Offset: 0x00C4 */
        __IO uint32_t RWK_FILTER2_BYTE_MASK;              /* Address Offset: 0x00C4 */
        __IO uint32_t RWK_FILTER3_BYTE_MASK;              /* Address Offset: 0x00C4 */
        __IO uint32_t RWK_FILTER01_CRC;                   /* Address Offset: 0x00C4 */
        __IO uint32_t RWK_FILTER23_CRC;                   /* Address Offset: 0x00C4 */
        __IO uint32_t RWK_FILTER_OFFSET;                  /* Address Offset: 0x00C4 */
        __IO uint32_t RWK_FILTER_COMMAND;                 /* Address Offset: 0x00C4 */
    };
         uint32_t RESERVED00C8[18];                   /* Address Offset: 0x00C8 */
    __IO uint32_t MAC_VERSION;                        /* Address Offset: 0x0110 */
    __I  uint32_t MAC_DEBUG;                          /* Address Offset: 0x0114 */
         uint32_t RESERVED0118;                       /* Address Offset: 0x0118 */
    __I  uint32_t MAC_HW_FEATURE0;                    /* Address Offset: 0x011C */
    __I  uint32_t MAC_HW_FEATURE1;                    /* Address Offset: 0x0120 */
    __I  uint32_t MAC_HW_FEATURE2;                    /* Address Offset: 0x0124 */
    __IO uint32_t MAC_HW_FEATURE3;                    /* Address Offset: 0x0128 */
         uint32_t RESERVED012C[53];                   /* Address Offset: 0x012C */
    __IO uint32_t MAC_MDIO_ADDRESS;                   /* Address Offset: 0x0200 */
    __IO uint32_t MAC_MDIO_DATA;                      /* Address Offset: 0x0204 */
         uint32_t RESERVED0208[2];                    /* Address Offset: 0x0208 */
    __IO uint32_t MAC_ARP_ADDRESS;                    /* Address Offset: 0x0210 */
         uint32_t RESERVED0214[7];                    /* Address Offset: 0x0214 */
    __IO uint32_t MAC_CSR_SW_CTRL;                    /* Address Offset: 0x0230 */
         uint32_t RESERVED0234;                       /* Address Offset: 0x0234 */
    __IO uint32_t MAC_EXT_CFG1;                       /* Address Offset: 0x0238 */
         uint32_t RESERVED023C[49];                   /* Address Offset: 0x023C */
    __IO uint32_t MAC_ADDRESS0_HIGH;                  /* Address Offset: 0x0300 */
    __IO uint32_t MAC_ADDRESS0_LOW;                   /* Address Offset: 0x0304 */
         uint32_t RESERVED0308[254];                  /* Address Offset: 0x0308 */
    __IO uint32_t MMC_CONTROL;                        /* Address Offset: 0x0700 */
    __I  uint32_t MMC_RX_INTERRUPT;                   /* Address Offset: 0x0704 */
    __I  uint32_t MMC_TX_INTERRUPT;                   /* Address Offset: 0x0708 */
    __IO uint32_t MMC_RX_INTERRUPT_MASK;              /* Address Offset: 0x070C */
    __IO uint32_t MMC_TX_INTERRUPT_MASK;              /* Address Offset: 0x0710 */
    __I  uint32_t TX_OCTET_COUNT_GOOD_BAD;            /* Address Offset: 0x0714 */
    __I  uint32_t TX_PACKET_COUNT_GOOD_BAD;           /* Address Offset: 0x0718 */
         uint32_t RESERVED071C[11];                   /* Address Offset: 0x071C */
    __I  uint32_t TX_UNDERFLOW_ERROR_PACKETS;         /* Address Offset: 0x0748 */
         uint32_t RESERVED074C[5];                    /* Address Offset: 0x074C */
    __I  uint32_t TX_CARRIER_ERROR_PACKETS;           /* Address Offset: 0x0760 */
    __I  uint32_t TX_OCTET_COUNT_GOOD;                /* Address Offset: 0x0764 */
    __I  uint32_t TX_PACKET_COUNT_GOOD;               /* Address Offset: 0x0768 */
         uint32_t RESERVED076C;                       /* Address Offset: 0x076C */
    __I  uint32_t TX_PAUSE_PACKETS;                   /* Address Offset: 0x0770 */
         uint32_t RESERVED0774[3];                    /* Address Offset: 0x0774 */
    __I  uint32_t RX_PACKETS_COUNT_GOOD_BAD;          /* Address Offset: 0x0780 */
    __I  uint32_t RX_OCTET_COUNT_GOOD_BAD;            /* Address Offset: 0x0784 */
    __I  uint32_t RX_OCTET_COUNT_GOOD;                /* Address Offset: 0x0788 */
         uint32_t RESERVED078C;                       /* Address Offset: 0x078C */
    __I  uint32_t RX_MULTICAST_PACKETS_GOOD;          /* Address Offset: 0x0790 */
    __I  uint32_t RX_CRC_ERROR_PACKETS;               /* Address Offset: 0x0794 */
         uint32_t RESERVED0798[12];                   /* Address Offset: 0x0798 */
    __I  uint32_t RX_LENGTH_ERROR_PACKETS;            /* Address Offset: 0x07C8 */
         uint32_t RESERVED07CC;                       /* Address Offset: 0x07CC */
    __I  uint32_t RX_PAUSE_PACKETS;                   /* Address Offset: 0x07D0 */
    __I  uint32_t RX_FIFO_OVERFLOW_PACKETS;           /* Address Offset: 0x07D4 */
         uint32_t RESERVED07D8[10];                   /* Address Offset: 0x07D8 */
    __IO uint32_t MMC_IPC_RX_INTERRUPT_MASK;          /* Address Offset: 0x0800 */
         uint32_t RESERVED0804;                       /* Address Offset: 0x0804 */
    __I  uint32_t MMC_IPC_RX_INTERRUPT;               /* Address Offset: 0x0808 */
         uint32_t RESERVED080C;                       /* Address Offset: 0x080C */
    __I  uint32_t RXIPV4_GOOD_PACKETS;                /* Address Offset: 0x0810 */
    __I  uint32_t RXIPV4_HEADER_ERROR_PACKETS;        /* Address Offset: 0x0814 */
         uint32_t RESERVED0818[3];                    /* Address Offset: 0x0818 */
    __I  uint32_t RXIPV6_GOOD_PACKETS;                /* Address Offset: 0x0824 */
    __I  uint32_t RXIPV6_HEADER_ERROR_PACKETS;        /* Address Offset: 0x0828 */
         uint32_t RESERVED082C[2];                    /* Address Offset: 0x082C */
    __I  uint32_t RXUDP_ERROR_PACKETS;                /* Address Offset: 0x0834 */
         uint32_t RESERVED0838;                       /* Address Offset: 0x0838 */
    __I  uint32_t RXTCP_ERROR_PACKETS;                /* Address Offset: 0x083C */
         uint32_t RESERVED0840;                       /* Address Offset: 0x0840 */
    __I  uint32_t RXICMP_ERROR_PACKETS;               /* Address Offset: 0x0844 */
         uint32_t RESERVED0848[3];                    /* Address Offset: 0x0848 */
    __I  uint32_t RXIPV4_HEADER_ERROR_OCTETS;         /* Address Offset: 0x0854 */
         uint32_t RESERVED0858[4];                    /* Address Offset: 0x0858 */
    __I  uint32_t RXIPV6_HEADER_ERROR_OCTETS;         /* Address Offset: 0x0868 */
         uint32_t RESERVED086C[2];                    /* Address Offset: 0x086C */
    __I  uint32_t RXUDP_ERROR_OCTETS;                 /* Address Offset: 0x0874 */
         uint32_t RESERVED0878;                       /* Address Offset: 0x0878 */
    __I  uint32_t RXTCP_ERROR_OCTETS;                 /* Address Offset: 0x087C */
         uint32_t RESERVED0880;                       /* Address Offset: 0x0880 */
    __I  uint32_t RXICMP_ERROR_OCTETS;                /* Address Offset: 0x0884 */
         uint32_t RESERVED0888[158];                  /* Address Offset: 0x0888 */
    __IO uint32_t MAC_TIMESTAMP_CONTROL;              /* Address Offset: 0x0B00 */
    __IO uint32_t MAC_SUB_SECOND_INCREMENT;           /* Address Offset: 0x0B04 */
    __IO uint32_t MAC_SYSTEM_TIME_SECS;               /* Address Offset: 0x0B08 */
    __IO uint32_t MAC_SYSTEM_TIME_NS;                 /* Address Offset: 0x0B0C */
    __IO uint32_t MAC_SYS_TIME_SECS_UPDATE;           /* Address Offset: 0x0B10 */
    __IO uint32_t MAC_SYS_TIME_NS_UPDATE;             /* Address Offset: 0x0B14 */
    __IO uint32_t MAC_TIMESTAMP_ADDEND;               /* Address Offset: 0x0B18 */
         uint32_t RESERVED0B1C;                       /* Address Offset: 0x0B1C */
    __I  uint32_t MAC_TIMESTAMP_STATUS;               /* Address Offset: 0x0B20 */
         uint32_t RESERVED0B24[3];                    /* Address Offset: 0x0B24 */
    __I  uint32_t MAC_TX_TS_STATUS_NS;                /* Address Offset: 0x0B30 */
    __I  uint32_t MAC_TX_TS_STATUS_SECS;              /* Address Offset: 0x0B34 */
         uint32_t RESERVED0B38[2];                    /* Address Offset: 0x0B38 */
    __IO uint32_t MAC_AUXILIARY_CONTROL;              /* Address Offset: 0x0B40 */
         uint32_t RESERVED0B44;                       /* Address Offset: 0x0B44 */
    __I  uint32_t MAC_AUXILIARY_TS_NS;                /* Address Offset: 0x0B48 */
    __I  uint32_t MAC_AUXILIARY_TS_SECS;              /* Address Offset: 0x0B4C */
         uint32_t RESERVED0B50[2];                    /* Address Offset: 0x0B50 */
    __IO uint32_t MAC_TS_INGRESS_CORR_NS;             /* Address Offset: 0x0B58 */
    __IO uint32_t MAC_TS_EGRESS_CORR_NS;              /* Address Offset: 0x0B5C */
         uint32_t RESERVED0B60[2];                    /* Address Offset: 0x0B60 */
    __I  uint32_t MAC_TS_INGRESS_LATENCY;             /* Address Offset: 0x0B68 */
    __I  uint32_t MAC_TS_EGRESS_LATENCY;              /* Address Offset: 0x0B6C */
    __IO uint32_t MAC_PPS_CONTROL;                    /* Address Offset: 0x0B70 */
         uint32_t RESERVED0B74[3];                    /* Address Offset: 0x0B74 */
    __IO uint32_t MAC_PPS0_TARGET_TIME_SECONDS;       /* Address Offset: 0x0B80 */
    __IO uint32_t MAC_PPS0_TARGET_TIME_NS;            /* Address Offset: 0x0B84 */
    __IO uint32_t MAC_PPS0_INTERVAL;                  /* Address Offset: 0x0B88 */
    __IO uint32_t MAC_PPS0_WIDTH;                     /* Address Offset: 0x0B8C */
         uint32_t RESERVED0B90[28];                   /* Address Offset: 0x0B90 */
    __IO uint32_t MTL_OPERATION_MODE;                 /* Address Offset: 0x0C00 */
         uint32_t RESERVED0C04;                       /* Address Offset: 0x0C04 */
    __IO uint32_t MTL_DBG_CTL;                        /* Address Offset: 0x0C08 */
    __IO uint32_t MTL_DBG_STS;                        /* Address Offset: 0x0C0C */
    __IO uint32_t MTL_FIFO_DEBUG_DATA;                /* Address Offset: 0x0C10 */
         uint32_t RESERVED0C14[3];                    /* Address Offset: 0x0C14 */
    __I  uint32_t MTL_INTERRUPT_STATUS;               /* Address Offset: 0x0C20 */
         uint32_t RESERVED0C24[55];                   /* Address Offset: 0x0C24 */
    __IO uint32_t MTL_TXQ0_OPERATION_MODE;            /* Address Offset: 0x0D00 */
    __I  uint32_t MTL_TXQ0_UNDERFLOW;                 /* Address Offset: 0x0D04 */
    __I  uint32_t MTL_TXQ0_DEBUG;                     /* Address Offset: 0x0D08 */
         uint32_t RESERVED0D0C[8];                    /* Address Offset: 0x0D0C */
    __IO uint32_t MTL_Q0_INTERRUPT_CTRL_STATUS;       /* Address Offset: 0x0D2C */
    __IO uint32_t MTL_RXQ0_OPERATION_MODE;            /* Address Offset: 0x0D30 */
    __I  uint32_t MTL_RXQ0_MISS_PKT_OVF_CNT;          /* Address Offset: 0x0D34 */
    __I  uint32_t MTL_RXQ0_DEBUG;                     /* Address Offset: 0x0D38 */
         uint32_t RESERVED0D3C[177];                  /* Address Offset: 0x0D3C */
    __IO uint32_t DMA_MODE;                           /* Address Offset: 0x1000 */
    __IO uint32_t DMA_SYSBUS_MODE;                    /* Address Offset: 0x1004 */
    __I  uint32_t DMA_INTERRUPT_STATUS;               /* Address Offset: 0x1008 */
    __I  uint32_t DMA_DEBUG_STATUS0;                  /* Address Offset: 0x100C */
         uint32_t RESERVED1010[12];                   /* Address Offset: 0x1010 */
    __IO uint32_t AXI_LPI_ENTRY_INTERVAL;             /* Address Offset: 0x1040 */
         uint32_t RESERVED1044[47];                   /* Address Offset: 0x1044 */
    __IO uint32_t DMA_CH0_CONTROL;                    /* Address Offset: 0x1100 */
    __IO uint32_t DMA_CH0_TX_CONTROL;                 /* Address Offset: 0x1104 */
    __IO uint32_t DMA_CH0_RX_CONTROL;                 /* Address Offset: 0x1108 */
         uint32_t RESERVED110C;                       /* Address Offset: 0x110C */
    __IO uint32_t DMA_CH0_TXDESC_LIST_HADDRESS;       /* Address Offset: 0x1110 */
    __IO uint32_t DMA_CH0_TXDESC_LIST_ADDRESS;        /* Address Offset: 0x1114 */
    __IO uint32_t DMA_CH0_RXDESC_LIST_HAADDRESS;      /* Address Offset: 0x1118 */
    __IO uint32_t DMA_CH0_RXDESC_LIST_ADDRESS;        /* Address Offset: 0x111C */
    __IO uint32_t DMA_CH0_TXDESC_TAIL_POINTER;        /* Address Offset: 0x1120 */
         uint32_t RESERVED1124;                       /* Address Offset: 0x1124 */
    __IO uint32_t DMA_CH0_RXDESC_TAIL_POINTER;        /* Address Offset: 0x1128 */
    __IO uint32_t DMA_CH0_TXDESC_RING_LENGTH;         /* Address Offset: 0x112C */
    __IO uint32_t DMA_CH0_RXDESC_RING_LENGTH;         /* Address Offset: 0x1130 */
    __IO uint32_t DMA_CH0_INTERRUPT_ENABLE;           /* Address Offset: 0x1134 */
    __IO uint32_t DMA_CH0_RX_INTERRUPT_WATCHDOG_TIMER; /* Address Offset: 0x1138 */
         uint32_t RESERVED113C[2];                    /* Address Offset: 0x113C */
    __I  uint32_t DMA_CH0_CURRENT_APP_TXDESC;         /* Address Offset: 0x1144 */
         uint32_t RESERVED1148;                       /* Address Offset: 0x1148 */
    __I  uint32_t DMA_CH0_CURRENT_APP_RXDESC;         /* Address Offset: 0x114C */
    __I  uint32_t DMA_CH0_CURREN_APP_TXBUFFER_H;      /* Address Offset: 0x1150 */
    __I  uint32_t DMA_CH0_CURRENT_APP_TXBUFFER;       /* Address Offset: 0x1154 */
    __I  uint32_t DMA_CH0_CURRENT_APP_RXBUFFER_H;     /* Address Offset: 0x1158 */
    __I  uint32_t DMA_CH0_CURRENT_APP_RXBUFFER;       /* Address Offset: 0x115C */
    __IO uint32_t DMA_CH0_STATUS;                     /* Address Offset: 0x1160 */
    __I  uint32_t DMA_CH0_MISS_FRAME_CNT;             /* Address Offset: 0x1164 */
    __I  uint32_t DMA_CH0_RX_ERI_CNT;                 /* Address Offset: 0x1168 */
};
/* GPIO2_IOC Register Structure Define */
struct GPIO2_IOC_REG {
         uint32_t RESERVED0000[16];                   /* Address Offset: 0x0000 */
    __IO uint32_t GPIO2A_IOMUX_SEL_0;                 /* Address Offset: 0x0040 */
    __IO uint32_t GPIO2A_IOMUX_SEL_1;                 /* Address Offset: 0x0044 */
    __IO uint32_t GPIO2B_IOMUX_SEL_0;                 /* Address Offset: 0x0048 */
    __IO uint32_t GPIO2B_IOMUX_SEL_1;                 /* Address Offset: 0x004C */
    __IO uint32_t GPIO2C_IOMUX_SEL_0;                 /* Address Offset: 0x0050 */
         uint32_t RESERVED0054[75];                   /* Address Offset: 0x0054 */
    __IO uint32_t GPIO2A_DS_0;                        /* Address Offset: 0x0180 */
    __IO uint32_t GPIO2A_DS_1;                        /* Address Offset: 0x0184 */
    __IO uint32_t GPIO2A_DS_2;                        /* Address Offset: 0x0188 */
         uint32_t RESERVED018C;                       /* Address Offset: 0x018C */
    __IO uint32_t GPIO2B_DS_0;                        /* Address Offset: 0x0190 */
    __IO uint32_t GPIO2B_DS_1;                        /* Address Offset: 0x0194 */
    __IO uint32_t GPIO2B_DS_2;                        /* Address Offset: 0x0198 */
    __IO uint32_t GPIO2B_DS_3;                        /* Address Offset: 0x019C */
    __IO uint32_t GPIO2C_DS_0;                        /* Address Offset: 0x01A0 */
         uint32_t RESERVED01A4[31];                   /* Address Offset: 0x01A4 */
    __IO uint32_t GPIO2A_PULL;                        /* Address Offset: 0x0220 */
    __IO uint32_t GPIO2B_PULL;                        /* Address Offset: 0x0224 */
    __IO uint32_t GPIO2C_PULL;                        /* Address Offset: 0x0228 */
         uint32_t RESERVED022C[61];                   /* Address Offset: 0x022C */
    __IO uint32_t GPIO2A_IE;                          /* Address Offset: 0x0320 */
    __IO uint32_t GPIO2B_IE;                          /* Address Offset: 0x0324 */
    __IO uint32_t GPIO2C_IE;                          /* Address Offset: 0x0328 */
         uint32_t RESERVED032C[61];                   /* Address Offset: 0x032C */
    __IO uint32_t GPIO2A_SMT;                         /* Address Offset: 0x0420 */
    __IO uint32_t GPIO2B_SMT;                         /* Address Offset: 0x0424 */
    __IO uint32_t GPIO2C_SMT;                         /* Address Offset: 0x0428 */
         uint32_t RESERVED042C[61];                   /* Address Offset: 0x042C */
    __IO uint32_t GPIO2A_SUS;                         /* Address Offset: 0x0520 */
    __IO uint32_t GPIO2B_SUS;                         /* Address Offset: 0x0524 */
    __IO uint32_t GPIO2C_SUS;                         /* Address Offset: 0x0528 */
         uint32_t RESERVED052C[61];                   /* Address Offset: 0x052C */
    __IO uint32_t GPIO2A_SL;                          /* Address Offset: 0x0620 */
    __IO uint32_t GPIO2B_SL;                          /* Address Offset: 0x0624 */
    __IO uint32_t GPIO2C_SL;                          /* Address Offset: 0x0628 */
         uint32_t RESERVED062C[61];                   /* Address Offset: 0x062C */
    __IO uint32_t GPIO2A_OD;                          /* Address Offset: 0x0720 */
    __IO uint32_t GPIO2B_OD;                          /* Address Offset: 0x0724 */
    __IO uint32_t GPIO2C_OD;                          /* Address Offset: 0x0728 */
         uint32_t RESERVED072C[61];                   /* Address Offset: 0x072C */
    __IO uint32_t IDDQ_VCCIO234;                      /* Address Offset: 0x0820 */
};
/* GPIO3_IOC Register Structure Define */
struct GPIO3_IOC_REG {
         uint32_t RESERVED0000[24];                   /* Address Offset: 0x0000 */
    __IO uint32_t GPIO3A_IOMUX_SEL_0;                 /* Address Offset: 0x0060 */
    __IO uint32_t GPIO3A_IOMUX_SEL_1;                 /* Address Offset: 0x0064 */
    __IO uint32_t GPIO3B_IOMUX_SEL_0;                 /* Address Offset: 0x0068 */
    __IO uint32_t GPIO3B_IOMUX_SEL_1;                 /* Address Offset: 0x006C */
         uint32_t RESERVED0070[84];                   /* Address Offset: 0x0070 */
    __IO uint32_t GPIO3A_DS_0;                        /* Address Offset: 0x01C0 */
    __IO uint32_t GPIO3A_DS_1;                        /* Address Offset: 0x01C4 */
    __IO uint32_t GPIO3A_DS_2;                        /* Address Offset: 0x01C8 */
    __IO uint32_t GPIO3A_DS_3;                        /* Address Offset: 0x01CC */
    __IO uint32_t GPIO3B_DS_0;                        /* Address Offset: 0x01D0 */
    __IO uint32_t GPIO3B_DS_1;                        /* Address Offset: 0x01D4 */
    __IO uint32_t GPIO3B_DS_2;                        /* Address Offset: 0x01D8 */
    __IO uint32_t GPIO3B_DS_3;                        /* Address Offset: 0x01DC */
         uint32_t RESERVED01E0[20];                   /* Address Offset: 0x01E0 */
    __IO uint32_t GPIO3A_PULL;                        /* Address Offset: 0x0230 */
    __IO uint32_t GPIO3B_PULL;                        /* Address Offset: 0x0234 */
         uint32_t RESERVED0238[62];                   /* Address Offset: 0x0238 */
    __IO uint32_t GPIO3A_IE;                          /* Address Offset: 0x0330 */
    __IO uint32_t GPIO3B_IE;                          /* Address Offset: 0x0334 */
         uint32_t RESERVED0338[62];                   /* Address Offset: 0x0338 */
    __IO uint32_t GPIO3A_SMT;                         /* Address Offset: 0x0430 */
    __IO uint32_t GPIO3B_SMT;                         /* Address Offset: 0x0434 */
         uint32_t RESERVED0438[62];                   /* Address Offset: 0x0438 */
    __IO uint32_t GPIO3A_SUS;                         /* Address Offset: 0x0530 */
    __IO uint32_t GPIO3B_SUS;                         /* Address Offset: 0x0534 */
         uint32_t RESERVED0538[62];                   /* Address Offset: 0x0538 */
    __IO uint32_t GPIO3A_SL;                          /* Address Offset: 0x0630 */
    __IO uint32_t GPIO3B_SL;                          /* Address Offset: 0x0634 */
         uint32_t RESERVED0638[62];                   /* Address Offset: 0x0638 */
    __IO uint32_t GPIO3A_OD;                          /* Address Offset: 0x0730 */
    __IO uint32_t GPIO3B_OD;                          /* Address Offset: 0x0734 */
};
/* GPIO4_IOC Register Structure Define */
struct GPIO4_IOC_REG {
         uint32_t RESERVED0000[528];                  /* Address Offset: 0x0000 */
    __IO uint32_t SARADC_CON;                         /* Address Offset: 0x0840 */
};
/* SARADC Register Structure Define */
struct SARADC_REG {
    __IO uint32_t CONV_CON;                           /* Address Offset: 0x0000 */
    __IO uint32_t T_PD_SOC;                           /* Address Offset: 0x0004 */
    __IO uint32_t T_AS_SOC;                           /* Address Offset: 0x0008 */
    __IO uint32_t T_DAS_SOC;                          /* Address Offset: 0x000C */
    __IO uint32_t T_SEL_SOC;                          /* Address Offset: 0x0010 */
    __IO uint32_t HIGH_COMP[16];                      /* Address Offset: 0x0014 */
    __IO uint32_t LOW_COMP[16];                       /* Address Offset: 0x0054 */
    __IO uint32_t DEBOUNCE;                           /* Address Offset: 0x0094 */
    __IO uint32_t HT_INT_EN;                          /* Address Offset: 0x0098 */
    __IO uint32_t LT_INT_EN;                          /* Address Offset: 0x009C */
         uint32_t RESERVED00A0[24];                   /* Address Offset: 0x00A0 */
    __IO uint32_t MT_INT_EN;                          /* Address Offset: 0x0100 */
    __IO uint32_t END_INT_EN;                         /* Address Offset: 0x0104 */
    __IO uint32_t ST_CON;                             /* Address Offset: 0x0108 */
    __I  uint32_t STATUS;                             /* Address Offset: 0x010C */
    __IO uint32_t END_INT_ST;                         /* Address Offset: 0x0110 */
    __IO uint32_t HT_INT_ST;                          /* Address Offset: 0x0114 */
    __IO uint32_t LT_INT_ST;                          /* Address Offset: 0x0118 */
    __IO uint32_t MT_INT_ST;                          /* Address Offset: 0x011C */
    __I  uint32_t DATA[16];                           /* Address Offset: 0x0120 */
    __IO uint32_t AUTO_CH_EN;                         /* Address Offset: 0x0160 */
};
/* ACODEC Register Structure Define */
struct ACODEC_REG {
    __IO uint32_t BG_LPF[2];                          /* Address Offset: 0x0000 */
    __IO uint32_t ADC[3];                             /* Address Offset: 0x0008 */
    __IO uint32_t MIC_PGA[3];                         /* Address Offset: 0x0014 */
    __IO uint32_t ADC_LDO;                            /* Address Offset: 0x0020 */
    __IO uint32_t ADC_HK[2];                          /* Address Offset: 0x0024 */
    __IO uint32_t DIG_CLKEN;                          /* Address Offset: 0x002C */
    __IO uint32_t VOL_CTL;                            /* Address Offset: 0x0030 */
    __IO uint32_t ADC_AGC[9];                         /* Address Offset: 0x0034 */
    __IO uint32_t ADC_STATUS[2];                      /* Address Offset: 0x0058 */
    __IO uint32_t ADC_FILTER;                         /* Address Offset: 0x0060 */
    __IO uint32_t I2S_CKM;                            /* Address Offset: 0x0064 */
    __IO uint32_t I2S_TXCR[2];                        /* Address Offset: 0x0068 */
    __IO uint32_t I2S_TXCMD;                          /* Address Offset: 0x0070 */
};
/* VOP Register Structure Define */
struct VOP_REG {
    __IO uint32_t REG_CFG_DONE;                       /* Address Offset: 0x0000 */
    __I  uint32_t VERSION;                            /* Address Offset: 0x0004 */
    __IO uint32_t DSP_BG;                             /* Address Offset: 0x0008 */
    __IO uint32_t MCU;                                /* Address Offset: 0x000C */
    __IO uint32_t SYS_CTRL0;                          /* Address Offset: 0x0010 */
    __IO uint32_t SYS_CTRL1;                          /* Address Offset: 0x0014 */
    __IO uint32_t SYS_CTRL2;                          /* Address Offset: 0x0018 */
         uint32_t RESERVED001C;                       /* Address Offset: 0x001C */
    __IO uint32_t DSP_CTRL0;                          /* Address Offset: 0x0020 */
    __IO uint32_t DSP_CTRL1;                          /* Address Offset: 0x0024 */
    __IO uint32_t DSP_CTRL2;                          /* Address Offset: 0x0028 */
    __IO uint32_t VOP_STATUS;                         /* Address Offset: 0x002C */
    __IO uint32_t LINE_FLAG;                          /* Address Offset: 0x0030 */
    __IO uint32_t INTR_EN;                            /* Address Offset: 0x0034 */
    __IO uint32_t INTR_CLEAR;                         /* Address Offset: 0x0038 */
    __IO uint32_t INTR_STATUS;                        /* Address Offset: 0x003C */
    __IO uint32_t POST_LB_CTRL;                       /* Address Offset: 0x0040 */
         uint32_t RESERVED0044[19];                   /* Address Offset: 0x0044 */
    __IO uint32_t WIN1_CTRL0;                         /* Address Offset: 0x0090 */
    __IO uint32_t WIN1_CTRL1;                         /* Address Offset: 0x0094 */
    __IO uint32_t WIN1_VIR;                           /* Address Offset: 0x0098 */
         uint32_t RESERVED009C;                       /* Address Offset: 0x009C */
    __IO uint32_t WIN1_MST;                           /* Address Offset: 0x00A0 */
    __IO uint32_t WIN1_DSP_INFO;                      /* Address Offset: 0x00A4 */
    __IO uint32_t WIN1_DSP_ST;                        /* Address Offset: 0x00A8 */
    __IO uint32_t WIN1_COLOR_KEY;                     /* Address Offset: 0x00AC */
         uint32_t RESERVED00B0[3];                    /* Address Offset: 0x00B0 */
    __IO uint32_t WIN1_ALPHA_CTRL;                    /* Address Offset: 0x00BC */
         uint32_t RESERVED00C0[16];                   /* Address Offset: 0x00C0 */
    __IO uint32_t DSP_HTOTAL_HS_END;                  /* Address Offset: 0x0100 */
    __IO uint32_t DSP_HACT_ST_END;                    /* Address Offset: 0x0104 */
    __IO uint32_t DSP_VTOTAL_VS_END;                  /* Address Offset: 0x0108 */
    __IO uint32_t DSP_VACT_ST_END;                    /* Address Offset: 0x010C */
    __IO uint32_t DSP_VS_ST_END_F1;                   /* Address Offset: 0x0110 */
    __IO uint32_t DSP_VACT_ST_END_F1;                 /* Address Offset: 0x0114 */
         uint32_t RESERVED0118[18];                   /* Address Offset: 0x0118 */
    __IO uint32_t BCSH_CTRL;                          /* Address Offset: 0x0160 */
    __IO uint32_t BCSH_COL_BAR;                       /* Address Offset: 0x0164 */
    __IO uint32_t BCSH_BCS;                           /* Address Offset: 0x0168 */
    __IO uint32_t BCSH_H;                             /* Address Offset: 0x016C */
    __IO uint32_t FRC_LOWER01_0;                      /* Address Offset: 0x0170 */
    __IO uint32_t FRC_LOWER01_1;                      /* Address Offset: 0x0174 */
    __IO uint32_t FRC_LOWER10_0;                      /* Address Offset: 0x0178 */
    __IO uint32_t FRC_LOWER10_1;                      /* Address Offset: 0x017C */
    __IO uint32_t FRC_LOWER11_0;                      /* Address Offset: 0x0180 */
    __IO uint32_t FRC_LOWER11_1;                      /* Address Offset: 0x0184 */
         uint32_t RESERVED0188;                       /* Address Offset: 0x0188 */
    __IO uint32_t MCU_RW_BYPASS_PORT;                 /* Address Offset: 0x018C */
         uint32_t RESERVED0190[24];                   /* Address Offset: 0x0190 */
    __IO uint32_t SCAN_LINE_NUM;                      /* Address Offset: 0x01F0 */
    __IO uint32_t BLANKING_VALUE;                     /* Address Offset: 0x01F4 */
    __IO uint32_t FLAG_REG_FRM_VALID;                 /* Address Offset: 0x01F8 */
    __IO uint32_t FLAG_REG;                           /* Address Offset: 0x01FC */
         uint32_t RESERVED0200[512];                  /* Address Offset: 0x0200 */
    __IO uint32_t GAMMA_LUT[256];                     /* Address Offset: 0x0A00 */
};
/* RGA2 Register Structure Define */
struct RGA2_REG {
    __IO uint32_t SYS_CTRL;                           /* Address Offset: 0x0000 */
    __IO uint32_t CMD_CTRL;                           /* Address Offset: 0x0004 */
    __IO uint32_t CMD_BASE;                           /* Address Offset: 0x0008 */
    __I  uint32_t STATUS1;                            /* Address Offset: 0x000C */
    __IO uint32_t INT;                                /* Address Offset: 0x0010 */
    __IO uint32_t MMU_CTRL0;                          /* Address Offset: 0x0014 */
         uint32_t RESERVED0018;                       /* Address Offset: 0x0018 */
    __I  uint32_t STATUS2;                            /* Address Offset: 0x001C */
    __I  uint32_t WORK_CNT;                           /* Address Offset: 0x0020 */
         uint32_t RESERVED0024;                       /* Address Offset: 0x0024 */
    __IO uint32_t VERSION_INFO;                       /* Address Offset: 0x0028 */
         uint32_t RESERVED002C;                       /* Address Offset: 0x002C */
    __IO uint32_t READ_LINE_CNT_TH;                   /* Address Offset: 0x0030 */
    __IO uint32_t WRITE_LINE_CNT_TH;                  /* Address Offset: 0x0034 */
    __I  uint32_t INT_LINE_CNT;                       /* Address Offset: 0x0038 */
         uint32_t RESERVED003C[9];                    /* Address Offset: 0x003C */
    __IO uint32_t DST_CSC_00;                         /* Address Offset: 0x0060 */
    __IO uint32_t DST_CSC_01;                         /* Address Offset: 0x0064 */
    __IO uint32_t DST_CSC_02;                         /* Address Offset: 0x0068 */
    __IO uint32_t DST_CSC_OFF0;                       /* Address Offset: 0x006C */
    __IO uint32_t DST_CSC_10;                         /* Address Offset: 0x0070 */
    __IO uint32_t DST_CSC_11;                         /* Address Offset: 0x0074 */
    __IO uint32_t DST_CSC_12;                         /* Address Offset: 0x0078 */
    __IO uint32_t DST_CSC_OFF1;                       /* Address Offset: 0x007C */
    __IO uint32_t DST_CSC_20;                         /* Address Offset: 0x0080 */
    __IO uint32_t DST_CSC_21;                         /* Address Offset: 0x0084 */
    __IO uint32_t DST_CSC_22;                         /* Address Offset: 0x0088 */
    __IO uint32_t DST_CSC_OFF2;                       /* Address Offset: 0x008C */
         uint32_t RESERVED0090[28];                   /* Address Offset: 0x0090 */
    __IO uint32_t MODE_CTRL;                          /* Address Offset: 0x0100 */
    __IO uint32_t SRC_INFO;                           /* Address Offset: 0x0104 */
    __IO uint32_t SRC_BASE0;                          /* Address Offset: 0x0108 */
    __IO uint32_t SRC_BASE1;                          /* Address Offset: 0x010C */
    __IO uint32_t SRC_BASE2;                          /* Address Offset: 0x0110 */
    __IO uint32_t SRC_BASE3;                          /* Address Offset: 0x0114 */
    __IO uint32_t SRC_VIR_INFO;                       /* Address Offset: 0x0118 */
    __IO uint32_t SRC_ACT_INFO;                       /* Address Offset: 0x011C */
    __IO uint32_t SRC_X_FACTOR;                       /* Address Offset: 0x0120 */
    __IO uint32_t SRC_Y_FACTOR;                       /* Address Offset: 0x0124 */
    union {
        __IO uint32_t SRC_BG_COLOR;                       /* Address Offset: 0x0128 */
        __IO uint32_t GAUSS_COE;                          /* Address Offset: 0x0128 */
    };
    __IO uint32_t SRC_FG_COLOR;                       /* Address Offset: 0x012C */
    union {
        __IO uint32_t SRC_TR_COLOR0;                      /* Address Offset: 0x0130 */
        __IO uint32_t CP_GR_A;                            /* Address Offset: 0x0130 */
    };
    union {
        __IO uint32_t SRC_TR_COLOR1;                      /* Address Offset: 0x0134 */
        __IO uint32_t CP_GR_B;                            /* Address Offset: 0x0134 */
    };
    __IO uint32_t DST_INFO;                           /* Address Offset: 0x0138 */
    __IO uint32_t DST_BASE0;                          /* Address Offset: 0x013C */
    __IO uint32_t DST_BASE1;                          /* Address Offset: 0x0140 */
    __IO uint32_t DST_BASE2;                          /* Address Offset: 0x0144 */
    __IO uint32_t DST_VIR_INFO;                       /* Address Offset: 0x0148 */
    __IO uint32_t DST_ACT_INFO;                       /* Address Offset: 0x014C */
    __IO uint32_t ALPHA_CTRL0;                        /* Address Offset: 0x0150 */
    __IO uint32_t ALPHA_CTRL1;                        /* Address Offset: 0x0154 */
    __IO uint32_t FADING_CTRL;                        /* Address Offset: 0x0158 */
    __IO uint32_t PAT_CON;                            /* Address Offset: 0x015C */
    union {
        __IO uint32_t NN_QUANTIZE_SCALE;                  /* Address Offset: 0x0160 */
        __IO uint32_t ROP_CON0;                           /* Address Offset: 0x0160 */
        __IO uint32_t CP_GR_G;                            /* Address Offset: 0x0160 */
        __IO uint32_t DST_Y4MAP_LUT0;                     /* Address Offset: 0x0160 */
        __IO uint32_t OSD_INVERTSION_CAL0;                /* Address Offset: 0x0160 */
    };
    union {
        __IO uint32_t NN_QUANTIZE_OFFSET;                 /* Address Offset: 0x0164 */
        __IO uint32_t CP_GR_R;                            /* Address Offset: 0x0164 */
        __IO uint32_t DST_Y4MAP_LUT1;                     /* Address Offset: 0x0164 */
        __IO uint32_t ROP_CON1;                           /* Address Offset: 0x0164 */
    };
    __IO uint32_t MASK_BASE;                          /* Address Offset: 0x0168 */
};
/* MIPI_DSI Register Structure Define */
struct MIPI_DSI_REG {
    __I  uint32_t VERSION;                            /* Address Offset: 0x0000 */
    __IO uint32_t PWR_UP;                             /* Address Offset: 0x0004 */
    __IO uint32_t CLKMGR_CFG;                         /* Address Offset: 0x0008 */
    __IO uint32_t DPI_VCID;                           /* Address Offset: 0x000C */
    __IO uint32_t DPI_COLOR_CODING;                   /* Address Offset: 0x0010 */
    __IO uint32_t DPI_CFG_POL;                        /* Address Offset: 0x0014 */
    __IO uint32_t DPI_LP_CMD_TIM;                     /* Address Offset: 0x0018 */
    __IO uint32_t DBI_VCID;                           /* Address Offset: 0x001C */
    __IO uint32_t DBI_CFG;                            /* Address Offset: 0x0020 */
    __IO uint32_t DBI_PARTITIONING_EN;                /* Address Offset: 0x0024 */
    __IO uint32_t DBI_CMDSIZE;                        /* Address Offset: 0x0028 */
    __IO uint32_t PCKHDL_CFG;                         /* Address Offset: 0x002C */
    __IO uint32_t GEN_VCID;                           /* Address Offset: 0x0030 */
    __IO uint32_t MODE_CFG;                           /* Address Offset: 0x0034 */
    __IO uint32_t VID_MODE_CFG;                       /* Address Offset: 0x0038 */
    __IO uint32_t VID_PKT_SIZE;                       /* Address Offset: 0x003C */
    __IO uint32_t VID_NUM_CHUNKS;                     /* Address Offset: 0x0040 */
    __IO uint32_t VID_NULL_SIZE;                      /* Address Offset: 0x0044 */
    __IO uint32_t VID_HSA_TIME;                       /* Address Offset: 0x0048 */
    __IO uint32_t VID_HBP_TIME;                       /* Address Offset: 0x004C */
    __IO uint32_t VID_HLINE_TIME;                     /* Address Offset: 0x0050 */
    __IO uint32_t VID_VSA_LINES;                      /* Address Offset: 0x0054 */
    __IO uint32_t VID_VBP_LINES;                      /* Address Offset: 0x0058 */
    __IO uint32_t VID_VFP_LINES;                      /* Address Offset: 0x005C */
    __IO uint32_t VID_VACTIVE_LINES;                  /* Address Offset: 0x0060 */
    __IO uint32_t EDPI_CMD_SIZE;                      /* Address Offset: 0x0064 */
    __IO uint32_t CMD_MODE_CFG;                       /* Address Offset: 0x0068 */
    __IO uint32_t GEN_HDR;                            /* Address Offset: 0x006C */
    __IO uint32_t GEN_PLD_DATA;                       /* Address Offset: 0x0070 */
    __I  uint32_t CMD_PKT_STATUS;                     /* Address Offset: 0x0074 */
    __IO uint32_t TO_CNT_CFG;                         /* Address Offset: 0x0078 */
    __IO uint32_t HS_RD_TO_CNT;                       /* Address Offset: 0x007C */
    __IO uint32_t LP_RD_TO_CNT;                       /* Address Offset: 0x0080 */
    __IO uint32_t HS_WR_TO_CNT;                       /* Address Offset: 0x0084 */
    __IO uint32_t LP_WR_TO_CNT;                       /* Address Offset: 0x0088 */
    __IO uint32_t BTA_TO_CNT;                         /* Address Offset: 0x008C */
    __IO uint32_t SDF_3D;                             /* Address Offset: 0x0090 */
    __IO uint32_t LPCLK_CTRL;                         /* Address Offset: 0x0094 */
    __IO uint32_t PHY_TMR_LPCLK_CFG;                  /* Address Offset: 0x0098 */
    __IO uint32_t PHY_TMR_CFG;                        /* Address Offset: 0x009C */
    __IO uint32_t PHY_RSTZ;                           /* Address Offset: 0x00A0 */
    __IO uint32_t PHY_IF_CFG;                         /* Address Offset: 0x00A4 */
    __IO uint32_t PHY_ULPS_CTRL;                      /* Address Offset: 0x00A8 */
    __IO uint32_t PHY_TX_TRIGGERS;                    /* Address Offset: 0x00AC */
    __I  uint32_t PHY_STATUS;                         /* Address Offset: 0x00B0 */
    __IO uint32_t PHY_TST_CTRL[2];                    /* Address Offset: 0x00B4 */
    __I  uint32_t INT_ST[2];                          /* Address Offset: 0x00BC */
    __IO uint32_t INT_MSK[2];                         /* Address Offset: 0x00C4 */
         uint32_t RESERVED00CC[3];                    /* Address Offset: 0x00CC */
    __O  uint32_t INT_FORCE[2];                       /* Address Offset: 0x00D8 */
         uint32_t RESERVED00E0[8];                    /* Address Offset: 0x00E0 */
    __IO uint32_t VID_SHADOW_CTRL;                    /* Address Offset: 0x0100 */
         uint32_t RESERVED0104[2];                    /* Address Offset: 0x0104 */
    __I  uint32_t DPI_VCID_ACT;                       /* Address Offset: 0x010C */
    __I  uint32_t DPI_COLOR_CODING_ACT;               /* Address Offset: 0x0110 */
         uint32_t RESERVED0114;                       /* Address Offset: 0x0114 */
    __I  uint32_t DPI_LP_CMD_TIM_ACT;                 /* Address Offset: 0x0118 */
         uint32_t RESERVED011C[7];                    /* Address Offset: 0x011C */
    __I  uint32_t VID_MODE_CFG_ACT;                   /* Address Offset: 0x0138 */
    __I  uint32_t VID_PKT_SIZE_ACT;                   /* Address Offset: 0x013C */
    __I  uint32_t VID_NUM_CHUNKS_ACT;                 /* Address Offset: 0x0140 */
    __I  uint32_t VID_NULL_SIZE_ACT;                  /* Address Offset: 0x0144 */
    __I  uint32_t VID_HSA_TIME_ACT;                   /* Address Offset: 0x0148 */
    __I  uint32_t VID_HBP_TIME_ACT;                   /* Address Offset: 0x014C */
    __I  uint32_t VID_HLINE_TIME_ACT;                 /* Address Offset: 0x0150 */
    __I  uint32_t VID_VSA_LINES_ACT;                  /* Address Offset: 0x0154 */
    __I  uint32_t VID_VBP_LINES_ACT;                  /* Address Offset: 0x0158 */
    __I  uint32_t VID_VFP_LINES_ACT;                  /* Address Offset: 0x015C */
    __I  uint32_t VID_VACTIVE_LINES_ACT;              /* Address Offset: 0x0160 */
         uint32_t RESERVED0164[11];                   /* Address Offset: 0x0164 */
    __IO uint32_t SDF_3D_ACT;                         /* Address Offset: 0x0190 */
};
/* TSADC Register Structure Define */
struct TSADC_REG {
    __IO uint32_t USER_CON;                           /* Address Offset: 0x0000 */
    __IO uint32_t AUTO_CON;                           /* Address Offset: 0x0004 */
    __IO uint32_t AUTO_STATUS;                        /* Address Offset: 0x0008 */
    __IO uint32_t AUTO_SRC;                           /* Address Offset: 0x000C */
    __IO uint32_t LT_EN;                              /* Address Offset: 0x0010 */
    __IO uint32_t HT_INT_EN;                          /* Address Offset: 0x0014 */
    __IO uint32_t GPIO_EN;                            /* Address Offset: 0x0018 */
    __IO uint32_t CRU_EN;                             /* Address Offset: 0x001C */
    __IO uint32_t LT_INT_EN;                          /* Address Offset: 0x0020 */
    __IO uint32_t HLT_INT_PD;                         /* Address Offset: 0x0024 */
    __IO uint32_t EOC_HSHUT_PD;                       /* Address Offset: 0x0028 */
    __I  uint32_t DATA[16];                           /* Address Offset: 0x002C */
    __IO uint32_t COMP_INT[13];                       /* Address Offset: 0x006C */
         uint32_t RESERVED00A0[24];                   /* Address Offset: 0x00A0 */
    __IO uint32_t COMP13_INT;                         /* Address Offset: 0x0100 */
    __IO uint32_t COMP14_INT;                         /* Address Offset: 0x0104 */
    __IO uint32_t COMP15_INT;                         /* Address Offset: 0x0108 */
    __IO uint32_t COMP_SHUT[16];                      /* Address Offset: 0x010C */
    __IO uint32_t HIGH_INT_DEBOUNCE;                  /* Address Offset: 0x014C */
    __IO uint32_t HIGH_TSHUT_DEBOUNCE;                /* Address Offset: 0x0150 */
    __IO uint32_t AUTO_PERIOD;                        /* Address Offset: 0x0154 */
    __IO uint32_t AUTO_PERIOD_HT;                     /* Address Offset: 0x0158 */
    __IO uint32_t COMP_LOW_INT[16];                   /* Address Offset: 0x015C */
    __IO uint32_t T_SETUP;                            /* Address Offset: 0x019C */
         uint32_t RESERVED01A0[24];                   /* Address Offset: 0x01A0 */
    __IO uint32_t T_PW_EN;                            /* Address Offset: 0x0200 */
    __IO uint32_t T_EN_CLK;                           /* Address Offset: 0x0204 */
    __IO uint32_t T_NON_OV;                           /* Address Offset: 0x0208 */
    __IO uint32_t T_HOLD;                             /* Address Offset: 0x020C */
    __IO uint32_t Q_MAX;                              /* Address Offset: 0x0210 */
    __IO uint32_t STATIC_CON;                         /* Address Offset: 0x0214 */
         uint32_t RESERVED0218;                       /* Address Offset: 0x0218 */
    __IO uint32_t CLK_CH_PERIOD;                      /* Address Offset: 0x021C */
    __IO uint32_t T_PW_CLK;                           /* Address Offset: 0x0220 */
};
/* GPIO1_IOC Register Structure Define */
struct GPIO1_IOC_REG {
         uint32_t RESERVED0000[8];                    /* Address Offset: 0x0000 */
    __IO uint32_t GPIO1A_IOMUX_SEL_0;                 /* Address Offset: 0x0020 */
    __IO uint32_t GPIO1A_IOMUX_SEL_1;                 /* Address Offset: 0x0024 */
    __IO uint32_t GPIO1B_IOMUX_SEL_0;                 /* Address Offset: 0x0028 */
    __IO uint32_t GPIO1B_IOMUX_SEL_1;                 /* Address Offset: 0x002C */
    __IO uint32_t GPIO1C_IOMUX_SEL_0;                 /* Address Offset: 0x0030 */
    __IO uint32_t GPIO1C_IOMUX_SEL_1;                 /* Address Offset: 0x0034 */
    __IO uint32_t GPIO1D_IOMUX_SEL_0;                 /* Address Offset: 0x0038 */
         uint32_t RESERVED003C[65];                   /* Address Offset: 0x003C */
    __IO uint32_t GPIO1A_DS_0;                        /* Address Offset: 0x0140 */
    __IO uint32_t GPIO1A_DS_1;                        /* Address Offset: 0x0144 */
    __IO uint32_t GPIO1A_DS_2;                        /* Address Offset: 0x0148 */
    __IO uint32_t GPIO1A_DS_3;                        /* Address Offset: 0x014C */
    __IO uint32_t GPIO1B_DS_0;                        /* Address Offset: 0x0150 */
    __IO uint32_t GPIO1B_DS_1;                        /* Address Offset: 0x0154 */
    __IO uint32_t GPIO1B_DS_2;                        /* Address Offset: 0x0158 */
    __IO uint32_t GPIO1B_DS_3;                        /* Address Offset: 0x015C */
    __IO uint32_t GPIO1C_DS_0;                        /* Address Offset: 0x0160 */
    __IO uint32_t GPIO1C_DS_1;                        /* Address Offset: 0x0164 */
    __IO uint32_t GPIO1C_DS_2;                        /* Address Offset: 0x0168 */
    __IO uint32_t GPIO1C_DS_3;                        /* Address Offset: 0x016C */
    __IO uint32_t GPIO1D_DS_0;                        /* Address Offset: 0x0170 */
    __IO uint32_t GPIO1D_DS_1;                        /* Address Offset: 0x0174 */
         uint32_t RESERVED0178[38];                   /* Address Offset: 0x0178 */
    __IO uint32_t GPIO1A_PULL;                        /* Address Offset: 0x0210 */
    __IO uint32_t GPIO1B_PULL;                        /* Address Offset: 0x0214 */
    __IO uint32_t GPIO1C_PULL;                        /* Address Offset: 0x0218 */
    __IO uint32_t GPIO1D_PULL;                        /* Address Offset: 0x021C */
         uint32_t RESERVED0220[60];                   /* Address Offset: 0x0220 */
    __IO uint32_t GPIO1A_IE;                          /* Address Offset: 0x0310 */
    __IO uint32_t GPIO1B_IE;                          /* Address Offset: 0x0314 */
    __IO uint32_t GPIO1C_IE;                          /* Address Offset: 0x0318 */
    __IO uint32_t GPIO1D_IE;                          /* Address Offset: 0x031C */
         uint32_t RESERVED0320[60];                   /* Address Offset: 0x0320 */
    __IO uint32_t GPIO1A_SMT;                         /* Address Offset: 0x0410 */
    __IO uint32_t GPIO1B_SMT;                         /* Address Offset: 0x0414 */
    __IO uint32_t GPIO1C_SMT;                         /* Address Offset: 0x0418 */
    __IO uint32_t GPIO1D_SMT;                         /* Address Offset: 0x041C */
         uint32_t RESERVED0420[60];                   /* Address Offset: 0x0420 */
    __IO uint32_t GPIO1A_SUS;                         /* Address Offset: 0x0510 */
    __IO uint32_t GPIO1B_SUS;                         /* Address Offset: 0x0514 */
    __IO uint32_t GPIO1C_SUS;                         /* Address Offset: 0x0518 */
    __IO uint32_t GPIO1D_SUS;                         /* Address Offset: 0x051C */
         uint32_t RESERVED0520[60];                   /* Address Offset: 0x0520 */
    __IO uint32_t GPIO1A_SL;                          /* Address Offset: 0x0610 */
    __IO uint32_t GPIO1B_SL;                          /* Address Offset: 0x0614 */
    __IO uint32_t GPIO1C_SL;                          /* Address Offset: 0x0618 */
    __IO uint32_t GPIO1D_SL;                          /* Address Offset: 0x061C */
         uint32_t RESERVED0620[60];                   /* Address Offset: 0x0620 */
    __IO uint32_t GPIO1A_OD;                          /* Address Offset: 0x0710 */
    __IO uint32_t GPIO1B_OD;                          /* Address Offset: 0x0714 */
    __IO uint32_t GPIO1C_OD;                          /* Address Offset: 0x0718 */
    __IO uint32_t GPIO1D_OD;                          /* Address Offset: 0x071C */
         uint32_t RESERVED0720[60];                   /* Address Offset: 0x0720 */
    __IO uint32_t IDDQ_VCCIO1;                        /* Address Offset: 0x0810 */
};
/* MIPI_TX_PHY Register Structure Define */
struct MIPI_TX_PHY_REG {
    __IO uint32_t DPHY_CTRL_LANE_ENABLE;              /* Address Offset: 0x0000 */
    __IO uint32_t DPHY_POWER_CTRL;                    /* Address Offset: 0x0004 */
         uint32_t RESERVED0008;                       /* Address Offset: 0x0008 */
    __IO uint32_t DPHY_PREDIV_CTRL;                   /* Address Offset: 0x000C */
    __IO uint32_t DPHY_FBDIV_CTRL;                    /* Address Offset: 0x0010 */
    __IO uint32_t DPHY_CLK_LANE_SKEW_PHASE;           /* Address Offset: 0x0014 */
    __IO uint32_t DPHY_DATA_LANE23_SKEW_PHASE;        /* Address Offset: 0x0018 */
    __IO uint32_t DPHY_DATA_LANE01_SKEW_PHASE;        /* Address Offset: 0x001C */
    __IO uint32_t DPHY_DATA_LANE_VOD;                 /* Address Offset: 0x0020 */
         uint32_t RESERVED0024[2];                    /* Address Offset: 0x0024 */
    __IO uint32_t DPHY_CLK_LANE_VOD;                  /* Address Offset: 0x002C */
         uint32_t RESERVED0030[5];                    /* Address Offset: 0x0030 */
    __IO uint32_t DPHY_DATA_SAMPLE_PHASE;             /* Address Offset: 0x0044 */
         uint32_t RESERVED0048[6];                    /* Address Offset: 0x0048 */
    __IO uint32_t DPHY_PRE_EMPHASIS;                  /* Address Offset: 0x0060 */
    __IO uint32_t DPHY_CLK_PRE_EMPHASIS_RANGE;        /* Address Offset: 0x0064 */
    __IO uint32_t DPHY_LANE0_PRE_EMPHASIS_RANGE;      /* Address Offset: 0x0068 */
    __IO uint32_t DPHY_LANE1_PRE_EMPHASIS_RANGE;      /* Address Offset: 0x006C */
         uint32_t RESERVED0070[4];                    /* Address Offset: 0x0070 */
    __IO uint32_t DPHY_DIGITAL_CTRL;                  /* Address Offset: 0x0080 */
    __IO uint32_t DPHY_INVERT_CTRL;                   /* Address Offset: 0x0084 */
         uint32_t RESERVED0088[30];                   /* Address Offset: 0x0088 */
    __IO uint32_t DPHY_CLK_LANE_SWAP;                 /* Address Offset: 0x0100 */
         uint32_t RESERVED0104[4];                    /* Address Offset: 0x0104 */
    __IO uint32_t DPHY_CLK_LANE_TLPX;                 /* Address Offset: 0x0114 */
    __IO uint32_t DPHY_CLK_LANE_THSPREPARE;           /* Address Offset: 0x0118 */
    __IO uint32_t DPHY_CLK_LANE_THSZERO;              /* Address Offset: 0x011C */
    __IO uint32_t DPHY_CLK_LANE_THSTRAIL;             /* Address Offset: 0x0120 */
    __IO uint32_t DPHY_CLK_LANE_THSEXIT;              /* Address Offset: 0x0124 */
    __IO uint32_t DPHY_CLK_LANE_TPOST;                /* Address Offset: 0x0128 */
         uint32_t RESERVED012C;                       /* Address Offset: 0x012C */
    __IO uint32_t DPHY_CLK_LANE_LPDT_EN;              /* Address Offset: 0x0130 */
         uint32_t RESERVED0134;                       /* Address Offset: 0x0134 */
    __IO uint32_t DPHY_CLK_LANE_TPRE;                 /* Address Offset: 0x0138 */
         uint32_t RESERVED013C;                       /* Address Offset: 0x013C */
    __IO uint32_t DPHY_CLK_LANE_Ttago;                /* Address Offset: 0x0140 */
    __IO uint32_t DPHY_CLK_LANE_TTASURE;              /* Address Offset: 0x0144 */
    __IO uint32_t DPHY_CLK_LANE_TTAWAIT;              /* Address Offset: 0x0148 */
         uint32_t RESERVED014C[13];                   /* Address Offset: 0x014C */
    __IO uint32_t DPHY_DATA_LANE0_SWAP;               /* Address Offset: 0x0180 */
         uint32_t RESERVED0184[4];                    /* Address Offset: 0x0184 */
    __IO uint32_t DPHY_DATA_LANE0_THSLPX;             /* Address Offset: 0x0194 */
    __IO uint32_t DPHY_DATA_LANE0_THSPREPARE;         /* Address Offset: 0x0198 */
    __IO uint32_t DPHY_DATA_LANE0_THSZERO;            /* Address Offset: 0x019C */
    __IO uint32_t DPHY_DATA_LANE0_THSTRAIL;           /* Address Offset: 0x01A0 */
    __IO uint32_t DPHY_DATA_LANE0_THSEXIT;            /* Address Offset: 0x01A4 */
    __IO uint32_t DPHY_DATA_LANE0_TPOST;              /* Address Offset: 0x01A8 */
         uint32_t RESERVED01AC;                       /* Address Offset: 0x01AC */
    __IO uint32_t DPHY_DATA0_LPDT_EN;                 /* Address Offset: 0x01B0 */
         uint32_t RESERVED01B4;                       /* Address Offset: 0x01B4 */
    __IO uint32_t DPHY_DATA_LANE0_TPRE;               /* Address Offset: 0x01B8 */
         uint32_t RESERVED01BC;                       /* Address Offset: 0x01BC */
    __IO uint32_t DPHY_DATA_LANE0_TTAGO;              /* Address Offset: 0x01C0 */
    __IO uint32_t DPHY_DATA_LANE0_TTASURE;            /* Address Offset: 0x01C4 */
    __IO uint32_t DPHY_DATA_LANE0_TTAWAIT;            /* Address Offset: 0x01C8 */
         uint32_t RESERVED01CC[13];                   /* Address Offset: 0x01CC */
    __IO uint32_t DPHY_DATA_LANE1_SWAP;               /* Address Offset: 0x0200 */
         uint32_t RESERVED0204[4];                    /* Address Offset: 0x0204 */
    __IO uint32_t DPHY_DATA_LANE1_THSLPX;             /* Address Offset: 0x0214 */
    __IO uint32_t DPHY_DATA_LANE1_THSPREPARE;         /* Address Offset: 0x0218 */
    __IO uint32_t DPHY_DATA_LANE1_THSZERO;            /* Address Offset: 0x021C */
    __IO uint32_t DPHY_DATA_LANE1_THSTRAIL;           /* Address Offset: 0x0220 */
    __IO uint32_t DPHY_DATA_LANE1_THSEXIT;            /* Address Offset: 0x0224 */
    __IO uint32_t DPHY_DATA_LANE1_TPOST;              /* Address Offset: 0x0228 */
         uint32_t RESERVED022C;                       /* Address Offset: 0x022C */
    __IO uint32_t DPHY_DATA1_LPDT_EN;                 /* Address Offset: 0x0230 */
         uint32_t RESERVED0234;                       /* Address Offset: 0x0234 */
    __IO uint32_t DPHY_DATA_LANE1_TPRE;               /* Address Offset: 0x0238 */
         uint32_t RESERVED023C;                       /* Address Offset: 0x023C */
    __IO uint32_t DPHY_DATA_LANE1_TTAGO;              /* Address Offset: 0x0240 */
    __IO uint32_t DPHY_DATA_LANE1_TTASURE;            /* Address Offset: 0x0244 */
    __IO uint32_t DPHY_DATA_LANE1_TTAWAIT;            /* Address Offset: 0x0248 */
         uint32_t RESERVED024C[77];                   /* Address Offset: 0x024C */
    __IO uint32_t TTL_MODE_CTRL[12];                  /* Address Offset: 0x0380 */
    __IO uint32_t TTL_MODE_CTRL5;                     /* Address Offset: 0x03B0 */
    __IO uint32_t TTL_MODE_CTRL6;                     /* Address Offset: 0x03B4 */
};
/* CRYPTO Register Structure Define */
struct CRYPTO_REG {
    __IO uint32_t CLK_CTL;                            /* Address Offset: 0x0000 */
    __IO uint32_t RST_CTL;                            /* Address Offset: 0x0004 */
    __IO uint32_t DMA_INT_EN;                         /* Address Offset: 0x0008 */
    __IO uint32_t DMA_INT_ST;                         /* Address Offset: 0x000C */
    __IO uint32_t DMA_CTL;                            /* Address Offset: 0x0010 */
    __IO uint32_t DMA_LLI_ADDR;                       /* Address Offset: 0x0014 */
    __I  uint32_t DMA_ST;                             /* Address Offset: 0x0018 */
    __I  uint32_t DMA_STATE;                          /* Address Offset: 0x001C */
    __I  uint32_t DMA_LLI_RADDR;                      /* Address Offset: 0x0020 */
    __I  uint32_t DMA_SRC_RADDR;                      /* Address Offset: 0x0024 */
    __I  uint32_t DMA_DST_WADDR;                      /* Address Offset: 0x0028 */
    __I  uint32_t DMA_ITEM_ID;                        /* Address Offset: 0x002C */
         uint32_t RESERVED0030[4];                    /* Address Offset: 0x0030 */
    __IO uint32_t FIFO_CTL;                           /* Address Offset: 0x0040 */
    __IO uint32_t BC_CTL;                             /* Address Offset: 0x0044 */
    __IO uint32_t HASH_CTL;                           /* Address Offset: 0x0048 */
    __I  uint32_t CIPHER_ST;                          /* Address Offset: 0x004C */
    __I  uint32_t CIPHER_STATE;                       /* Address Offset: 0x0050 */
         uint32_t RESERVED0054[3];                    /* Address Offset: 0x0054 */
    __IO uint32_t BC_MID_IV[6];                       /* Address Offset: 0x0060 */
         uint32_t RESERVED0078[34];                   /* Address Offset: 0x0078 */
    __IO uint32_t CHN_IV[1][4];                       /* Address Offset: 0x0100 */
         uint32_t RESERVED0110[28];                   /* Address Offset: 0x0110 */
    __O  uint32_t CHN_KEY[8][4];                      /* Address Offset: 0x0180 */
         uint32_t RESERVED0200[32];                   /* Address Offset: 0x0200 */
    __IO uint32_t CHN_PC_LEN[1][2];                   /* Address Offset: 0x0280 */
         uint32_t RESERVED0288[14];                   /* Address Offset: 0x0288 */
    __IO uint32_t CHN_AAD_LEN[1][2];                  /* Address Offset: 0x02C0 */
         uint32_t RESERVED02C8[14];                   /* Address Offset: 0x02C8 */
    __IO uint32_t CHN_IV_LEN[1][1];                   /* Address Offset: 0x0300 */
         uint32_t RESERVED0304[7];                    /* Address Offset: 0x0304 */
    __I  uint32_t CHN_TAG[1][4];                      /* Address Offset: 0x0320 */
         uint32_t RESERVED0330[28];                   /* Address Offset: 0x0330 */
    __I  uint32_t HASH_DOUT[8];                       /* Address Offset: 0x03A0 */
         uint32_t RESERVED03C0[8];                    /* Address Offset: 0x03C0 */
    __IO uint32_t TAG_VALID;                          /* Address Offset: 0x03E0 */
    __IO uint32_t HASH_VALID;                         /* Address Offset: 0x03E4 */
    __IO uint32_t MID_VALID;                          /* Address Offset: 0x03E8 */
         uint32_t RESERVED03EC[37];                   /* Address Offset: 0x03EC */
    __IO uint32_t RAM_CTL;                            /* Address Offset: 0x0480 */
    __I  uint32_t RAM_ST;                             /* Address Offset: 0x0484 */
         uint32_t RESERVED0488[6];                    /* Address Offset: 0x0488 */
    __IO uint32_t DEBUG_CTL;                          /* Address Offset: 0x04A0 */
    __I  uint32_t DEBUG_ST;                           /* Address Offset: 0x04A4 */
    __I  uint32_t DEBUG_MONITOR;                      /* Address Offset: 0x04A8 */
         uint32_t RESERVED04AC[85];                   /* Address Offset: 0x04AC */
    __I  uint32_t CRYPTO_KL_KEY_STATUS;               /* Address Offset: 0x0600 */
         uint32_t RESERVED0604[3];                    /* Address Offset: 0x0604 */
    __IO uint32_t CRYPTO_KEY_SEL;                     /* Address Offset: 0x0610 */
         uint32_t RESERVED0614;                       /* Address Offset: 0x0614 */
    __I  uint32_t CRYPTO_LOCKSTEP;                    /* Address Offset: 0x0618 */
    __IO uint32_t CRYPTO_LOCKSTEP_EN;                 /* Address Offset: 0x061C */
         uint32_t RESERVED0620[4];                    /* Address Offset: 0x0620 */
    __IO uint32_t MID_VALID_SWITCH;                   /* Address Offset: 0x0630 */
         uint32_t RESERVED0634[19];                   /* Address Offset: 0x0634 */
    __I  uint32_t AES_VERSION;                        /* Address Offset: 0x0680 */
    __I  uint32_t DES_VERSION;                        /* Address Offset: 0x0684 */
    __I  uint32_t SM4_VERSION;                        /* Address Offset: 0x0688 */
    __I  uint32_t HASH_VERSION;                       /* Address Offset: 0x068C */
    __I  uint32_t HMAC_VERSION;                       /* Address Offset: 0x0690 */
         uint32_t RESERVED0694;                       /* Address Offset: 0x0694 */
    __I  uint32_t PKA_VERSION;                        /* Address Offset: 0x0698 */
    __I  uint32_t EXTRA_FEATURE;                      /* Address Offset: 0x069C */
         uint32_t RESERVED06A0[20];                   /* Address Offset: 0x06A0 */
    __I  uint32_t CRYPTO_VERSION;                     /* Address Offset: 0x06F0 */
         uint32_t RESERVED06F4[3];                    /* Address Offset: 0x06F4 */
    __IO uint32_t HASH_MID_DATA[26];                  /* Address Offset: 0x0700 */
         uint32_t RESERVED0768[38];                   /* Address Offset: 0x0768 */
    __IO uint32_t PKA_MEM_MAP[32];                    /* Address Offset: 0x0800 */
    __O  uint32_t PKA_OPCODE;                         /* Address Offset: 0x0880 */
    __IO uint32_t N_NP_T0_T1_ADDR;                    /* Address Offset: 0x0884 */
    __I  uint32_t PKA_STATUS;                         /* Address Offset: 0x0888 */
    __O  uint32_t PKA_SW_RESET;                       /* Address Offset: 0x088C */
    __IO uint32_t PKA_L[8];                           /* Address Offset: 0x0890 */
    __I  uint32_t PKA_PIPE_RDY;                       /* Address Offset: 0x08B0 */
    __I  uint32_t PKA_DONE;                           /* Address Offset: 0x08B4 */
    __IO uint32_t PKA_MON_SELECT;                     /* Address Offset: 0x08B8 */
    __IO uint32_t PKA_DEBUG_REG_EN;                   /* Address Offset: 0x08BC */
    __IO uint32_t DEBUG_CNT_ADDR;                     /* Address Offset: 0x08C0 */
    __O  uint32_t DEBUG_EXT_ADDR;                     /* Address Offset: 0x08C4 */
    __I  uint32_t PKA_DEBUG_HALT;                     /* Address Offset: 0x08C8 */
         uint32_t RESERVED08CC;                       /* Address Offset: 0x08CC */
    __I  uint32_t PKA_MON_READ;                       /* Address Offset: 0x08D0 */
    __IO uint32_t PKA_INT_ENA;                        /* Address Offset: 0x08D4 */
    __IO uint32_t PKA_INT_ST;                         /* Address Offset: 0x08D8 */
         uint32_t RESERVED08DC[457];                  /* Address Offset: 0x08DC */
    __IO uint32_t SRAM_ADDR;                          /* Address Offset: 0x1000 */
};
/* TRNG Register Structure Define */
struct TRNG_REG {
    __IO uint32_t CFG;                                /* Address Offset: 0x0000 */
         uint32_t RESERVED0004;                       /* Address Offset: 0x0004 */
    __IO uint32_t NONCE_LEN;                          /* Address Offset: 0x0008 */
    __IO uint32_t ADDITION_LEN;                       /* Address Offset: 0x000C */
    __O  uint32_t CTRL;                               /* Address Offset: 0x0010 */
    __IO uint32_t STATE;                              /* Address Offset: 0x0014 */
    __IO uint32_t INT_EN;                             /* Address Offset: 0x0018 */
    __IO uint32_t TEST_CNT;                           /* Address Offset: 0x001C */
    __IO uint32_t RESEED_CNT;                         /* Address Offset: 0x0020 */
    __IO uint32_t UPDATE_CNT;                         /* Address Offset: 0x0024 */
    __IO uint32_t ALLAN_ACC_NUM;                      /* Address Offset: 0x0028 */
    __IO uint32_t ALLAN_LIMIT_LOW;                    /* Address Offset: 0x002C */
    __IO uint32_t ALLAN_LIMIT_HIGH;                   /* Address Offset: 0x0030 */
    __IO uint32_t ALLAN_AVAR_RESULT;                  /* Address Offset: 0x0034 */
    __IO uint32_t AUTO_CLK_GATE;                      /* Address Offset: 0x0038 */
         uint32_t RESERVED003C[2];                    /* Address Offset: 0x003C */
    __I  uint32_t VERSION;                            /* Address Offset: 0x0044 */
         uint32_t RESERVED0048[2];                    /* Address Offset: 0x0048 */
    __I  uint32_t TRNG_DATA[8];                       /* Address Offset: 0x0050 */
    __I  uint32_t DRNG_DATA[8];                       /* Address Offset: 0x0070 */
    __IO uint32_t WORK_CLK_EN;                        /* Address Offset: 0x0090 */
    __IO uint32_t WORK_CLK_FLAG;                      /* Address Offset: 0x0094 */
    __IO uint32_t WORK_CLK_NUM_LIMIT;                 /* Address Offset: 0x0098 */
    __IO uint32_t SOFT_RING_EN0;                      /* Address Offset: 0x009C */
         uint32_t RESERVED00A0;                       /* Address Offset: 0x00A0 */
    __IO uint32_t SOFT_RING_EN2;                      /* Address Offset: 0x00A4 */
         uint32_t RESERVED00A8;                       /* Address Offset: 0x00A8 */
    __IO uint32_t STR1_0_INIT;                        /* Address Offset: 0x00AC */
         uint32_t RESERVED00B0[2];                    /* Address Offset: 0x00B0 */
    __IO uint32_t ENTROPY_EN_CTL;                     /* Address Offset: 0x00B8 */
    __IO uint32_t ENTROPY_MASK_CTL;                   /* Address Offset: 0x00BC */
    __IO uint32_t ENTROPY_POST_CTL;                   /* Address Offset: 0x00C0 */
    __IO uint32_t ENTROPY_CK_CTL;                     /* Address Offset: 0x00C4 */
    __IO uint32_t ENTROPY_FB_LIMIT0;                  /* Address Offset: 0x00C8 */
    __IO uint32_t ENTROPY_FB_LIMIT1;                  /* Address Offset: 0x00CC */
    __IO uint32_t ENTROPY_FI_BIT_NUM;                 /* Address Offset: 0x00D0 */
    __IO uint32_t ENTROPY_FI_LIMIT;                   /* Address Offset: 0x00D4 */
    __IO uint32_t ENTROPY_BI_CTL;                     /* Address Offset: 0x00D8 */
    __IO uint32_t ENTROPY_BI_LIMIT_LOW0;              /* Address Offset: 0x00DC */
    __IO uint32_t ENTROPY_BI_LIMIT_LOW1;              /* Address Offset: 0x00E0 */
    __IO uint32_t ENTROPY_BI_LIMITHIGH0;              /* Address Offset: 0x00E4 */
    __IO uint32_t ENTROPY_BI_LIMIT_HIGH1;             /* Address Offset: 0x00E8 */
    __IO uint32_t TRAND_CK_CTL;                       /* Address Offset: 0x00EC */
    __IO uint32_t TRAND_FB_LIMIT0;                    /* Address Offset: 0x00F0 */
    __IO uint32_t TRAND_FB_LIMIT1;                    /* Address Offset: 0x00F4 */
    __IO uint32_t TRAND_FI_BIT_NUM;                   /* Address Offset: 0x00F8 */
    __IO uint32_t TRAND_FI_LIMIT;                     /* Address Offset: 0x00FC */
    __IO uint32_t TRAND_BI_CTL;                       /* Address Offset: 0x0100 */
    __IO uint32_t TRAND_BI_LIMIT_LOW0;                /* Address Offset: 0x0104 */
    __IO uint32_t TRAND_BI_LIMIT_LOW1;                /* Address Offset: 0x0108 */
    __IO uint32_t TRAND_BI_LIMIT_HIGH0;               /* Address Offset: 0x010C */
    __IO uint32_t TRAND_BI_LIMIT_HIGH1;               /* Address Offset: 0x0110 */
    __IO uint32_t BI_PASS_AUTO;                       /* Address Offset: 0x0114 */
    __IO uint32_t SOFT_BI_RESULT_VLD;                 /* Address Offset: 0x0118 */
    __IO uint32_t SOFT_BI_RESULT_PASS;                /* Address Offset: 0x011C */
    __IO uint32_t ENTROPY_CK_RESULT_VLD;              /* Address Offset: 0x0120 */
    __IO uint32_t ENTROPY_FB_CK_RESULT;               /* Address Offset: 0x0124 */
    __IO uint32_t ENTROPY_FI_CK_RESULT;               /* Address Offset: 0x0128 */
    __IO uint32_t ENTROPY_BI_CK_RESULT0;              /* Address Offset: 0x012C */
    __IO uint32_t ENTROPY_BI_CK_RESULT1;              /* Address Offset: 0x0130 */
    __IO uint32_t TRAND_CK_RESULT_VLD;                /* Address Offset: 0x0134 */
    __IO uint32_t TRAND_FB_CK_RESULT;                 /* Address Offset: 0x0138 */
    __IO uint32_t TRAND_FI_CK_RESULT;                 /* Address Offset: 0x013C */
    __IO uint32_t TRAND_BI_CK_RESULT0;                /* Address Offset: 0x0140 */
    __IO uint32_t TRAND_BI_CK_RESULT1;                /* Address Offset: 0x0144 */
         uint32_t RESERVED0148[46];                   /* Address Offset: 0x0148 */
    __O  uint32_t NONCE[12];                          /* Address Offset: 0x0200 */
         uint32_t RESERVED0230[52];                   /* Address Offset: 0x0230 */
    __O  uint32_t ADDITION[12];                       /* Address Offset: 0x0300 */
};
/* GRF_CORE Register Structure Define */
struct GRF_CORE_REG {
    __IO uint32_t PVTPLL_CON0_L;                      /* Address Offset: 0x0000 */
    __IO uint32_t PVTPLL_CON0_H;                      /* Address Offset: 0x0004 */
    __IO uint32_t PVTPLL_CON1;                        /* Address Offset: 0x0008 */
    __IO uint32_t PVTPLL_CON2;                        /* Address Offset: 0x000C */
    __IO uint32_t PVTPLL_CON3;                        /* Address Offset: 0x0010 */
    __IO uint32_t PVTPLL_OSC_CNT;                     /* Address Offset: 0x0014 */
    __IO uint32_t PVTPLL_OSC_CNT_AVG;                 /* Address Offset: 0x0018 */
         uint32_t RESERVED001C[17];                   /* Address Offset: 0x001C */
    __IO uint32_t CPU_STATUS;                         /* Address Offset: 0x0060 */
    __IO uint32_t CPU_CON0;                           /* Address Offset: 0x0064 */
    __IO uint32_t CPU_CON1;                           /* Address Offset: 0x0068 */
    __IO uint32_t CPU_MEM_CON0;                       /* Address Offset: 0x006C */
         uint32_t RESERVED0070[5];                    /* Address Offset: 0x0070 */
    __IO uint32_t SOC_CON0;                           /* Address Offset: 0x0084 */
    __IO uint32_t SOC_CON1;                           /* Address Offset: 0x0088 */
    __IO uint32_t SOC_CON2;                           /* Address Offset: 0x008C */
    __IO uint32_t SOC_CON3;                           /* Address Offset: 0x0090 */
    __IO uint32_t SOC_CON4;                           /* Address Offset: 0x0094 */
    __IO uint32_t SOC_CON5;                           /* Address Offset: 0x0098 */
};
/* FLEXBUS Register Structure Define */
struct FLEXBUS_REG {
    __IO uint32_t ENR;                                /* Address Offset: 0x0000 */
    __IO uint32_t FREE_SCLK;                          /* Address Offset: 0x0004 */
    __IO uint32_t CSN_CFG;                            /* Address Offset: 0x0008 */
    __IO uint32_t COM_CTL;                            /* Address Offset: 0x000C */
    __IO uint32_t REMAP;                              /* Address Offset: 0x0010 */
    __IO uint32_t STOP;                               /* Address Offset: 0x0014 */
    __IO uint32_t SLAVE_MODE;                         /* Address Offset: 0x0018 */
    __IO uint32_t DVP_POL;                            /* Address Offset: 0x001C */
    __IO uint32_t DVP_CROP_SIZE;                      /* Address Offset: 0x0020 */
    __IO uint32_t DVP_CROP_START;                     /* Address Offset: 0x0024 */
    __IO uint32_t DVP_ORDER;                          /* Address Offset: 0x0028 */
    __IO uint32_t DVP_YUV2RGB;                        /* Address Offset: 0x002C */
         uint32_t RESERVED0030[4];                    /* Address Offset: 0x0030 */
    __IO uint32_t TX_CTL;                             /* Address Offset: 0x0040 */
    __IO uint32_t TX_NUM;                             /* Address Offset: 0x0044 */
    __IO uint32_t TXWAT_START;                        /* Address Offset: 0x0048 */
    __I  uint32_t TXFIFO_DNUM;                        /* Address Offset: 0x004C */
    __IO uint32_t TX_WIDTH;                           /* Address Offset: 0x0050 */
    __IO uint32_t TX_CSN_DUMMY;                       /* Address Offset: 0x0054 */
    __IO uint32_t TX_CMD_LEN;                         /* Address Offset: 0x0058 */
    __IO uint32_t TX_CMD[2];                          /* Address Offset: 0x005C */
         uint32_t RESERVED0064[7];                    /* Address Offset: 0x0064 */
    __IO uint32_t RX_CTL;                             /* Address Offset: 0x0080 */
    __IO uint32_t RX_NUM;                             /* Address Offset: 0x0084 */
    __I  uint32_t RXFIFO_DNUM;                        /* Address Offset: 0x0088 */
    __IO uint32_t DLL_EN;                             /* Address Offset: 0x008C */
    __IO uint32_t DLL_NUM;                            /* Address Offset: 0x0090 */
    __IO uint32_t RXCLK_DUMMY;                        /* Address Offset: 0x0094 */
    __IO uint32_t RXCLK_CAP_CNT;                      /* Address Offset: 0x0098 */
         uint32_t RESERVED009C[25];                   /* Address Offset: 0x009C */
    __IO uint32_t DMA_RD_OUTSTD;                      /* Address Offset: 0x0100 */
    __IO uint32_t DMA_WR_OUTSTD;                      /* Address Offset: 0x0104 */
    __IO uint32_t DMA_SRC_ADDR0;                      /* Address Offset: 0x0108 */
    __IO uint32_t DMA_DST_ADDR0;                      /* Address Offset: 0x010C */
    __IO uint32_t DMA_SRC_ADDR1;                      /* Address Offset: 0x0110 */
    __IO uint32_t DMA_DST_ADDR1;                      /* Address Offset: 0x0114 */
    __IO uint32_t DMA_SRC_LEN0;                       /* Address Offset: 0x0118 */
    __IO uint32_t DMA_DST_LEN0;                       /* Address Offset: 0x011C */
    __IO uint32_t DMA_SRC_LEN1;                       /* Address Offset: 0x0120 */
    __IO uint32_t DMA_DST_LEN1;                       /* Address Offset: 0x0124 */
    __IO uint32_t DMA_WAT_INT;                        /* Address Offset: 0x0128 */
    __IO uint32_t DMA_TIMEOUT;                        /* Address Offset: 0x012C */
    __IO uint32_t DMA_RD_LEN;                         /* Address Offset: 0x0130 */
         uint32_t RESERVED0134[11];                   /* Address Offset: 0x0134 */
    __I  uint32_t STATUS;                             /* Address Offset: 0x0160 */
    __IO uint32_t IMR;                                /* Address Offset: 0x0164 */
    __I  uint32_t RISR;                               /* Address Offset: 0x0168 */
    __I  uint32_t ISR;                                /* Address Offset: 0x016C */
    __IO uint32_t ICR;                                /* Address Offset: 0x0170 */
         uint32_t RESERVED0174[31];                   /* Address Offset: 0x0174 */
    __I  uint32_t REVISION;                           /* Address Offset: 0x01F0 */
};
/* LBC_SLAVE_CSR Register Structure Define */
struct LBC_SLAVE_CSR_REG {
    __IO uint32_t APP_CON0;                           /* Address Offset: 0x0000 */
    __IO uint32_t APP_CON1;                           /* Address Offset: 0x0004 */
    __IO uint32_t APP_CON2;                           /* Address Offset: 0x0008 */
    __IO uint32_t APP_CON3;                           /* Address Offset: 0x000C */
    __IO uint32_t APP_CON4;                           /* Address Offset: 0x0010 */
    __IO uint32_t APP_CON5;                           /* Address Offset: 0x0014 */
    __IO uint32_t APP_CON6;                           /* Address Offset: 0x0018 */
    __IO uint32_t APP_CON7;                           /* Address Offset: 0x001C */
    __IO uint32_t APP_CON8;                           /* Address Offset: 0x0020 */
    __IO uint32_t APP_CON9;                           /* Address Offset: 0x0024 */
    __IO uint32_t APP_CON10;                          /* Address Offset: 0x0028 */
    __IO uint32_t APP_CON11;                          /* Address Offset: 0x002C */
    __IO uint32_t APP_CON12;                          /* Address Offset: 0x0030 */
    __IO uint32_t APP_CON13;                          /* Address Offset: 0x0034 */
    __IO uint32_t APP_CON14;                          /* Address Offset: 0x0038 */
    __IO uint32_t APP_CON15;                          /* Address Offset: 0x003C */
         uint32_t RESERVED0040[16];                   /* Address Offset: 0x0040 */
    __IO uint32_t APP_H2S_INT_STA;                    /* Address Offset: 0x0080 */
    __IO uint32_t APP_H2S_INT_STA_EN;                 /* Address Offset: 0x0084 */
    __IO uint32_t APP_H2S_INT_STA_SIG_EN;             /* Address Offset: 0x0088 */
         uint32_t RESERVED008C[29];                   /* Address Offset: 0x008C */
    __I  uint32_t LBC_CON0;                           /* Address Offset: 0x0100 */
    __I  uint32_t LBC_CON1;                           /* Address Offset: 0x0104 */
    __I  uint32_t LBC_CON2;                           /* Address Offset: 0x0108 */
    __I  uint32_t LBC_CON3;                           /* Address Offset: 0x010C */
    __I  uint32_t LBC_CON4;                           /* Address Offset: 0x0110 */
    __I  uint32_t LBC_CON5;                           /* Address Offset: 0x0114 */
    __I  uint32_t LBC_CON6;                           /* Address Offset: 0x0118 */
    __I  uint32_t LBC_CON7;                           /* Address Offset: 0x011C */
    __I  uint32_t LBC_CON8;                           /* Address Offset: 0x0120 */
    __I  uint32_t LBC_CON9;                           /* Address Offset: 0x0124 */
    __I  uint32_t LBC_CON10;                          /* Address Offset: 0x0128 */
    __I  uint32_t LBC_CON11;                          /* Address Offset: 0x012C */
    __I  uint32_t LBC_CON12;                          /* Address Offset: 0x0130 */
    __I  uint32_t LBC_CON13;                          /* Address Offset: 0x0134 */
    __I  uint32_t LBC_CON14;                          /* Address Offset: 0x0138 */
    __I  uint32_t LBC_CON15;                          /* Address Offset: 0x013C */
         uint32_t RESERVED0140[16];                   /* Address Offset: 0x0140 */
    __IO uint32_t LBC_S2H_INT_STA;                    /* Address Offset: 0x0180 */
    __IO uint32_t LBC_S2H_INT_STA_EN;                 /* Address Offset: 0x0184 */
    __IO uint32_t LBC_S2H_INT_STA_SIG_EN;             /* Address Offset: 0x0188 */
         uint32_t RESERVED018C[413];                  /* Address Offset: 0x018C */
    __IO uint32_t AXI_WR_ADDR_BASE;                   /* Address Offset: 0x0800 */
    __IO uint32_t AXI_RD_ADDR_BASE;                   /* Address Offset: 0x0804 */
         uint32_t RESERVED0808[62];                   /* Address Offset: 0x0808 */
    __I  uint32_t DBG_STA_0;                          /* Address Offset: 0x0900 */
    __I  uint32_t DBG_STA_1;                          /* Address Offset: 0x0904 */
    __I  uint32_t DBG_STA_2;                          /* Address Offset: 0x0908 */
         uint32_t RESERVED090C[61];                   /* Address Offset: 0x090C */
    __I  uint32_t VER;                                /* Address Offset: 0x0A00 */
};
/* DSMC Register Structure Define */
struct DSMC_REG {
    __I  uint32_t VER;                                /* Address Offset: 0x0000 */
         uint32_t RESERVED0004;                       /* Address Offset: 0x0004 */
    __I  uint32_t CSR;                                /* Address Offset: 0x0008 */
         uint32_t RESERVED000C;                       /* Address Offset: 0x000C */
    __IO uint32_t TAR;                                /* Address Offset: 0x0010 */
    __IO uint32_t AXICTL;                             /* Address Offset: 0x0014 */
         uint32_t RESERVED0018[2];                    /* Address Offset: 0x0018 */
    __IO uint32_t CLK_MD;                             /* Address Offset: 0x0020 */
         uint32_t RESERVED0024;                       /* Address Offset: 0x0024 */
    __IO uint32_t DLL_DBG_CTRL;                       /* Address Offset: 0x0028 */
         uint32_t RESERVED002C;                       /* Address Offset: 0x002C */
    __IO uint32_t DEV_SIZE;                           /* Address Offset: 0x0030 */
         uint32_t RESERVED0034[3];                    /* Address Offset: 0x0034 */
    __IO uint32_t INT_EN;                             /* Address Offset: 0x0040 */
    __IO uint32_t INT_STATUS;                         /* Address Offset: 0x0044 */
    __IO uint32_t INT_MASK;                           /* Address Offset: 0x0048 */
         uint32_t RESERVED004C;                       /* Address Offset: 0x004C */
    __IO uint32_t DMA_EN;                             /* Address Offset: 0x0050 */
    __IO uint32_t DMA_REQ_NUM0;                       /* Address Offset: 0x0054 */
    __IO uint32_t DMA_REQ_NUM1;                       /* Address Offset: 0x0058 */
    __IO uint32_t DMA_MUX;                            /* Address Offset: 0x005C */
         uint32_t RESERVED0060[1000];                 /* Address Offset: 0x0060 */
    __IO uint32_t VDMC0;                              /* Address Offset: 0x1000 */
         uint32_t RESERVED1004[3];                    /* Address Offset: 0x1004 */
    __IO uint32_t MCR0;                               /* Address Offset: 0x1010 */
    __IO uint32_t MTR0;                               /* Address Offset: 0x1014 */
    __IO uint32_t WAIT_TIME0;                         /* Address Offset: 0x1018 */
         uint32_t RESERVED101C;                       /* Address Offset: 0x101C */
    __IO uint32_t BDRTCR0;                            /* Address Offset: 0x1020 */
    __IO uint32_t MRGTCR0;                            /* Address Offset: 0x1024 */
    __IO uint32_t WRAP2INCR0;                         /* Address Offset: 0x1028 */
         uint32_t RESERVED102C;                       /* Address Offset: 0x102C */
    __IO uint32_t RDS_DLL0_CTL0;                      /* Address Offset: 0x1030 */
    __IO uint32_t RDS_DLL1_CTL0;                      /* Address Offset: 0x1034 */
         uint32_t RESERVED1038[2];                    /* Address Offset: 0x1038 */
    __IO uint32_t SLV_RGN_DIV0;                       /* Address Offset: 0x1040 */
         uint32_t RESERVED1044[3];                    /* Address Offset: 0x1044 */
    __IO uint32_t RGN0_ATTR0;                         /* Address Offset: 0x1050 */
    __IO uint32_t RGN1_ATTR0;                         /* Address Offset: 0x1054 */
    __IO uint32_t RGN2_ATTR0;                         /* Address Offset: 0x1058 */
    __IO uint32_t RGN3_ATTR0;                         /* Address Offset: 0x105C */
         uint32_t RESERVED1060[1000];                 /* Address Offset: 0x1060 */
    __IO uint32_t VDMC1;                              /* Address Offset: 0x2000 */
         uint32_t RESERVED2004[3];                    /* Address Offset: 0x2004 */
    __IO uint32_t MCR1;                               /* Address Offset: 0x2010 */
    __IO uint32_t MTR1;                               /* Address Offset: 0x2014 */
    __IO uint32_t WAIT_TIME1;                         /* Address Offset: 0x2018 */
         uint32_t RESERVED201C;                       /* Address Offset: 0x201C */
    __IO uint32_t BDRTCR1;                            /* Address Offset: 0x2020 */
    __IO uint32_t MRGTCR1;                            /* Address Offset: 0x2024 */
    __IO uint32_t WRAP2INCR1;                         /* Address Offset: 0x2028 */
         uint32_t RESERVED202C;                       /* Address Offset: 0x202C */
    __IO uint32_t RDS_DLL0_CTL1;                      /* Address Offset: 0x2030 */
    __IO uint32_t RDS_DLL1_CTL1;                      /* Address Offset: 0x2034 */
         uint32_t RESERVED2038[2];                    /* Address Offset: 0x2038 */
    __IO uint32_t SLV_RGN_DIV1;                       /* Address Offset: 0x2040 */
         uint32_t RESERVED2044[3];                    /* Address Offset: 0x2044 */
    __IO uint32_t RGN0_ATTR1;                         /* Address Offset: 0x2050 */
    __IO uint32_t RGN1_ATTR1;                         /* Address Offset: 0x2054 */
    __IO uint32_t RGN2_ATTR1;                         /* Address Offset: 0x2058 */
    __IO uint32_t RGN3_ATTR1;                         /* Address Offset: 0x205C */
         uint32_t RESERVED2060[1000];                 /* Address Offset: 0x2060 */
    __IO uint32_t VDMC2;                              /* Address Offset: 0x3000 */
         uint32_t RESERVED3004[3];                    /* Address Offset: 0x3004 */
    __IO uint32_t MCR2;                               /* Address Offset: 0x3010 */
    __IO uint32_t MTR2;                               /* Address Offset: 0x3014 */
    __IO uint32_t WAIT_TIME2;                         /* Address Offset: 0x3018 */
         uint32_t RESERVED301C;                       /* Address Offset: 0x301C */
    __IO uint32_t BDRTCR2;                            /* Address Offset: 0x3020 */
    __IO uint32_t MRGTCR2;                            /* Address Offset: 0x3024 */
    __IO uint32_t WRAP2INCR2;                         /* Address Offset: 0x3028 */
         uint32_t RESERVED302C;                       /* Address Offset: 0x302C */
    __IO uint32_t RDS_DLL0_CTL2;                      /* Address Offset: 0x3030 */
    __IO uint32_t RDS_DLL1_CTL2;                      /* Address Offset: 0x3034 */
         uint32_t RESERVED3038[2];                    /* Address Offset: 0x3038 */
    __IO uint32_t SLV_RGN_DIV2;                       /* Address Offset: 0x3040 */
         uint32_t RESERVED3044[3];                    /* Address Offset: 0x3044 */
    __IO uint32_t RGN0_ATTR2;                         /* Address Offset: 0x3050 */
    __IO uint32_t RGN1_ATTR2;                         /* Address Offset: 0x3054 */
    __IO uint32_t RGN2_ATTR2;                         /* Address Offset: 0x3058 */
    __IO uint32_t RGN3_ATTR2;                         /* Address Offset: 0x305C */
         uint32_t RESERVED3060[1000];                 /* Address Offset: 0x3060 */
    __IO uint32_t VDMC3;                              /* Address Offset: 0x4000 */
         uint32_t RESERVED4004[3];                    /* Address Offset: 0x4004 */
    __IO uint32_t MCR3;                               /* Address Offset: 0x4010 */
    __IO uint32_t MTR3;                               /* Address Offset: 0x4014 */
    __IO uint32_t WAIT_TIME3;                         /* Address Offset: 0x4018 */
         uint32_t RESERVED401C;                       /* Address Offset: 0x401C */
    __IO uint32_t BDRTCR3;                            /* Address Offset: 0x4020 */
    __IO uint32_t MRGTCR3;                            /* Address Offset: 0x4024 */
    __IO uint32_t WRAP2INCR3;                         /* Address Offset: 0x4028 */
         uint32_t RESERVED402C;                       /* Address Offset: 0x402C */
    __IO uint32_t RDS_DLL0_CTL3;                      /* Address Offset: 0x4030 */
    __IO uint32_t RDS_DLL1_CTL3;                      /* Address Offset: 0x4034 */
         uint32_t RESERVED4038[2];                    /* Address Offset: 0x4038 */
    __IO uint32_t SLV_RGN_DIV3;                       /* Address Offset: 0x4040 */
         uint32_t RESERVED4044[3];                    /* Address Offset: 0x4044 */
    __IO uint32_t RGN0_ATTR3;                         /* Address Offset: 0x4050 */
    __IO uint32_t RGN1_ATTR3;                         /* Address Offset: 0x4054 */
    __IO uint32_t RGN2_ATTR3;                         /* Address Offset: 0x4058 */
    __IO uint32_t RGN3_ATTR3;                         /* Address Offset: 0x405C */
};
/* DSMC ChipSelect Register Structure Define */
struct DSMC_CS_REG {
    __IO uint32_t VDMC;                               /* Address Offset: 0x0000 */
         uint32_t RESERVED1004[3];                    /* Address Offset: 0x0004 */
    __IO uint32_t MCR;                                /* Address Offset: 0x0010 */
    __IO uint32_t MTR;                                /* Address Offset: 0x0014 */
    __IO uint32_t WAIT_TIME;                          /* Address Offset: 0x0018 */
         uint32_t RESERVED101C;                       /* Address Offset: 0x001C */
    __IO uint32_t BDRTCR;                             /* Address Offset: 0x0020 */
    __IO uint32_t MRGTCR;                             /* Address Offset: 0x0024 */
    __IO uint32_t WRAP2INCR;                          /* Address Offset: 0x0028 */
         uint32_t RESERVED102C;                       /* Address Offset: 0x002C */
    __IO uint32_t RDS_DLL0_CTL;                       /* Address Offset: 0x0030 */
    __IO uint32_t RDS_DLL1_CTL;                       /* Address Offset: 0x0034 */
         uint32_t RESERVED1038[2];                    /* Address Offset: 0x0038 */
    __IO uint32_t SLV_RGN_DIV;                        /* Address Offset: 0x0040 */
         uint32_t RESERVED1044[3];                    /* Address Offset: 0x0044 */
    __IO uint32_t RGN0_ATTR;                          /* Address Offset: 0x0050 */
    __IO uint32_t RGN1_ATTR;                          /* Address Offset: 0x0054 */
    __IO uint32_t RGN2_ATTR;                          /* Address Offset: 0x0058 */
    __IO uint32_t RGN3_ATTR;                          /* Address Offset: 0x005C */
};
/* RM_IO Register Structure Define */
struct RM_IO_REG {
         uint32_t RESERVED0000[32];                   /* Address Offset: 0x0000 */
    __IO uint32_t rm_gpio0a0_sel;                     /* Address Offset: 0x0080 */
    __IO uint32_t rm_gpio0a1_sel;                     /* Address Offset: 0x0084 */
    __IO uint32_t rm_gpio0a2_sel;                     /* Address Offset: 0x0088 */
    __IO uint32_t rm_gpio0a3_sel;                     /* Address Offset: 0x008C */
    __IO uint32_t rm_gpio0a4_sel;                     /* Address Offset: 0x0090 */
    __IO uint32_t rm_gpio0a5_sel;                     /* Address Offset: 0x0094 */
    __IO uint32_t rm_gpio0a6_sel;                     /* Address Offset: 0x0098 */
    __IO uint32_t rm_gpio0a7_sel;                     /* Address Offset: 0x009C */
    __IO uint32_t rm_gpio0b0_sel;                     /* Address Offset: 0x00A0 */
    __IO uint32_t rm_gpio0b1_sel;                     /* Address Offset: 0x00A4 */
    __IO uint32_t rm_gpio0b2_sel;                     /* Address Offset: 0x00A8 */
    __IO uint32_t rm_gpio0b3_sel;                     /* Address Offset: 0x00AC */
    __IO uint32_t rm_gpio0b4_sel;                     /* Address Offset: 0x00B0 */
    __IO uint32_t rm_gpio0b5_sel;                     /* Address Offset: 0x00B4 */
    __IO uint32_t rm_gpio0b6_sel;                     /* Address Offset: 0x00B8 */
    __IO uint32_t rm_gpio0b7_sel;                     /* Address Offset: 0x00BC */
    __IO uint32_t rm_gpio0c0_sel;                     /* Address Offset: 0x00C0 */
    __IO uint32_t rm_gpio0c1_sel;                     /* Address Offset: 0x00C4 */
    __IO uint32_t rm_gpio0c2_sel;                     /* Address Offset: 0x00C8 */
    __IO uint32_t rm_gpio0c3_sel;                     /* Address Offset: 0x00CC */
    __IO uint32_t rm_gpio0c4_sel;                     /* Address Offset: 0x00D0 */
    __IO uint32_t rm_gpio0c5_sel;                     /* Address Offset: 0x00D4 */
    __IO uint32_t rm_gpio0c6_sel;                     /* Address Offset: 0x00D8 */
    __IO uint32_t rm_gpio0c7_sel;                     /* Address Offset: 0x00DC */
    __IO uint32_t rm_gpio1b1_sel;                     /* Address Offset: 0x00E0 */
    __IO uint32_t rm_gpio1b2_sel;                     /* Address Offset: 0x00E4 */
    __IO uint32_t rm_gpio1b3_sel;                     /* Address Offset: 0x00E8 */
    __IO uint32_t rm_gpio1c2_sel;                     /* Address Offset: 0x00EC */
    __IO uint32_t rm_gpio1c3_sel;                     /* Address Offset: 0x00F0 */
    __IO uint32_t rm_gpio1d1_sel;                     /* Address Offset: 0x00F4 */
    __IO uint32_t rm_gpio1d2_sel;                     /* Address Offset: 0x00F8 */
    __IO uint32_t rm_gpio1d3_sel;                     /* Address Offset: 0x00FC */
         uint32_t RESERVED0100[128];                  /* Address Offset: 0x0100 */
    __IO uint32_t test_status0;                       /* Address Offset: 0x0300 */
    __IO uint32_t test_status1;                       /* Address Offset: 0x0304 */
    __IO uint32_t test_status2;                       /* Address Offset: 0x0308 */
    __IO uint32_t test_status3;                       /* Address Offset: 0x030C */
    __IO uint32_t test_status4;                       /* Address Offset: 0x0310 */
};
/* GRF_PMU Register Structure Define */
struct GRF_PMU_REG {
    __IO uint32_t SOC_CON0;                           /* Address Offset: 0x0000 */
    __IO uint32_t SOC_CON1;                           /* Address Offset: 0x0004 */
    __IO uint32_t SOC_CON2;                           /* Address Offset: 0x0008 */
    __IO uint32_t SOC_CON3;                           /* Address Offset: 0x000C */
    __IO uint32_t SOC_CON4;                           /* Address Offset: 0x0010 */
    __IO uint32_t SOC_CON5;                           /* Address Offset: 0x0014 */
    __IO uint32_t SOC_CON6;                           /* Address Offset: 0x0018 */
    __IO uint32_t SOC_CON7;                           /* Address Offset: 0x001C */
    __IO uint32_t SOC_CON8;                           /* Address Offset: 0x0020 */
    __IO uint32_t SOC_CON9;                           /* Address Offset: 0x0024 */
    __IO uint32_t SOC_CON10;                          /* Address Offset: 0x0028 */
    __IO uint32_t SOC_CON11;                          /* Address Offset: 0x002C */
    __IO uint32_t SOC_CON12;                          /* Address Offset: 0x0030 */
    __IO uint32_t SOC_CON13;                          /* Address Offset: 0x0034 */
    __IO uint32_t SOC_CON14;                          /* Address Offset: 0x0038 */
    __IO uint32_t SOC_CON15;                          /* Address Offset: 0x003C */
    __IO uint32_t SOC_CON16;                          /* Address Offset: 0x0040 */
    __IO uint32_t SOC_CON17;                          /* Address Offset: 0x0044 */
    __IO uint32_t SOC_CON18;                          /* Address Offset: 0x0048 */
         uint32_t RESERVED004C[45];                   /* Address Offset: 0x004C */
    __I  uint32_t SOC_STATUS;                         /* Address Offset: 0x0100 */
         uint32_t RESERVED0104[63];                   /* Address Offset: 0x0104 */
    __IO uint32_t OS_REG0;                            /* Address Offset: 0x0200 */
    __IO uint32_t OS_REG1;                            /* Address Offset: 0x0204 */
    __IO uint32_t OS_REG2;                            /* Address Offset: 0x0208 */
    __IO uint32_t OS_REG3;                            /* Address Offset: 0x020C */
    __IO uint32_t OS_REG4;                            /* Address Offset: 0x0210 */
    __IO uint32_t OS_REG5;                            /* Address Offset: 0x0214 */
    __IO uint32_t OS_REG6;                            /* Address Offset: 0x0218 */
    __IO uint32_t OS_REG7;                            /* Address Offset: 0x021C */
    __IO uint32_t OS_REG8;                            /* Address Offset: 0x0220 */
    __IO uint32_t OS_REG9;                            /* Address Offset: 0x0224 */
    __IO uint32_t OS_REG10;                           /* Address Offset: 0x0228 */
    __IO uint32_t OS_REG11;                           /* Address Offset: 0x022C */
    __I  uint32_t RSTFUNC_STATUS;                     /* Address Offset: 0x0230 */
    __O  uint32_t RSTFUNC_CLR;                        /* Address Offset: 0x0234 */
         uint32_t RESERVED0238[882];                  /* Address Offset: 0x0238 */
    __IO uint32_t MCU_ISO_CON0;                       /* Address Offset: 0x1000 */
    __IO uint32_t MCU_ISO_CON1;                       /* Address Offset: 0x1004 */
    __IO uint32_t MCU_ISO_CON2;                       /* Address Offset: 0x1008 */
    __IO uint32_t MCU_ISO_CON3;                       /* Address Offset: 0x100C */
    __IO uint32_t MCU_ISO_CON4;                       /* Address Offset: 0x1010 */
    __IO uint32_t MCU_ISO_CON5;                       /* Address Offset: 0x1014 */
    __IO uint32_t MCU_ISO_CON6;                       /* Address Offset: 0x1018 */
    __IO uint32_t MCU_ISO_CON7;                       /* Address Offset: 0x101C */
    __IO uint32_t MCU_ISO_CON8;                       /* Address Offset: 0x1020 */
    __IO uint32_t MCU_ISO_CON9;                       /* Address Offset: 0x1024 */
    __IO uint32_t MCU_ISO_CON10;                      /* Address Offset: 0x1028 */
    __IO uint32_t MCU_ISO_CON11;                      /* Address Offset: 0x102C */
         uint32_t RESERVED1030[244];                  /* Address Offset: 0x1030 */
    __IO uint32_t MCU_ISO_DDR_CON0;                   /* Address Offset: 0x1400 */
    __IO uint32_t MCU_ISO_DDR_CON1;                   /* Address Offset: 0x1404 */
         uint32_t RESERVED1408[62];                   /* Address Offset: 0x1408 */
    __IO uint32_t MCU_ISO_LOCK;                       /* Address Offset: 0x1500 */
         uint32_t RESERVED1504[703];                  /* Address Offset: 0x1504 */
    __IO uint32_t CPU_ISO_CON0;                       /* Address Offset: 0x2000 */
    __IO uint32_t CPU_ISO_CON1;                       /* Address Offset: 0x2004 */
    __IO uint32_t CPU_ISO_CON2;                       /* Address Offset: 0x2008 */
    __IO uint32_t CPU_ISO_CON3;                       /* Address Offset: 0x200C */
    __IO uint32_t CPU_ISO_CON4;                       /* Address Offset: 0x2010 */
    __IO uint32_t CPU_ISO_CON5;                       /* Address Offset: 0x2014 */
    __IO uint32_t CPU_ISO_CON6;                       /* Address Offset: 0x2018 */
    __IO uint32_t CPU_ISO_CON7;                       /* Address Offset: 0x201C */
    __IO uint32_t CPU_ISO_CON8;                       /* Address Offset: 0x2020 */
    __IO uint32_t CPU_ISO_CON9;                       /* Address Offset: 0x2024 */
    __IO uint32_t CPU_ISO_CON10;                      /* Address Offset: 0x2028 */
    __IO uint32_t CPU_ISO_CON11;                      /* Address Offset: 0x202C */
         uint32_t RESERVED2030[244];                  /* Address Offset: 0x2030 */
    __IO uint32_t CPU_ISO_DDR_CON0;                   /* Address Offset: 0x2400 */
    __IO uint32_t CPU_ISO_DDR_CON1;                   /* Address Offset: 0x2404 */
         uint32_t RESERVED2408[62];                   /* Address Offset: 0x2408 */
    __IO uint32_t CPU_ISO_LOCK;                       /* Address Offset: 0x2500 */
};
/* GPIO0_IOC Register Structure Define */
struct GPIO0_IOC_REG {
    __IO uint32_t GPIO0A_IOMUX_SEL_0;                 /* Address Offset: 0x0000 */
    __IO uint32_t GPIO0A_IOMUX_SEL_1;                 /* Address Offset: 0x0004 */
    __IO uint32_t GPIO0B_IOMUX_SEL_0;                 /* Address Offset: 0x0008 */
    __IO uint32_t GPIO0B_IOMUX_SEL_1;                 /* Address Offset: 0x000C */
    __IO uint32_t GPIO0C_IOMUX_SEL_0;                 /* Address Offset: 0x0010 */
    __IO uint32_t GPIO0C_IOMUX_SEL_1;                 /* Address Offset: 0x0014 */
         uint32_t RESERVED0018[58];                   /* Address Offset: 0x0018 */
    __IO uint32_t GPIO0A_DS_0;                        /* Address Offset: 0x0100 */
    __IO uint32_t GPIO0A_DS_1;                        /* Address Offset: 0x0104 */
    __IO uint32_t GPIO0A_DS_2;                        /* Address Offset: 0x0108 */
    __IO uint32_t GPIO0A_DS_3;                        /* Address Offset: 0x010C */
    __IO uint32_t GPIO0B_DS_0;                        /* Address Offset: 0x0110 */
    __IO uint32_t GPIO0B_DS_1;                        /* Address Offset: 0x0114 */
    __IO uint32_t GPIO0B_DS_2;                        /* Address Offset: 0x0118 */
    __IO uint32_t GPIO0B_DS_3;                        /* Address Offset: 0x011C */
    __IO uint32_t GPIO0C_DS_0;                        /* Address Offset: 0x0120 */
    __IO uint32_t GPIO0C_DS_1;                        /* Address Offset: 0x0124 */
    __IO uint32_t GPIO0C_DS_2;                        /* Address Offset: 0x0128 */
    __IO uint32_t GPIO0C_DS_3;                        /* Address Offset: 0x012C */
         uint32_t RESERVED0130[52];                   /* Address Offset: 0x0130 */
    __IO uint32_t GPIO0A_PULL;                        /* Address Offset: 0x0200 */
    __IO uint32_t GPIO0B_PULL;                        /* Address Offset: 0x0204 */
    __IO uint32_t GPIO0C_PULL;                        /* Address Offset: 0x0208 */
         uint32_t RESERVED020C[61];                   /* Address Offset: 0x020C */
    __IO uint32_t GPIO0A_IE;                          /* Address Offset: 0x0300 */
    __IO uint32_t GPIO0B_IE;                          /* Address Offset: 0x0304 */
    __IO uint32_t GPIO0C_IE;                          /* Address Offset: 0x0308 */
         uint32_t RESERVED030C[61];                   /* Address Offset: 0x030C */
    __IO uint32_t GPIO0A_SMT;                         /* Address Offset: 0x0400 */
    __IO uint32_t GPIO0B_SMT;                         /* Address Offset: 0x0404 */
    __IO uint32_t GPIO0C_SMT;                         /* Address Offset: 0x0408 */
         uint32_t RESERVED040C[61];                   /* Address Offset: 0x040C */
    __IO uint32_t GPIO0A_SUS;                         /* Address Offset: 0x0500 */
    __IO uint32_t GPIO0B_SUS;                         /* Address Offset: 0x0504 */
    __IO uint32_t GPIO0C_SUS;                         /* Address Offset: 0x0508 */
         uint32_t RESERVED050C[61];                   /* Address Offset: 0x050C */
    __IO uint32_t GPIO0A_SL;                          /* Address Offset: 0x0600 */
    __IO uint32_t GPIO0B_SL;                          /* Address Offset: 0x0604 */
    __IO uint32_t GPIO0C_SL;                          /* Address Offset: 0x0608 */
         uint32_t RESERVED060C[61];                   /* Address Offset: 0x060C */
    __IO uint32_t GPIO0A_OD;                          /* Address Offset: 0x0700 */
    __IO uint32_t GPIO0B_OD;                          /* Address Offset: 0x0704 */
    __IO uint32_t GPIO0C_OD;                          /* Address Offset: 0x0708 */
         uint32_t RESERVED070C[61];                   /* Address Offset: 0x070C */
    __IO uint32_t IDDQ_PMUIO;                         /* Address Offset: 0x0800 */
         uint32_t RESERVED0804[11];                   /* Address Offset: 0x0804 */
    __IO uint32_t GPIO0D_CON;                         /* Address Offset: 0x0830 */
};
/* TOUCH_SENSOR Register Structure Define */
struct TOUCH_SENSOR_REG {
    __IO uint32_t CH_START;                           /* Address Offset: 0x0000 */
    __IO uint32_t CH_ENABLE[2];                       /* Address Offset: 0x0004 */
    __IO uint32_t CH_DIV;                             /* Address Offset: 0x000C */
    __IO uint32_t CH_IRQ_EN[4];                       /* Address Offset: 0x0010 */
    __IO uint32_t CH_IRQ_ST_POS;                      /* Address Offset: 0x0020 */
    __IO uint32_t CH_IRQ_ST_NEG;                      /* Address Offset: 0x0024 */
    __IO uint32_t CH_IRQ_RAW;                         /* Address Offset: 0x0028 */
    __IO uint32_t CH_IRQ_CLEAR[2];                    /* Address Offset: 0x002C */
    __IO uint32_t CH_CHARGE_THRESHOLD;                /* Address Offset: 0x0034 */
    __IO uint32_t CH_FILTER_STABLE_TIME;              /* Address Offset: 0x0038 */
    __IO uint32_t CH_IRQ_SEL;                         /* Address Offset: 0x003C */
    __IO uint32_t CH_LOCK;                            /* Address Offset: 0x0040 */
    __IO uint32_t CH_RC_TYPE_SEL;                     /* Address Offset: 0x0044 */
    __IO uint32_t CH_RC_SPEED_STEP_CNT;               /* Address Offset: 0x0048 */
         uint32_t RESERVED004C[45];                   /* Address Offset: 0x004C */
    __IO uint32_t CH0_CNT;                            /* Address Offset: 0x0100 */
    __IO uint32_t CH0_CNT_DC;                         /* Address Offset: 0x0104 */
    __IO uint32_t CH0_CNT_DO;                         /* Address Offset: 0x0108 */
    __IO uint32_t CH0_CNT_FILTER;                     /* Address Offset: 0x010C */
         uint32_t RESERVED0110[60];                   /* Address Offset: 0x0110 */
    __IO uint32_t CH1_CNT;                            /* Address Offset: 0x0200 */
    __IO uint32_t CH1_CNT_DC;                         /* Address Offset: 0x0204 */
    __IO uint32_t CH1_CNT_DO;                         /* Address Offset: 0x0208 */
    __IO uint32_t CH1_CNT_FILTER;                     /* Address Offset: 0x020C */
         uint32_t RESERVED0210[60];                   /* Address Offset: 0x0210 */
    __IO uint32_t CH2_CNT;                            /* Address Offset: 0x0300 */
    __IO uint32_t CH2_CNT_DC;                         /* Address Offset: 0x0304 */
    __IO uint32_t CH2_CNT_DO;                         /* Address Offset: 0x0308 */
    __IO uint32_t CH2_CNT_FILTER;                     /* Address Offset: 0x030C */
         uint32_t RESERVED0310[60];                   /* Address Offset: 0x0310 */
    __IO uint32_t CH3_CNT;                            /* Address Offset: 0x0400 */
    __IO uint32_t CH3_CNT_DC;                         /* Address Offset: 0x0404 */
    __IO uint32_t CH3_CNT_DO;                         /* Address Offset: 0x0408 */
    __IO uint32_t CH3_CNT_FILTER;                     /* Address Offset: 0x040C */
         uint32_t RESERVED0410[60];                   /* Address Offset: 0x0410 */
    __IO uint32_t CH4_CNT;                            /* Address Offset: 0x0500 */
    __IO uint32_t CH4_CNT_DC;                         /* Address Offset: 0x0504 */
    __IO uint32_t CH4_CNT_DO;                         /* Address Offset: 0x0508 */
    __IO uint32_t CH4_CNT_FILTER;                     /* Address Offset: 0x050C */
         uint32_t RESERVED0510[60];                   /* Address Offset: 0x0510 */
    __IO uint32_t CH5_CNT;                            /* Address Offset: 0x0600 */
    __IO uint32_t CH5_CNT_DC;                         /* Address Offset: 0x0604 */
    __IO uint32_t CH5_CNT_DO;                         /* Address Offset: 0x0608 */
    __IO uint32_t CH5_CNT_FILTER;                     /* Address Offset: 0x060C */
         uint32_t RESERVED0610[60];                   /* Address Offset: 0x0610 */
    __IO uint32_t CH6_CNT;                            /* Address Offset: 0x0700 */
    __IO uint32_t CH6_CNT_DC;                         /* Address Offset: 0x0704 */
    __IO uint32_t CH6_CNT_DO;                         /* Address Offset: 0x0708 */
    __IO uint32_t CH6_CNT_FILTER;                     /* Address Offset: 0x070C */
         uint32_t RESERVED0710[60];                   /* Address Offset: 0x0710 */
    __IO uint32_t CH7_CNT;                            /* Address Offset: 0x0800 */
    __IO uint32_t CH7_CNT_DC;                         /* Address Offset: 0x0804 */
    __IO uint32_t CH7_CNT_DO;                         /* Address Offset: 0x0808 */
    __IO uint32_t CH7_CNT_FILTER;                     /* Address Offset: 0x080C */
         uint32_t RESERVED0810[60];                   /* Address Offset: 0x0810 */
    __IO uint32_t CH8_CNT;                            /* Address Offset: 0x0900 */
    __IO uint32_t CH8_CNT_DC;                         /* Address Offset: 0x0904 */
    __IO uint32_t CH8_CNT_DO;                         /* Address Offset: 0x0908 */
    __IO uint32_t CH8_CNT_FILTER;                     /* Address Offset: 0x090C */
         uint32_t RESERVED0910[444];                  /* Address Offset: 0x0910 */
    __IO uint32_t CH9_CNT;                            /* Address Offset: 0x1000 */
    __IO uint32_t CH9_CNT_DC;                         /* Address Offset: 0x1004 */
    __IO uint32_t CH9_CNT_DO;                         /* Address Offset: 0x1008 */
    __IO uint32_t CH9_CNT_FILTER;                     /* Address Offset: 0x100C */
         uint32_t RESERVED1010[60];                   /* Address Offset: 0x1010 */
    __IO uint32_t CH10_CNT;                           /* Address Offset: 0x1100 */
    __IO uint32_t CH10_CNT_DC;                        /* Address Offset: 0x1104 */
    __IO uint32_t CH10_CNT_DO;                        /* Address Offset: 0x1108 */
    __IO uint32_t CH10_CNT_FILTER;                    /* Address Offset: 0x110C */
         uint32_t RESERVED1110[60];                   /* Address Offset: 0x1110 */
    __IO uint32_t CH11_CNT;                           /* Address Offset: 0x1200 */
    __IO uint32_t CH11_CNT_DC;                        /* Address Offset: 0x1204 */
    __IO uint32_t CH11_CNT_DO;                        /* Address Offset: 0x1208 */
    __IO uint32_t CH11_CNT_FILTER;                    /* Address Offset: 0x120C */
         uint32_t RESERVED1210[60];                   /* Address Offset: 0x1210 */
    __IO uint32_t CH12_CNT;                           /* Address Offset: 0x1300 */
    __IO uint32_t CH12_CNT_DC;                        /* Address Offset: 0x1304 */
    __IO uint32_t CH12_CNT_DO;                        /* Address Offset: 0x1308 */
    __IO uint32_t CH12_CNT_FILTER;                    /* Address Offset: 0x130C */
         uint32_t RESERVED1310[60];                   /* Address Offset: 0x1310 */
    __IO uint32_t CH13_CNT;                           /* Address Offset: 0x1400 */
    __IO uint32_t CH13_CNT_DC;                        /* Address Offset: 0x1404 */
    __IO uint32_t CH13_CNT_DO;                        /* Address Offset: 0x1408 */
    __IO uint32_t CH13_CNT_FILTER;                    /* Address Offset: 0x140C */
         uint32_t RESERVED1410[60];                   /* Address Offset: 0x1410 */
    __IO uint32_t CH14_CNT;                           /* Address Offset: 0x1500 */
    __IO uint32_t CH14_CNT_DC;                        /* Address Offset: 0x1504 */
    __IO uint32_t CH14_CNT_DO;                        /* Address Offset: 0x1508 */
    __IO uint32_t CH14_CNT_FILTER;                    /* Address Offset: 0x150C */
         uint32_t RESERVED1510[60];                   /* Address Offset: 0x1510 */
    __IO uint32_t CH15_CNT;                           /* Address Offset: 0x1600 */
    __IO uint32_t CH15_CNT_DC;                        /* Address Offset: 0x1604 */
    __IO uint32_t CH15_CNT_DO;                        /* Address Offset: 0x1608 */
    __IO uint32_t CH15_CNT_FILTER;                    /* Address Offset: 0x160C */
         uint32_t RESERVED1610[60];                   /* Address Offset: 0x1610 */
    __IO uint32_t CH16_CNT;                           /* Address Offset: 0x1700 */
    __IO uint32_t CH16_CNT_DC;                        /* Address Offset: 0x1704 */
    __IO uint32_t CH16_CNT_DO;                        /* Address Offset: 0x1708 */
    __IO uint32_t CH16_CNT_FILTER;                    /* Address Offset: 0x170C */
         uint32_t RESERVED1710[60];                   /* Address Offset: 0x1710 */
    __IO uint32_t CH17_CNT;                           /* Address Offset: 0x1800 */
    __IO uint32_t CH17_CNT_DC;                        /* Address Offset: 0x1804 */
    __IO uint32_t CH17_CNT_DO;                        /* Address Offset: 0x1808 */
    __IO uint32_t CH17_CNT_FILTER;                    /* Address Offset: 0x180C */
         uint32_t RESERVED1810[60];                   /* Address Offset: 0x1810 */
    __IO uint32_t CH18_CNT;                           /* Address Offset: 0x1900 */
    __IO uint32_t CH18_CNT_DC;                        /* Address Offset: 0x1904 */
    __IO uint32_t CH18_CNT_DO;                        /* Address Offset: 0x1908 */
    __IO uint32_t CH18_CNT_FILTER;                    /* Address Offset: 0x190C */
         uint32_t RESERVED1910[444];                  /* Address Offset: 0x1910 */
    __IO uint32_t CH19_CNT;                           /* Address Offset: 0x2000 */
    __IO uint32_t CH19_CNT_DC;                        /* Address Offset: 0x2004 */
    __IO uint32_t CH19_CNT_DO;                        /* Address Offset: 0x2008 */
    __IO uint32_t CH19_CNT_FILTER;                    /* Address Offset: 0x200C */
};
/* CRU Register Structure Define */
struct CRU_REG {
         uint32_t RESERVED0000[160];                  /* Address Offset: 0x0000 */
    __IO uint32_t MODE_CON00;                         /* Address Offset: 0x0280 */
         uint32_t RESERVED0284[31];                   /* Address Offset: 0x0284 */
    __IO uint32_t CRU_CLKSEL_CON[62];                 /* Address Offset: 0x0300 */
         uint32_t RESERVED03F8[258];                  /* Address Offset: 0x03F8 */
    __IO uint32_t CRU_CLKGATE_CON[23];                /* Address Offset: 0x0800 */
         uint32_t RESERVED085C[105];                  /* Address Offset: 0x085C */
    __IO uint32_t CRU_SOFTRST_CON[23];                /* Address Offset: 0x0A00 */
         uint32_t RESERVED0A5C[105];                  /* Address Offset: 0x0A5C */
    __IO uint32_t GLB_CNT_TH;                         /* Address Offset: 0x0C00 */
    __IO uint32_t GLB_RST_ST;                         /* Address Offset: 0x0C04 */
    __IO uint32_t GLB_SRST_FST_VALUE;                 /* Address Offset: 0x0C08 */
    __IO uint32_t GLB_SRST_SND_VALUE;                 /* Address Offset: 0x0C0C */
    __IO uint32_t GLB_RST_CON;                        /* Address Offset: 0x0C10 */
         uint32_t RESERVED0C14[6];                    /* Address Offset: 0x0C14 */
    __IO uint32_t COREWFI_CON;                        /* Address Offset: 0x0C2C */
};
/* SCRU Register Structure Define */
struct SCRU_REG {
         uint32_t RESERVED0000[4];                    /* Address Offset: 0x0000 */
    __IO uint32_t CRU_CLKSEL_CON[3];                  /* Address Offset: 0x0010 */
         uint32_t RESERVED001C[9];                    /* Address Offset: 0x001C */
    __IO uint32_t CRU_CLKGATE_CON[3];                 /* Address Offset: 0x0040 */
         uint32_t RESERVED004C[13];                   /* Address Offset: 0x004C */
    __IO uint32_t CRU_SOFTRST_CON[3];                 /* Address Offset: 0x0080 */
};
/* CRU_PMU Register Structure Define */
struct CRU_PMU_REG {
    __IO uint32_t GPLL_CON[5];                        /* Address Offset: 0x0000 */
         uint32_t RESERVED0014[3];                    /* Address Offset: 0x0014 */
    __IO uint32_t VPLL0_CON[5];                       /* Address Offset: 0x0020 */
         uint32_t RESERVED0034[3];                    /* Address Offset: 0x0034 */
    __IO uint32_t VPLL1_CON[5];                       /* Address Offset: 0x0040 */
         uint32_t RESERVED0054[59];                   /* Address Offset: 0x0054 */
    __IO uint32_t SSGTBL0_3;                          /* Address Offset: 0x0140 */
    __IO uint32_t SSGTBL4_7;                          /* Address Offset: 0x0144 */
    __IO uint32_t SSGTBL8_11;                         /* Address Offset: 0x0148 */
    __IO uint32_t SSGTBL12_15;                        /* Address Offset: 0x014C */
    __IO uint32_t SSGTBL16_19;                        /* Address Offset: 0x0150 */
    __IO uint32_t SSGTBL20_23;                        /* Address Offset: 0x0154 */
    __IO uint32_t SSGTBL24_27;                        /* Address Offset: 0x0158 */
    __IO uint32_t SSGTBL28_31;                        /* Address Offset: 0x015C */
    __IO uint32_t SSGTBL32_35;                        /* Address Offset: 0x0160 */
    __IO uint32_t SSGTBL36_39;                        /* Address Offset: 0x0164 */
    __IO uint32_t SSGTBL40_43;                        /* Address Offset: 0x0168 */
    __IO uint32_t SSGTBL44_47;                        /* Address Offset: 0x016C */
    __IO uint32_t SSGTBL48_51;                        /* Address Offset: 0x0170 */
    __IO uint32_t SSGTBL52_55;                        /* Address Offset: 0x0174 */
    __IO uint32_t SSGTBL56_59;                        /* Address Offset: 0x0178 */
    __IO uint32_t SSGTBL60_63;                        /* Address Offset: 0x017C */
    __IO uint32_t SSGTBL64_67;                        /* Address Offset: 0x0180 */
    __IO uint32_t SSGTBL68_71;                        /* Address Offset: 0x0184 */
    __IO uint32_t SSGTBL72_75;                        /* Address Offset: 0x0188 */
    __IO uint32_t SSGTBL76_79;                        /* Address Offset: 0x018C */
    __IO uint32_t SSGTBL80_83;                        /* Address Offset: 0x0190 */
    __IO uint32_t SSGTBL84_87;                        /* Address Offset: 0x0194 */
    __IO uint32_t SSGTBL88_91;                        /* Address Offset: 0x0198 */
    __IO uint32_t SSGTBL92_95;                        /* Address Offset: 0x019C */
    __IO uint32_t SSGTBL96_99;                        /* Address Offset: 0x01A0 */
    __IO uint32_t SSGTBL100_103;                      /* Address Offset: 0x01A4 */
    __IO uint32_t SSGTBL104_107;                      /* Address Offset: 0x01A8 */
    __IO uint32_t SSGTBL108_111;                      /* Address Offset: 0x01AC */
    __IO uint32_t SSGTBL112_115;                      /* Address Offset: 0x01B0 */
    __IO uint32_t SSGTBL116_119;                      /* Address Offset: 0x01B4 */
    __IO uint32_t SSGTBL120_123;                      /* Address Offset: 0x01B8 */
    __IO uint32_t SSGTBL124_127;                      /* Address Offset: 0x01BC */
         uint32_t RESERVED01C0[80];                   /* Address Offset: 0x01C0 */
    __IO uint32_t CRU_CLKSEL_CON[7];                  /* Address Offset: 0x0300 */
         uint32_t RESERVED031C[313];                  /* Address Offset: 0x031C */
    __IO uint32_t CRU_CLKGATE_CON[3];                 /* Address Offset: 0x0800 */
         uint32_t RESERVED080C[125];                  /* Address Offset: 0x080C */
    __IO uint32_t CRU_SOFTRST_CON[2];                 /* Address Offset: 0x0A00 */
};
/* SCRU_PMU Register Structure Define */
struct SCRU_PMU_REG {
         uint32_t RESERVED0000[16];                   /* Address Offset: 0x0000 */
    __IO uint32_t CRU_CLKGATE_CON[1];                 /* Address Offset: 0x0040 */
};
#endif /*  __ASSEMBLY__  */
/****************************************************************************************/
/*                                                                                      */
/*                                Module Address Section                                */
/*                                                                                      */
/****************************************************************************************/
/* Memory Base */
#define DMA0_BASE                      0xFF000000U /* DMA0 base address */
#define DMA1_BASE                      0xFF008000U /* DMA1 base address */
#define I2C0_BASE                      0xFF040000U /* I2C0 base address */
#define I2C1_BASE                      0xFF050000U /* I2C1 base address */
#define I2C2_BASE                      0xFF060000U /* I2C2 base address */
#define UART0_BASE                     0xFF0A0000U /* UART0 base address */
#define UART1_BASE                     0xFF0B0000U /* UART1 base address */
#define UART2_BASE                     0xFF0C0000U /* UART2 base address */
#define UART3_BASE                     0xFF0D0000U /* UART3 base address */
#define UART4_BASE                     0xFF0E0000U /* UART4 base address */
#define SPI0_BASE                      0xFF120000U /* SPI0 base address */
#define SPI1_BASE                      0xFF130000U /* SPI1 base address */
#define PWM1_BASE                      0xFF170000U /* PWM1 base address */
#define GPIO2_BASE                     0xFF1C0000U /* GPIO2 base address */
#define GPIO2_EXP1_BASE                0xFF1C1000U /* GPIO2_EXP1 base address */
#define GPIO2_EXP2_BASE                0xFF1C2000U /* GPIO2_EXP2 base address */
#define GPIO2_EXP3_BASE                0xFF1C3000U /* GPIO2_EXP3 base address */
#define GPIO3_BASE                     0xFF1D0000U /* GPIO3 base address */
#define GPIO3_EXP1_BASE                0xFF1D1000U /* GPIO3_EXP1 base address */
#define GPIO3_EXP2_BASE                0xFF1D2000U /* GPIO3_EXP2 base address */
#define GPIO3_EXP3_BASE                0xFF1D3000U /* GPIO3_EXP3 base address */
#define GPIO4_BASE                     0xFF1E0000U /* GPIO4 base address */
#define GPIO4_EXP1_BASE                0xFF1E1000U /* GPIO4_EXP1 base address */
#define GPIO4_EXP2_BASE                0xFF1E2000U /* GPIO4_EXP2 base address */
#define GPIO4_EXP3_BASE                0xFF1E3000U /* GPIO4_EXP3 base address */
#define SPINLOCK0_BASE                 0xFF240000U /* SPINLOCK0 base address */
#define SPINLOCK1_BASE                 0xFF241000U /* SPINLOCK1 base address */
#define SPINLOCK2_BASE                 0xFF242000U /* SPINLOCK2 base address */
#define SPINLOCK3_BASE                 0xFF243000U /* SPINLOCK3 base address */
#define TIMER0_BASE                    0xFF250000U /* TIMER0 base address */
#define TIMER1_BASE                    0xFF251000U /* TIMER1 base address */
#define TIMER2_BASE                    0xFF252000U /* TIMER2 base address */
#define TIMER3_BASE                    0xFF253000U /* TIMER3 base address */
#define TIMER4_BASE                    0xFF254000U /* TIMER4 base address */
#define TIMER5_BASE                    0xFF255000U /* TIMER5 base address */
#define TIMER6_BASE                    0xFF258000U /* TIMER6 base address */
#define TIMER7_BASE                    0xFF259000U /* TIMER7 base address */
#define TIMER8_BASE                    0xFF25A000U /* TIMER8 base address */
#define TIMER9_BASE                    0xFF25B000U /* TIMER9 base address */
#define TIMER10_BASE                   0xFF25C000U /* TIMER10 base address */
#define TIMER11_BASE                   0xFF25D000U /* TIMER11 base address */
#define WDT0_BASE                      0xFF260000U /* WDT0 base address */
#define WDT1_BASE                      0xFF268000U /* WDT1 base address */
#define GRF_BASE                       0xFF288000U /* GRF base address */
#define MBOX0_BASE                     0xFF290000U /* MBOX0 base address */
#define MBOX1_BASE                     0xFF291000U /* MBOX1 base address */
#define MBOX2_BASE                     0xFF292000U /* MBOX2 base address */
#define MBOX3_BASE                     0xFF293000U /* MBOX3 base address */
#define INTMUX_BASE                    0xFF2A0000U /* INTMUX base address */
#define SAI0_BASE                      0xFF300000U /* SAI0 base address */
#define SAI1_BASE                      0xFF310000U /* SAI1 base address */
#define CAN0_BASE                      0xFF320000U /* CAN0 base address */
#define CAN1_BASE                      0xFF330000U /* CAN1 base address */
#define PDM_BASE                       0xFF380000U /* PDM base address */
#define SPDIFTX0_BASE                  0xFF3A0000U /* SPDIFTX0 base address */
#define SPDIFRX0_BASE                  0xFF3B0000U /* SPDIFRX0 base address */
#define MMC_BASE                       0xFF480000U /* MMC base address */
#define FSPI_BASE                      0xFF488000U /* FSPI base address */
#define SAI2_BASE                      0xFF498000U /* SAI2 base address */
#define SAI3_BASE                      0xFF4A0000U /* SAI3 base address */
#define SAI4_BASE                      0xFF4A8000U /* SAI4 base address */
#define ACDCDIG_DSM_BASE               0xFF4B0000U /* ACDCDIG_DSM base address */
#define SPI2APB_BASE                   0xFF4C0000U /* SPI2APB base address */
#define GMAC0_BASE                     0xFF4C8000U /* GMAC0 base address */
#define GMAC1_BASE                     0xFF4D0000U /* GMAC1 base address */
#define GPIO2_IOC_BASE                 0xFF4D8000U /* GPIO2_IOC base address */
#define GPIO3_IOC_BASE                 0xFF4D8000U /* GPIO3_IOC base address */
#define GPIO4_IOC_BASE                 0xFF4D8000U /* GPIO4_IOC base address */
#define UART5_BASE                     0xFF4E0000U /* UART5 base address */
#define SARADC_BASE                    0xFF4E8000U /* SARADC base address */
#define ACODEC_BASE                    0xFF4F8000U /* ACODEC base address */
#define VOP_BASE                       0xFF600000U /* VOP base address */
#define RGA2_BASE                      0xFF610000U /* RGA2 base address */
#define MIPI_DSI_BASE                  0xFF640000U /* MIPI_DSI base address */
#define TSADC_BASE                     0xFF650000U /* TSADC base address */
#define GPIO1_IOC_BASE                 0xFF660000U /* GPIO1_IOC base address */
#define MIPI_TX_PHY_BASE               0xFF670000U /* MIPI_TX_PHY base address */
#define CRYPTO_BASE                    0xFF700000U /* CRYPTO base address */
#define TRNG0_BASE                     0xFF710000U /* TRNG0 base address */
#define GRF_CORE_BASE                  0xFF840000U /* GRF_CORE base address */
#define GPIO1_BASE                     0xFF870000U /* GPIO1 base address */
#define GPIO1_EXP1_BASE                0xFF871000U /* GPIO1_EXP1 base address */
#define GPIO1_EXP2_BASE                0xFF872000U /* GPIO1_EXP2 base address */
#define GPIO1_EXP3_BASE                0xFF873000U /* GPIO1_EXP3 base address */
#define FLEXBUS_BASE                   0xFF880000U /* FLEXBUS base address */
#define LBC_SLAVE_CSR_BASE             0xFF880000U /* LBC_SLAVE_CSR base address */
#define DSMC_BASE                      0xFF8B0000U /* DSMC base address */
#define RM_IO_BASE                     0xFF910000U /* RM_IO base address */
#define GRF_PMU_BASE                   0xFF910000U /* GRF_PMU base address */
#define PWM0_BASE                      0xFF930000U /* PWM0 base address */
#define GPIO0_BASE                     0xFF940000U /* GPIO0 base address */
#define GPIO0_EXP1_BASE                0xFF941000U /* GPIO0_EXP1 base address */
#define GPIO0_EXP2_BASE                0xFF942000U /* GPIO0_EXP2 base address */
#define GPIO0_EXP3_BASE                0xFF943000U /* GPIO0_EXP3 base address */
#define GPIO0_IOC_BASE                 0xFF950000U /* GPIO0_IOC base address */
#define TOUCH_SENSOR_BASE              0xFF990000U /* TOUCH_SENSOR base address */
#define CRU_BASE                       0xFF9A0000U /* CRU base address */
#define SCRU_BASE                      0xFF9A8000U /* SCRU base address */
#define CRU_PMU_BASE                   0xFF9B0000U /* CRU_PMU base address */
#define SCRU_PMU_BASE                  0xFF9B8000U /* SCRU_PMU base address */
#define TRNG1_BASE                     0xFFFE0000U /* TRNG1 base address */
/****************************************************************************************/
/*                                                                                      */
/*                               Module Variable Section                                */
/*                                                                                      */
/****************************************************************************************/
/* Module Variable Define */

#define DMA0                ((struct DMA_REG *) DMA0_BASE)
#define DMA1                ((struct DMA_REG *) DMA1_BASE)
#define I2C0                ((struct I2C_REG *) I2C0_BASE)
#define I2C1                ((struct I2C_REG *) I2C1_BASE)
#define I2C2                ((struct I2C_REG *) I2C2_BASE)
#define UART0               ((struct UART_REG *) UART0_BASE)
#define UART1               ((struct UART_REG *) UART1_BASE)
#define UART2               ((struct UART_REG *) UART2_BASE)
#define UART3               ((struct UART_REG *) UART3_BASE)
#define UART4               ((struct UART_REG *) UART4_BASE)
#define SPI0                ((struct SPI_REG *) SPI0_BASE)
#define SPI1                ((struct SPI_REG *) SPI1_BASE)
#define PWM1                ((struct PWM_REG *) PWM1_BASE)
#define GPIO2               ((struct GPIO_REG *) GPIO2_BASE)
#define GPIO2_EXP1          ((struct GPIO2_EXP_REG *) GPIO2_EXP1_BASE)
#define GPIO2_EXP2          ((struct GPIO2_EXP_REG *) GPIO2_EXP2_BASE)
#define GPIO2_EXP3          ((struct GPIO2_EXP_REG *) GPIO2_EXP3_BASE)
#define GPIO3               ((struct GPIO_REG *) GPIO3_BASE)
#define GPIO3_EXP1          ((struct GPIO3_EXP_REG *) GPIO3_EXP1_BASE)
#define GPIO3_EXP2          ((struct GPIO3_EXP_REG *) GPIO3_EXP2_BASE)
#define GPIO3_EXP3          ((struct GPIO3_EXP_REG *) GPIO3_EXP3_BASE)
#define GPIO4               ((struct GPIO_REG *) GPIO4_BASE)
#define GPIO4_EXP1          ((struct GPIO4_EXP_REG *) GPIO4_EXP1_BASE)
#define GPIO4_EXP2          ((struct GPIO4_EXP_REG *) GPIO4_EXP2_BASE)
#define GPIO4_EXP3          ((struct GPIO4_EXP_REG *) GPIO4_EXP3_BASE)
#define SPINLOCK0           ((struct SPINLOCK_REG *) SPINLOCK0_BASE)
#define SPINLOCK1           ((struct SPINLOCK_REG *) SPINLOCK1_BASE)
#define SPINLOCK2           ((struct SPINLOCK_REG *) SPINLOCK2_BASE)
#define SPINLOCK3           ((struct SPINLOCK_REG *) SPINLOCK3_BASE)
#define TIMER0              ((struct TIMER_REG *) TIMER0_BASE)
#define TIMER1              ((struct TIMER_REG *) TIMER1_BASE)
#define TIMER2              ((struct TIMER_REG *) TIMER2_BASE)
#define TIMER3              ((struct TIMER_REG *) TIMER3_BASE)
#define TIMER4              ((struct TIMER_REG *) TIMER4_BASE)
#define TIMER5              ((struct TIMER_REG *) TIMER5_BASE)
#define TIMER6              ((struct TIMER_REG *) TIMER6_BASE)
#define TIMER7              ((struct TIMER_REG *) TIMER7_BASE)
#define TIMER8              ((struct TIMER_REG *) TIMER8_BASE)
#define TIMER9              ((struct TIMER_REG *) TIMER9_BASE)
#define TIMER10             ((struct TIMER_REG *) TIMER10_BASE)
#define TIMER11             ((struct TIMER_REG *) TIMER11_BASE)
#define WDT0                ((struct WDT_REG *) WDT0_BASE)
#define WDT1                ((struct WDT_REG *) WDT1_BASE)
#define GRF                 ((struct GRF_REG *) GRF_BASE)
#define MBOX0               ((struct MBOX_REG *) MBOX0_BASE)
#define MBOX1               ((struct MBOX_REG *) MBOX1_BASE)
#define MBOX2               ((struct MBOX_REG *) MBOX2_BASE)
#define MBOX3               ((struct MBOX_REG *) MBOX3_BASE)
#define INTMUX              ((struct INTMUX_REG *) INTMUX_BASE)
#define SAI0                ((struct SAI_REG *) SAI0_BASE)
#define SAI1                ((struct SAI_REG *) SAI1_BASE)
#define CAN0                ((struct CAN_REG *) CAN0_BASE)
#define CAN1                ((struct CAN_REG *) CAN1_BASE)
#define PDM                 ((struct PDM_REG *) PDM_BASE)
#define SPDIFTX0            ((struct SPDIFTX_REG *) SPDIFTX0_BASE)
#define SPDIFRX0            ((struct SPDIFRX_REG *) SPDIFRX0_BASE)
#define MMC                 ((struct MMC_REG *) MMC_BASE)
#define FSPI                ((struct FSPI_REG *) FSPI_BASE)
#define SAI2                ((struct SAI_REG *) SAI2_BASE)
#define SAI3                ((struct SAI_REG *) SAI3_BASE)
#define SAI4                ((struct SAI_REG *) SAI4_BASE)
#define ACDCDIG_DSM         ((struct ACDCDIG_DSM_REG *) ACDCDIG_DSM_BASE)
#define SPI2APB             ((struct SPI2APB_REG *) SPI2APB_BASE)
#define GMAC0               ((struct GMAC_REG *) GMAC0_BASE)
#define GMAC1               ((struct GMAC_REG *) GMAC1_BASE)
#define GPIO2_IOC           ((struct GPIO2_IOC_REG *) GPIO2_IOC_BASE)
#define GPIO3_IOC           ((struct GPIO3_IOC_REG *) GPIO3_IOC_BASE)
#define GPIO4_IOC           ((struct GPIO4_IOC_REG *) GPIO4_IOC_BASE)
#define UART5               ((struct UART_REG *) UART5_BASE)
#define SARADC              ((struct SARADC_REG *) SARADC_BASE)
#define ACODEC              ((struct ACODEC_REG *) ACODEC_BASE)
#define VOP                 ((struct VOP_REG *) VOP_BASE)
#define RGA2                ((struct RGA2_REG *) RGA2_BASE)
#define MIPI_DSI            ((struct MIPI_DSI_REG *) MIPI_DSI_BASE)
#define TSADC               ((struct TSADC_REG *) TSADC_BASE)
#define GPIO1_IOC           ((struct GPIO1_IOC_REG *) GPIO1_IOC_BASE)
#define MIPI_TX_PHY         ((struct MIPI_TX_PHY_REG *) MIPI_TX_PHY_BASE)
#define CRYPTO              ((struct CRYPTO_REG *) CRYPTO_BASE)
#define TRNG0               ((struct TRNG_REG *) TRNG0_BASE)
#define GRF_CORE            ((struct GRF_CORE_REG *) GRF_CORE_BASE)
#define GPIO1               ((struct GPIO_REG *) GPIO1_BASE)
#define GPIO1_EXP1          ((struct GPIO1_EXP_REG *) GPIO1_EXP1_BASE)
#define GPIO1_EXP2          ((struct GPIO1_EXP_REG *) GPIO1_EXP2_BASE)
#define GPIO1_EXP3          ((struct GPIO1_EXP_REG *) GPIO1_EXP3_BASE)
#define FLEXBUS             ((struct FLEXBUS_REG *) FLEXBUS_BASE)
#define LBC_SLAVE_CSR       ((struct LBC_SLAVE_CSR_REG *) LBC_SLAVE_CSR_BASE)
#define DSMC                ((struct DSMC_REG *) DSMC_BASE)
#define RM_IO               ((struct RM_IO_REG *) RM_IO_BASE)
#define GRF_PMU             ((struct GRF_PMU_REG *) GRF_PMU_BASE)
#define PWM0                ((struct PWM_REG *) PWM0_BASE)
#define GPIO0               ((struct GPIO_REG *) GPIO0_BASE)
#define GPIO0_EXP1          ((struct GPIO0_EXP_REG *) GPIO0_EXP1_BASE)
#define GPIO0_EXP2          ((struct GPIO0_EXP_REG *) GPIO0_EXP2_BASE)
#define GPIO0_EXP3          ((struct GPIO0_EXP_REG *) GPIO0_EXP3_BASE)
#define GPIO0_IOC           ((struct GPIO0_IOC_REG *) GPIO0_IOC_BASE)
#define TOUCH_SENSOR        ((struct TOUCH_SENSOR_REG *) TOUCH_SENSOR_BASE)
#define CRU                 ((struct CRU_REG *) CRU_BASE)
#define SCRU                ((struct SCRU_REG *) SCRU_BASE)
#define CRU_PMU             ((struct CRU_PMU_REG *) CRU_PMU_BASE)
#define SCRU_PMU            ((struct SCRU_PMU_REG *) SCRU_PMU_BASE)
#define TRNG1               ((struct TRNG_REG *) TRNG1_BASE)

#define IS_GRF_INSTANCE(instance) ((instance) == GRF)
#define IS_INTMUX_INSTANCE(instance) ((instance) == INTMUX)
#define IS_PDM_INSTANCE(instance) ((instance) == PDM)
#define IS_MMC_INSTANCE(instance) ((instance) == MMC)
#define IS_FSPI_INSTANCE(instance) ((instance) == FSPI)
#define IS_ACDCDIG_DSM_INSTANCE(instance) ((instance) == ACDCDIG_DSM)
#define IS_SPI2APB_INSTANCE(instance) ((instance) == SPI2APB)
#define IS_GPIO2_IOC_INSTANCE(instance) ((instance) == GPIO2_IOC)
#define IS_GPIO3_IOC_INSTANCE(instance) ((instance) == GPIO3_IOC)
#define IS_GPIO4_IOC_INSTANCE(instance) ((instance) == GPIO4_IOC)
#define IS_SARADC_INSTANCE(instance) ((instance) == SARADC)
#define IS_ACODEC_INSTANCE(instance) ((instance) == ACODEC)
#define IS_VOP_INSTANCE(instance) ((instance) == VOP)
#define IS_RGA2_INSTANCE(instance) ((instance) == RGA2)
#define IS_MIPI_DSI_INSTANCE(instance) ((instance) == MIPI_DSI)
#define IS_TSADC_INSTANCE(instance) ((instance) == TSADC)
#define IS_GPIO1_IOC_INSTANCE(instance) ((instance) == GPIO1_IOC)
#define IS_MIPI_TX_PHY_INSTANCE(instance) ((instance) == MIPI_TX_PHY)
#define IS_CRYPTO_INSTANCE(instance) ((instance) == CRYPTO)
#define IS_GRF_CORE_INSTANCE(instance) ((instance) == GRF_CORE)
#define IS_FLEXBUS_INSTANCE(instance) ((instance) == FLEXBUS)
#define IS_LBC_SLAVE_CSR_INSTANCE(instance) ((instance) == LBC_SLAVE_CSR)
#define IS_DSMC_INSTANCE(instance) ((instance) == DSMC)
#define IS_RM_IO_INSTANCE(instance) ((instance) == RM_IO)
#define IS_GRF_PMU_INSTANCE(instance) ((instance) == GRF_PMU)
#define IS_GPIO0_IOC_INSTANCE(instance) ((instance) == GPIO0_IOC)
#define IS_TOUCH_SENSOR_INSTANCE(instance) ((instance) == TOUCH_SENSOR)
#define IS_CRU_INSTANCE(instance) ((instance) == CRU)
#define IS_SCRU_INSTANCE(instance) ((instance) == SCRU)
#define IS_CRU_PMU_INSTANCE(instance) ((instance) == CRU_PMU)
#define IS_SCRU_PMU_INSTANCE(instance) ((instance) == SCRU_PMU)
#define IS_DMA_INSTANCE(instance) (((instance) == DMA0) || ((instance) == DMA1))
#define IS_I2C_INSTANCE(instance) (((instance) == I2C0) || ((instance) == I2C1) || ((instance) == I2C2))
#define IS_UART_INSTANCE(instance) (((instance) == UART0) || ((instance) == UART1) || ((instance) == UART2) || ((instance) == UART3) || ((instance) == UART4) || ((instance) == UART5))
#define IS_SPI_INSTANCE(instance) (((instance) == SPI0) || ((instance) == SPI1))
#define IS_PWM_INSTANCE(instance) (((instance) == PWM1) || ((instance) == PWM0))
#define IS_GPIO_INSTANCE(instance) (((instance) == GPIO2) || ((instance) == GPIO3) || ((instance) == GPIO4) || ((instance) == GPIO1) || ((instance) == GPIO0))
#define IS_GPIO2_EXP_INSTANCE(instance) (((instance) == GPIO2_EXP1) || ((instance) == GPIO2_EXP2) || ((instance) == GPIO2_EXP3))
#define IS_GPIO3_EXP_INSTANCE(instance) (((instance) == GPIO3_EXP1) || ((instance) == GPIO3_EXP2) || ((instance) == GPIO3_EXP3))
#define IS_GPIO4_EXP_INSTANCE(instance) (((instance) == GPIO4_EXP1) || ((instance) == GPIO4_EXP2) || ((instance) == GPIO4_EXP3))
#define IS_SPINLOCK_INSTANCE(instance) (((instance) == SPINLOCK0) || ((instance) == SPINLOCK1) || ((instance) == SPINLOCK2) || ((instance) == SPINLOCK3))
#define IS_TIMER_INSTANCE(instance) (((instance) == TIMER0) || ((instance) == TIMER1) || ((instance) == TIMER2) || ((instance) == TIMER3) || ((instance) == TIMER4) || ((instance) == TIMER5) || ((instance) == TIMER6) || ((instance) == TIMER7) || ((instance) == TIMER8) || ((instance) == TIMER9) || ((instance) == TIMER10) || ((instance) == TIMER11))
#define IS_WDT_INSTANCE(instance) (((instance) == WDT0) || ((instance) == WDT1))
#define IS_MBOX_INSTANCE(instance) (((instance) == MBOX0) || ((instance) == MBOX1) || ((instance) == MBOX2) || ((instance) == MBOX3))
#define IS_SAI_INSTANCE(instance) (((instance) == SAI0) || ((instance) == SAI1) || ((instance) == SAI2) || ((instance) == SAI3) || ((instance) == SAI4))
#define IS_CAN_INSTANCE(instance) (((instance) == CAN0) || ((instance) == CAN1))
#define IS_SPDIFTX_INSTANCE(instance) ((instance) == SPDIFTX0)
#define IS_SPDIFRX_INSTANCE(instance) ((instance) == SPDIFRX0)
#define IS_GMAC_INSTANCE(instance) (((instance) == GMAC0) || ((instance) == GMAC1))
#define IS_TRNG_INSTANCE(instance) (((instance) == TRNG0) || ((instance) == TRNG1))
#define IS_GPIO1_EXP_INSTANCE(instance) (((instance) == GPIO1_EXP1) || ((instance) == GPIO1_EXP2) || ((instance) == GPIO1_EXP3))
#define IS_GPIO0_EXP_INSTANCE(instance) (((instance) == GPIO0_EXP1) || ((instance) == GPIO0_EXP2) || ((instance) == GPIO0_EXP3))
/****************************************************************************************/
/*                                                                                      */
/*                               Register Bitmap Section                                */
/*                                                                                      */
/****************************************************************************************/
/******************************************DMA*******************************************/
/* DSR */
#define DMA_DSR_OFFSET                                     (0x0U)
#define DMA_DSR                                            (0x0U)
#define DMA_DSR_DMA_STATUS_SHIFT                           (0U)
#define DMA_DSR_DMA_STATUS_MASK                            (0xFU << DMA_DSR_DMA_STATUS_SHIFT)                           /* 0x0000000F */
#define DMA_DSR_WAKEUP_EVENT_SHIFT                         (4U)
#define DMA_DSR_WAKEUP_EVENT_MASK                          (0x1FU << DMA_DSR_WAKEUP_EVENT_SHIFT)                        /* 0x000001F0 */
#define DMA_DSR_DNS_SHIFT                                  (9U)
#define DMA_DSR_DNS_MASK                                   (0x1U << DMA_DSR_DNS_SHIFT)                                  /* 0x00000200 */
/* DPC */
#define DMA_DPC_OFFSET                                     (0x4U)
#define DMA_DPC                                            (0x0U)
#define DMA_DPC_PC_MGR_SHIFT                               (0U)
#define DMA_DPC_PC_MGR_MASK                                (0xFFFFFFFFU << DMA_DPC_PC_MGR_SHIFT)                        /* 0xFFFFFFFF */
/* INTEN */
#define DMA_INTEN_OFFSET                                   (0x20U)
#define DMA_INTEN_EVENT_IRQ_SELECT_SHIFT                   (0U)
#define DMA_INTEN_EVENT_IRQ_SELECT_MASK                    (0xFFFFFFFFU << DMA_INTEN_EVENT_IRQ_SELECT_SHIFT)            /* 0xFFFFFFFF */
/* EVENT_RIS */
#define DMA_EVENT_RIS_OFFSET                               (0x24U)
#define DMA_EVENT_RIS                                      (0x0U)
#define DMA_EVENT_RIS_DMASEV_ACTIVE_SHIFT                  (0U)
#define DMA_EVENT_RIS_DMASEV_ACTIVE_MASK                   (0xFFFFFFFFU << DMA_EVENT_RIS_DMASEV_ACTIVE_SHIFT)           /* 0xFFFFFFFF */
/* INTMIS */
#define DMA_INTMIS_OFFSET                                  (0x28U)
#define DMA_INTMIS                                         (0x0U)
#define DMA_INTMIS_IRQ_STATUS_SHIFT                        (0U)
#define DMA_INTMIS_IRQ_STATUS_MASK                         (0xFFFFFFFFU << DMA_INTMIS_IRQ_STATUS_SHIFT)                 /* 0xFFFFFFFF */
/* INTCLR */
#define DMA_INTCLR_OFFSET                                  (0x2CU)
#define DMA_INTCLR_IRQ_CLR_SHIFT                           (0U)
#define DMA_INTCLR_IRQ_CLR_MASK                            (0xFFFFFFFFU << DMA_INTCLR_IRQ_CLR_SHIFT)                    /* 0xFFFFFFFF */
/* FSRD */
#define DMA_FSRD_OFFSET                                    (0x30U)
#define DMA_FSRD                                           (0x0U)
#define DMA_FSRD_FS_MGR_SHIFT                              (0U)
#define DMA_FSRD_FS_MGR_MASK                               (0x1U << DMA_FSRD_FS_MGR_SHIFT)                              /* 0x00000001 */
/* FSRC */
#define DMA_FSRC_OFFSET                                    (0x34U)
#define DMA_FSRC                                           (0x0U)
#define DMA_FSRC_FAULT_STATUS_SHIFT                        (0U)
#define DMA_FSRC_FAULT_STATUS_MASK                         (0xFFU << DMA_FSRC_FAULT_STATUS_SHIFT)                       /* 0x000000FF */
/* FTRD */
#define DMA_FTRD_OFFSET                                    (0x38U)
#define DMA_FTRD_UNDEF_INSTR_SHIFT                         (0U)
#define DMA_FTRD_UNDEF_INSTR_MASK                          (0x1U << DMA_FTRD_UNDEF_INSTR_SHIFT)                         /* 0x00000001 */
#define DMA_FTRD_OPERAND_INVALID_SHIFT                     (1U)
#define DMA_FTRD_OPERAND_INVALID_MASK                      (0x1U << DMA_FTRD_OPERAND_INVALID_SHIFT)                     /* 0x00000002 */
#define DMA_FTRD_DMAGO_ERR_SHIFT                           (4U)
#define DMA_FTRD_DMAGO_ERR_MASK                            (0x1U << DMA_FTRD_DMAGO_ERR_SHIFT)                           /* 0x00000010 */
#define DMA_FTRD_MGR_EVNT_ERR_SHIFT                        (5U)
#define DMA_FTRD_MGR_EVNT_ERR_MASK                         (0x1U << DMA_FTRD_MGR_EVNT_ERR_SHIFT)                        /* 0x00000020 */
#define DMA_FTRD_INSTR_FETCH_ERR_SHIFT                     (16U)
#define DMA_FTRD_INSTR_FETCH_ERR_MASK                      (0x1U << DMA_FTRD_INSTR_FETCH_ERR_SHIFT)                     /* 0x00010000 */
#define DMA_FTRD_DBG_INSTR_SHIFT                           (30U)
#define DMA_FTRD_DBG_INSTR_MASK                            (0x1U << DMA_FTRD_DBG_INSTR_SHIFT)                           /* 0x40000000 */
/* FTR0 */
#define DMA_FTR0_OFFSET                                    (0x40U)
#define DMA_FTR0                                           (0x0U)
#define DMA_FTR0_UNDEF_INSTR_SHIFT                         (0U)
#define DMA_FTR0_UNDEF_INSTR_MASK                          (0x1U << DMA_FTR0_UNDEF_INSTR_SHIFT)                         /* 0x00000001 */
#define DMA_FTR0_OPERAND_INVALID_SHIFT                     (1U)
#define DMA_FTR0_OPERAND_INVALID_MASK                      (0x1U << DMA_FTR0_OPERAND_INVALID_SHIFT)                     /* 0x00000002 */
#define DMA_FTR0_CH_EVENT_ERR_SHIFT                        (5U)
#define DMA_FTR0_CH_EVENT_ERR_MASK                         (0x1U << DMA_FTR0_CH_EVENT_ERR_SHIFT)                        /* 0x00000020 */
#define DMA_FTR0_CH_PERIPH_ERR_SHIFT                       (6U)
#define DMA_FTR0_CH_PERIPH_ERR_MASK                        (0x1U << DMA_FTR0_CH_PERIPH_ERR_SHIFT)                       /* 0x00000040 */
#define DMA_FTR0_CH_RDWR_ERR_SHIFT                         (7U)
#define DMA_FTR0_CH_RDWR_ERR_MASK                          (0x1U << DMA_FTR0_CH_RDWR_ERR_SHIFT)                         /* 0x00000080 */
#define DMA_FTR0_MFIFO_ERR_SHIFT                           (12U)
#define DMA_FTR0_MFIFO_ERR_MASK                            (0x1U << DMA_FTR0_MFIFO_ERR_SHIFT)                           /* 0x00001000 */
#define DMA_FTR0_ST_DATA_UNAVAILABLE_SHIFT                 (13U)
#define DMA_FTR0_ST_DATA_UNAVAILABLE_MASK                  (0x1U << DMA_FTR0_ST_DATA_UNAVAILABLE_SHIFT)                 /* 0x00002000 */
#define DMA_FTR0_INSTR_FETCH_ERR_SHIFT                     (16U)
#define DMA_FTR0_INSTR_FETCH_ERR_MASK                      (0x1U << DMA_FTR0_INSTR_FETCH_ERR_SHIFT)                     /* 0x00010000 */
#define DMA_FTR0_DATA_WRITE_ERR_SHIFT                      (17U)
#define DMA_FTR0_DATA_WRITE_ERR_MASK                       (0x1U << DMA_FTR0_DATA_WRITE_ERR_SHIFT)                      /* 0x00020000 */
#define DMA_FTR0_DATA_READ_ERR_SHIFT                       (18U)
#define DMA_FTR0_DATA_READ_ERR_MASK                        (0x1U << DMA_FTR0_DATA_READ_ERR_SHIFT)                       /* 0x00040000 */
#define DMA_FTR0_DBG_INSTR_SHIFT                           (30U)
#define DMA_FTR0_DBG_INSTR_MASK                            (0x1U << DMA_FTR0_DBG_INSTR_SHIFT)                           /* 0x40000000 */
#define DMA_FTR0_LOCKUP_ERR_SHIFT                          (31U)
#define DMA_FTR0_LOCKUP_ERR_MASK                           (0x1U << DMA_FTR0_LOCKUP_ERR_SHIFT)                          /* 0x80000000 */
/* FTR1 */
#define DMA_FTR1_OFFSET                                    (0x44U)
#define DMA_FTR1                                           (0x0U)
#define DMA_FTR1_UNDEF_INSTR_SHIFT                         (0U)
#define DMA_FTR1_UNDEF_INSTR_MASK                          (0x1U << DMA_FTR1_UNDEF_INSTR_SHIFT)                         /* 0x00000001 */
#define DMA_FTR1_OPERAND_INVALID_SHIFT                     (1U)
#define DMA_FTR1_OPERAND_INVALID_MASK                      (0x1U << DMA_FTR1_OPERAND_INVALID_SHIFT)                     /* 0x00000002 */
#define DMA_FTR1_CH_EVENT_ERR_SHIFT                        (5U)
#define DMA_FTR1_CH_EVENT_ERR_MASK                         (0x1U << DMA_FTR1_CH_EVENT_ERR_SHIFT)                        /* 0x00000020 */
#define DMA_FTR1_CH_PERIPH_ERR_SHIFT                       (6U)
#define DMA_FTR1_CH_PERIPH_ERR_MASK                        (0x1U << DMA_FTR1_CH_PERIPH_ERR_SHIFT)                       /* 0x00000040 */
#define DMA_FTR1_CH_RDWR_ERR_SHIFT                         (7U)
#define DMA_FTR1_CH_RDWR_ERR_MASK                          (0x1U << DMA_FTR1_CH_RDWR_ERR_SHIFT)                         /* 0x00000080 */
#define DMA_FTR1_MFIFO_ERR_SHIFT                           (12U)
#define DMA_FTR1_MFIFO_ERR_MASK                            (0x1U << DMA_FTR1_MFIFO_ERR_SHIFT)                           /* 0x00001000 */
#define DMA_FTR1_ST_DATA_UNAVAILABLE_SHIFT                 (13U)
#define DMA_FTR1_ST_DATA_UNAVAILABLE_MASK                  (0x1U << DMA_FTR1_ST_DATA_UNAVAILABLE_SHIFT)                 /* 0x00002000 */
#define DMA_FTR1_INSTR_FETCH_ERR_SHIFT                     (16U)
#define DMA_FTR1_INSTR_FETCH_ERR_MASK                      (0x1U << DMA_FTR1_INSTR_FETCH_ERR_SHIFT)                     /* 0x00010000 */
#define DMA_FTR1_DATA_WRITE_ERR_SHIFT                      (17U)
#define DMA_FTR1_DATA_WRITE_ERR_MASK                       (0x1U << DMA_FTR1_DATA_WRITE_ERR_SHIFT)                      /* 0x00020000 */
#define DMA_FTR1_DATA_READ_ERR_SHIFT                       (18U)
#define DMA_FTR1_DATA_READ_ERR_MASK                        (0x1U << DMA_FTR1_DATA_READ_ERR_SHIFT)                       /* 0x00040000 */
#define DMA_FTR1_DBG_INSTR_SHIFT                           (30U)
#define DMA_FTR1_DBG_INSTR_MASK                            (0x1U << DMA_FTR1_DBG_INSTR_SHIFT)                           /* 0x40000000 */
#define DMA_FTR1_LOCKUP_ERR_SHIFT                          (31U)
#define DMA_FTR1_LOCKUP_ERR_MASK                           (0x1U << DMA_FTR1_LOCKUP_ERR_SHIFT)                          /* 0x80000000 */
/* FTR2 */
#define DMA_FTR2_OFFSET                                    (0x48U)
#define DMA_FTR2                                           (0x0U)
#define DMA_FTR2_UNDEF_INSTR_SHIFT                         (0U)
#define DMA_FTR2_UNDEF_INSTR_MASK                          (0x1U << DMA_FTR2_UNDEF_INSTR_SHIFT)                         /* 0x00000001 */
#define DMA_FTR2_OPERAND_INVALID_SHIFT                     (1U)
#define DMA_FTR2_OPERAND_INVALID_MASK                      (0x1U << DMA_FTR2_OPERAND_INVALID_SHIFT)                     /* 0x00000002 */
#define DMA_FTR2_CH_EVENT_ERR_SHIFT                        (5U)
#define DMA_FTR2_CH_EVENT_ERR_MASK                         (0x1U << DMA_FTR2_CH_EVENT_ERR_SHIFT)                        /* 0x00000020 */
#define DMA_FTR2_CH_PERIPH_ERR_SHIFT                       (6U)
#define DMA_FTR2_CH_PERIPH_ERR_MASK                        (0x1U << DMA_FTR2_CH_PERIPH_ERR_SHIFT)                       /* 0x00000040 */
#define DMA_FTR2_CH_RDWR_ERR_SHIFT                         (7U)
#define DMA_FTR2_CH_RDWR_ERR_MASK                          (0x1U << DMA_FTR2_CH_RDWR_ERR_SHIFT)                         /* 0x00000080 */
#define DMA_FTR2_MFIFO_ERR_SHIFT                           (12U)
#define DMA_FTR2_MFIFO_ERR_MASK                            (0x1U << DMA_FTR2_MFIFO_ERR_SHIFT)                           /* 0x00001000 */
#define DMA_FTR2_ST_DATA_UNAVAILABLE_SHIFT                 (13U)
#define DMA_FTR2_ST_DATA_UNAVAILABLE_MASK                  (0x1U << DMA_FTR2_ST_DATA_UNAVAILABLE_SHIFT)                 /* 0x00002000 */
#define DMA_FTR2_INSTR_FETCH_ERR_SHIFT                     (16U)
#define DMA_FTR2_INSTR_FETCH_ERR_MASK                      (0x1U << DMA_FTR2_INSTR_FETCH_ERR_SHIFT)                     /* 0x00010000 */
#define DMA_FTR2_DATA_WRITE_ERR_SHIFT                      (17U)
#define DMA_FTR2_DATA_WRITE_ERR_MASK                       (0x1U << DMA_FTR2_DATA_WRITE_ERR_SHIFT)                      /* 0x00020000 */
#define DMA_FTR2_DATA_READ_ERR_SHIFT                       (18U)
#define DMA_FTR2_DATA_READ_ERR_MASK                        (0x1U << DMA_FTR2_DATA_READ_ERR_SHIFT)                       /* 0x00040000 */
#define DMA_FTR2_DBG_INSTR_SHIFT                           (30U)
#define DMA_FTR2_DBG_INSTR_MASK                            (0x1U << DMA_FTR2_DBG_INSTR_SHIFT)                           /* 0x40000000 */
#define DMA_FTR2_LOCKUP_ERR_SHIFT                          (31U)
#define DMA_FTR2_LOCKUP_ERR_MASK                           (0x1U << DMA_FTR2_LOCKUP_ERR_SHIFT)                          /* 0x80000000 */
/* FTR3 */
#define DMA_FTR3_OFFSET                                    (0x4CU)
#define DMA_FTR3                                           (0x0U)
#define DMA_FTR3_UNDEF_INSTR_SHIFT                         (0U)
#define DMA_FTR3_UNDEF_INSTR_MASK                          (0x1U << DMA_FTR3_UNDEF_INSTR_SHIFT)                         /* 0x00000001 */
#define DMA_FTR3_OPERAND_INVALID_SHIFT                     (1U)
#define DMA_FTR3_OPERAND_INVALID_MASK                      (0x1U << DMA_FTR3_OPERAND_INVALID_SHIFT)                     /* 0x00000002 */
#define DMA_FTR3_CH_EVENT_ERR_SHIFT                        (5U)
#define DMA_FTR3_CH_EVENT_ERR_MASK                         (0x1U << DMA_FTR3_CH_EVENT_ERR_SHIFT)                        /* 0x00000020 */
#define DMA_FTR3_CH_PERIPH_ERR_SHIFT                       (6U)
#define DMA_FTR3_CH_PERIPH_ERR_MASK                        (0x1U << DMA_FTR3_CH_PERIPH_ERR_SHIFT)                       /* 0x00000040 */
#define DMA_FTR3_CH_RDWR_ERR_SHIFT                         (7U)
#define DMA_FTR3_CH_RDWR_ERR_MASK                          (0x1U << DMA_FTR3_CH_RDWR_ERR_SHIFT)                         /* 0x00000080 */
#define DMA_FTR3_MFIFO_ERR_SHIFT                           (12U)
#define DMA_FTR3_MFIFO_ERR_MASK                            (0x1U << DMA_FTR3_MFIFO_ERR_SHIFT)                           /* 0x00001000 */
#define DMA_FTR3_ST_DATA_UNAVAILABLE_SHIFT                 (13U)
#define DMA_FTR3_ST_DATA_UNAVAILABLE_MASK                  (0x1U << DMA_FTR3_ST_DATA_UNAVAILABLE_SHIFT)                 /* 0x00002000 */
#define DMA_FTR3_INSTR_FETCH_ERR_SHIFT                     (16U)
#define DMA_FTR3_INSTR_FETCH_ERR_MASK                      (0x1U << DMA_FTR3_INSTR_FETCH_ERR_SHIFT)                     /* 0x00010000 */
#define DMA_FTR3_DATA_WRITE_ERR_SHIFT                      (17U)
#define DMA_FTR3_DATA_WRITE_ERR_MASK                       (0x1U << DMA_FTR3_DATA_WRITE_ERR_SHIFT)                      /* 0x00020000 */
#define DMA_FTR3_DATA_READ_ERR_SHIFT                       (18U)
#define DMA_FTR3_DATA_READ_ERR_MASK                        (0x1U << DMA_FTR3_DATA_READ_ERR_SHIFT)                       /* 0x00040000 */
#define DMA_FTR3_DBG_INSTR_SHIFT                           (30U)
#define DMA_FTR3_DBG_INSTR_MASK                            (0x1U << DMA_FTR3_DBG_INSTR_SHIFT)                           /* 0x40000000 */
#define DMA_FTR3_LOCKUP_ERR_SHIFT                          (31U)
#define DMA_FTR3_LOCKUP_ERR_MASK                           (0x1U << DMA_FTR3_LOCKUP_ERR_SHIFT)                          /* 0x80000000 */
/* FTR4 */
#define DMA_FTR4_OFFSET                                    (0x50U)
#define DMA_FTR4                                           (0x0U)
#define DMA_FTR4_UNDEF_INSTR_SHIFT                         (0U)
#define DMA_FTR4_UNDEF_INSTR_MASK                          (0x1U << DMA_FTR4_UNDEF_INSTR_SHIFT)                         /* 0x00000001 */
#define DMA_FTR4_OPERAND_INVALID_SHIFT                     (1U)
#define DMA_FTR4_OPERAND_INVALID_MASK                      (0x1U << DMA_FTR4_OPERAND_INVALID_SHIFT)                     /* 0x00000002 */
#define DMA_FTR4_CH_EVENT_ERR_SHIFT                        (5U)
#define DMA_FTR4_CH_EVENT_ERR_MASK                         (0x1U << DMA_FTR4_CH_EVENT_ERR_SHIFT)                        /* 0x00000020 */
#define DMA_FTR4_CH_PERIPH_ERR_SHIFT                       (6U)
#define DMA_FTR4_CH_PERIPH_ERR_MASK                        (0x1U << DMA_FTR4_CH_PERIPH_ERR_SHIFT)                       /* 0x00000040 */
#define DMA_FTR4_CH_RDWR_ERR_SHIFT                         (7U)
#define DMA_FTR4_CH_RDWR_ERR_MASK                          (0x1U << DMA_FTR4_CH_RDWR_ERR_SHIFT)                         /* 0x00000080 */
#define DMA_FTR4_MFIFO_ERR_SHIFT                           (12U)
#define DMA_FTR4_MFIFO_ERR_MASK                            (0x1U << DMA_FTR4_MFIFO_ERR_SHIFT)                           /* 0x00001000 */
#define DMA_FTR4_ST_DATA_UNAVAILABLE_SHIFT                 (13U)
#define DMA_FTR4_ST_DATA_UNAVAILABLE_MASK                  (0x1U << DMA_FTR4_ST_DATA_UNAVAILABLE_SHIFT)                 /* 0x00002000 */
#define DMA_FTR4_INSTR_FETCH_ERR_SHIFT                     (16U)
#define DMA_FTR4_INSTR_FETCH_ERR_MASK                      (0x1U << DMA_FTR4_INSTR_FETCH_ERR_SHIFT)                     /* 0x00010000 */
#define DMA_FTR4_DATA_WRITE_ERR_SHIFT                      (17U)
#define DMA_FTR4_DATA_WRITE_ERR_MASK                       (0x1U << DMA_FTR4_DATA_WRITE_ERR_SHIFT)                      /* 0x00020000 */
#define DMA_FTR4_DATA_READ_ERR_SHIFT                       (18U)
#define DMA_FTR4_DATA_READ_ERR_MASK                        (0x1U << DMA_FTR4_DATA_READ_ERR_SHIFT)                       /* 0x00040000 */
#define DMA_FTR4_DBG_INSTR_SHIFT                           (30U)
#define DMA_FTR4_DBG_INSTR_MASK                            (0x1U << DMA_FTR4_DBG_INSTR_SHIFT)                           /* 0x40000000 */
#define DMA_FTR4_LOCKUP_ERR_SHIFT                          (31U)
#define DMA_FTR4_LOCKUP_ERR_MASK                           (0x1U << DMA_FTR4_LOCKUP_ERR_SHIFT)                          /* 0x80000000 */
/* FTR5 */
#define DMA_FTR5_OFFSET                                    (0x54U)
#define DMA_FTR5                                           (0x0U)
#define DMA_FTR5_UNDEF_INSTR_SHIFT                         (0U)
#define DMA_FTR5_UNDEF_INSTR_MASK                          (0x1U << DMA_FTR5_UNDEF_INSTR_SHIFT)                         /* 0x00000001 */
#define DMA_FTR5_OPERAND_INVALID_SHIFT                     (1U)
#define DMA_FTR5_OPERAND_INVALID_MASK                      (0x1U << DMA_FTR5_OPERAND_INVALID_SHIFT)                     /* 0x00000002 */
#define DMA_FTR5_CH_EVENT_ERR_SHIFT                        (5U)
#define DMA_FTR5_CH_EVENT_ERR_MASK                         (0x1U << DMA_FTR5_CH_EVENT_ERR_SHIFT)                        /* 0x00000020 */
#define DMA_FTR5_CH_PERIPH_ERR_SHIFT                       (6U)
#define DMA_FTR5_CH_PERIPH_ERR_MASK                        (0x1U << DMA_FTR5_CH_PERIPH_ERR_SHIFT)                       /* 0x00000040 */
#define DMA_FTR5_CH_RDWR_ERR_SHIFT                         (7U)
#define DMA_FTR5_CH_RDWR_ERR_MASK                          (0x1U << DMA_FTR5_CH_RDWR_ERR_SHIFT)                         /* 0x00000080 */
#define DMA_FTR5_MFIFO_ERR_SHIFT                           (12U)
#define DMA_FTR5_MFIFO_ERR_MASK                            (0x1U << DMA_FTR5_MFIFO_ERR_SHIFT)                           /* 0x00001000 */
#define DMA_FTR5_ST_DATA_UNAVAILABLE_SHIFT                 (13U)
#define DMA_FTR5_ST_DATA_UNAVAILABLE_MASK                  (0x1U << DMA_FTR5_ST_DATA_UNAVAILABLE_SHIFT)                 /* 0x00002000 */
#define DMA_FTR5_INSTR_FETCH_ERR_SHIFT                     (16U)
#define DMA_FTR5_INSTR_FETCH_ERR_MASK                      (0x1U << DMA_FTR5_INSTR_FETCH_ERR_SHIFT)                     /* 0x00010000 */
#define DMA_FTR5_DATA_WRITE_ERR_SHIFT                      (17U)
#define DMA_FTR5_DATA_WRITE_ERR_MASK                       (0x1U << DMA_FTR5_DATA_WRITE_ERR_SHIFT)                      /* 0x00020000 */
#define DMA_FTR5_DATA_READ_ERR_SHIFT                       (18U)
#define DMA_FTR5_DATA_READ_ERR_MASK                        (0x1U << DMA_FTR5_DATA_READ_ERR_SHIFT)                       /* 0x00040000 */
#define DMA_FTR5_DBG_INSTR_SHIFT                           (30U)
#define DMA_FTR5_DBG_INSTR_MASK                            (0x1U << DMA_FTR5_DBG_INSTR_SHIFT)                           /* 0x40000000 */
#define DMA_FTR5_LOCKUP_ERR_SHIFT                          (31U)
#define DMA_FTR5_LOCKUP_ERR_MASK                           (0x1U << DMA_FTR5_LOCKUP_ERR_SHIFT)                          /* 0x80000000 */
/* FTR6 */
#define DMA_FTR6_OFFSET                                    (0x58U)
#define DMA_FTR6                                           (0x0U)
#define DMA_FTR6_UNDEF_INSTR_SHIFT                         (0U)
#define DMA_FTR6_UNDEF_INSTR_MASK                          (0x1U << DMA_FTR6_UNDEF_INSTR_SHIFT)                         /* 0x00000001 */
#define DMA_FTR6_OPERAND_INVALID_SHIFT                     (1U)
#define DMA_FTR6_OPERAND_INVALID_MASK                      (0x1U << DMA_FTR6_OPERAND_INVALID_SHIFT)                     /* 0x00000002 */
#define DMA_FTR6_CH_EVENT_ERR_SHIFT                        (5U)
#define DMA_FTR6_CH_EVENT_ERR_MASK                         (0x1U << DMA_FTR6_CH_EVENT_ERR_SHIFT)                        /* 0x00000020 */
#define DMA_FTR6_CH_PERIPH_ERR_SHIFT                       (6U)
#define DMA_FTR6_CH_PERIPH_ERR_MASK                        (0x1U << DMA_FTR6_CH_PERIPH_ERR_SHIFT)                       /* 0x00000040 */
#define DMA_FTR6_CH_RDWR_ERR_SHIFT                         (7U)
#define DMA_FTR6_CH_RDWR_ERR_MASK                          (0x1U << DMA_FTR6_CH_RDWR_ERR_SHIFT)                         /* 0x00000080 */
#define DMA_FTR6_MFIFO_ERR_SHIFT                           (12U)
#define DMA_FTR6_MFIFO_ERR_MASK                            (0x1U << DMA_FTR6_MFIFO_ERR_SHIFT)                           /* 0x00001000 */
#define DMA_FTR6_ST_DATA_UNAVAILABLE_SHIFT                 (13U)
#define DMA_FTR6_ST_DATA_UNAVAILABLE_MASK                  (0x1U << DMA_FTR6_ST_DATA_UNAVAILABLE_SHIFT)                 /* 0x00002000 */
#define DMA_FTR6_INSTR_FETCH_ERR_SHIFT                     (16U)
#define DMA_FTR6_INSTR_FETCH_ERR_MASK                      (0x1U << DMA_FTR6_INSTR_FETCH_ERR_SHIFT)                     /* 0x00010000 */
#define DMA_FTR6_DATA_WRITE_ERR_SHIFT                      (17U)
#define DMA_FTR6_DATA_WRITE_ERR_MASK                       (0x1U << DMA_FTR6_DATA_WRITE_ERR_SHIFT)                      /* 0x00020000 */
#define DMA_FTR6_DATA_READ_ERR_SHIFT                       (18U)
#define DMA_FTR6_DATA_READ_ERR_MASK                        (0x1U << DMA_FTR6_DATA_READ_ERR_SHIFT)                       /* 0x00040000 */
#define DMA_FTR6_DBG_INSTR_SHIFT                           (30U)
#define DMA_FTR6_DBG_INSTR_MASK                            (0x1U << DMA_FTR6_DBG_INSTR_SHIFT)                           /* 0x40000000 */
#define DMA_FTR6_LOCKUP_ERR_SHIFT                          (31U)
#define DMA_FTR6_LOCKUP_ERR_MASK                           (0x1U << DMA_FTR6_LOCKUP_ERR_SHIFT)                          /* 0x80000000 */
/* FTR7 */
#define DMA_FTR7_OFFSET                                    (0x5CU)
#define DMA_FTR7                                           (0x0U)
#define DMA_FTR7_UNDEF_INSTR_SHIFT                         (0U)
#define DMA_FTR7_UNDEF_INSTR_MASK                          (0x1U << DMA_FTR7_UNDEF_INSTR_SHIFT)                         /* 0x00000001 */
#define DMA_FTR7_OPERAND_INVALID_SHIFT                     (1U)
#define DMA_FTR7_OPERAND_INVALID_MASK                      (0x1U << DMA_FTR7_OPERAND_INVALID_SHIFT)                     /* 0x00000002 */
#define DMA_FTR7_CH_EVENT_ERR_SHIFT                        (5U)
#define DMA_FTR7_CH_EVENT_ERR_MASK                         (0x1U << DMA_FTR7_CH_EVENT_ERR_SHIFT)                        /* 0x00000020 */
#define DMA_FTR7_CH_PERIPH_ERR_SHIFT                       (6U)
#define DMA_FTR7_CH_PERIPH_ERR_MASK                        (0x1U << DMA_FTR7_CH_PERIPH_ERR_SHIFT)                       /* 0x00000040 */
#define DMA_FTR7_CH_RDWR_ERR_SHIFT                         (7U)
#define DMA_FTR7_CH_RDWR_ERR_MASK                          (0x1U << DMA_FTR7_CH_RDWR_ERR_SHIFT)                         /* 0x00000080 */
#define DMA_FTR7_MFIFO_ERR_SHIFT                           (12U)
#define DMA_FTR7_MFIFO_ERR_MASK                            (0x1U << DMA_FTR7_MFIFO_ERR_SHIFT)                           /* 0x00001000 */
#define DMA_FTR7_ST_DATA_UNAVAILABLE_SHIFT                 (13U)
#define DMA_FTR7_ST_DATA_UNAVAILABLE_MASK                  (0x1U << DMA_FTR7_ST_DATA_UNAVAILABLE_SHIFT)                 /* 0x00002000 */
#define DMA_FTR7_INSTR_FETCH_ERR_SHIFT                     (16U)
#define DMA_FTR7_INSTR_FETCH_ERR_MASK                      (0x1U << DMA_FTR7_INSTR_FETCH_ERR_SHIFT)                     /* 0x00010000 */
#define DMA_FTR7_DATA_WRITE_ERR_SHIFT                      (17U)
#define DMA_FTR7_DATA_WRITE_ERR_MASK                       (0x1U << DMA_FTR7_DATA_WRITE_ERR_SHIFT)                      /* 0x00020000 */
#define DMA_FTR7_DATA_READ_ERR_SHIFT                       (18U)
#define DMA_FTR7_DATA_READ_ERR_MASK                        (0x1U << DMA_FTR7_DATA_READ_ERR_SHIFT)                       /* 0x00040000 */
#define DMA_FTR7_DBG_INSTR_SHIFT                           (30U)
#define DMA_FTR7_DBG_INSTR_MASK                            (0x1U << DMA_FTR7_DBG_INSTR_SHIFT)                           /* 0x40000000 */
#define DMA_FTR7_LOCKUP_ERR_SHIFT                          (31U)
#define DMA_FTR7_LOCKUP_ERR_MASK                           (0x1U << DMA_FTR7_LOCKUP_ERR_SHIFT)                          /* 0x80000000 */
/* CSR0 */
#define DMA_CSR0_OFFSET                                    (0x100U)
#define DMA_CSR0                                           (0x0U)
#define DMA_CSR0_CHANNEL_STATUS_SHIFT                      (0U)
#define DMA_CSR0_CHANNEL_STATUS_MASK                       (0xFU << DMA_CSR0_CHANNEL_STATUS_SHIFT)                      /* 0x0000000F */
#define DMA_CSR0_WAKEUP_NUMBER_SHIFT                       (4U)
#define DMA_CSR0_WAKEUP_NUMBER_MASK                        (0x1FU << DMA_CSR0_WAKEUP_NUMBER_SHIFT)                      /* 0x000001F0 */
#define DMA_CSR0_DMAWFP_B_NS_SHIFT                         (14U)
#define DMA_CSR0_DMAWFP_B_NS_MASK                          (0x1U << DMA_CSR0_DMAWFP_B_NS_SHIFT)                         /* 0x00004000 */
#define DMA_CSR0_DMAWFP_PERIPH_SHIFT                       (15U)
#define DMA_CSR0_DMAWFP_PERIPH_MASK                        (0x1U << DMA_CSR0_DMAWFP_PERIPH_SHIFT)                       /* 0x00008000 */
#define DMA_CSR0_CNS_SHIFT                                 (21U)
#define DMA_CSR0_CNS_MASK                                  (0x1U << DMA_CSR0_CNS_SHIFT)                                 /* 0x00200000 */
/* CPC0 */
#define DMA_CPC0_OFFSET                                    (0x104U)
#define DMA_CPC0                                           (0x0U)
#define DMA_CPC0_PC_CHNL_SHIFT                             (0U)
#define DMA_CPC0_PC_CHNL_MASK                              (0xFFFFFFFFU << DMA_CPC0_PC_CHNL_SHIFT)                      /* 0xFFFFFFFF */
/* CSR1 */
#define DMA_CSR1_OFFSET                                    (0x108U)
#define DMA_CSR1                                           (0x0U)
#define DMA_CSR1_CHANNEL_STATUS_SHIFT                      (0U)
#define DMA_CSR1_CHANNEL_STATUS_MASK                       (0xFU << DMA_CSR1_CHANNEL_STATUS_SHIFT)                      /* 0x0000000F */
#define DMA_CSR1_WAKEUP_NUMBER_SHIFT                       (4U)
#define DMA_CSR1_WAKEUP_NUMBER_MASK                        (0x1FU << DMA_CSR1_WAKEUP_NUMBER_SHIFT)                      /* 0x000001F0 */
#define DMA_CSR1_DMAWFP_B_NS_SHIFT                         (14U)
#define DMA_CSR1_DMAWFP_B_NS_MASK                          (0x1U << DMA_CSR1_DMAWFP_B_NS_SHIFT)                         /* 0x00004000 */
#define DMA_CSR1_DMAWFP_PERIPH_SHIFT                       (15U)
#define DMA_CSR1_DMAWFP_PERIPH_MASK                        (0x1U << DMA_CSR1_DMAWFP_PERIPH_SHIFT)                       /* 0x00008000 */
#define DMA_CSR1_CNS_SHIFT                                 (21U)
#define DMA_CSR1_CNS_MASK                                  (0x1U << DMA_CSR1_CNS_SHIFT)                                 /* 0x00200000 */
/* CPC1 */
#define DMA_CPC1_OFFSET                                    (0x10CU)
#define DMA_CPC1                                           (0x0U)
#define DMA_CPC1_PC_CHNL_SHIFT                             (0U)
#define DMA_CPC1_PC_CHNL_MASK                              (0xFFFFFFFFU << DMA_CPC1_PC_CHNL_SHIFT)                      /* 0xFFFFFFFF */
/* CSR2 */
#define DMA_CSR2_OFFSET                                    (0x110U)
#define DMA_CSR2                                           (0x0U)
#define DMA_CSR2_CHANNEL_STATUS_SHIFT                      (0U)
#define DMA_CSR2_CHANNEL_STATUS_MASK                       (0xFU << DMA_CSR2_CHANNEL_STATUS_SHIFT)                      /* 0x0000000F */
#define DMA_CSR2_WAKEUP_NUMBER_SHIFT                       (4U)
#define DMA_CSR2_WAKEUP_NUMBER_MASK                        (0x1FU << DMA_CSR2_WAKEUP_NUMBER_SHIFT)                      /* 0x000001F0 */
#define DMA_CSR2_DMAWFP_B_NS_SHIFT                         (14U)
#define DMA_CSR2_DMAWFP_B_NS_MASK                          (0x1U << DMA_CSR2_DMAWFP_B_NS_SHIFT)                         /* 0x00004000 */
#define DMA_CSR2_DMAWFP_PERIPH_SHIFT                       (15U)
#define DMA_CSR2_DMAWFP_PERIPH_MASK                        (0x1U << DMA_CSR2_DMAWFP_PERIPH_SHIFT)                       /* 0x00008000 */
#define DMA_CSR2_CNS_SHIFT                                 (21U)
#define DMA_CSR2_CNS_MASK                                  (0x1U << DMA_CSR2_CNS_SHIFT)                                 /* 0x00200000 */
/* CPC2 */
#define DMA_CPC2_OFFSET                                    (0x114U)
#define DMA_CPC2                                           (0x0U)
#define DMA_CPC2_PC_CHNL_SHIFT                             (0U)
#define DMA_CPC2_PC_CHNL_MASK                              (0xFFFFFFFFU << DMA_CPC2_PC_CHNL_SHIFT)                      /* 0xFFFFFFFF */
/* CSR3 */
#define DMA_CSR3_OFFSET                                    (0x118U)
#define DMA_CSR3                                           (0x0U)
#define DMA_CSR3_CHANNEL_STATUS_SHIFT                      (0U)
#define DMA_CSR3_CHANNEL_STATUS_MASK                       (0xFU << DMA_CSR3_CHANNEL_STATUS_SHIFT)                      /* 0x0000000F */
#define DMA_CSR3_WAKEUP_NUMBER_SHIFT                       (4U)
#define DMA_CSR3_WAKEUP_NUMBER_MASK                        (0x1FU << DMA_CSR3_WAKEUP_NUMBER_SHIFT)                      /* 0x000001F0 */
#define DMA_CSR3_DMAWFP_B_NS_SHIFT                         (14U)
#define DMA_CSR3_DMAWFP_B_NS_MASK                          (0x1U << DMA_CSR3_DMAWFP_B_NS_SHIFT)                         /* 0x00004000 */
#define DMA_CSR3_DMAWFP_PERIPH_SHIFT                       (15U)
#define DMA_CSR3_DMAWFP_PERIPH_MASK                        (0x1U << DMA_CSR3_DMAWFP_PERIPH_SHIFT)                       /* 0x00008000 */
#define DMA_CSR3_CNS_SHIFT                                 (21U)
#define DMA_CSR3_CNS_MASK                                  (0x1U << DMA_CSR3_CNS_SHIFT)                                 /* 0x00200000 */
/* CPC3 */
#define DMA_CPC3_OFFSET                                    (0x11CU)
#define DMA_CPC3                                           (0x0U)
#define DMA_CPC3_PC_CHNL_SHIFT                             (0U)
#define DMA_CPC3_PC_CHNL_MASK                              (0xFFFFFFFFU << DMA_CPC3_PC_CHNL_SHIFT)                      /* 0xFFFFFFFF */
/* CSR4 */
#define DMA_CSR4_OFFSET                                    (0x120U)
#define DMA_CSR4                                           (0x0U)
#define DMA_CSR4_CHANNEL_STATUS_SHIFT                      (0U)
#define DMA_CSR4_CHANNEL_STATUS_MASK                       (0xFU << DMA_CSR4_CHANNEL_STATUS_SHIFT)                      /* 0x0000000F */
#define DMA_CSR4_WAKEUP_NUMBER_SHIFT                       (4U)
#define DMA_CSR4_WAKEUP_NUMBER_MASK                        (0x1FU << DMA_CSR4_WAKEUP_NUMBER_SHIFT)                      /* 0x000001F0 */
#define DMA_CSR4_DMAWFP_B_NS_SHIFT                         (14U)
#define DMA_CSR4_DMAWFP_B_NS_MASK                          (0x1U << DMA_CSR4_DMAWFP_B_NS_SHIFT)                         /* 0x00004000 */
#define DMA_CSR4_DMAWFP_PERIPH_SHIFT                       (15U)
#define DMA_CSR4_DMAWFP_PERIPH_MASK                        (0x1U << DMA_CSR4_DMAWFP_PERIPH_SHIFT)                       /* 0x00008000 */
#define DMA_CSR4_CNS_SHIFT                                 (21U)
#define DMA_CSR4_CNS_MASK                                  (0x1U << DMA_CSR4_CNS_SHIFT)                                 /* 0x00200000 */
/* CPC4 */
#define DMA_CPC4_OFFSET                                    (0x124U)
#define DMA_CPC4                                           (0x0U)
#define DMA_CPC4_PC_CHNL_SHIFT                             (0U)
#define DMA_CPC4_PC_CHNL_MASK                              (0xFFFFFFFFU << DMA_CPC4_PC_CHNL_SHIFT)                      /* 0xFFFFFFFF */
/* CSR5 */
#define DMA_CSR5_OFFSET                                    (0x128U)
#define DMA_CSR5                                           (0x0U)
#define DMA_CSR5_CHANNEL_STATUS_SHIFT                      (0U)
#define DMA_CSR5_CHANNEL_STATUS_MASK                       (0xFU << DMA_CSR5_CHANNEL_STATUS_SHIFT)                      /* 0x0000000F */
#define DMA_CSR5_WAKEUP_NUMBER_SHIFT                       (4U)
#define DMA_CSR5_WAKEUP_NUMBER_MASK                        (0x1FU << DMA_CSR5_WAKEUP_NUMBER_SHIFT)                      /* 0x000001F0 */
#define DMA_CSR5_DMAWFP_B_NS_SHIFT                         (14U)
#define DMA_CSR5_DMAWFP_B_NS_MASK                          (0x1U << DMA_CSR5_DMAWFP_B_NS_SHIFT)                         /* 0x00004000 */
#define DMA_CSR5_DMAWFP_PERIPH_SHIFT                       (15U)
#define DMA_CSR5_DMAWFP_PERIPH_MASK                        (0x1U << DMA_CSR5_DMAWFP_PERIPH_SHIFT)                       /* 0x00008000 */
#define DMA_CSR5_CNS_SHIFT                                 (21U)
#define DMA_CSR5_CNS_MASK                                  (0x1U << DMA_CSR5_CNS_SHIFT)                                 /* 0x00200000 */
/* CPC5 */
#define DMA_CPC5_OFFSET                                    (0x12CU)
#define DMA_CPC5                                           (0x0U)
#define DMA_CPC5_PC_CHNL_SHIFT                             (0U)
#define DMA_CPC5_PC_CHNL_MASK                              (0xFFFFFFFFU << DMA_CPC5_PC_CHNL_SHIFT)                      /* 0xFFFFFFFF */
/* CSR6 */
#define DMA_CSR6_OFFSET                                    (0x130U)
#define DMA_CSR6                                           (0x0U)
#define DMA_CSR6_CHANNEL_STATUS_SHIFT                      (0U)
#define DMA_CSR6_CHANNEL_STATUS_MASK                       (0xFU << DMA_CSR6_CHANNEL_STATUS_SHIFT)                      /* 0x0000000F */
#define DMA_CSR6_WAKEUP_NUMBER_SHIFT                       (4U)
#define DMA_CSR6_WAKEUP_NUMBER_MASK                        (0x1FU << DMA_CSR6_WAKEUP_NUMBER_SHIFT)                      /* 0x000001F0 */
#define DMA_CSR6_DMAWFP_B_NS_SHIFT                         (14U)
#define DMA_CSR6_DMAWFP_B_NS_MASK                          (0x1U << DMA_CSR6_DMAWFP_B_NS_SHIFT)                         /* 0x00004000 */
#define DMA_CSR6_DMAWFP_PERIPH_SHIFT                       (15U)
#define DMA_CSR6_DMAWFP_PERIPH_MASK                        (0x1U << DMA_CSR6_DMAWFP_PERIPH_SHIFT)                       /* 0x00008000 */
#define DMA_CSR6_CNS_SHIFT                                 (21U)
#define DMA_CSR6_CNS_MASK                                  (0x1U << DMA_CSR6_CNS_SHIFT)                                 /* 0x00200000 */
/* CPC6 */
#define DMA_CPC6_OFFSET                                    (0x134U)
#define DMA_CPC6                                           (0x0U)
#define DMA_CPC6_PC_CHNL_SHIFT                             (0U)
#define DMA_CPC6_PC_CHNL_MASK                              (0xFFFFFFFFU << DMA_CPC6_PC_CHNL_SHIFT)                      /* 0xFFFFFFFF */
/* CSR7 */
#define DMA_CSR7_OFFSET                                    (0x138U)
#define DMA_CSR7                                           (0x0U)
#define DMA_CSR7_CHANNEL_STATUS_SHIFT                      (0U)
#define DMA_CSR7_CHANNEL_STATUS_MASK                       (0xFU << DMA_CSR7_CHANNEL_STATUS_SHIFT)                      /* 0x0000000F */
#define DMA_CSR7_WAKEUP_NUMBER_SHIFT                       (4U)
#define DMA_CSR7_WAKEUP_NUMBER_MASK                        (0x1FU << DMA_CSR7_WAKEUP_NUMBER_SHIFT)                      /* 0x000001F0 */
#define DMA_CSR7_DMAWFP_B_NS_SHIFT                         (14U)
#define DMA_CSR7_DMAWFP_B_NS_MASK                          (0x1U << DMA_CSR7_DMAWFP_B_NS_SHIFT)                         /* 0x00004000 */
#define DMA_CSR7_DMAWFP_PERIPH_SHIFT                       (15U)
#define DMA_CSR7_DMAWFP_PERIPH_MASK                        (0x1U << DMA_CSR7_DMAWFP_PERIPH_SHIFT)                       /* 0x00008000 */
#define DMA_CSR7_CNS_SHIFT                                 (21U)
#define DMA_CSR7_CNS_MASK                                  (0x1U << DMA_CSR7_CNS_SHIFT)                                 /* 0x00200000 */
/* CPC7 */
#define DMA_CPC7_OFFSET                                    (0x13CU)
#define DMA_CPC7                                           (0x0U)
#define DMA_CPC7_PC_CHNL_SHIFT                             (0U)
#define DMA_CPC7_PC_CHNL_MASK                              (0xFFFFFFFFU << DMA_CPC7_PC_CHNL_SHIFT)                      /* 0xFFFFFFFF */
/* SAR0 */
#define DMA_SAR0_OFFSET                                    (0x400U)
#define DMA_SAR0                                           (0x0U)
#define DMA_SAR0_SRC_ADDR_SHIFT                            (0U)
#define DMA_SAR0_SRC_ADDR_MASK                             (0xFFFFFFFFU << DMA_SAR0_SRC_ADDR_SHIFT)                     /* 0xFFFFFFFF */
/* DAR0 */
#define DMA_DAR0_OFFSET                                    (0x404U)
#define DMA_DAR0                                           (0x0U)
#define DMA_DAR0_DST_ADDR_SHIFT                            (0U)
#define DMA_DAR0_DST_ADDR_MASK                             (0xFFFFFFFFU << DMA_DAR0_DST_ADDR_SHIFT)                     /* 0xFFFFFFFF */
/* CCR0 */
#define DMA_CCR0_OFFSET                                    (0x408U)
#define DMA_CCR0                                           (0x0U)
#define DMA_CCR0_SRC_INC_SHIFT                             (0U)
#define DMA_CCR0_SRC_INC_MASK                              (0x1U << DMA_CCR0_SRC_INC_SHIFT)                             /* 0x00000001 */
#define DMA_CCR0_SRC_BURST_SIZE_SHIFT                      (1U)
#define DMA_CCR0_SRC_BURST_SIZE_MASK                       (0x7U << DMA_CCR0_SRC_BURST_SIZE_SHIFT)                      /* 0x0000000E */
#define DMA_CCR0_SRC_BURST_LEN_SHIFT                       (4U)
#define DMA_CCR0_SRC_BURST_LEN_MASK                        (0xFU << DMA_CCR0_SRC_BURST_LEN_SHIFT)                       /* 0x000000F0 */
#define DMA_CCR0_SRC_PROT_CTRL_SHIFT                       (8U)
#define DMA_CCR0_SRC_PROT_CTRL_MASK                        (0x7U << DMA_CCR0_SRC_PROT_CTRL_SHIFT)                       /* 0x00000700 */
#define DMA_CCR0_SRC_CACHE_CTRL_SHIFT                      (11U)
#define DMA_CCR0_SRC_CACHE_CTRL_MASK                       (0x7U << DMA_CCR0_SRC_CACHE_CTRL_SHIFT)                      /* 0x00003800 */
#define DMA_CCR0_DST_INC_SHIFT                             (14U)
#define DMA_CCR0_DST_INC_MASK                              (0x1U << DMA_CCR0_DST_INC_SHIFT)                             /* 0x00004000 */
#define DMA_CCR0_DST_BURST_SIZE_SHIFT                      (15U)
#define DMA_CCR0_DST_BURST_SIZE_MASK                       (0x7U << DMA_CCR0_DST_BURST_SIZE_SHIFT)                      /* 0x00038000 */
#define DMA_CCR0_DST_BURST_LEN_SHIFT                       (18U)
#define DMA_CCR0_DST_BURST_LEN_MASK                        (0xFU << DMA_CCR0_DST_BURST_LEN_SHIFT)                       /* 0x003C0000 */
#define DMA_CCR0_DST_PROT_CTRL_SHIFT                       (22U)
#define DMA_CCR0_DST_PROT_CTRL_MASK                        (0x7U << DMA_CCR0_DST_PROT_CTRL_SHIFT)                       /* 0x01C00000 */
#define DMA_CCR0_DST_CACHE_CTRL_SHIFT                      (25U)
#define DMA_CCR0_DST_CACHE_CTRL_MASK                       (0x7U << DMA_CCR0_DST_CACHE_CTRL_SHIFT)                      /* 0x0E000000 */
/* LC0_0 */
#define DMA_LC0_0_OFFSET                                   (0x40CU)
#define DMA_LC0_0                                          (0x0U)
#define DMA_LC0_0_LOOP_COUNTER_ITERATIONS_SHIFT            (0U)
#define DMA_LC0_0_LOOP_COUNTER_ITERATIONS_MASK             (0xFFU << DMA_LC0_0_LOOP_COUNTER_ITERATIONS_SHIFT)           /* 0x000000FF */
/* LC1_0 */
#define DMA_LC1_0_OFFSET                                   (0x410U)
#define DMA_LC1_0                                          (0x0U)
#define DMA_LC1_0_LOOP_COUNTER_ITERATIONS_SHIFT            (0U)
#define DMA_LC1_0_LOOP_COUNTER_ITERATIONS_MASK             (0xFFU << DMA_LC1_0_LOOP_COUNTER_ITERATIONS_SHIFT)           /* 0x000000FF */
/* SAR1 */
#define DMA_SAR1_OFFSET                                    (0x420U)
#define DMA_SAR1                                           (0x0U)
#define DMA_SAR1_SRC_ADDR_SHIFT                            (0U)
#define DMA_SAR1_SRC_ADDR_MASK                             (0xFFFFFFFFU << DMA_SAR1_SRC_ADDR_SHIFT)                     /* 0xFFFFFFFF */
/* DAR1 */
#define DMA_DAR1_OFFSET                                    (0x424U)
#define DMA_DAR1                                           (0x0U)
#define DMA_DAR1_DST_ADDR_SHIFT                            (0U)
#define DMA_DAR1_DST_ADDR_MASK                             (0xFFFFFFFFU << DMA_DAR1_DST_ADDR_SHIFT)                     /* 0xFFFFFFFF */
/* CCR1 */
#define DMA_CCR1_OFFSET                                    (0x428U)
#define DMA_CCR1                                           (0x0U)
#define DMA_CCR1_SRC_INC_SHIFT                             (0U)
#define DMA_CCR1_SRC_INC_MASK                              (0x1U << DMA_CCR1_SRC_INC_SHIFT)                             /* 0x00000001 */
#define DMA_CCR1_SRC_BURST_SIZE_SHIFT                      (1U)
#define DMA_CCR1_SRC_BURST_SIZE_MASK                       (0x7U << DMA_CCR1_SRC_BURST_SIZE_SHIFT)                      /* 0x0000000E */
#define DMA_CCR1_SRC_BURST_LEN_SHIFT                       (4U)
#define DMA_CCR1_SRC_BURST_LEN_MASK                        (0xFU << DMA_CCR1_SRC_BURST_LEN_SHIFT)                       /* 0x000000F0 */
#define DMA_CCR1_SRC_PROT_CTRL_SHIFT                       (8U)
#define DMA_CCR1_SRC_PROT_CTRL_MASK                        (0x7U << DMA_CCR1_SRC_PROT_CTRL_SHIFT)                       /* 0x00000700 */
#define DMA_CCR1_SRC_CACHE_CTRL_SHIFT                      (11U)
#define DMA_CCR1_SRC_CACHE_CTRL_MASK                       (0x7U << DMA_CCR1_SRC_CACHE_CTRL_SHIFT)                      /* 0x00003800 */
#define DMA_CCR1_DST_INC_SHIFT                             (14U)
#define DMA_CCR1_DST_INC_MASK                              (0x1U << DMA_CCR1_DST_INC_SHIFT)                             /* 0x00004000 */
#define DMA_CCR1_DST_BURST_SIZE_SHIFT                      (15U)
#define DMA_CCR1_DST_BURST_SIZE_MASK                       (0x7U << DMA_CCR1_DST_BURST_SIZE_SHIFT)                      /* 0x00038000 */
#define DMA_CCR1_DST_BURST_LEN_SHIFT                       (18U)
#define DMA_CCR1_DST_BURST_LEN_MASK                        (0xFU << DMA_CCR1_DST_BURST_LEN_SHIFT)                       /* 0x003C0000 */
#define DMA_CCR1_DST_PROT_CTRL_SHIFT                       (22U)
#define DMA_CCR1_DST_PROT_CTRL_MASK                        (0x7U << DMA_CCR1_DST_PROT_CTRL_SHIFT)                       /* 0x01C00000 */
#define DMA_CCR1_DST_CACHE_CTRL_SHIFT                      (25U)
#define DMA_CCR1_DST_CACHE_CTRL_MASK                       (0x7U << DMA_CCR1_DST_CACHE_CTRL_SHIFT)                      /* 0x0E000000 */
/* LC0_1 */
#define DMA_LC0_1_OFFSET                                   (0x42CU)
#define DMA_LC0_1                                          (0x0U)
#define DMA_LC0_1_LOOP_COUNTER_ITERATIONS_SHIFT            (0U)
#define DMA_LC0_1_LOOP_COUNTER_ITERATIONS_MASK             (0xFFU << DMA_LC0_1_LOOP_COUNTER_ITERATIONS_SHIFT)           /* 0x000000FF */
/* LC1_1 */
#define DMA_LC1_1_OFFSET                                   (0x430U)
#define DMA_LC1_1                                          (0x0U)
#define DMA_LC1_1_LOOP_COUNTER_ITERATIONS_SHIFT            (0U)
#define DMA_LC1_1_LOOP_COUNTER_ITERATIONS_MASK             (0xFFU << DMA_LC1_1_LOOP_COUNTER_ITERATIONS_SHIFT)           /* 0x000000FF */
/* SAR2 */
#define DMA_SAR2_OFFSET                                    (0x440U)
#define DMA_SAR2                                           (0x0U)
#define DMA_SAR2_SRC_ADDR_SHIFT                            (0U)
#define DMA_SAR2_SRC_ADDR_MASK                             (0xFFFFFFFFU << DMA_SAR2_SRC_ADDR_SHIFT)                     /* 0xFFFFFFFF */
/* DAR2 */
#define DMA_DAR2_OFFSET                                    (0x444U)
#define DMA_DAR2                                           (0x0U)
#define DMA_DAR2_DST_ADDR_SHIFT                            (0U)
#define DMA_DAR2_DST_ADDR_MASK                             (0xFFFFFFFFU << DMA_DAR2_DST_ADDR_SHIFT)                     /* 0xFFFFFFFF */
/* CCR2 */
#define DMA_CCR2_OFFSET                                    (0x448U)
#define DMA_CCR2                                           (0x0U)
#define DMA_CCR2_SRC_INC_SHIFT                             (0U)
#define DMA_CCR2_SRC_INC_MASK                              (0x1U << DMA_CCR2_SRC_INC_SHIFT)                             /* 0x00000001 */
#define DMA_CCR2_SRC_BURST_SIZE_SHIFT                      (1U)
#define DMA_CCR2_SRC_BURST_SIZE_MASK                       (0x7U << DMA_CCR2_SRC_BURST_SIZE_SHIFT)                      /* 0x0000000E */
#define DMA_CCR2_SRC_BURST_LEN_SHIFT                       (4U)
#define DMA_CCR2_SRC_BURST_LEN_MASK                        (0xFU << DMA_CCR2_SRC_BURST_LEN_SHIFT)                       /* 0x000000F0 */
#define DMA_CCR2_SRC_PROT_CTRL_SHIFT                       (8U)
#define DMA_CCR2_SRC_PROT_CTRL_MASK                        (0x7U << DMA_CCR2_SRC_PROT_CTRL_SHIFT)                       /* 0x00000700 */
#define DMA_CCR2_SRC_CACHE_CTRL_SHIFT                      (11U)
#define DMA_CCR2_SRC_CACHE_CTRL_MASK                       (0x7U << DMA_CCR2_SRC_CACHE_CTRL_SHIFT)                      /* 0x00003800 */
#define DMA_CCR2_DST_INC_SHIFT                             (14U)
#define DMA_CCR2_DST_INC_MASK                              (0x1U << DMA_CCR2_DST_INC_SHIFT)                             /* 0x00004000 */
#define DMA_CCR2_DST_BURST_SIZE_SHIFT                      (15U)
#define DMA_CCR2_DST_BURST_SIZE_MASK                       (0x7U << DMA_CCR2_DST_BURST_SIZE_SHIFT)                      /* 0x00038000 */
#define DMA_CCR2_DST_BURST_LEN_SHIFT                       (18U)
#define DMA_CCR2_DST_BURST_LEN_MASK                        (0xFU << DMA_CCR2_DST_BURST_LEN_SHIFT)                       /* 0x003C0000 */
#define DMA_CCR2_DST_PROT_CTRL_SHIFT                       (22U)
#define DMA_CCR2_DST_PROT_CTRL_MASK                        (0x7U << DMA_CCR2_DST_PROT_CTRL_SHIFT)                       /* 0x01C00000 */
#define DMA_CCR2_DST_CACHE_CTRL_SHIFT                      (25U)
#define DMA_CCR2_DST_CACHE_CTRL_MASK                       (0x7U << DMA_CCR2_DST_CACHE_CTRL_SHIFT)                      /* 0x0E000000 */
/* LC0_2 */
#define DMA_LC0_2_OFFSET                                   (0x44CU)
#define DMA_LC0_2                                          (0x0U)
#define DMA_LC0_2_LOOP_COUNTER_ITERATIONS_SHIFT            (0U)
#define DMA_LC0_2_LOOP_COUNTER_ITERATIONS_MASK             (0xFFU << DMA_LC0_2_LOOP_COUNTER_ITERATIONS_SHIFT)           /* 0x000000FF */
/* LC1_2 */
#define DMA_LC1_2_OFFSET                                   (0x450U)
#define DMA_LC1_2                                          (0x0U)
#define DMA_LC1_2_LOOP_COUNTER_ITERATIONS_SHIFT            (0U)
#define DMA_LC1_2_LOOP_COUNTER_ITERATIONS_MASK             (0xFFU << DMA_LC1_2_LOOP_COUNTER_ITERATIONS_SHIFT)           /* 0x000000FF */
/* SAR3 */
#define DMA_SAR3_OFFSET                                    (0x460U)
#define DMA_SAR3                                           (0x0U)
#define DMA_SAR3_SRC_ADDR_SHIFT                            (0U)
#define DMA_SAR3_SRC_ADDR_MASK                             (0xFFFFFFFFU << DMA_SAR3_SRC_ADDR_SHIFT)                     /* 0xFFFFFFFF */
/* DAR3 */
#define DMA_DAR3_OFFSET                                    (0x464U)
#define DMA_DAR3                                           (0x0U)
#define DMA_DAR3_DST_ADDR_SHIFT                            (0U)
#define DMA_DAR3_DST_ADDR_MASK                             (0xFFFFFFFFU << DMA_DAR3_DST_ADDR_SHIFT)                     /* 0xFFFFFFFF */
/* CCR3 */
#define DMA_CCR3_OFFSET                                    (0x468U)
#define DMA_CCR3                                           (0x0U)
#define DMA_CCR3_SRC_INC_SHIFT                             (0U)
#define DMA_CCR3_SRC_INC_MASK                              (0x1U << DMA_CCR3_SRC_INC_SHIFT)                             /* 0x00000001 */
#define DMA_CCR3_SRC_BURST_SIZE_SHIFT                      (1U)
#define DMA_CCR3_SRC_BURST_SIZE_MASK                       (0x7U << DMA_CCR3_SRC_BURST_SIZE_SHIFT)                      /* 0x0000000E */
#define DMA_CCR3_SRC_BURST_LEN_SHIFT                       (4U)
#define DMA_CCR3_SRC_BURST_LEN_MASK                        (0xFU << DMA_CCR3_SRC_BURST_LEN_SHIFT)                       /* 0x000000F0 */
#define DMA_CCR3_SRC_PROT_CTRL_SHIFT                       (8U)
#define DMA_CCR3_SRC_PROT_CTRL_MASK                        (0x7U << DMA_CCR3_SRC_PROT_CTRL_SHIFT)                       /* 0x00000700 */
#define DMA_CCR3_SRC_CACHE_CTRL_SHIFT                      (11U)
#define DMA_CCR3_SRC_CACHE_CTRL_MASK                       (0x7U << DMA_CCR3_SRC_CACHE_CTRL_SHIFT)                      /* 0x00003800 */
#define DMA_CCR3_DST_INC_SHIFT                             (14U)
#define DMA_CCR3_DST_INC_MASK                              (0x1U << DMA_CCR3_DST_INC_SHIFT)                             /* 0x00004000 */
#define DMA_CCR3_DST_BURST_SIZE_SHIFT                      (15U)
#define DMA_CCR3_DST_BURST_SIZE_MASK                       (0x7U << DMA_CCR3_DST_BURST_SIZE_SHIFT)                      /* 0x00038000 */
#define DMA_CCR3_DST_BURST_LEN_SHIFT                       (18U)
#define DMA_CCR3_DST_BURST_LEN_MASK                        (0xFU << DMA_CCR3_DST_BURST_LEN_SHIFT)                       /* 0x003C0000 */
#define DMA_CCR3_DST_PROT_CTRL_SHIFT                       (22U)
#define DMA_CCR3_DST_PROT_CTRL_MASK                        (0x7U << DMA_CCR3_DST_PROT_CTRL_SHIFT)                       /* 0x01C00000 */
#define DMA_CCR3_DST_CACHE_CTRL_SHIFT                      (25U)
#define DMA_CCR3_DST_CACHE_CTRL_MASK                       (0x7U << DMA_CCR3_DST_CACHE_CTRL_SHIFT)                      /* 0x0E000000 */
/* LC0_3 */
#define DMA_LC0_3_OFFSET                                   (0x46CU)
#define DMA_LC0_3                                          (0x0U)
#define DMA_LC0_3_LOOP_COUNTER_ITERATIONS_SHIFT            (0U)
#define DMA_LC0_3_LOOP_COUNTER_ITERATIONS_MASK             (0xFFU << DMA_LC0_3_LOOP_COUNTER_ITERATIONS_SHIFT)           /* 0x000000FF */
/* LC1_3 */
#define DMA_LC1_3_OFFSET                                   (0x470U)
#define DMA_LC1_3                                          (0x0U)
#define DMA_LC1_3_LOOP_COUNTER_ITERATIONS_SHIFT            (0U)
#define DMA_LC1_3_LOOP_COUNTER_ITERATIONS_MASK             (0xFFU << DMA_LC1_3_LOOP_COUNTER_ITERATIONS_SHIFT)           /* 0x000000FF */
/* SAR4 */
#define DMA_SAR4_OFFSET                                    (0x480U)
#define DMA_SAR4                                           (0x0U)
#define DMA_SAR4_SRC_ADDR_SHIFT                            (0U)
#define DMA_SAR4_SRC_ADDR_MASK                             (0xFFFFFFFFU << DMA_SAR4_SRC_ADDR_SHIFT)                     /* 0xFFFFFFFF */
/* DAR4 */
#define DMA_DAR4_OFFSET                                    (0x484U)
#define DMA_DAR4                                           (0x0U)
#define DMA_DAR4_DST_ADDR_SHIFT                            (0U)
#define DMA_DAR4_DST_ADDR_MASK                             (0xFFFFFFFFU << DMA_DAR4_DST_ADDR_SHIFT)                     /* 0xFFFFFFFF */
/* CCR4 */
#define DMA_CCR4_OFFSET                                    (0x488U)
#define DMA_CCR4                                           (0x0U)
#define DMA_CCR4_SRC_INC_SHIFT                             (0U)
#define DMA_CCR4_SRC_INC_MASK                              (0x1U << DMA_CCR4_SRC_INC_SHIFT)                             /* 0x00000001 */
#define DMA_CCR4_SRC_BURST_SIZE_SHIFT                      (1U)
#define DMA_CCR4_SRC_BURST_SIZE_MASK                       (0x7U << DMA_CCR4_SRC_BURST_SIZE_SHIFT)                      /* 0x0000000E */
#define DMA_CCR4_SRC_BURST_LEN_SHIFT                       (4U)
#define DMA_CCR4_SRC_BURST_LEN_MASK                        (0xFU << DMA_CCR4_SRC_BURST_LEN_SHIFT)                       /* 0x000000F0 */
#define DMA_CCR4_SRC_PROT_CTRL_SHIFT                       (8U)
#define DMA_CCR4_SRC_PROT_CTRL_MASK                        (0x7U << DMA_CCR4_SRC_PROT_CTRL_SHIFT)                       /* 0x00000700 */
#define DMA_CCR4_SRC_CACHE_CTRL_SHIFT                      (11U)
#define DMA_CCR4_SRC_CACHE_CTRL_MASK                       (0x7U << DMA_CCR4_SRC_CACHE_CTRL_SHIFT)                      /* 0x00003800 */
#define DMA_CCR4_DST_INC_SHIFT                             (14U)
#define DMA_CCR4_DST_INC_MASK                              (0x1U << DMA_CCR4_DST_INC_SHIFT)                             /* 0x00004000 */
#define DMA_CCR4_DST_BURST_SIZE_SHIFT                      (15U)
#define DMA_CCR4_DST_BURST_SIZE_MASK                       (0x7U << DMA_CCR4_DST_BURST_SIZE_SHIFT)                      /* 0x00038000 */
#define DMA_CCR4_DST_BURST_LEN_SHIFT                       (18U)
#define DMA_CCR4_DST_BURST_LEN_MASK                        (0xFU << DMA_CCR4_DST_BURST_LEN_SHIFT)                       /* 0x003C0000 */
#define DMA_CCR4_DST_PROT_CTRL_SHIFT                       (22U)
#define DMA_CCR4_DST_PROT_CTRL_MASK                        (0x7U << DMA_CCR4_DST_PROT_CTRL_SHIFT)                       /* 0x01C00000 */
#define DMA_CCR4_DST_CACHE_CTRL_SHIFT                      (25U)
#define DMA_CCR4_DST_CACHE_CTRL_MASK                       (0x7U << DMA_CCR4_DST_CACHE_CTRL_SHIFT)                      /* 0x0E000000 */
/* LC0_4 */
#define DMA_LC0_4_OFFSET                                   (0x48CU)
#define DMA_LC0_4                                          (0x0U)
#define DMA_LC0_4_LOOP_COUNTER_ITERATIONS_SHIFT            (0U)
#define DMA_LC0_4_LOOP_COUNTER_ITERATIONS_MASK             (0xFFU << DMA_LC0_4_LOOP_COUNTER_ITERATIONS_SHIFT)           /* 0x000000FF */
/* LC1_4 */
#define DMA_LC1_4_OFFSET                                   (0x490U)
#define DMA_LC1_4                                          (0x0U)
#define DMA_LC1_4_LOOP_COUNTER_ITERATIONS_SHIFT            (0U)
#define DMA_LC1_4_LOOP_COUNTER_ITERATIONS_MASK             (0xFFU << DMA_LC1_4_LOOP_COUNTER_ITERATIONS_SHIFT)           /* 0x000000FF */
/* SAR5 */
#define DMA_SAR5_OFFSET                                    (0x4A0U)
#define DMA_SAR5                                           (0x0U)
#define DMA_SAR5_SRC_ADDR_SHIFT                            (0U)
#define DMA_SAR5_SRC_ADDR_MASK                             (0xFFFFFFFFU << DMA_SAR5_SRC_ADDR_SHIFT)                     /* 0xFFFFFFFF */
/* DAR5 */
#define DMA_DAR5_OFFSET                                    (0x4A4U)
#define DMA_DAR5                                           (0x0U)
#define DMA_DAR5_DST_ADDR_SHIFT                            (0U)
#define DMA_DAR5_DST_ADDR_MASK                             (0xFFFFFFFFU << DMA_DAR5_DST_ADDR_SHIFT)                     /* 0xFFFFFFFF */
/* CCR5 */
#define DMA_CCR5_OFFSET                                    (0x4A8U)
#define DMA_CCR5                                           (0x0U)
#define DMA_CCR5_SRC_INC_SHIFT                             (0U)
#define DMA_CCR5_SRC_INC_MASK                              (0x1U << DMA_CCR5_SRC_INC_SHIFT)                             /* 0x00000001 */
#define DMA_CCR5_SRC_BURST_SIZE_SHIFT                      (1U)
#define DMA_CCR5_SRC_BURST_SIZE_MASK                       (0x7U << DMA_CCR5_SRC_BURST_SIZE_SHIFT)                      /* 0x0000000E */
#define DMA_CCR5_SRC_BURST_LEN_SHIFT                       (4U)
#define DMA_CCR5_SRC_BURST_LEN_MASK                        (0xFU << DMA_CCR5_SRC_BURST_LEN_SHIFT)                       /* 0x000000F0 */
#define DMA_CCR5_SRC_PROT_CTRL_SHIFT                       (8U)
#define DMA_CCR5_SRC_PROT_CTRL_MASK                        (0x7U << DMA_CCR5_SRC_PROT_CTRL_SHIFT)                       /* 0x00000700 */
#define DMA_CCR5_SRC_CACHE_CTRL_SHIFT                      (11U)
#define DMA_CCR5_SRC_CACHE_CTRL_MASK                       (0x7U << DMA_CCR5_SRC_CACHE_CTRL_SHIFT)                      /* 0x00003800 */
#define DMA_CCR5_DST_INC_SHIFT                             (14U)
#define DMA_CCR5_DST_INC_MASK                              (0x1U << DMA_CCR5_DST_INC_SHIFT)                             /* 0x00004000 */
#define DMA_CCR5_DST_BURST_SIZE_SHIFT                      (15U)
#define DMA_CCR5_DST_BURST_SIZE_MASK                       (0x7U << DMA_CCR5_DST_BURST_SIZE_SHIFT)                      /* 0x00038000 */
#define DMA_CCR5_DST_BURST_LEN_SHIFT                       (18U)
#define DMA_CCR5_DST_BURST_LEN_MASK                        (0xFU << DMA_CCR5_DST_BURST_LEN_SHIFT)                       /* 0x003C0000 */
#define DMA_CCR5_DST_PROT_CTRL_SHIFT                       (22U)
#define DMA_CCR5_DST_PROT_CTRL_MASK                        (0x7U << DMA_CCR5_DST_PROT_CTRL_SHIFT)                       /* 0x01C00000 */
#define DMA_CCR5_DST_CACHE_CTRL_SHIFT                      (25U)
#define DMA_CCR5_DST_CACHE_CTRL_MASK                       (0x7U << DMA_CCR5_DST_CACHE_CTRL_SHIFT)                      /* 0x0E000000 */
/* LC0_5 */
#define DMA_LC0_5_OFFSET                                   (0x4ACU)
#define DMA_LC0_5                                          (0x0U)
#define DMA_LC0_5_LOOP_COUNTER_ITERATIONS_SHIFT            (0U)
#define DMA_LC0_5_LOOP_COUNTER_ITERATIONS_MASK             (0xFFU << DMA_LC0_5_LOOP_COUNTER_ITERATIONS_SHIFT)           /* 0x000000FF */
/* LC1_5 */
#define DMA_LC1_5_OFFSET                                   (0x4B0U)
#define DMA_LC1_5                                          (0x0U)
#define DMA_LC1_5_LOOP_COUNTER_ITERATIONS_SHIFT            (0U)
#define DMA_LC1_5_LOOP_COUNTER_ITERATIONS_MASK             (0xFFU << DMA_LC1_5_LOOP_COUNTER_ITERATIONS_SHIFT)           /* 0x000000FF */
/* SAR6 */
#define DMA_SAR6_OFFSET                                    (0x4C0U)
#define DMA_SAR6                                           (0x0U)
#define DMA_SAR6_SRC_ADDR_SHIFT                            (0U)
#define DMA_SAR6_SRC_ADDR_MASK                             (0xFFFFFFFFU << DMA_SAR6_SRC_ADDR_SHIFT)                     /* 0xFFFFFFFF */
/* DAR6 */
#define DMA_DAR6_OFFSET                                    (0x4C4U)
#define DMA_DAR6                                           (0x0U)
#define DMA_DAR6_DST_ADDR_SHIFT                            (0U)
#define DMA_DAR6_DST_ADDR_MASK                             (0xFFFFFFFFU << DMA_DAR6_DST_ADDR_SHIFT)                     /* 0xFFFFFFFF */
/* CCR6 */
#define DMA_CCR6_OFFSET                                    (0x4C8U)
#define DMA_CCR6                                           (0x0U)
#define DMA_CCR6_SRC_INC_SHIFT                             (0U)
#define DMA_CCR6_SRC_INC_MASK                              (0x1U << DMA_CCR6_SRC_INC_SHIFT)                             /* 0x00000001 */
#define DMA_CCR6_SRC_BURST_SIZE_SHIFT                      (1U)
#define DMA_CCR6_SRC_BURST_SIZE_MASK                       (0x7U << DMA_CCR6_SRC_BURST_SIZE_SHIFT)                      /* 0x0000000E */
#define DMA_CCR6_SRC_BURST_LEN_SHIFT                       (4U)
#define DMA_CCR6_SRC_BURST_LEN_MASK                        (0xFU << DMA_CCR6_SRC_BURST_LEN_SHIFT)                       /* 0x000000F0 */
#define DMA_CCR6_SRC_PROT_CTRL_SHIFT                       (8U)
#define DMA_CCR6_SRC_PROT_CTRL_MASK                        (0x7U << DMA_CCR6_SRC_PROT_CTRL_SHIFT)                       /* 0x00000700 */
#define DMA_CCR6_SRC_CACHE_CTRL_SHIFT                      (11U)
#define DMA_CCR6_SRC_CACHE_CTRL_MASK                       (0x7U << DMA_CCR6_SRC_CACHE_CTRL_SHIFT)                      /* 0x00003800 */
#define DMA_CCR6_DST_INC_SHIFT                             (14U)
#define DMA_CCR6_DST_INC_MASK                              (0x1U << DMA_CCR6_DST_INC_SHIFT)                             /* 0x00004000 */
#define DMA_CCR6_DST_BURST_SIZE_SHIFT                      (15U)
#define DMA_CCR6_DST_BURST_SIZE_MASK                       (0x7U << DMA_CCR6_DST_BURST_SIZE_SHIFT)                      /* 0x00038000 */
#define DMA_CCR6_DST_BURST_LEN_SHIFT                       (18U)
#define DMA_CCR6_DST_BURST_LEN_MASK                        (0xFU << DMA_CCR6_DST_BURST_LEN_SHIFT)                       /* 0x003C0000 */
#define DMA_CCR6_DST_PROT_CTRL_SHIFT                       (22U)
#define DMA_CCR6_DST_PROT_CTRL_MASK                        (0x7U << DMA_CCR6_DST_PROT_CTRL_SHIFT)                       /* 0x01C00000 */
#define DMA_CCR6_DST_CACHE_CTRL_SHIFT                      (25U)
#define DMA_CCR6_DST_CACHE_CTRL_MASK                       (0x7U << DMA_CCR6_DST_CACHE_CTRL_SHIFT)                      /* 0x0E000000 */
/* LC0_6 */
#define DMA_LC0_6_OFFSET                                   (0x4CCU)
#define DMA_LC0_6                                          (0x0U)
#define DMA_LC0_6_LOOP_COUNTER_ITERATIONS_SHIFT            (0U)
#define DMA_LC0_6_LOOP_COUNTER_ITERATIONS_MASK             (0xFFU << DMA_LC0_6_LOOP_COUNTER_ITERATIONS_SHIFT)           /* 0x000000FF */
/* LC1_6 */
#define DMA_LC1_6_OFFSET                                   (0x4D0U)
#define DMA_LC1_6                                          (0x0U)
#define DMA_LC1_6_LOOP_COUNTER_ITERATIONS_SHIFT            (0U)
#define DMA_LC1_6_LOOP_COUNTER_ITERATIONS_MASK             (0xFFU << DMA_LC1_6_LOOP_COUNTER_ITERATIONS_SHIFT)           /* 0x000000FF */
/* SAR7 */
#define DMA_SAR7_OFFSET                                    (0x4E0U)
#define DMA_SAR7                                           (0x0U)
#define DMA_SAR7_SRC_ADDR_SHIFT                            (0U)
#define DMA_SAR7_SRC_ADDR_MASK                             (0xFFFFFFFFU << DMA_SAR7_SRC_ADDR_SHIFT)                     /* 0xFFFFFFFF */
/* DAR7 */
#define DMA_DAR7_OFFSET                                    (0x4E4U)
#define DMA_DAR7                                           (0x0U)
#define DMA_DAR7_DST_ADDR_SHIFT                            (0U)
#define DMA_DAR7_DST_ADDR_MASK                             (0xFFFFFFFFU << DMA_DAR7_DST_ADDR_SHIFT)                     /* 0xFFFFFFFF */
/* CCR7 */
#define DMA_CCR7_OFFSET                                    (0x4E8U)
#define DMA_CCR7                                           (0x0U)
#define DMA_CCR7_SRC_INC_SHIFT                             (0U)
#define DMA_CCR7_SRC_INC_MASK                              (0x1U << DMA_CCR7_SRC_INC_SHIFT)                             /* 0x00000001 */
#define DMA_CCR7_SRC_BURST_SIZE_SHIFT                      (1U)
#define DMA_CCR7_SRC_BURST_SIZE_MASK                       (0x7U << DMA_CCR7_SRC_BURST_SIZE_SHIFT)                      /* 0x0000000E */
#define DMA_CCR7_SRC_BURST_LEN_SHIFT                       (4U)
#define DMA_CCR7_SRC_BURST_LEN_MASK                        (0xFU << DMA_CCR7_SRC_BURST_LEN_SHIFT)                       /* 0x000000F0 */
#define DMA_CCR7_SRC_PROT_CTRL_SHIFT                       (8U)
#define DMA_CCR7_SRC_PROT_CTRL_MASK                        (0x7U << DMA_CCR7_SRC_PROT_CTRL_SHIFT)                       /* 0x00000700 */
#define DMA_CCR7_SRC_CACHE_CTRL_SHIFT                      (11U)
#define DMA_CCR7_SRC_CACHE_CTRL_MASK                       (0x7U << DMA_CCR7_SRC_CACHE_CTRL_SHIFT)                      /* 0x00003800 */
#define DMA_CCR7_DST_INC_SHIFT                             (14U)
#define DMA_CCR7_DST_INC_MASK                              (0x1U << DMA_CCR7_DST_INC_SHIFT)                             /* 0x00004000 */
#define DMA_CCR7_DST_BURST_SIZE_SHIFT                      (15U)
#define DMA_CCR7_DST_BURST_SIZE_MASK                       (0x7U << DMA_CCR7_DST_BURST_SIZE_SHIFT)                      /* 0x00038000 */
#define DMA_CCR7_DST_BURST_LEN_SHIFT                       (18U)
#define DMA_CCR7_DST_BURST_LEN_MASK                        (0xFU << DMA_CCR7_DST_BURST_LEN_SHIFT)                       /* 0x003C0000 */
#define DMA_CCR7_DST_PROT_CTRL_SHIFT                       (22U)
#define DMA_CCR7_DST_PROT_CTRL_MASK                        (0x7U << DMA_CCR7_DST_PROT_CTRL_SHIFT)                       /* 0x01C00000 */
#define DMA_CCR7_DST_CACHE_CTRL_SHIFT                      (25U)
#define DMA_CCR7_DST_CACHE_CTRL_MASK                       (0x7U << DMA_CCR7_DST_CACHE_CTRL_SHIFT)                      /* 0x0E000000 */
/* LC0_7 */
#define DMA_LC0_7_OFFSET                                   (0x4ECU)
#define DMA_LC0_7                                          (0x0U)
#define DMA_LC0_7_LOOP_COUNTER_ITERATIONS_SHIFT            (0U)
#define DMA_LC0_7_LOOP_COUNTER_ITERATIONS_MASK             (0xFFU << DMA_LC0_7_LOOP_COUNTER_ITERATIONS_SHIFT)           /* 0x000000FF */
/* LC1_7 */
#define DMA_LC1_7_OFFSET                                   (0x4F0U)
#define DMA_LC1_7                                          (0x0U)
#define DMA_LC1_7_LOOP_COUNTER_ITERATIONS_SHIFT            (0U)
#define DMA_LC1_7_LOOP_COUNTER_ITERATIONS_MASK             (0xFFU << DMA_LC1_7_LOOP_COUNTER_ITERATIONS_SHIFT)           /* 0x000000FF */
/* DBGSTATUS */
#define DMA_DBGSTATUS_OFFSET                               (0xD00U)
#define DMA_DBGSTATUS                                      (0x0U)
#define DMA_DBGSTATUS_DBGSTATUS_SHIFT                      (0U)
#define DMA_DBGSTATUS_DBGSTATUS_MASK                       (0x1U << DMA_DBGSTATUS_DBGSTATUS_SHIFT)                      /* 0x00000001 */
/* DBGCMD */
#define DMA_DBGCMD_OFFSET                                  (0xD04U)
#define DMA_DBGCMD_DBGCMD_SHIFT                            (0U)
#define DMA_DBGCMD_DBGCMD_MASK                             (0x3U << DMA_DBGCMD_DBGCMD_SHIFT)                            /* 0x00000003 */
/* DBGINST0 */
#define DMA_DBGINST0_OFFSET                                (0xD08U)
#define DMA_DBGINST0_DEBUG_THREAD_SHIFT                    (0U)
#define DMA_DBGINST0_DEBUG_THREAD_MASK                     (0x1U << DMA_DBGINST0_DEBUG_THREAD_SHIFT)                    /* 0x00000001 */
#define DMA_DBGINST0_CHANNEL_NUMBER_SHIFT                  (8U)
#define DMA_DBGINST0_CHANNEL_NUMBER_MASK                   (0x7U << DMA_DBGINST0_CHANNEL_NUMBER_SHIFT)                  /* 0x00000700 */
#define DMA_DBGINST0_INSTRUCTION_BYTE0_SHIFT               (16U)
#define DMA_DBGINST0_INSTRUCTION_BYTE0_MASK                (0xFFU << DMA_DBGINST0_INSTRUCTION_BYTE0_SHIFT)              /* 0x00FF0000 */
#define DMA_DBGINST0_INSTRUCTION_BYTE1_SHIFT               (24U)
#define DMA_DBGINST0_INSTRUCTION_BYTE1_MASK                (0xFFU << DMA_DBGINST0_INSTRUCTION_BYTE1_SHIFT)              /* 0xFF000000 */
/* DBGINST1 */
#define DMA_DBGINST1_OFFSET                                (0xD0CU)
#define DMA_DBGINST1_INSTRUCTION_BYTE2_SHIFT               (0U)
#define DMA_DBGINST1_INSTRUCTION_BYTE2_MASK                (0xFFU << DMA_DBGINST1_INSTRUCTION_BYTE2_SHIFT)              /* 0x000000FF */
#define DMA_DBGINST1_INSTRUCTION_BYTE3_SHIFT               (8U)
#define DMA_DBGINST1_INSTRUCTION_BYTE3_MASK                (0xFFU << DMA_DBGINST1_INSTRUCTION_BYTE3_SHIFT)              /* 0x0000FF00 */
#define DMA_DBGINST1_INSTRUCTION_BYTE4_SHIFT               (16U)
#define DMA_DBGINST1_INSTRUCTION_BYTE4_MASK                (0xFFU << DMA_DBGINST1_INSTRUCTION_BYTE4_SHIFT)              /* 0x00FF0000 */
#define DMA_DBGINST1_INSTRUCTION_BYTE5_SHIFT               (24U)
#define DMA_DBGINST1_INSTRUCTION_BYTE5_MASK                (0xFFU << DMA_DBGINST1_INSTRUCTION_BYTE5_SHIFT)              /* 0xFF000000 */
/* CR0 */
#define DMA_CR0_OFFSET                                     (0xE00U)
#define DMA_CR0                                            (0x47051U)
#define DMA_CR0_PERIPH_REQ_SHIFT                           (0U)
#define DMA_CR0_PERIPH_REQ_MASK                            (0x1U << DMA_CR0_PERIPH_REQ_SHIFT)                           /* 0x00000001 */
#define DMA_CR0_BOOT_EN_SHIFT                              (1U)
#define DMA_CR0_BOOT_EN_MASK                               (0x1U << DMA_CR0_BOOT_EN_SHIFT)                              /* 0x00000002 */
#define DMA_CR0_MGR_NS_AT_RST_SHIFT                        (2U)
#define DMA_CR0_MGR_NS_AT_RST_MASK                         (0x1U << DMA_CR0_MGR_NS_AT_RST_SHIFT)                        /* 0x00000004 */
#define DMA_CR0_NUM_CHNLS_SHIFT                            (4U)
#define DMA_CR0_NUM_CHNLS_MASK                             (0x7U << DMA_CR0_NUM_CHNLS_SHIFT)                            /* 0x00000070 */
#define DMA_CR0_NUM_PERIPH_REQ_SHIFT                       (12U)
#define DMA_CR0_NUM_PERIPH_REQ_MASK                        (0x1FU << DMA_CR0_NUM_PERIPH_REQ_SHIFT)                      /* 0x0001F000 */
#define DMA_CR0_NUM_EVENTS_SHIFT                           (17U)
#define DMA_CR0_NUM_EVENTS_MASK                            (0x1FU << DMA_CR0_NUM_EVENTS_SHIFT)                          /* 0x003E0000 */
/* CR1 */
#define DMA_CR1_OFFSET                                     (0xE04U)
#define DMA_CR1                                            (0x57U)
#define DMA_CR1_I_CACHE_LEN_SHIFT                          (0U)
#define DMA_CR1_I_CACHE_LEN_MASK                           (0x7U << DMA_CR1_I_CACHE_LEN_SHIFT)                          /* 0x00000007 */
#define DMA_CR1_NUM_I_CACHE_LINES_SHIFT                    (4U)
#define DMA_CR1_NUM_I_CACHE_LINES_MASK                     (0xFU << DMA_CR1_NUM_I_CACHE_LINES_SHIFT)                    /* 0x000000F0 */
/* CR2 */
#define DMA_CR2_OFFSET                                     (0xE08U)
#define DMA_CR2                                            (0x0U)
#define DMA_CR2_BOOT_ADDR_SHIFT                            (0U)
#define DMA_CR2_BOOT_ADDR_MASK                             (0xFFFFFFFFU << DMA_CR2_BOOT_ADDR_SHIFT)                     /* 0xFFFFFFFF */
/* CR3 */
#define DMA_CR3_OFFSET                                     (0xE0CU)
#define DMA_CR3                                            (0x0U)
#define DMA_CR3_INS_SHIFT                                  (0U)
#define DMA_CR3_INS_MASK                                   (0xFFFFFFFFU << DMA_CR3_INS_SHIFT)                           /* 0xFFFFFFFF */
/* CR4 */
#define DMA_CR4_OFFSET                                     (0xE10U)
#define DMA_CR4                                            (0x6U)
#define DMA_CR4_PNS_SHIFT                                  (0U)
#define DMA_CR4_PNS_MASK                                   (0xFFFFFFFFU << DMA_CR4_PNS_SHIFT)                           /* 0xFFFFFFFF */
/* CRDN */
#define DMA_CRDN_OFFSET                                    (0xE14U)
#define DMA_CRDN                                           (0x2094733U)
#define DMA_CRDN_DATA_WIDTH_SHIFT                          (0U)
#define DMA_CRDN_DATA_WIDTH_MASK                           (0x7U << DMA_CRDN_DATA_WIDTH_SHIFT)                          /* 0x00000007 */
#define DMA_CRDN_WR_CAP_SHIFT                              (4U)
#define DMA_CRDN_WR_CAP_MASK                               (0x7U << DMA_CRDN_WR_CAP_SHIFT)                              /* 0x00000070 */
#define DMA_CRDN_WR_Q_DEP_SHIFT                            (8U)
#define DMA_CRDN_WR_Q_DEP_MASK                             (0xFU << DMA_CRDN_WR_Q_DEP_SHIFT)                            /* 0x00000F00 */
#define DMA_CRDN_RD_CAP_SHIFT                              (12U)
#define DMA_CRDN_RD_CAP_MASK                               (0x7U << DMA_CRDN_RD_CAP_SHIFT)                              /* 0x00007000 */
#define DMA_CRDN_RD_Q_DEP_SHIFT                            (16U)
#define DMA_CRDN_RD_Q_DEP_MASK                             (0xFU << DMA_CRDN_RD_Q_DEP_SHIFT)                            /* 0x000F0000 */
#define DMA_CRDN_DATA_BUFFER_DEP_SHIFT                     (20U)
#define DMA_CRDN_DATA_BUFFER_DEP_MASK                      (0x3FFU << DMA_CRDN_DATA_BUFFER_DEP_SHIFT)                   /* 0x3FF00000 */
/* WD */
#define DMA_WD_OFFSET                                      (0xE80U)
#define DMA_WD_WD_IRQ_ONLY_SHIFT                           (0U)
#define DMA_WD_WD_IRQ_ONLY_MASK                            (0x1U << DMA_WD_WD_IRQ_ONLY_SHIFT)                           /* 0x00000001 */
/******************************************I2C*******************************************/
/* CON */
#define I2C_CON_OFFSET                                     (0x0U)
#define I2C_CON_I2C_EN_SHIFT                               (0U)
#define I2C_CON_I2C_EN_MASK                                (0x1U << I2C_CON_I2C_EN_SHIFT)                               /* 0x00000001 */
#define I2C_CON_I2C_MODE_SHIFT                             (1U)
#define I2C_CON_I2C_MODE_MASK                              (0x3U << I2C_CON_I2C_MODE_SHIFT)                             /* 0x00000006 */
#define I2C_CON_START_SHIFT                                (3U)
#define I2C_CON_START_MASK                                 (0x1U << I2C_CON_START_SHIFT)                                /* 0x00000008 */
#define I2C_CON_STOP_SHIFT                                 (4U)
#define I2C_CON_STOP_MASK                                  (0x1U << I2C_CON_STOP_SHIFT)                                 /* 0x00000010 */
#define I2C_CON_ACK_SHIFT                                  (5U)
#define I2C_CON_ACK_MASK                                   (0x1U << I2C_CON_ACK_SHIFT)                                  /* 0x00000020 */
#define I2C_CON_ACT2NAK_SHIFT                              (6U)
#define I2C_CON_ACT2NAK_MASK                               (0x1U << I2C_CON_ACT2NAK_SHIFT)                              /* 0x00000040 */
#define I2C_CON_DATA_UPD_ST_SHIFT                          (8U)
#define I2C_CON_DATA_UPD_ST_MASK                           (0xFU << I2C_CON_DATA_UPD_ST_SHIFT)                          /* 0x00000F00 */
#define I2C_CON_START_SETUP_SHIFT                          (12U)
#define I2C_CON_START_SETUP_MASK                           (0x3U << I2C_CON_START_SETUP_SHIFT)                          /* 0x00003000 */
#define I2C_CON_STOP_SETUP_SHIFT                           (14U)
#define I2C_CON_STOP_SETUP_MASK                            (0x3U << I2C_CON_STOP_SETUP_SHIFT)                           /* 0x0000C000 */
#define I2C_CON_VERSION_SHIFT                              (16U)
#define I2C_CON_VERSION_MASK                               (0xFFFFU << I2C_CON_VERSION_SHIFT)                           /* 0xFFFF0000 */
/* CLKDIV */
#define I2C_CLKDIV_OFFSET                                  (0x4U)
#define I2C_CLKDIV_CLKDIVL_SHIFT                           (0U)
#define I2C_CLKDIV_CLKDIVL_MASK                            (0xFFFFU << I2C_CLKDIV_CLKDIVL_SHIFT)                        /* 0x0000FFFF */
#define I2C_CLKDIV_CLKDIVH_SHIFT                           (16U)
#define I2C_CLKDIV_CLKDIVH_MASK                            (0xFFFFU << I2C_CLKDIV_CLKDIVH_SHIFT)                        /* 0xFFFF0000 */
/* MRXADDR */
#define I2C_MRXADDR_OFFSET                                 (0x8U)
#define I2C_MRXADDR_SADDR_SHIFT                            (0U)
#define I2C_MRXADDR_SADDR_MASK                             (0xFFFFFFU << I2C_MRXADDR_SADDR_SHIFT)                       /* 0x00FFFFFF */
#define I2C_MRXADDR_ADDLVLD_SHIFT                          (24U)
#define I2C_MRXADDR_ADDLVLD_MASK                           (0x1U << I2C_MRXADDR_ADDLVLD_SHIFT)                          /* 0x01000000 */
#define I2C_MRXADDR_ADDMVLD_SHIFT                          (25U)
#define I2C_MRXADDR_ADDMVLD_MASK                           (0x1U << I2C_MRXADDR_ADDMVLD_SHIFT)                          /* 0x02000000 */
#define I2C_MRXADDR_ADDHVLD_SHIFT                          (26U)
#define I2C_MRXADDR_ADDHVLD_MASK                           (0x1U << I2C_MRXADDR_ADDHVLD_SHIFT)                          /* 0x04000000 */
/* MRXRADDR */
#define I2C_MRXRADDR_OFFSET                                (0xCU)
#define I2C_MRXRADDR_SRADDR_SHIFT                          (0U)
#define I2C_MRXRADDR_SRADDR_MASK                           (0xFFFFFFU << I2C_MRXRADDR_SRADDR_SHIFT)                     /* 0x00FFFFFF */
#define I2C_MRXRADDR_SRADDLVLD_SHIFT                       (24U)
#define I2C_MRXRADDR_SRADDLVLD_MASK                        (0x1U << I2C_MRXRADDR_SRADDLVLD_SHIFT)                       /* 0x01000000 */
#define I2C_MRXRADDR_SRADDMVLD_SHIFT                       (25U)
#define I2C_MRXRADDR_SRADDMVLD_MASK                        (0x1U << I2C_MRXRADDR_SRADDMVLD_SHIFT)                       /* 0x02000000 */
#define I2C_MRXRADDR_SRADDHVLD_SHIFT                       (26U)
#define I2C_MRXRADDR_SRADDHVLD_MASK                        (0x1U << I2C_MRXRADDR_SRADDHVLD_SHIFT)                       /* 0x04000000 */
/* MTXCNT */
#define I2C_MTXCNT_OFFSET                                  (0x10U)
#define I2C_MTXCNT_MTXCNT_SHIFT                            (0U)
#define I2C_MTXCNT_MTXCNT_MASK                             (0x3FU << I2C_MTXCNT_MTXCNT_SHIFT)                           /* 0x0000003F */
/* MRXCNT */
#define I2C_MRXCNT_OFFSET                                  (0x14U)
#define I2C_MRXCNT_MRXCNT_SHIFT                            (0U)
#define I2C_MRXCNT_MRXCNT_MASK                             (0x3FU << I2C_MRXCNT_MRXCNT_SHIFT)                           /* 0x0000003F */
/* IEN */
#define I2C_IEN_OFFSET                                     (0x18U)
#define I2C_IEN_BTFIEN_SHIFT                               (0U)
#define I2C_IEN_BTFIEN_MASK                                (0x1U << I2C_IEN_BTFIEN_SHIFT)                               /* 0x00000001 */
#define I2C_IEN_BRFIEN_SHIFT                               (1U)
#define I2C_IEN_BRFIEN_MASK                                (0x1U << I2C_IEN_BRFIEN_SHIFT)                               /* 0x00000002 */
#define I2C_IEN_MBTFIEN_SHIFT                              (2U)
#define I2C_IEN_MBTFIEN_MASK                               (0x1U << I2C_IEN_MBTFIEN_SHIFT)                              /* 0x00000004 */
#define I2C_IEN_MBRFIEN_SHIFT                              (3U)
#define I2C_IEN_MBRFIEN_MASK                               (0x1U << I2C_IEN_MBRFIEN_SHIFT)                              /* 0x00000008 */
#define I2C_IEN_STARTIEN_SHIFT                             (4U)
#define I2C_IEN_STARTIEN_MASK                              (0x1U << I2C_IEN_STARTIEN_SHIFT)                             /* 0x00000010 */
#define I2C_IEN_STOPIEN_SHIFT                              (5U)
#define I2C_IEN_STOPIEN_MASK                               (0x1U << I2C_IEN_STOPIEN_SHIFT)                              /* 0x00000020 */
#define I2C_IEN_NAKRCVIEN_SHIFT                            (6U)
#define I2C_IEN_NAKRCVIEN_MASK                             (0x1U << I2C_IEN_NAKRCVIEN_SHIFT)                            /* 0x00000040 */
#define I2C_IEN_SLAVEHDSCLEN_SHIFT                         (7U)
#define I2C_IEN_SLAVEHDSCLEN_MASK                          (0x1U << I2C_IEN_SLAVEHDSCLEN_SHIFT)                         /* 0x00000080 */
#define I2C_IEN_SLAVEHDSDAEN_SHIFT                         (8U)
#define I2C_IEN_SLAVEHDSDAEN_MASK                          (0x1U << I2C_IEN_SLAVEHDSDAEN_SHIFT)                         /* 0x00000100 */
/* IPD */
#define I2C_IPD_OFFSET                                     (0x1CU)
#define I2C_IPD_BTFIPD_SHIFT                               (0U)
#define I2C_IPD_BTFIPD_MASK                                (0x1U << I2C_IPD_BTFIPD_SHIFT)                               /* 0x00000001 */
#define I2C_IPD_BRFIPD_SHIFT                               (1U)
#define I2C_IPD_BRFIPD_MASK                                (0x1U << I2C_IPD_BRFIPD_SHIFT)                               /* 0x00000002 */
#define I2C_IPD_MBTFIPD_SHIFT                              (2U)
#define I2C_IPD_MBTFIPD_MASK                               (0x1U << I2C_IPD_MBTFIPD_SHIFT)                              /* 0x00000004 */
#define I2C_IPD_MBRFIPD_SHIFT                              (3U)
#define I2C_IPD_MBRFIPD_MASK                               (0x1U << I2C_IPD_MBRFIPD_SHIFT)                              /* 0x00000008 */
#define I2C_IPD_STARTIPD_SHIFT                             (4U)
#define I2C_IPD_STARTIPD_MASK                              (0x1U << I2C_IPD_STARTIPD_SHIFT)                             /* 0x00000010 */
#define I2C_IPD_STOPIPD_SHIFT                              (5U)
#define I2C_IPD_STOPIPD_MASK                               (0x1U << I2C_IPD_STOPIPD_SHIFT)                              /* 0x00000020 */
#define I2C_IPD_NAKRCVIPD_SHIFT                            (6U)
#define I2C_IPD_NAKRCVIPD_MASK                             (0x1U << I2C_IPD_NAKRCVIPD_SHIFT)                            /* 0x00000040 */
#define I2C_IPD_SLAVEHDSCLIPD_SHIFT                        (7U)
#define I2C_IPD_SLAVEHDSCLIPD_MASK                         (0x1U << I2C_IPD_SLAVEHDSCLIPD_SHIFT)                        /* 0x00000080 */
#define I2C_IPD_SLAVEHDSDAIPD_SHIFT                        (8U)
#define I2C_IPD_SLAVEHDSDAIPD_MASK                         (0x1U << I2C_IPD_SLAVEHDSDAIPD_SHIFT)                        /* 0x00000100 */
/* FCNT */
#define I2C_FCNT_OFFSET                                    (0x20U)
#define I2C_FCNT                                           (0x0U)
#define I2C_FCNT_FCNT_SHIFT                                (0U)
#define I2C_FCNT_FCNT_MASK                                 (0x3FU << I2C_FCNT_FCNT_SHIFT)                               /* 0x0000003F */
/* SCL_OE_DB */
#define I2C_SCL_OE_DB_OFFSET                               (0x24U)
#define I2C_SCL_OE_DB_SCL_OE_DB_SHIFT                      (0U)
#define I2C_SCL_OE_DB_SCL_OE_DB_MASK                       (0xFFU << I2C_SCL_OE_DB_SCL_OE_DB_SHIFT)                     /* 0x000000FF */
/* TXDATA0 */
#define I2C_TXDATA0_OFFSET                                 (0x100U)
#define I2C_TXDATA0_TXDATA0_SHIFT                          (0U)
#define I2C_TXDATA0_TXDATA0_MASK                           (0xFFFFFFFFU << I2C_TXDATA0_TXDATA0_SHIFT)                   /* 0xFFFFFFFF */
/* TXDATA1 */
#define I2C_TXDATA1_OFFSET                                 (0x104U)
#define I2C_TXDATA1_TXDATA1_SHIFT                          (0U)
#define I2C_TXDATA1_TXDATA1_MASK                           (0xFFFFFFFFU << I2C_TXDATA1_TXDATA1_SHIFT)                   /* 0xFFFFFFFF */
/* TXDATA2 */
#define I2C_TXDATA2_OFFSET                                 (0x108U)
#define I2C_TXDATA2_TXDATA2_SHIFT                          (0U)
#define I2C_TXDATA2_TXDATA2_MASK                           (0xFFFFFFFFU << I2C_TXDATA2_TXDATA2_SHIFT)                   /* 0xFFFFFFFF */
/* TXDATA3 */
#define I2C_TXDATA3_OFFSET                                 (0x10CU)
#define I2C_TXDATA3_TXDATA3_SHIFT                          (0U)
#define I2C_TXDATA3_TXDATA3_MASK                           (0xFFFFFFFFU << I2C_TXDATA3_TXDATA3_SHIFT)                   /* 0xFFFFFFFF */
/* TXDATA4 */
#define I2C_TXDATA4_OFFSET                                 (0x110U)
#define I2C_TXDATA4_TXDATA4_SHIFT                          (0U)
#define I2C_TXDATA4_TXDATA4_MASK                           (0xFFFFFFFFU << I2C_TXDATA4_TXDATA4_SHIFT)                   /* 0xFFFFFFFF */
/* TXDATA5 */
#define I2C_TXDATA5_OFFSET                                 (0x114U)
#define I2C_TXDATA5_TXDATA5_SHIFT                          (0U)
#define I2C_TXDATA5_TXDATA5_MASK                           (0xFFFFFFFFU << I2C_TXDATA5_TXDATA5_SHIFT)                   /* 0xFFFFFFFF */
/* TXDATA6 */
#define I2C_TXDATA6_OFFSET                                 (0x118U)
#define I2C_TXDATA6_TXDATA6_SHIFT                          (0U)
#define I2C_TXDATA6_TXDATA6_MASK                           (0xFFFFFFFFU << I2C_TXDATA6_TXDATA6_SHIFT)                   /* 0xFFFFFFFF */
/* TXDATA7 */
#define I2C_TXDATA7_OFFSET                                 (0x11CU)
#define I2C_TXDATA7_TXDATA7_SHIFT                          (0U)
#define I2C_TXDATA7_TXDATA7_MASK                           (0xFFFFFFFFU << I2C_TXDATA7_TXDATA7_SHIFT)                   /* 0xFFFFFFFF */
/* RXDATA0 */
#define I2C_RXDATA0_OFFSET                                 (0x200U)
#define I2C_RXDATA0                                        (0x0U)
#define I2C_RXDATA0_RXDATA0_SHIFT                          (0U)
#define I2C_RXDATA0_RXDATA0_MASK                           (0xFFFFFFFFU << I2C_RXDATA0_RXDATA0_SHIFT)                   /* 0xFFFFFFFF */
/* RXDATA1 */
#define I2C_RXDATA1_OFFSET                                 (0x204U)
#define I2C_RXDATA1                                        (0x0U)
#define I2C_RXDATA1_RXDATA1_SHIFT                          (0U)
#define I2C_RXDATA1_RXDATA1_MASK                           (0xFFFFFFFFU << I2C_RXDATA1_RXDATA1_SHIFT)                   /* 0xFFFFFFFF */
/* RXDATA2 */
#define I2C_RXDATA2_OFFSET                                 (0x208U)
#define I2C_RXDATA2                                        (0x0U)
#define I2C_RXDATA2_RXDATA2_SHIFT                          (0U)
#define I2C_RXDATA2_RXDATA2_MASK                           (0xFFFFFFFFU << I2C_RXDATA2_RXDATA2_SHIFT)                   /* 0xFFFFFFFF */
/* RXDATA3 */
#define I2C_RXDATA3_OFFSET                                 (0x20CU)
#define I2C_RXDATA3                                        (0x0U)
#define I2C_RXDATA3_RXDATA3_SHIFT                          (0U)
#define I2C_RXDATA3_RXDATA3_MASK                           (0xFFFFFFFFU << I2C_RXDATA3_RXDATA3_SHIFT)                   /* 0xFFFFFFFF */
/* RXDATA4 */
#define I2C_RXDATA4_OFFSET                                 (0x210U)
#define I2C_RXDATA4                                        (0x0U)
#define I2C_RXDATA4_RXDATA4_SHIFT                          (0U)
#define I2C_RXDATA4_RXDATA4_MASK                           (0xFFFFFFFFU << I2C_RXDATA4_RXDATA4_SHIFT)                   /* 0xFFFFFFFF */
/* RXDATA5 */
#define I2C_RXDATA5_OFFSET                                 (0x214U)
#define I2C_RXDATA5                                        (0x0U)
#define I2C_RXDATA5_RXDATA5_SHIFT                          (0U)
#define I2C_RXDATA5_RXDATA5_MASK                           (0xFFFFFFFFU << I2C_RXDATA5_RXDATA5_SHIFT)                   /* 0xFFFFFFFF */
/* RXDATA6 */
#define I2C_RXDATA6_OFFSET                                 (0x218U)
#define I2C_RXDATA6                                        (0x0U)
#define I2C_RXDATA6_RXDATA6_SHIFT                          (0U)
#define I2C_RXDATA6_RXDATA6_MASK                           (0xFFFFFFFFU << I2C_RXDATA6_RXDATA6_SHIFT)                   /* 0xFFFFFFFF */
/* RXDATA7 */
#define I2C_RXDATA7_OFFSET                                 (0x21CU)
#define I2C_RXDATA7                                        (0x0U)
#define I2C_RXDATA7_RXDATA7_SHIFT                          (0U)
#define I2C_RXDATA7_RXDATA7_MASK                           (0xFFFFFFFFU << I2C_RXDATA7_RXDATA7_SHIFT)                   /* 0xFFFFFFFF */
/* ST */
#define I2C_ST_OFFSET                                      (0x220U)
#define I2C_ST                                             (0x0U)
#define I2C_ST_SDA_ST_SHIFT                                (0U)
#define I2C_ST_SDA_ST_MASK                                 (0x1U << I2C_ST_SDA_ST_SHIFT)                                /* 0x00000001 */
#define I2C_ST_SCL_ST_SHIFT                                (1U)
#define I2C_ST_SCL_ST_MASK                                 (0x1U << I2C_ST_SCL_ST_SHIFT)                                /* 0x00000002 */
/* DBGCTRL */
#define I2C_DBGCTRL_OFFSET                                 (0x224U)
#define I2C_DBGCTRL_FLT_F_SHIFT                            (0U)
#define I2C_DBGCTRL_FLT_F_MASK                             (0xFU << I2C_DBGCTRL_FLT_F_SHIFT)                            /* 0x0000000F */
#define I2C_DBGCTRL_FLT_R_SHIFT                            (4U)
#define I2C_DBGCTRL_FLT_R_MASK                             (0xFU << I2C_DBGCTRL_FLT_R_SHIFT)                            /* 0x000000F0 */
#define I2C_DBGCTRL_SLV_HOLD_SCL_TH_SHIFT                  (8U)
#define I2C_DBGCTRL_SLV_HOLD_SCL_TH_MASK                   (0xFU << I2C_DBGCTRL_SLV_HOLD_SCL_TH_SHIFT)                  /* 0x00000F00 */
#define I2C_DBGCTRL_FLT_EN_SHIFT                           (12U)
#define I2C_DBGCTRL_FLT_EN_MASK                            (0x1U << I2C_DBGCTRL_FLT_EN_SHIFT)                           /* 0x00001000 */
#define I2C_DBGCTRL_NAK_RELEASE_SCL_SHIFT                  (13U)
#define I2C_DBGCTRL_NAK_RELEASE_SCL_MASK                   (0x1U << I2C_DBGCTRL_NAK_RELEASE_SCL_SHIFT)                  /* 0x00002000 */
#define I2C_DBGCTRL_H0_CHECK_SCL_SHIFT                     (14U)
#define I2C_DBGCTRL_H0_CHECK_SCL_MASK                      (0x1U << I2C_DBGCTRL_H0_CHECK_SCL_SHIFT)                     /* 0x00004000 */
/* CON1 */
#define I2C_CON1_OFFSET                                    (0x228U)
#define I2C_CON1_AUTO_STOP_SHIFT                           (0U)
#define I2C_CON1_AUTO_STOP_MASK                            (0x1U << I2C_CON1_AUTO_STOP_SHIFT)                           /* 0x00000001 */
#define I2C_CON1_AUTO_STOP_TX_END_SHIFT                    (1U)
#define I2C_CON1_AUTO_STOP_TX_END_MASK                     (0x1U << I2C_CON1_AUTO_STOP_TX_END_SHIFT)                    /* 0x00000002 */
#define I2C_CON1_AUTO_STOP_NAK_SHIFT                       (2U)
#define I2C_CON1_AUTO_STOP_NAK_MASK                        (0x1U << I2C_CON1_AUTO_STOP_NAK_SHIFT)                       /* 0x00000004 */
/******************************************UART******************************************/
/* RBR */
#define UART_RBR_OFFSET                                    (0x0U)
#define UART_RBR                                           (0x0U)
#define UART_RBR_DATA_INPUT_SHIFT                          (0U)
#define UART_RBR_DATA_INPUT_MASK                           (0xFFU << UART_RBR_DATA_INPUT_SHIFT)                         /* 0x000000FF */
/* DLL */
#define UART_DLL_OFFSET                                    (0x0U)
#define UART_DLL_BAUD_RATE_DIVISOR_L_SHIFT                 (0U)
#define UART_DLL_BAUD_RATE_DIVISOR_L_MASK                  (0xFFU << UART_DLL_BAUD_RATE_DIVISOR_L_SHIFT)                /* 0x000000FF */
/* THR */
#define UART_THR_OFFSET                                    (0x0U)
#define UART_THR_DATA_OUTPUT_SHIFT                         (0U)
#define UART_THR_DATA_OUTPUT_MASK                          (0xFFU << UART_THR_DATA_OUTPUT_SHIFT)                        /* 0x000000FF */
/* DLH */
#define UART_DLH_OFFSET                                    (0x4U)
#define UART_DLH_BAUD_RATE_DIVISOR_H_SHIFT                 (0U)
#define UART_DLH_BAUD_RATE_DIVISOR_H_MASK                  (0xFFU << UART_DLH_BAUD_RATE_DIVISOR_H_SHIFT)                /* 0x000000FF */
/* IER */
#define UART_IER_OFFSET                                    (0x4U)
#define UART_IER_RECEIVE_DATA_AVAILABLE_INT_EN_SHIFT       (0U)
#define UART_IER_RECEIVE_DATA_AVAILABLE_INT_EN_MASK        (0x1U << UART_IER_RECEIVE_DATA_AVAILABLE_INT_EN_SHIFT)       /* 0x00000001 */
#define UART_IER_TRANS_HOLD_EMPTY_INT_EN_SHIFT             (1U)
#define UART_IER_TRANS_HOLD_EMPTY_INT_EN_MASK              (0x1U << UART_IER_TRANS_HOLD_EMPTY_INT_EN_SHIFT)             /* 0x00000002 */
#define UART_IER_RECEIVE_LINE_STATUS_INT_EN_SHIFT          (2U)
#define UART_IER_RECEIVE_LINE_STATUS_INT_EN_MASK           (0x1U << UART_IER_RECEIVE_LINE_STATUS_INT_EN_SHIFT)          /* 0x00000004 */
#define UART_IER_MODEM_STATUS_INT_EN_SHIFT                 (3U)
#define UART_IER_MODEM_STATUS_INT_EN_MASK                  (0x1U << UART_IER_MODEM_STATUS_INT_EN_SHIFT)                 /* 0x00000008 */
#define UART_IER_PROG_THRE_INT_EN_SHIFT                    (7U)
#define UART_IER_PROG_THRE_INT_EN_MASK                     (0x1U << UART_IER_PROG_THRE_INT_EN_SHIFT)                    /* 0x00000080 */
/* FCR */
#define UART_FCR_OFFSET                                    (0x8U)
#define UART_FCR_FIFO_EN_SHIFT                             (0U)
#define UART_FCR_FIFO_EN_MASK                              (0x1U << UART_FCR_FIFO_EN_SHIFT)                             /* 0x00000001 */
#define UART_FCR_RCVR_FIFO_RESET_SHIFT                     (1U)
#define UART_FCR_RCVR_FIFO_RESET_MASK                      (0x1U << UART_FCR_RCVR_FIFO_RESET_SHIFT)                     /* 0x00000002 */
#define UART_FCR_XMIT_FIFO_RESET_SHIFT                     (2U)
#define UART_FCR_XMIT_FIFO_RESET_MASK                      (0x1U << UART_FCR_XMIT_FIFO_RESET_SHIFT)                     /* 0x00000004 */
#define UART_FCR_DMA_MODE_SHIFT                            (3U)
#define UART_FCR_DMA_MODE_MASK                             (0x1U << UART_FCR_DMA_MODE_SHIFT)                            /* 0x00000008 */
#define UART_FCR_TX_EMPTY_TRIGGER_SHIFT                    (4U)
#define UART_FCR_TX_EMPTY_TRIGGER_MASK                     (0x3U << UART_FCR_TX_EMPTY_TRIGGER_SHIFT)                    /* 0x00000030 */
#define UART_FCR_RCVR_TRIGGER_SHIFT                        (6U)
#define UART_FCR_RCVR_TRIGGER_MASK                         (0x3U << UART_FCR_RCVR_TRIGGER_SHIFT)                        /* 0x000000C0 */
/* IIR */
#define UART_IIR_OFFSET                                    (0x8U)
#define UART_IIR                                           (0x1U)
#define UART_IIR_INT_ID_SHIFT                              (0U)
#define UART_IIR_INT_ID_MASK                               (0xFU << UART_IIR_INT_ID_SHIFT)                              /* 0x0000000F */
#define UART_IIR_FIFOS_EN_SHIFT                            (6U)
#define UART_IIR_FIFOS_EN_MASK                             (0x3U << UART_IIR_FIFOS_EN_SHIFT)                            /* 0x000000C0 */
/* LCR */
#define UART_LCR_OFFSET                                    (0xCU)
#define UART_LCR_DATA_LENGTH_SEL_SHIFT                     (0U)
#define UART_LCR_DATA_LENGTH_SEL_MASK                      (0x3U << UART_LCR_DATA_LENGTH_SEL_SHIFT)                     /* 0x00000003 */
#define UART_LCR_STOP_BITS_NUM_SHIFT                       (2U)
#define UART_LCR_STOP_BITS_NUM_MASK                        (0x1U << UART_LCR_STOP_BITS_NUM_SHIFT)                       /* 0x00000004 */
#define UART_LCR_PARITY_EN_SHIFT                           (3U)
#define UART_LCR_PARITY_EN_MASK                            (0x1U << UART_LCR_PARITY_EN_SHIFT)                           /* 0x00000008 */
#define UART_LCR_EVEN_PARITY_SEL_SHIFT                     (4U)
#define UART_LCR_EVEN_PARITY_SEL_MASK                      (0x1U << UART_LCR_EVEN_PARITY_SEL_SHIFT)                     /* 0x00000010 */
#define UART_LCR_STICK_PARITY_SHIFT                        (5U)
#define UART_LCR_STICK_PARITY_MASK                         (0x1U << UART_LCR_STICK_PARITY_SHIFT)                        /* 0x00000020 */
#define UART_LCR_BREAK_CTRL_SHIFT                          (6U)
#define UART_LCR_BREAK_CTRL_MASK                           (0x1U << UART_LCR_BREAK_CTRL_SHIFT)                          /* 0x00000040 */
#define UART_LCR_DIV_LAT_ACCESS_SHIFT                      (7U)
#define UART_LCR_DIV_LAT_ACCESS_MASK                       (0x1U << UART_LCR_DIV_LAT_ACCESS_SHIFT)                      /* 0x00000080 */
/* MCR */
#define UART_MCR_OFFSET                                    (0x10U)
#define UART_MCR_DATA_TERMINAL_READY_SHIFT                 (0U)
#define UART_MCR_DATA_TERMINAL_READY_MASK                  (0x1U << UART_MCR_DATA_TERMINAL_READY_SHIFT)                 /* 0x00000001 */
#define UART_MCR_REQ_TO_SEND_SHIFT                         (1U)
#define UART_MCR_REQ_TO_SEND_MASK                          (0x1U << UART_MCR_REQ_TO_SEND_SHIFT)                         /* 0x00000002 */
#define UART_MCR_OUT1_SHIFT                                (2U)
#define UART_MCR_OUT1_MASK                                 (0x1U << UART_MCR_OUT1_SHIFT)                                /* 0x00000004 */
#define UART_MCR_OUT2_SHIFT                                (3U)
#define UART_MCR_OUT2_MASK                                 (0x1U << UART_MCR_OUT2_SHIFT)                                /* 0x00000008 */
#define UART_MCR_LOOPBACK_SHIFT                            (4U)
#define UART_MCR_LOOPBACK_MASK                             (0x1U << UART_MCR_LOOPBACK_SHIFT)                            /* 0x00000010 */
#define UART_MCR_AUTO_FLOW_CTRL_EN_SHIFT                   (5U)
#define UART_MCR_AUTO_FLOW_CTRL_EN_MASK                    (0x1U << UART_MCR_AUTO_FLOW_CTRL_EN_SHIFT)                   /* 0x00000020 */
#define UART_MCR_SIR_MODE_EN_SHIFT                         (6U)
#define UART_MCR_SIR_MODE_EN_MASK                          (0x1U << UART_MCR_SIR_MODE_EN_SHIFT)                         /* 0x00000040 */
/* LSR */
#define UART_LSR_OFFSET                                    (0x14U)
#define UART_LSR                                           (0x60U)
#define UART_LSR_DATA_READY_SHIFT                          (0U)
#define UART_LSR_DATA_READY_MASK                           (0x1U << UART_LSR_DATA_READY_SHIFT)                          /* 0x00000001 */
#define UART_LSR_OVERRUN_ERROR_SHIFT                       (1U)
#define UART_LSR_OVERRUN_ERROR_MASK                        (0x1U << UART_LSR_OVERRUN_ERROR_SHIFT)                       /* 0x00000002 */
#define UART_LSR_PARITY_ERROR_SHIFT                        (2U)
#define UART_LSR_PARITY_ERROR_MASK                         (0x1U << UART_LSR_PARITY_ERROR_SHIFT)                        /* 0x00000004 */
#define UART_LSR_FRAMING_ERROR_SHIFT                       (3U)
#define UART_LSR_FRAMING_ERROR_MASK                        (0x1U << UART_LSR_FRAMING_ERROR_SHIFT)                       /* 0x00000008 */
#define UART_LSR_BREAK_INT_SHIFT                           (4U)
#define UART_LSR_BREAK_INT_MASK                            (0x1U << UART_LSR_BREAK_INT_SHIFT)                           /* 0x00000010 */
#define UART_LSR_TRANS_HOLD_REG_EMPTY_SHIFT                (5U)
#define UART_LSR_TRANS_HOLD_REG_EMPTY_MASK                 (0x1U << UART_LSR_TRANS_HOLD_REG_EMPTY_SHIFT)                /* 0x00000020 */
#define UART_LSR_TRANS_EMPTY_SHIFT                         (6U)
#define UART_LSR_TRANS_EMPTY_MASK                          (0x1U << UART_LSR_TRANS_EMPTY_SHIFT)                         /* 0x00000040 */
#define UART_LSR_RECEIVER_FIFO_ERROR_SHIFT                 (7U)
#define UART_LSR_RECEIVER_FIFO_ERROR_MASK                  (0x1U << UART_LSR_RECEIVER_FIFO_ERROR_SHIFT)                 /* 0x00000080 */
/* MSR */
#define UART_MSR_OFFSET                                    (0x18U)
#define UART_MSR                                           (0x0U)
#define UART_MSR_DELTA_CLEAR_TO_SEND_SHIFT                 (0U)
#define UART_MSR_DELTA_CLEAR_TO_SEND_MASK                  (0x1U << UART_MSR_DELTA_CLEAR_TO_SEND_SHIFT)                 /* 0x00000001 */
#define UART_MSR_DELTA_DATA_SET_READY_SHIFT                (1U)
#define UART_MSR_DELTA_DATA_SET_READY_MASK                 (0x1U << UART_MSR_DELTA_DATA_SET_READY_SHIFT)                /* 0x00000002 */
#define UART_MSR_TRAILING_EDGE_RING_INDICATOR_SHIFT        (2U)
#define UART_MSR_TRAILING_EDGE_RING_INDICATOR_MASK         (0x1U << UART_MSR_TRAILING_EDGE_RING_INDICATOR_SHIFT)        /* 0x00000004 */
#define UART_MSR_DELTA_DATA_CARRIER_DETECT_SHIFT           (3U)
#define UART_MSR_DELTA_DATA_CARRIER_DETECT_MASK            (0x1U << UART_MSR_DELTA_DATA_CARRIER_DETECT_SHIFT)           /* 0x00000008 */
#define UART_MSR_CLEAR_TO_SEND_SHIFT                       (4U)
#define UART_MSR_CLEAR_TO_SEND_MASK                        (0x1U << UART_MSR_CLEAR_TO_SEND_SHIFT)                       /* 0x00000010 */
#define UART_MSR_DATA_SET_READY_SHIFT                      (5U)
#define UART_MSR_DATA_SET_READY_MASK                       (0x1U << UART_MSR_DATA_SET_READY_SHIFT)                      /* 0x00000020 */
#define UART_MSR_RING_INDICATOR_SHIFT                      (6U)
#define UART_MSR_RING_INDICATOR_MASK                       (0x1U << UART_MSR_RING_INDICATOR_SHIFT)                      /* 0x00000040 */
#define UART_MSR_DATA_CARRIOR_DETECT_SHIFT                 (7U)
#define UART_MSR_DATA_CARRIOR_DETECT_MASK                  (0x1U << UART_MSR_DATA_CARRIOR_DETECT_SHIFT)                 /* 0x00000080 */
/* SCR */
#define UART_SCR_OFFSET                                    (0x1CU)
#define UART_SCR_TEMP_STORE_SPACE_SHIFT                    (0U)
#define UART_SCR_TEMP_STORE_SPACE_MASK                     (0xFFU << UART_SCR_TEMP_STORE_SPACE_SHIFT)                   /* 0x000000FF */
/* SRBR */
#define UART_SRBR_OFFSET                                   (0x30U)
#define UART_SRBR                                          (0x0U)
#define UART_SRBR_SHADOW_RBR_SHIFT                         (0U)
#define UART_SRBR_SHADOW_RBR_MASK                          (0xFFU << UART_SRBR_SHADOW_RBR_SHIFT)                        /* 0x000000FF */
/* STHR */
#define UART_STHR_OFFSET                                   (0x30U)
#define UART_STHR_SHADOW_THR_SHIFT                         (0U)
#define UART_STHR_SHADOW_THR_MASK                          (0xFFU << UART_STHR_SHADOW_THR_SHIFT)                        /* 0x000000FF */
/* FAR */
#define UART_FAR_OFFSET                                    (0x70U)
#define UART_FAR_FIFO_ACCESS_TEST_EN_SHIFT                 (0U)
#define UART_FAR_FIFO_ACCESS_TEST_EN_MASK                  (0x1U << UART_FAR_FIFO_ACCESS_TEST_EN_SHIFT)                 /* 0x00000001 */
/* TFR */
#define UART_TFR_OFFSET                                    (0x74U)
#define UART_TFR                                           (0x0U)
#define UART_TFR_TRANS_FIFO_READ_SHIFT                     (0U)
#define UART_TFR_TRANS_FIFO_READ_MASK                      (0xFFU << UART_TFR_TRANS_FIFO_READ_SHIFT)                    /* 0x000000FF */
/* RFW */
#define UART_RFW_OFFSET                                    (0x78U)
#define UART_RFW_RECEIVE_FIFO_WRITE_SHIFT                  (0U)
#define UART_RFW_RECEIVE_FIFO_WRITE_MASK                   (0xFFU << UART_RFW_RECEIVE_FIFO_WRITE_SHIFT)                 /* 0x000000FF */
#define UART_RFW_RECEIVE_FIFO_PARITY_ERROR_SHIFT           (8U)
#define UART_RFW_RECEIVE_FIFO_PARITY_ERROR_MASK            (0x1U << UART_RFW_RECEIVE_FIFO_PARITY_ERROR_SHIFT)           /* 0x00000100 */
#define UART_RFW_RECEIVE_FIFO_FRAMING_ERROR_SHIFT          (9U)
#define UART_RFW_RECEIVE_FIFO_FRAMING_ERROR_MASK           (0x1U << UART_RFW_RECEIVE_FIFO_FRAMING_ERROR_SHIFT)          /* 0x00000200 */
/* USR */
#define UART_USR_OFFSET                                    (0x7CU)
#define UART_USR                                           (0x6U)
#define UART_USR_UART_BUSY_SHIFT                           (0U)
#define UART_USR_UART_BUSY_MASK                            (0x1U << UART_USR_UART_BUSY_SHIFT)                           /* 0x00000001 */
#define UART_USR_TRANS_FIFO_NOT_FULL_SHIFT                 (1U)
#define UART_USR_TRANS_FIFO_NOT_FULL_MASK                  (0x1U << UART_USR_TRANS_FIFO_NOT_FULL_SHIFT)                 /* 0x00000002 */
#define UART_USR_TRASN_FIFO_EMPTY_SHIFT                    (2U)
#define UART_USR_TRASN_FIFO_EMPTY_MASK                     (0x1U << UART_USR_TRASN_FIFO_EMPTY_SHIFT)                    /* 0x00000004 */
#define UART_USR_RECEIVE_FIFO_NOT_EMPTY_SHIFT              (3U)
#define UART_USR_RECEIVE_FIFO_NOT_EMPTY_MASK               (0x1U << UART_USR_RECEIVE_FIFO_NOT_EMPTY_SHIFT)              /* 0x00000008 */
#define UART_USR_RECEIVE_FIFO_FULL_SHIFT                   (4U)
#define UART_USR_RECEIVE_FIFO_FULL_MASK                    (0x1U << UART_USR_RECEIVE_FIFO_FULL_SHIFT)                   /* 0x00000010 */
/* TFL */
#define UART_TFL_OFFSET                                    (0x80U)
#define UART_TFL                                           (0x0U)
#define UART_TFL_TRANS_FIFO_LEVEL_SHIFT                    (0U)
#define UART_TFL_TRANS_FIFO_LEVEL_MASK                     (0x3FU << UART_TFL_TRANS_FIFO_LEVEL_SHIFT)                   /* 0x0000003F */
/* RFL */
#define UART_RFL_OFFSET                                    (0x84U)
#define UART_RFL                                           (0x0U)
#define UART_RFL_RECEIVE_FIFO_LEVEL_SHIFT                  (0U)
#define UART_RFL_RECEIVE_FIFO_LEVEL_MASK                   (0x3FU << UART_RFL_RECEIVE_FIFO_LEVEL_SHIFT)                 /* 0x0000003F */
/* SRR */
#define UART_SRR_OFFSET                                    (0x88U)
#define UART_SRR_UART_RESET_SHIFT                          (0U)
#define UART_SRR_UART_RESET_MASK                           (0x1U << UART_SRR_UART_RESET_SHIFT)                          /* 0x00000001 */
#define UART_SRR_RCVR_FIFO_RESET_SHIFT                     (1U)
#define UART_SRR_RCVR_FIFO_RESET_MASK                      (0x1U << UART_SRR_RCVR_FIFO_RESET_SHIFT)                     /* 0x00000002 */
#define UART_SRR_XMIT_FIFO_RESET_SHIFT                     (2U)
#define UART_SRR_XMIT_FIFO_RESET_MASK                      (0x1U << UART_SRR_XMIT_FIFO_RESET_SHIFT)                     /* 0x00000004 */
/* SRTS */
#define UART_SRTS_OFFSET                                   (0x8CU)
#define UART_SRTS_SHADOW_REQ_TO_SEND_SHIFT                 (0U)
#define UART_SRTS_SHADOW_REQ_TO_SEND_MASK                  (0x1U << UART_SRTS_SHADOW_REQ_TO_SEND_SHIFT)                 /* 0x00000001 */
/* SBCR */
#define UART_SBCR_OFFSET                                   (0x90U)
#define UART_SBCR_SHADOW_BREAK_CTRL_SHIFT                  (0U)
#define UART_SBCR_SHADOW_BREAK_CTRL_MASK                   (0x1U << UART_SBCR_SHADOW_BREAK_CTRL_SHIFT)                  /* 0x00000001 */
/* SDMAM */
#define UART_SDMAM_OFFSET                                  (0x94U)
#define UART_SDMAM_SHADOW_DMA_MODE_SHIFT                   (0U)
#define UART_SDMAM_SHADOW_DMA_MODE_MASK                    (0x1U << UART_SDMAM_SHADOW_DMA_MODE_SHIFT)                   /* 0x00000001 */
/* SFE */
#define UART_SFE_OFFSET                                    (0x98U)
#define UART_SFE_SHADOW_FIFO_EN_SHIFT                      (0U)
#define UART_SFE_SHADOW_FIFO_EN_MASK                       (0x1U << UART_SFE_SHADOW_FIFO_EN_SHIFT)                      /* 0x00000001 */
/* SRT */
#define UART_SRT_OFFSET                                    (0x9CU)
#define UART_SRT_SHADOW_RCVR_TRIGGER_SHIFT                 (0U)
#define UART_SRT_SHADOW_RCVR_TRIGGER_MASK                  (0x3U << UART_SRT_SHADOW_RCVR_TRIGGER_SHIFT)                 /* 0x00000003 */
/* STET */
#define UART_STET_OFFSET                                   (0xA0U)
#define UART_STET_SHADOW_TX_EMPTY_TRIGGER_SHIFT            (0U)
#define UART_STET_SHADOW_TX_EMPTY_TRIGGER_MASK             (0x3U << UART_STET_SHADOW_TX_EMPTY_TRIGGER_SHIFT)            /* 0x00000003 */
/* HTX */
#define UART_HTX_OFFSET                                    (0xA4U)
#define UART_HTX_HALT_TX_EN_SHIFT                          (0U)
#define UART_HTX_HALT_TX_EN_MASK                           (0x1U << UART_HTX_HALT_TX_EN_SHIFT)                          /* 0x00000001 */
/* DMASA */
#define UART_DMASA_OFFSET                                  (0xA8U)
#define UART_DMASA_DMA_SOFTWARE_ACK_SHIFT                  (0U)
#define UART_DMASA_DMA_SOFTWARE_ACK_MASK                   (0x1U << UART_DMASA_DMA_SOFTWARE_ACK_SHIFT)                  /* 0x00000001 */
/* TCR */
#define UART_TCR_OFFSET                                    (0xACU)
#define UART_TCR_RS485_EN_SHIFT                            (0U)
#define UART_TCR_RS485_EN_MASK                             (0x1U << UART_TCR_RS485_EN_SHIFT)                            /* 0x00000001 */
#define UART_TCR_RE_EN_SHIFT                               (1U)
#define UART_TCR_RE_EN_MASK                                (0x1U << UART_TCR_RE_EN_SHIFT)                               /* 0x00000002 */
#define UART_TCR_XFER_MODE_SHIFT                           (2U)
#define UART_TCR_XFER_MODE_MASK                            (0x1U << UART_TCR_XFER_MODE_SHIFT)                           /* 0x00000004 */
#define UART_TCR_DE_POL_SHIFT                              (3U)
#define UART_TCR_DE_POL_MASK                               (0x1U << UART_TCR_DE_POL_SHIFT)                              /* 0x00000008 */
#define UART_TCR_RE_POL_SHIFT                              (4U)
#define UART_TCR_RE_POL_MASK                               (0x1U << UART_TCR_RE_POL_SHIFT)                              /* 0x00000010 */
#define UART_TCR_AUTO_DE_SHIFT                             (5U)
#define UART_TCR_AUTO_DE_MASK                              (0x1U << UART_TCR_AUTO_DE_SHIFT)                             /* 0x00000020 */
/* DE */
#define UART_DE_OFFSET                                     (0xB0U)
#define UART_DE_DE_SHIFT                                   (0U)
#define UART_DE_DE_MASK                                    (0x1U << UART_DE_DE_SHIFT)                                   /* 0x00000001 */
/* RE */
#define UART_RE_OFFSET                                     (0xB4U)
#define UART_RE_RE_SHIFT                                   (0U)
#define UART_RE_RE_MASK                                    (0x1U << UART_RE_RE_SHIFT)                                   /* 0x00000001 */
/* DET */
#define UART_DET_OFFSET                                    (0xB8U)
#define UART_DET_DE_INACT_TIME_SHIFT                       (0U)
#define UART_DET_DE_INACT_TIME_MASK                        (0xFFFFU << UART_DET_DE_INACT_TIME_SHIFT)                    /* 0x0000FFFF */
/* TAT */
#define UART_TAT_OFFSET                                    (0xBCU)
#define UART_TAT_DE2RE_TIME_SHIFT                          (0U)
#define UART_TAT_DE2RE_TIME_MASK                           (0xFFFFU << UART_TAT_DE2RE_TIME_SHIFT)                       /* 0x0000FFFF */
/* CPR */
#define UART_CPR_OFFSET                                    (0xF4U)
#define UART_CPR                                           (0x43FF2U)
#define UART_CPR_APB_DATA_WIDTH_SHIFT                      (0U)
#define UART_CPR_APB_DATA_WIDTH_MASK                       (0x3U << UART_CPR_APB_DATA_WIDTH_SHIFT)                      /* 0x00000003 */
#define UART_CPR_AFCE_MODE_SHIFT                           (4U)
#define UART_CPR_AFCE_MODE_MASK                            (0x1U << UART_CPR_AFCE_MODE_SHIFT)                           /* 0x00000010 */
#define UART_CPR_THRE_MODE_SHIFT                           (5U)
#define UART_CPR_THRE_MODE_MASK                            (0x1U << UART_CPR_THRE_MODE_SHIFT)                           /* 0x00000020 */
#define UART_CPR_SIR_MODE_SHIFT                            (6U)
#define UART_CPR_SIR_MODE_MASK                             (0x1U << UART_CPR_SIR_MODE_SHIFT)                            /* 0x00000040 */
#define UART_CPR_SIR_LP_MODE_SHIFT                         (7U)
#define UART_CPR_SIR_LP_MODE_MASK                          (0x1U << UART_CPR_SIR_LP_MODE_SHIFT)                         /* 0x00000080 */
#define UART_CPR_NEW_FEAT_SHIFT                            (8U)
#define UART_CPR_NEW_FEAT_MASK                             (0x1U << UART_CPR_NEW_FEAT_SHIFT)                            /* 0x00000100 */
#define UART_CPR_FIFO_ACCESS_SHIFT                         (9U)
#define UART_CPR_FIFO_ACCESS_MASK                          (0x1U << UART_CPR_FIFO_ACCESS_SHIFT)                         /* 0x00000200 */
#define UART_CPR_FIFO_STAT_SHIFT                           (10U)
#define UART_CPR_FIFO_STAT_MASK                            (0x1U << UART_CPR_FIFO_STAT_SHIFT)                           /* 0x00000400 */
#define UART_CPR_SHADOW_SHIFT                              (11U)
#define UART_CPR_SHADOW_MASK                               (0x1U << UART_CPR_SHADOW_SHIFT)                              /* 0x00000800 */
#define UART_CPR_UART_ADD_ENCODED_PARAMS_SHIFT             (12U)
#define UART_CPR_UART_ADD_ENCODED_PARAMS_MASK              (0x1U << UART_CPR_UART_ADD_ENCODED_PARAMS_SHIFT)             /* 0x00001000 */
#define UART_CPR_DMA_EXTRA_SHIFT                           (13U)
#define UART_CPR_DMA_EXTRA_MASK                            (0x1U << UART_CPR_DMA_EXTRA_SHIFT)                           /* 0x00002000 */
#define UART_CPR_FIFO_MODE_SHIFT                           (16U)
#define UART_CPR_FIFO_MODE_MASK                            (0xFFU << UART_CPR_FIFO_MODE_SHIFT)                          /* 0x00FF0000 */
/* UCV */
#define UART_UCV_OFFSET                                    (0xF8U)
#define UART_UCV                                           (0x3430322AU)
#define UART_UCV_VER_SHIFT                                 (0U)
#define UART_UCV_VER_MASK                                  (0xFFFFFFFFU << UART_UCV_VER_SHIFT)                          /* 0xFFFFFFFF */
/* CTR */
#define UART_CTR_OFFSET                                    (0xFCU)
#define UART_CTR                                           (0x44570110U)
#define UART_CTR_PERIPHERAL_ID_SHIFT                       (0U)
#define UART_CTR_PERIPHERAL_ID_MASK                        (0xFFFFFFFFU << UART_CTR_PERIPHERAL_ID_SHIFT)                /* 0xFFFFFFFF */
/******************************************SPI*******************************************/
/* CTRLR0 */
#define SPI_CTRLR0_OFFSET                                  (0x0U)
#define SPI_CTRLR0_DFS_SHIFT                               (0U)
#define SPI_CTRLR0_DFS_MASK                                (0x3U << SPI_CTRLR0_DFS_SHIFT)                               /* 0x00000003 */
#define SPI_CTRLR0_CFS_SHIFT                               (2U)
#define SPI_CTRLR0_CFS_MASK                                (0xFU << SPI_CTRLR0_CFS_SHIFT)                               /* 0x0000003C */
#define SPI_CTRLR0_SCPH_SHIFT                              (6U)
#define SPI_CTRLR0_SCPH_MASK                               (0x1U << SPI_CTRLR0_SCPH_SHIFT)                              /* 0x00000040 */
#define SPI_CTRLR0_SCPOL_SHIFT                             (7U)
#define SPI_CTRLR0_SCPOL_MASK                              (0x1U << SPI_CTRLR0_SCPOL_SHIFT)                             /* 0x00000080 */
#define SPI_CTRLR0_CSM_SHIFT                               (8U)
#define SPI_CTRLR0_CSM_MASK                                (0x3U << SPI_CTRLR0_CSM_SHIFT)                               /* 0x00000300 */
#define SPI_CTRLR0_SSD_SHIFT                               (10U)
#define SPI_CTRLR0_SSD_MASK                                (0x1U << SPI_CTRLR0_SSD_SHIFT)                               /* 0x00000400 */
#define SPI_CTRLR0_EM_SHIFT                                (11U)
#define SPI_CTRLR0_EM_MASK                                 (0x1U << SPI_CTRLR0_EM_SHIFT)                                /* 0x00000800 */
#define SPI_CTRLR0_FBM_SHIFT                               (12U)
#define SPI_CTRLR0_FBM_MASK                                (0x1U << SPI_CTRLR0_FBM_SHIFT)                               /* 0x00001000 */
#define SPI_CTRLR0_BHT_SHIFT                               (13U)
#define SPI_CTRLR0_BHT_MASK                                (0x1U << SPI_CTRLR0_BHT_SHIFT)                               /* 0x00002000 */
#define SPI_CTRLR0_RSD_SHIFT                               (14U)
#define SPI_CTRLR0_RSD_MASK                                (0x3U << SPI_CTRLR0_RSD_SHIFT)                               /* 0x0000C000 */
#define SPI_CTRLR0_FRF_SHIFT                               (16U)
#define SPI_CTRLR0_FRF_MASK                                (0x3U << SPI_CTRLR0_FRF_SHIFT)                               /* 0x00030000 */
#define SPI_CTRLR0_XFM_SHIFT                               (18U)
#define SPI_CTRLR0_XFM_MASK                                (0x3U << SPI_CTRLR0_XFM_SHIFT)                               /* 0x000C0000 */
#define SPI_CTRLR0_OPM_SHIFT                               (20U)
#define SPI_CTRLR0_OPM_MASK                                (0x1U << SPI_CTRLR0_OPM_SHIFT)                               /* 0x00100000 */
#define SPI_CTRLR0_MTM_SHIFT                               (21U)
#define SPI_CTRLR0_MTM_MASK                                (0x1U << SPI_CTRLR0_MTM_SHIFT)                               /* 0x00200000 */
#define SPI_CTRLR0_SM_SHIFT                                (22U)
#define SPI_CTRLR0_SM_MASK                                 (0x1U << SPI_CTRLR0_SM_SHIFT)                                /* 0x00400000 */
#define SPI_CTRLR0_SOI_SHIFT                               (23U)
#define SPI_CTRLR0_SOI_MASK                                (0x3U << SPI_CTRLR0_SOI_SHIFT)                               /* 0x01800000 */
#define SPI_CTRLR0_LBK_SHIFT                               (25U)
#define SPI_CTRLR0_LBK_MASK                                (0x1U << SPI_CTRLR0_LBK_SHIFT)                               /* 0x02000000 */
/* CTRLR1 */
#define SPI_CTRLR1_OFFSET                                  (0x4U)
#define SPI_CTRLR1_NDM_SHIFT                               (0U)
#define SPI_CTRLR1_NDM_MASK                                (0xFFFFFFFFU << SPI_CTRLR1_NDM_SHIFT)                        /* 0xFFFFFFFF */
/* ENR */
#define SPI_ENR_OFFSET                                     (0x8U)
#define SPI_ENR_ENR_SHIFT                                  (0U)
#define SPI_ENR_ENR_MASK                                   (0x1U << SPI_ENR_ENR_SHIFT)                                  /* 0x00000001 */
/* SER */
#define SPI_SER_OFFSET                                     (0xCU)
#define SPI_SER_SER_SHIFT                                  (0U)
#define SPI_SER_SER_MASK                                   (0x3U << SPI_SER_SER_SHIFT)                                  /* 0x00000003 */
/* BAUDR */
#define SPI_BAUDR_OFFSET                                   (0x10U)
#define SPI_BAUDR_BAUDR_SHIFT                              (0U)
#define SPI_BAUDR_BAUDR_MASK                               (0xFFFFU << SPI_BAUDR_BAUDR_SHIFT)                           /* 0x0000FFFF */
/* TXFTLR */
#define SPI_TXFTLR_OFFSET                                  (0x14U)
#define SPI_TXFTLR_TXFTLR_SHIFT                            (0U)
#define SPI_TXFTLR_TXFTLR_MASK                             (0x3FU << SPI_TXFTLR_TXFTLR_SHIFT)                           /* 0x0000003F */
/* RXFTLR */
#define SPI_RXFTLR_OFFSET                                  (0x18U)
#define SPI_RXFTLR_RXFTLR_SHIFT                            (0U)
#define SPI_RXFTLR_RXFTLR_MASK                             (0x3FU << SPI_RXFTLR_RXFTLR_SHIFT)                           /* 0x0000003F */
/* TXFLR */
#define SPI_TXFLR_OFFSET                                   (0x1CU)
#define SPI_TXFLR                                          (0x0U)
#define SPI_TXFLR_TXFLR_SHIFT                              (0U)
#define SPI_TXFLR_TXFLR_MASK                               (0x7FU << SPI_TXFLR_TXFLR_SHIFT)                             /* 0x0000007F */
/* RXFLR */
#define SPI_RXFLR_OFFSET                                   (0x20U)
#define SPI_RXFLR                                          (0x0U)
#define SPI_RXFLR_RXFLR_SHIFT                              (0U)
#define SPI_RXFLR_RXFLR_MASK                               (0x7FU << SPI_RXFLR_RXFLR_SHIFT)                             /* 0x0000007F */
/* SR */
#define SPI_SR_OFFSET                                      (0x24U)
#define SPI_SR                                             (0x4CU)
#define SPI_SR_BSF_SHIFT                                   (0U)
#define SPI_SR_BSF_MASK                                    (0x1U << SPI_SR_BSF_SHIFT)                                   /* 0x00000001 */
#define SPI_SR_TFF_SHIFT                                   (1U)
#define SPI_SR_TFF_MASK                                    (0x1U << SPI_SR_TFF_SHIFT)                                   /* 0x00000002 */
#define SPI_SR_TFE_SHIFT                                   (2U)
#define SPI_SR_TFE_MASK                                    (0x1U << SPI_SR_TFE_SHIFT)                                   /* 0x00000004 */
#define SPI_SR_RFE_SHIFT                                   (3U)
#define SPI_SR_RFE_MASK                                    (0x1U << SPI_SR_RFE_SHIFT)                                   /* 0x00000008 */
#define SPI_SR_RFF_SHIFT                                   (4U)
#define SPI_SR_RFF_MASK                                    (0x1U << SPI_SR_RFF_SHIFT)                                   /* 0x00000010 */
#define SPI_SR_STB_SHIFT                                   (5U)
#define SPI_SR_STB_MASK                                    (0x1U << SPI_SR_STB_SHIFT)                                   /* 0x00000020 */
#define SPI_SR_SSI_SHIFT                                   (6U)
#define SPI_SR_SSI_MASK                                    (0x1U << SPI_SR_SSI_SHIFT)                                   /* 0x00000040 */
/* IPR */
#define SPI_IPR_OFFSET                                     (0x28U)
#define SPI_IPR_IPR_SHIFT                                  (0U)
#define SPI_IPR_IPR_MASK                                   (0x1U << SPI_IPR_IPR_SHIFT)                                  /* 0x00000001 */
/* IMR */
#define SPI_IMR_OFFSET                                     (0x2CU)
#define SPI_IMR_TFEIM_SHIFT                                (0U)
#define SPI_IMR_TFEIM_MASK                                 (0x1U << SPI_IMR_TFEIM_SHIFT)                                /* 0x00000001 */
#define SPI_IMR_TFOIM_SHIFT                                (1U)
#define SPI_IMR_TFOIM_MASK                                 (0x1U << SPI_IMR_TFOIM_SHIFT)                                /* 0x00000002 */
#define SPI_IMR_RFUIM_SHIFT                                (2U)
#define SPI_IMR_RFUIM_MASK                                 (0x1U << SPI_IMR_RFUIM_SHIFT)                                /* 0x00000004 */
#define SPI_IMR_RFOIM_SHIFT                                (3U)
#define SPI_IMR_RFOIM_MASK                                 (0x1U << SPI_IMR_RFOIM_SHIFT)                                /* 0x00000008 */
#define SPI_IMR_RFFIM_SHIFT                                (4U)
#define SPI_IMR_RFFIM_MASK                                 (0x1U << SPI_IMR_RFFIM_SHIFT)                                /* 0x00000010 */
#define SPI_IMR_TOIM_SHIFT                                 (5U)
#define SPI_IMR_TOIM_MASK                                  (0x1U << SPI_IMR_TOIM_SHIFT)                                 /* 0x00000020 */
#define SPI_IMR_SSPIM_SHIFT                                (6U)
#define SPI_IMR_SSPIM_MASK                                 (0x1U << SPI_IMR_SSPIM_SHIFT)                                /* 0x00000040 */
#define SPI_IMR_TXFIM_SHIFT                                (7U)
#define SPI_IMR_TXFIM_MASK                                 (0x1U << SPI_IMR_TXFIM_SHIFT)                                /* 0x00000080 */
/* ISR */
#define SPI_ISR_OFFSET                                     (0x30U)
#define SPI_ISR_TFEIS_SHIFT                                (0U)
#define SPI_ISR_TFEIS_MASK                                 (0x1U << SPI_ISR_TFEIS_SHIFT)                                /* 0x00000001 */
#define SPI_ISR_TFOIS_SHIFT                                (1U)
#define SPI_ISR_TFOIS_MASK                                 (0x1U << SPI_ISR_TFOIS_SHIFT)                                /* 0x00000002 */
#define SPI_ISR_RFUIS_SHIFT                                (2U)
#define SPI_ISR_RFUIS_MASK                                 (0x1U << SPI_ISR_RFUIS_SHIFT)                                /* 0x00000004 */
#define SPI_ISR_RFOIS_SHIFT                                (3U)
#define SPI_ISR_RFOIS_MASK                                 (0x1U << SPI_ISR_RFOIS_SHIFT)                                /* 0x00000008 */
#define SPI_ISR_RFFIS_SHIFT                                (4U)
#define SPI_ISR_RFFIS_MASK                                 (0x1U << SPI_ISR_RFFIS_SHIFT)                                /* 0x00000010 */
#define SPI_ISR_TOIS_SHIFT                                 (5U)
#define SPI_ISR_TOIS_MASK                                  (0x1U << SPI_ISR_TOIS_SHIFT)                                 /* 0x00000020 */
#define SPI_ISR_SSPIS_SHIFT                                (6U)
#define SPI_ISR_SSPIS_MASK                                 (0x1U << SPI_ISR_SSPIS_SHIFT)                                /* 0x00000040 */
#define SPI_ISR_TXFIS_SHIFT                                (7U)
#define SPI_ISR_TXFIS_MASK                                 (0x1U << SPI_ISR_TXFIS_SHIFT)                                /* 0x00000080 */
/* RISR */
#define SPI_RISR_OFFSET                                    (0x34U)
#define SPI_RISR_TFERIS_SHIFT                              (0U)
#define SPI_RISR_TFERIS_MASK                               (0x1U << SPI_RISR_TFERIS_SHIFT)                              /* 0x00000001 */
#define SPI_RISR_TFORIS_SHIFT                              (1U)
#define SPI_RISR_TFORIS_MASK                               (0x1U << SPI_RISR_TFORIS_SHIFT)                              /* 0x00000002 */
#define SPI_RISR_RFURIS_SHIFT                              (2U)
#define SPI_RISR_RFURIS_MASK                               (0x1U << SPI_RISR_RFURIS_SHIFT)                              /* 0x00000004 */
#define SPI_RISR_RFORIS_SHIFT                              (3U)
#define SPI_RISR_RFORIS_MASK                               (0x1U << SPI_RISR_RFORIS_SHIFT)                              /* 0x00000008 */
#define SPI_RISR_RFFRIS_SHIFT                              (4U)
#define SPI_RISR_RFFRIS_MASK                               (0x1U << SPI_RISR_RFFRIS_SHIFT)                              /* 0x00000010 */
#define SPI_RISR_TORIS_SHIFT                               (5U)
#define SPI_RISR_TORIS_MASK                                (0x1U << SPI_RISR_TORIS_SHIFT)                               /* 0x00000020 */
#define SPI_RISR_SSPRIS_SHIFT                              (6U)
#define SPI_RISR_SSPRIS_MASK                               (0x1U << SPI_RISR_SSPRIS_SHIFT)                              /* 0x00000040 */
#define SPI_RISR_TXFRIS_SHIFT                              (7U)
#define SPI_RISR_TXFRIS_MASK                               (0x1U << SPI_RISR_TXFRIS_SHIFT)                              /* 0x00000080 */
/* ICR */
#define SPI_ICR_OFFSET                                     (0x38U)
#define SPI_ICR_CCI_SHIFT                                  (0U)
#define SPI_ICR_CCI_MASK                                   (0x1U << SPI_ICR_CCI_SHIFT)                                  /* 0x00000001 */
#define SPI_ICR_CRFUI_SHIFT                                (1U)
#define SPI_ICR_CRFUI_MASK                                 (0x1U << SPI_ICR_CRFUI_SHIFT)                                /* 0x00000002 */
#define SPI_ICR_CRFOI_SHIFT                                (2U)
#define SPI_ICR_CRFOI_MASK                                 (0x1U << SPI_ICR_CRFOI_SHIFT)                                /* 0x00000004 */
#define SPI_ICR_CTFOI_SHIFT                                (3U)
#define SPI_ICR_CTFOI_MASK                                 (0x1U << SPI_ICR_CTFOI_SHIFT)                                /* 0x00000008 */
#define SPI_ICR_CTOI_SHIFT                                 (4U)
#define SPI_ICR_CTOI_MASK                                  (0x1U << SPI_ICR_CTOI_SHIFT)                                 /* 0x00000010 */
#define SPI_ICR_CSSPI_SHIFT                                (5U)
#define SPI_ICR_CSSPI_MASK                                 (0x1U << SPI_ICR_CSSPI_SHIFT)                                /* 0x00000020 */
#define SPI_ICR_CTXFI_SHIFT                                (6U)
#define SPI_ICR_CTXFI_MASK                                 (0x1U << SPI_ICR_CTXFI_SHIFT)                                /* 0x00000040 */
/* DMACR */
#define SPI_DMACR_OFFSET                                   (0x3CU)
#define SPI_DMACR_RDE_SHIFT                                (0U)
#define SPI_DMACR_RDE_MASK                                 (0x1U << SPI_DMACR_RDE_SHIFT)                                /* 0x00000001 */
#define SPI_DMACR_TDE_SHIFT                                (1U)
#define SPI_DMACR_TDE_MASK                                 (0x1U << SPI_DMACR_TDE_SHIFT)                                /* 0x00000002 */
/* DMATDLR */
#define SPI_DMATDLR_OFFSET                                 (0x40U)
#define SPI_DMATDLR_TDL_SHIFT                              (0U)
#define SPI_DMATDLR_TDL_MASK                               (0x3FU << SPI_DMATDLR_TDL_SHIFT)                             /* 0x0000003F */
/* DMARDLR */
#define SPI_DMARDLR_OFFSET                                 (0x44U)
#define SPI_DMARDLR_RDL_SHIFT                              (0U)
#define SPI_DMARDLR_RDL_MASK                               (0x3FU << SPI_DMARDLR_RDL_SHIFT)                             /* 0x0000003F */
/* VERSION */
#define SPI_VERSION_OFFSET                                 (0x48U)
#define SPI_VERSION                                        (0x3110003U)
#define SPI_VERSION_VERSION_SHIFT                          (0U)
#define SPI_VERSION_VERSION_MASK                           (0xFFFFFFFFU << SPI_VERSION_VERSION_SHIFT)                   /* 0xFFFFFFFF */
/* TIMEOUT */
#define SPI_TIMEOUT_OFFSET                                 (0x4CU)
#define SPI_TIMEOUT_TOV_SHIFT                              (0U)
#define SPI_TIMEOUT_TOV_MASK                               (0xFFFFU << SPI_TIMEOUT_TOV_SHIFT)                           /* 0x0000FFFF */
#define SPI_TIMEOUT_TOE_SHIFT                              (16U)
#define SPI_TIMEOUT_TOE_MASK                               (0x1U << SPI_TIMEOUT_TOE_SHIFT)                              /* 0x00010000 */
#define SPI_TIMEOUT_TSB_SHIFT                              (17U)
#define SPI_TIMEOUT_TSB_MASK                               (0x1U << SPI_TIMEOUT_TSB_SHIFT)                              /* 0x00020000 */
#define SPI_TIMEOUT_DTSR_SHIFT                             (18U)
#define SPI_TIMEOUT_DTSR_MASK                              (0x1U << SPI_TIMEOUT_DTSR_SHIFT)                             /* 0x00040000 */
/* BYPASS */
#define SPI_BYPASS_OFFSET                                  (0x50U)
#define SPI_BYPASS_BYEN_SHIFT                              (0U)
#define SPI_BYPASS_BYEN_MASK                               (0x1U << SPI_BYPASS_BYEN_SHIFT)                              /* 0x00000001 */
#define SPI_BYPASS_TXFIE_SHIFT                             (1U)
#define SPI_BYPASS_TXFIE_MASK                              (0x1U << SPI_BYPASS_TXFIE_SHIFT)                             /* 0x00000002 */
#define SPI_BYPASS_CKGEN_SHIFT                             (2U)
#define SPI_BYPASS_CKGEN_MASK                              (0x3U << SPI_BYPASS_CKGEN_SHIFT)                             /* 0x0000000C */
/* BPENR */
#define SPI_BPENR_OFFSET                                   (0x54U)
#define SPI_BPENR_BPENR_SHIFT                              (0U)
#define SPI_BPENR_BPENR_MASK                               (0x1U << SPI_BPENR_BPENR_SHIFT)                              /* 0x00000001 */
/* TXDR */
#define SPI_TXDR_OFFSET                                    (0x400U)
#define SPI_TXDR_TXDR_SHIFT                                (0U)
#define SPI_TXDR_TXDR_MASK                                 (0xFFFFU << SPI_TXDR_TXDR_SHIFT)                             /* 0x0000FFFF */
/* RXDR */
#define SPI_RXDR_OFFSET                                    (0x800U)
#define SPI_RXDR                                           (0x0U)
#define SPI_RXDR_RXDR_SHIFT                                (0U)
#define SPI_RXDR_RXDR_MASK                                 (0xFFFFU << SPI_RXDR_RXDR_SHIFT)                             /* 0x0000FFFF */
/******************************************PWM*******************************************/
/* VERSION_ID */
#define PWM_VERSION_ID_OFFSET                              (0x0U)
#define PWM_VERSION_ID                                     (0x4000044U)
#define PWM_VERSION_ID_CHANNEL_NUM_SUPPORT_SHIFT           (0U)
#define PWM_VERSION_ID_CHANNEL_NUM_SUPPORT_MASK            (0xFU << PWM_VERSION_ID_CHANNEL_NUM_SUPPORT_SHIFT)           /* 0x0000000F */
#define PWM_VERSION_ID_CHANNEL_INDEX_SHIFT                 (4U)
#define PWM_VERSION_ID_CHANNEL_INDEX_MASK                  (0xFU << PWM_VERSION_ID_CHANNEL_INDEX_SHIFT)                 /* 0x000000F0 */
#define PWM_VERSION_ID_IR_TRANS_SUPPORT_SHIFT              (8U)
#define PWM_VERSION_ID_IR_TRANS_SUPPORT_MASK               (0x1U << PWM_VERSION_ID_IR_TRANS_SUPPORT_SHIFT)              /* 0x00000100 */
#define PWM_VERSION_ID_POWER_KEY_SUPPORT_SHIFT             (9U)
#define PWM_VERSION_ID_POWER_KEY_SUPPORT_MASK              (0x1U << PWM_VERSION_ID_POWER_KEY_SUPPORT_SHIFT)             /* 0x00000200 */
#define PWM_VERSION_ID_FREQ_METER_SUPPORT_SHIFT            (10U)
#define PWM_VERSION_ID_FREQ_METER_SUPPORT_MASK             (0x1U << PWM_VERSION_ID_FREQ_METER_SUPPORT_SHIFT)            /* 0x00000400 */
#define PWM_VERSION_ID_COUNTER_SUPPORT_SHIFT               (11U)
#define PWM_VERSION_ID_COUNTER_SUPPORT_MASK                (0x1U << PWM_VERSION_ID_COUNTER_SUPPORT_SHIFT)               /* 0x00000800 */
#define PWM_VERSION_ID_WAVE_SUPPORT_SHIFT                  (12U)
#define PWM_VERSION_ID_WAVE_SUPPORT_MASK                   (0x1U << PWM_VERSION_ID_WAVE_SUPPORT_SHIFT)                  /* 0x00001000 */
#define PWM_VERSION_ID_FILTER_SUPPORT_SHIFT                (13U)
#define PWM_VERSION_ID_FILTER_SUPPORT_MASK                 (0x1U << PWM_VERSION_ID_FILTER_SUPPORT_SHIFT)                /* 0x00002000 */
#define PWM_VERSION_ID_BIPHASIC_COUNTER_SUPPORT_SHIFT      (14U)
#define PWM_VERSION_ID_BIPHASIC_COUNTER_SUPPORT_MASK       (0x1U << PWM_VERSION_ID_BIPHASIC_COUNTER_SUPPORT_SHIFT)      /* 0x00004000 */
#define PWM_VERSION_ID_MINOR_VERSION_SHIFT                 (16U)
#define PWM_VERSION_ID_MINOR_VERSION_MASK                  (0xFFU << PWM_VERSION_ID_MINOR_VERSION_SHIFT)                /* 0x00FF0000 */
#define PWM_VERSION_ID_MAIN_VERSION_SHIFT                  (24U)
#define PWM_VERSION_ID_MAIN_VERSION_MASK                   (0xFFU << PWM_VERSION_ID_MAIN_VERSION_SHIFT)                 /* 0xFF000000 */
/* ENABLE */
#define PWM_ENABLE_OFFSET                                  (0x4U)
#define PWM_ENABLE_PWM_CLK_EN_SHIFT                        (0U)
#define PWM_ENABLE_PWM_CLK_EN_MASK                         (0x1U << PWM_ENABLE_PWM_CLK_EN_SHIFT)                        /* 0x00000001 */
#define PWM_ENABLE_PWM_EN_SHIFT                            (1U)
#define PWM_ENABLE_PWM_EN_MASK                             (0x1U << PWM_ENABLE_PWM_EN_SHIFT)                            /* 0x00000002 */
#define PWM_ENABLE_PWM_CTRL_UPDATE_EN_SHIFT                (2U)
#define PWM_ENABLE_PWM_CTRL_UPDATE_EN_MASK                 (0x1U << PWM_ENABLE_PWM_CTRL_UPDATE_EN_SHIFT)                /* 0x00000004 */
#define PWM_ENABLE_FORCE_CLK_EN_SHIFT                      (3U)
#define PWM_ENABLE_FORCE_CLK_EN_MASK                       (0x1U << PWM_ENABLE_FORCE_CLK_EN_SHIFT)                      /* 0x00000008 */
#define PWM_ENABLE_PWM_GLOBAL_JOIN_EN_SHIFT                (4U)
#define PWM_ENABLE_PWM_GLOBAL_JOIN_EN_MASK                 (0x1U << PWM_ENABLE_PWM_GLOBAL_JOIN_EN_SHIFT)                /* 0x00000010 */
#define PWM_ENABLE_PWM_CNT_RD_EN_SHIFT                     (5U)
#define PWM_ENABLE_PWM_CNT_RD_EN_MASK                      (0x1U << PWM_ENABLE_PWM_CNT_RD_EN_SHIFT)                     /* 0x00000020 */
/* CLK_CTRL */
#define PWM_CLK_CTRL_OFFSET                                (0x8U)
#define PWM_CLK_CTRL_PRESCALE_SHIFT                        (0U)
#define PWM_CLK_CTRL_PRESCALE_MASK                         (0x7U << PWM_CLK_CTRL_PRESCALE_SHIFT)                        /* 0x00000007 */
#define PWM_CLK_CTRL_SCALE_SHIFT                           (4U)
#define PWM_CLK_CTRL_SCALE_MASK                            (0x1FFU << PWM_CLK_CTRL_SCALE_SHIFT)                         /* 0x00001FF0 */
#define PWM_CLK_CTRL_CLK_SRC_SEL_SHIFT                     (13U)
#define PWM_CLK_CTRL_CLK_SRC_SEL_MASK                      (0x3U << PWM_CLK_CTRL_CLK_SRC_SEL_SHIFT)                     /* 0x00006000 */
#define PWM_CLK_CTRL_CLK_GLOBAL_SEL_SHIFT                  (15U)
#define PWM_CLK_CTRL_CLK_GLOBAL_SEL_MASK                   (0x1U << PWM_CLK_CTRL_CLK_GLOBAL_SEL_SHIFT)                  /* 0x00008000 */
/* CTRL */
#define PWM_CTRL_OFFSET                                    (0xCU)
#define PWM_CTRL_PWM_MODE_SHIFT                            (0U)
#define PWM_CTRL_PWM_MODE_MASK                             (0x3U << PWM_CTRL_PWM_MODE_SHIFT)                            /* 0x00000003 */
#define PWM_CTRL_DUTY_POL_SHIFT                            (2U)
#define PWM_CTRL_DUTY_POL_MASK                             (0x1U << PWM_CTRL_DUTY_POL_SHIFT)                            /* 0x00000004 */
#define PWM_CTRL_INACTIVE_POL_SHIFT                        (3U)
#define PWM_CTRL_INACTIVE_POL_MASK                         (0x1U << PWM_CTRL_INACTIVE_POL_SHIFT)                        /* 0x00000008 */
#define PWM_CTRL_OUTPUT_MODE_SHIFT                         (4U)
#define PWM_CTRL_OUTPUT_MODE_MASK                          (0x1U << PWM_CTRL_OUTPUT_MODE_SHIFT)                         /* 0x00000010 */
#define PWM_CTRL_ALIGNED_VLD_N_SHIFT                       (5U)
#define PWM_CTRL_ALIGNED_VLD_N_MASK                        (0x1U << PWM_CTRL_ALIGNED_VLD_N_SHIFT)                       /* 0x00000020 */
#define PWM_CTRL_PWM_IN_SEL_SHIFT                          (6U)
#define PWM_CTRL_PWM_IN_SEL_MASK                           (0x7U << PWM_CTRL_PWM_IN_SEL_SHIFT)                          /* 0x000001C0 */
/* PERIOD */
#define PWM_PERIOD_OFFSET                                  (0x10U)
#define PWM_PERIOD_PERIOD_SHIFT                            (0U)
#define PWM_PERIOD_PERIOD_MASK                             (0xFFFFFFFFU << PWM_PERIOD_PERIOD_SHIFT)                     /* 0xFFFFFFFF */
/* DUTY */
#define PWM_DUTY_OFFSET                                    (0x14U)
#define PWM_DUTY_DUTY_SHIFT                                (0U)
#define PWM_DUTY_DUTY_MASK                                 (0xFFFFFFFFU << PWM_DUTY_DUTY_SHIFT)                         /* 0xFFFFFFFF */
/* OFFSET */
#define PWM_OFFSET_OFFSET                                  (0x18U)
#define PWM_OFFSET_CHANNEL_OUTPUT_OFFSET_SHIFT             (0U)
#define PWM_OFFSET_CHANNEL_OUTPUT_OFFSET_MASK              (0xFFFFFFFFU << PWM_OFFSET_CHANNEL_OUTPUT_OFFSET_SHIFT)      /* 0xFFFFFFFF */
/* RPT */
#define PWM_RPT_OFFSET                                     (0x1CU)
#define PWM_RPT_RPT_FIRST_DIMENSIONAL_SHIFT                (0U)
#define PWM_RPT_RPT_FIRST_DIMENSIONAL_MASK                 (0xFFFFU << PWM_RPT_RPT_FIRST_DIMENSIONAL_SHIFT)             /* 0x0000FFFF */
#define PWM_RPT_RPT_SECOND_DIMENSIONAL_SHIFT               (16U)
#define PWM_RPT_RPT_SECOND_DIMENSIONAL_MASK                (0xFFFFU << PWM_RPT_RPT_SECOND_DIMENSIONAL_SHIFT)            /* 0xFFFF0000 */
/* FILTER_CTRL */
#define PWM_FILTER_CTRL_OFFSET                             (0x20U)
#define PWM_FILTER_CTRL_FILTER_ENABLE_SHIFT                (0U)
#define PWM_FILTER_CTRL_FILTER_ENABLE_MASK                 (0x1U << PWM_FILTER_CTRL_FILTER_ENABLE_SHIFT)                /* 0x00000001 */
#define PWM_FILTER_CTRL_FILTER_NUMBER_SHIFT                (4U)
#define PWM_FILTER_CTRL_FILTER_NUMBER_MASK                 (0x3FU << PWM_FILTER_CTRL_FILTER_NUMBER_SHIFT)               /* 0x000003F0 */
/* CNT */
#define PWM_CNT_OFFSET                                     (0x24U)
#define PWM_CNT                                            (0x0U)
#define PWM_CNT_CNT_SHIFT                                  (0U)
#define PWM_CNT_CNT_MASK                                   (0xFFFFFFFFU << PWM_CNT_CNT_SHIFT)                           /* 0xFFFFFFFF */
/* ENABLE_DELAY */
#define PWM_ENABLE_DELAY_OFFSET                            (0x28U)
#define PWM_ENABLE_DELAY_PWM_ENABLE_DELAY_SHIFT            (0U)
#define PWM_ENABLE_DELAY_PWM_ENABLE_DELAY_MASK             (0xFFFFU << PWM_ENABLE_DELAY_PWM_ENABLE_DELAY_SHIFT)         /* 0x0000FFFF */
/* HPC */
#define PWM_HPC_OFFSET                                     (0x2CU)
#define PWM_HPC_HPC_SHIFT                                  (0U)
#define PWM_HPC_HPC_MASK                                   (0xFFFFFFFFU << PWM_HPC_HPC_SHIFT)                           /* 0xFFFFFFFF */
/* LPC */
#define PWM_LPC_OFFSET                                     (0x30U)
#define PWM_LPC_LPC_SHIFT                                  (0U)
#define PWM_LPC_LPC_MASK                                   (0xFFFFFFFFU << PWM_LPC_LPC_SHIFT)                           /* 0xFFFFFFFF */
/* BIPHASIC_COUNTER_CTRL0 */
#define PWM_BIPHASIC_COUNTER_CTRL0_OFFSET                  (0x40U)
#define PWM_BIPHASIC_COUNTER_CTRL0_BIPHASIC_COUNTER_EN_SHIFT (0U)
#define PWM_BIPHASIC_COUNTER_CTRL0_BIPHASIC_COUNTER_EN_MASK (0x1U << PWM_BIPHASIC_COUNTER_CTRL0_BIPHASIC_COUNTER_EN_SHIFT) /* 0x00000001 */
#define PWM_BIPHASIC_COUNTER_CTRL0_BIPHASIC_COUNTER_CONTINUOUS_MODE_SHIFT (1U)
#define PWM_BIPHASIC_COUNTER_CTRL0_BIPHASIC_COUNTER_CONTINUOUS_MODE_MASK (0x1U << PWM_BIPHASIC_COUNTER_CTRL0_BIPHASIC_COUNTER_CONTINUOUS_MODE_SHIFT) /* 0x00000002 */
#define PWM_BIPHASIC_COUNTER_CTRL0_BIPHASIC_COUNTER_CLK_SEL_SHIFT (2U)
#define PWM_BIPHASIC_COUNTER_CTRL0_BIPHASIC_COUNTER_CLK_SEL_MASK (0x1U << PWM_BIPHASIC_COUNTER_CTRL0_BIPHASIC_COUNTER_CLK_SEL_SHIFT) /* 0x00000004 */
#define PWM_BIPHASIC_COUNTER_CTRL0_BIPHASIC_COUNTER_MODE_SHIFT (3U)
#define PWM_BIPHASIC_COUNTER_CTRL0_BIPHASIC_COUNTER_MODE_MASK (0x7U << PWM_BIPHASIC_COUNTER_CTRL0_BIPHASIC_COUNTER_MODE_SHIFT) /* 0x00000038 */
#define PWM_BIPHASIC_COUNTER_CTRL0_TIMER_CLK_SWITCH_MODE_SHIFT (6U)
#define PWM_BIPHASIC_COUNTER_CTRL0_TIMER_CLK_SWITCH_MODE_MASK (0x1U << PWM_BIPHASIC_COUNTER_CTRL0_TIMER_CLK_SWITCH_MODE_SHIFT) /* 0x00000040 */
#define PWM_BIPHASIC_COUNTER_CTRL0_BIPHASIC_COUNTER_SYNC_EN_SHIFT (7U)
#define PWM_BIPHASIC_COUNTER_CTRL0_BIPHASIC_COUNTER_SYNC_EN_MASK (0x1U << PWM_BIPHASIC_COUNTER_CTRL0_BIPHASIC_COUNTER_SYNC_EN_SHIFT) /* 0x00000080 */
#define PWM_BIPHASIC_COUNTER_CTRL0_BIPHASIC_COUNTER_CLK_FORCE_EN_SHIFT (8U)
#define PWM_BIPHASIC_COUNTER_CTRL0_BIPHASIC_COUNTER_CLK_FORCE_EN_MASK (0x1U << PWM_BIPHASIC_COUNTER_CTRL0_BIPHASIC_COUNTER_CLK_FORCE_EN_SHIFT) /* 0x00000100 */
#define PWM_BIPHASIC_COUNTER_CTRL0_BIPHASIC_COUNTER_MODE0_EDGE_SEL_SHIFT (9U)
#define PWM_BIPHASIC_COUNTER_CTRL0_BIPHASIC_COUNTER_MODE0_EDGE_SEL_MASK (0x1U << PWM_BIPHASIC_COUNTER_CTRL0_BIPHASIC_COUNTER_MODE0_EDGE_SEL_SHIFT) /* 0x00000200 */
/* BIPHASIC_COUNTER_CTRL1 */
#define PWM_BIPHASIC_COUNTER_CTRL1_OFFSET                  (0x44U)
#define PWM_BIPHASIC_COUNTER_CTRL1_BIPHASIC_COUNTER_FILTER_ENABLE_SHIFT (0U)
#define PWM_BIPHASIC_COUNTER_CTRL1_BIPHASIC_COUNTER_FILTER_ENABLE_MASK (0x1U << PWM_BIPHASIC_COUNTER_CTRL1_BIPHASIC_COUNTER_FILTER_ENABLE_SHIFT) /* 0x00000001 */
#define PWM_BIPHASIC_COUNTER_CTRL1_BIPHASIC_COUNTER_FILTER_NUMBER_SHIFT (4U)
#define PWM_BIPHASIC_COUNTER_CTRL1_BIPHASIC_COUNTER_FILTER_NUMBER_MASK (0x7FU << PWM_BIPHASIC_COUNTER_CTRL1_BIPHASIC_COUNTER_FILTER_NUMBER_SHIFT) /* 0x000007F0 */
/* BIPHASIC_COUNTER_TIMER_VALUE */
#define PWM_BIPHASIC_COUNTER_TIMER_VALUE_OFFSET            (0x48U)
#define PWM_BIPHASIC_COUNTER_TIMER_VALUE_BIPHASIC_COUNTER_TIMER_VALUE_SHIFT (0U)
#define PWM_BIPHASIC_COUNTER_TIMER_VALUE_BIPHASIC_COUNTER_TIMER_VALUE_MASK (0xFFFFFFFFU << PWM_BIPHASIC_COUNTER_TIMER_VALUE_BIPHASIC_COUNTER_TIMER_VALUE_SHIFT) /* 0xFFFFFFFF */
/* BIPHASIC_COUNTER_RESULT_VALUE */
#define PWM_BIPHASIC_COUNTER_RESULT_VALUE_OFFSET           (0x4CU)
#define PWM_BIPHASIC_COUNTER_RESULT_VALUE                  (0x0U)
#define PWM_BIPHASIC_COUNTER_RESULT_VALUE_BIPHASIC_COUNTE_RESULT_VALUE_SHIFT (0U)
#define PWM_BIPHASIC_COUNTER_RESULT_VALUE_BIPHASIC_COUNTE_RESULT_VALUE_MASK (0xFFFFFFFFU << PWM_BIPHASIC_COUNTER_RESULT_VALUE_BIPHASIC_COUNTE_RESULT_VALUE_SHIFT) /* 0xFFFFFFFF */
/* BIPHASIC_COUNTER_RESULT_VALUE_SYNC */
#define PWM_BIPHASIC_COUNTER_RESULT_VALUE_SYNC_OFFSET      (0x50U)
#define PWM_BIPHASIC_COUNTER_RESULT_VALUE_SYNC             (0x0U)
#define PWM_BIPHASIC_COUNTER_RESULT_VALUE_SYNC_BIPHASIC_COUNTE_RESULT_VALUE_SYNC_SHIFT (0U)
#define PWM_BIPHASIC_COUNTER_RESULT_VALUE_SYNC_BIPHASIC_COUNTE_RESULT_VALUE_SYNC_MASK (0xFFFFFFFFU << PWM_BIPHASIC_COUNTER_RESULT_VALUE_SYNC_BIPHASIC_COUNTE_RESULT_VALUE_SYNC_SHIFT) /* 0xFFFFFFFF */
/* INTSTS */
#define PWM_INTSTS_OFFSET                                  (0x70U)
#define PWM_INTSTS_CAP_LPC_INTSTS_SHIFT                    (0U)
#define PWM_INTSTS_CAP_LPC_INTSTS_MASK                     (0x1U << PWM_INTSTS_CAP_LPC_INTSTS_SHIFT)                    /* 0x00000001 */
#define PWM_INTSTS_CAP_HPC_INTSTS_SHIFT                    (1U)
#define PWM_INTSTS_CAP_HPC_INTSTS_MASK                     (0x1U << PWM_INTSTS_CAP_HPC_INTSTS_SHIFT)                    /* 0x00000002 */
#define PWM_INTSTS_ONESHOT_END_INTSTS_SHIFT                (2U)
#define PWM_INTSTS_ONESHOT_END_INTSTS_MASK                 (0x1U << PWM_INTSTS_ONESHOT_END_INTSTS_SHIFT)                /* 0x00000004 */
#define PWM_INTSTS_RELOAD_INTSTS_SHIFT                     (3U)
#define PWM_INTSTS_RELOAD_INTSTS_MASK                      (0x1U << PWM_INTSTS_RELOAD_INTSTS_SHIFT)                     /* 0x00000008 */
#define PWM_INTSTS_FREQ_INTSTS_SHIFT                       (4U)
#define PWM_INTSTS_FREQ_INTSTS_MASK                        (0x1U << PWM_INTSTS_FREQ_INTSTS_SHIFT)                       /* 0x00000010 */
#define PWM_INTSTS_PWR_INTSTS_SHIFT                        (5U)
#define PWM_INTSTS_PWR_INTSTS_MASK                         (0x1U << PWM_INTSTS_PWR_INTSTS_SHIFT)                        /* 0x00000020 */
#define PWM_INTSTS_IT_TRANS_END_INTSTS_SHIFT               (6U)
#define PWM_INTSTS_IT_TRANS_END_INTSTS_MASK                (0x1U << PWM_INTSTS_IT_TRANS_END_INTSTS_SHIFT)               /* 0x00000040 */
#define PWM_INTSTS_WAVE_MAX_INTSTS_SHIFT                   (7U)
#define PWM_INTSTS_WAVE_MAX_INTSTS_MASK                    (0x1U << PWM_INTSTS_WAVE_MAX_INTSTS_SHIFT)                   /* 0x00000080 */
#define PWM_INTSTS_WAVE_MIDDLE_INTSTS_SHIFT                (8U)
#define PWM_INTSTS_WAVE_MIDDLE_INTSTS_MASK                 (0x1U << PWM_INTSTS_WAVE_MIDDLE_INTSTS_SHIFT)                /* 0x00000100 */
#define PWM_INTSTS_BIPHASIC_COUNTER_INTSTS_SHIFT           (9U)
#define PWM_INTSTS_BIPHASIC_COUNTER_INTSTS_MASK            (0x1U << PWM_INTSTS_BIPHASIC_COUNTER_INTSTS_SHIFT)           /* 0x00000200 */
/* INT_EN */
#define PWM_INT_EN_OFFSET                                  (0x74U)
#define PWM_INT_EN_CAP_LPC_INT_EN_SHIFT                    (0U)
#define PWM_INT_EN_CAP_LPC_INT_EN_MASK                     (0x1U << PWM_INT_EN_CAP_LPC_INT_EN_SHIFT)                    /* 0x00000001 */
#define PWM_INT_EN_CAP_HPC_INT_EN_SHIFT                    (1U)
#define PWM_INT_EN_CAP_HPC_INT_EN_MASK                     (0x1U << PWM_INT_EN_CAP_HPC_INT_EN_SHIFT)                    /* 0x00000002 */
#define PWM_INT_EN_ONESHOT_END_INT_EN_SHIFT                (2U)
#define PWM_INT_EN_ONESHOT_END_INT_EN_MASK                 (0x1U << PWM_INT_EN_ONESHOT_END_INT_EN_SHIFT)                /* 0x00000004 */
#define PWM_INT_EN_RELOAD_INT_EN_SHIFT                     (3U)
#define PWM_INT_EN_RELOAD_INT_EN_MASK                      (0x1U << PWM_INT_EN_RELOAD_INT_EN_SHIFT)                     /* 0x00000008 */
#define PWM_INT_EN_FREQ_INT_EN_SHIFT                       (4U)
#define PWM_INT_EN_FREQ_INT_EN_MASK                        (0x1U << PWM_INT_EN_FREQ_INT_EN_SHIFT)                       /* 0x00000010 */
#define PWM_INT_EN_PWR_INT_EN_SHIFT                        (5U)
#define PWM_INT_EN_PWR_INT_EN_MASK                         (0x1U << PWM_INT_EN_PWR_INT_EN_SHIFT)                        /* 0x00000020 */
#define PWM_INT_EN_IT_TRANS_END_INT_EN_SHIFT               (6U)
#define PWM_INT_EN_IT_TRANS_END_INT_EN_MASK                (0x1U << PWM_INT_EN_IT_TRANS_END_INT_EN_SHIFT)               /* 0x00000040 */
#define PWM_INT_EN_WAVE_MAX_INT_EN_SHIFT                   (7U)
#define PWM_INT_EN_WAVE_MAX_INT_EN_MASK                    (0x1U << PWM_INT_EN_WAVE_MAX_INT_EN_SHIFT)                   /* 0x00000080 */
#define PWM_INT_EN_WAVE_MIDDLE_INT_EN_SHIFT                (8U)
#define PWM_INT_EN_WAVE_MIDDLE_INT_EN_MASK                 (0x1U << PWM_INT_EN_WAVE_MIDDLE_INT_EN_SHIFT)                /* 0x00000100 */
#define PWM_INT_EN_BIPHASIC_COUNER_INT_EN_SHIFT            (9U)
#define PWM_INT_EN_BIPHASIC_COUNER_INT_EN_MASK             (0x1U << PWM_INT_EN_BIPHASIC_COUNER_INT_EN_SHIFT)            /* 0x00000200 */
/* INT_MASK */
#define PWM_INT_MASK_OFFSET                                (0x78U)
#define PWM_INT_MASK_CAP_LPC_INT_MASK_SHIFT                (0U)
#define PWM_INT_MASK_CAP_LPC_INT_MASK_MASK                 (0x1U << PWM_INT_MASK_CAP_LPC_INT_MASK_SHIFT)                /* 0x00000001 */
#define PWM_INT_MASK_CAP_HPC_INT_MASK_SHIFT                (1U)
#define PWM_INT_MASK_CAP_HPC_INT_MASK_MASK                 (0x1U << PWM_INT_MASK_CAP_HPC_INT_MASK_SHIFT)                /* 0x00000002 */
#define PWM_INT_MASK_ONESHOT_END_MASK_SHIFT                (2U)
#define PWM_INT_MASK_ONESHOT_END_MASK_MASK                 (0x1U << PWM_INT_MASK_ONESHOT_END_MASK_SHIFT)                /* 0x00000004 */
#define PWM_INT_MASK_RELOAD_INT_MASK_SHIFT                 (3U)
#define PWM_INT_MASK_RELOAD_INT_MASK_MASK                  (0x1U << PWM_INT_MASK_RELOAD_INT_MASK_SHIFT)                 /* 0x00000008 */
#define PWM_INT_MASK_FREQ_INT_MASK_SHIFT                   (4U)
#define PWM_INT_MASK_FREQ_INT_MASK_MASK                    (0x1U << PWM_INT_MASK_FREQ_INT_MASK_SHIFT)                   /* 0x00000010 */
#define PWM_INT_MASK_PWR_INT_MASK_SHIFT                    (5U)
#define PWM_INT_MASK_PWR_INT_MASK_MASK                     (0x1U << PWM_INT_MASK_PWR_INT_MASK_SHIFT)                    /* 0x00000020 */
#define PWM_INT_MASK_IT_TRANS_END_INT_MASK_SHIFT           (6U)
#define PWM_INT_MASK_IT_TRANS_END_INT_MASK_MASK            (0x1U << PWM_INT_MASK_IT_TRANS_END_INT_MASK_SHIFT)           /* 0x00000040 */
#define PWM_INT_MASK_WAVE_MAX_INT_MASK_SHIFT               (7U)
#define PWM_INT_MASK_WAVE_MAX_INT_MASK_MASK                (0x1U << PWM_INT_MASK_WAVE_MAX_INT_MASK_SHIFT)               /* 0x00000080 */
#define PWM_INT_MASK_WAVE_MIDDLE_INT_MASK_SHIFT            (8U)
#define PWM_INT_MASK_WAVE_MIDDLE_INT_MASK_MASK             (0x1U << PWM_INT_MASK_WAVE_MIDDLE_INT_MASK_SHIFT)            /* 0x00000100 */
#define PWM_INT_MASK_BIPHASIC_COUNTER_INT_MASK_SHIFT       (9U)
#define PWM_INT_MASK_BIPHASIC_COUNTER_INT_MASK_MASK        (0x1U << PWM_INT_MASK_BIPHASIC_COUNTER_INT_MASK_SHIFT)       /* 0x00000200 */
/* WAVE_MEM_ARBITER */
#define PWM_WAVE_MEM_ARBITER_OFFSET                        (0x80U)
#define PWM_WAVE_MEM_ARBITER_WAVE_MEM_GRANT_SHIFT          (0U)
#define PWM_WAVE_MEM_ARBITER_WAVE_MEM_GRANT_MASK           (0xFFU << PWM_WAVE_MEM_ARBITER_WAVE_MEM_GRANT_SHIFT)         /* 0x000000FF */
#define PWM_WAVE_MEM_ARBITER_WAVE_MEM_READ_LOCK_SHIFT      (16U)
#define PWM_WAVE_MEM_ARBITER_WAVE_MEM_READ_LOCK_MASK       (0xFFU << PWM_WAVE_MEM_ARBITER_WAVE_MEM_READ_LOCK_SHIFT)     /* 0x00FF0000 */
/* WAVE_MEM_STATUS */
#define PWM_WAVE_MEM_STATUS_OFFSET                         (0x84U)
#define PWM_WAVE_MEM_STATUS                                (0x0U)
#define PWM_WAVE_MEM_STATUS_ACCESS_DONE_SHIFT              (0U)
#define PWM_WAVE_MEM_STATUS_ACCESS_DONE_MASK               (0x1U << PWM_WAVE_MEM_STATUS_ACCESS_DONE_SHIFT)              /* 0x00000001 */
/* WAVE_CTRL */
#define PWM_WAVE_CTRL_OFFSET                               (0x88U)
#define PWM_WAVE_CTRL_WAVE_DUTY_EN_SHIFT                   (0U)
#define PWM_WAVE_CTRL_WAVE_DUTY_EN_MASK                    (0x1U << PWM_WAVE_CTRL_WAVE_DUTY_EN_SHIFT)                   /* 0x00000001 */
#define PWM_WAVE_CTRL_WAVE_PERIOD_EN_SHIFT                 (1U)
#define PWM_WAVE_CTRL_WAVE_PERIOD_EN_MASK                  (0x1U << PWM_WAVE_CTRL_WAVE_PERIOD_EN_SHIFT)                 /* 0x00000002 */
#define PWM_WAVE_CTRL_WAVE_WIDTH_MODE_SHIFT                (2U)
#define PWM_WAVE_CTRL_WAVE_WIDTH_MODE_MASK                 (0x1U << PWM_WAVE_CTRL_WAVE_WIDTH_MODE_SHIFT)                /* 0x00000004 */
#define PWM_WAVE_CTRL_WAVE_UPDATE_MODE_SHIFT               (3U)
#define PWM_WAVE_CTRL_WAVE_UPDATE_MODE_MASK                (0x1U << PWM_WAVE_CTRL_WAVE_UPDATE_MODE_SHIFT)               /* 0x00000008 */
#define PWM_WAVE_CTRL_WAVE_MEM_CLK_SEL_SHIFT               (4U)
#define PWM_WAVE_CTRL_WAVE_MEM_CLK_SEL_MASK                (0x3U << PWM_WAVE_CTRL_WAVE_MEM_CLK_SEL_SHIFT)               /* 0x00000030 */
#define PWM_WAVE_CTRL_WAVE_DUTY_AMPLIFY_SHIFT              (6U)
#define PWM_WAVE_CTRL_WAVE_DUTY_AMPLIFY_MASK               (0x1FU << PWM_WAVE_CTRL_WAVE_DUTY_AMPLIFY_SHIFT)             /* 0x000007C0 */
#define PWM_WAVE_CTRL_WAVE_PERIOD_AMPLIFY_SHIFT            (11U)
#define PWM_WAVE_CTRL_WAVE_PERIOD_AMPLIFY_MASK             (0x1FU << PWM_WAVE_CTRL_WAVE_PERIOD_AMPLIFY_SHIFT)           /* 0x0000F800 */
/* WAVE_MAX */
#define PWM_WAVE_MAX_OFFSET                                (0x8CU)
#define PWM_WAVE_MAX_WAVE_DUTY_MAX_SHIFT                   (0U)
#define PWM_WAVE_MAX_WAVE_DUTY_MAX_MASK                    (0x3FFU << PWM_WAVE_MAX_WAVE_DUTY_MAX_SHIFT)                 /* 0x000003FF */
#define PWM_WAVE_MAX_WAVE_PERIOD_MAX_SHIFT                 (16U)
#define PWM_WAVE_MAX_WAVE_PERIOD_MAX_MASK                  (0x3FFU << PWM_WAVE_MAX_WAVE_PERIOD_MAX_SHIFT)               /* 0x03FF0000 */
/* WAVE_MIN */
#define PWM_WAVE_MIN_OFFSET                                (0x90U)
#define PWM_WAVE_MIN_WAVE_DUTY_MIN_SHIFT                   (0U)
#define PWM_WAVE_MIN_WAVE_DUTY_MIN_MASK                    (0x3FFU << PWM_WAVE_MIN_WAVE_DUTY_MIN_SHIFT)                 /* 0x000003FF */
#define PWM_WAVE_MIN_WAVE_PERIOD_MIN_SHIFT                 (16U)
#define PWM_WAVE_MIN_WAVE_PERIOD_MIN_MASK                  (0x3FFU << PWM_WAVE_MIN_WAVE_PERIOD_MIN_SHIFT)               /* 0x03FF0000 */
/* WAVE_OFFSET */
#define PWM_WAVE_OFFSET_OFFSET                             (0x94U)
#define PWM_WAVE_OFFSET_WAVE_OFFSET_SHIFT                  (0U)
#define PWM_WAVE_OFFSET_WAVE_OFFSET_MASK                   (0x3FFU << PWM_WAVE_OFFSET_WAVE_OFFSET_SHIFT)                /* 0x000003FF */
/* WAVE_MIDDLE */
#define PWM_WAVE_MIDDLE_OFFSET                             (0x98U)
#define PWM_WAVE_MIDDLE_WAVE_MIDDLE_SHIFT                  (0U)
#define PWM_WAVE_MIDDLE_WAVE_MIDDLE_MASK                   (0x3FFU << PWM_WAVE_MIDDLE_WAVE_MIDDLE_SHIFT)                /* 0x000003FF */
/* WAVE_HOLD */
#define PWM_WAVE_HOLD_OFFSET                               (0x9CU)
#define PWM_WAVE_HOLD_MAX_HOLD_SHIFT                       (0U)
#define PWM_WAVE_HOLD_MAX_HOLD_MASK                        (0xFFU << PWM_WAVE_HOLD_MAX_HOLD_SHIFT)                      /* 0x000000FF */
#define PWM_WAVE_HOLD_MIN_HOLD_SHIFT                       (8U)
#define PWM_WAVE_HOLD_MIN_HOLD_MASK                        (0xFFU << PWM_WAVE_HOLD_MIN_HOLD_SHIFT)                      /* 0x0000FF00 */
#define PWM_WAVE_HOLD_MIDDLE_HOLD_SHIFT                    (16U)
#define PWM_WAVE_HOLD_MIDDLE_HOLD_MASK                     (0xFFU << PWM_WAVE_HOLD_MIDDLE_HOLD_SHIFT)                   /* 0x00FF0000 */
/* GLOBAL_ARBITER */
#define PWM_GLOBAL_ARBITER_OFFSET                          (0xC0U)
#define PWM_GLOBAL_ARBITER_GLOBAL_GRANT_SHIFT              (0U)
#define PWM_GLOBAL_ARBITER_GLOBAL_GRANT_MASK               (0xFFU << PWM_GLOBAL_ARBITER_GLOBAL_GRANT_SHIFT)             /* 0x000000FF */
#define PWM_GLOBAL_ARBITER_GLOBAL_READ_LOCK_SHIFT          (16U)
#define PWM_GLOBAL_ARBITER_GLOBAL_READ_LOCK_MASK           (0xFFU << PWM_GLOBAL_ARBITER_GLOBAL_READ_LOCK_SHIFT)         /* 0x00FF0000 */
/* GLOBAL_CTRL */
#define PWM_GLOBAL_CTRL_OFFSET                             (0xC4U)
#define PWM_GLOBAL_CTRL_GLOBAL_PWM_EN_SHIFT                (0U)
#define PWM_GLOBAL_CTRL_GLOBAL_PWM_EN_MASK                 (0x1U << PWM_GLOBAL_CTRL_GLOBAL_PWM_EN_SHIFT)                /* 0x00000001 */
#define PWM_GLOBAL_CTRL_GLOBAL_PWM_CTRL_UPDATE_EN_SHIFT    (1U)
#define PWM_GLOBAL_CTRL_GLOBAL_PWM_CTRL_UPDATE_EN_MASK     (0x1U << PWM_GLOBAL_CTRL_GLOBAL_PWM_CTRL_UPDATE_EN_SHIFT)    /* 0x00000002 */
/* PWRMATCH_ARBITER */
#define PWM_PWRMATCH_ARBITER_OFFSET                        (0x100U)
#define PWM_PWRMATCH_ARBITER_PWRKEY_GRANT_SHIFT            (0U)
#define PWM_PWRMATCH_ARBITER_PWRKEY_GRANT_MASK             (0xFFU << PWM_PWRMATCH_ARBITER_PWRKEY_GRANT_SHIFT)           /* 0x000000FF */
#define PWM_PWRMATCH_ARBITER_PWRKEY_READ_LOCK_SHIFT        (16U)
#define PWM_PWRMATCH_ARBITER_PWRKEY_READ_LOCK_MASK         (0xFFU << PWM_PWRMATCH_ARBITER_PWRKEY_READ_LOCK_SHIFT)       /* 0x00FF0000 */
/* PWRMATCH_CTRL */
#define PWM_PWRMATCH_CTRL_OFFSET                           (0x104U)
#define PWM_PWRMATCH_CTRL_PWRKEY_ENABLE_SHIFT              (0U)
#define PWM_PWRMATCH_CTRL_PWRKEY_ENABLE_MASK               (0x1U << PWM_PWRMATCH_CTRL_PWRKEY_ENABLE_SHIFT)              /* 0x00000001 */
#define PWM_PWRMATCH_CTRL_PWRKEY_POLARITY_SHIFT            (1U)
#define PWM_PWRMATCH_CTRL_PWRKEY_POLARITY_MASK             (0x1U << PWM_PWRMATCH_CTRL_PWRKEY_POLARITY_SHIFT)            /* 0x00000002 */
#define PWM_PWRMATCH_CTRL_PWRKEY_CAPTURE_CTRL_SHIFT        (2U)
#define PWM_PWRMATCH_CTRL_PWRKEY_CAPTURE_CTRL_MASK         (0x1U << PWM_PWRMATCH_CTRL_PWRKEY_CAPTURE_CTRL_SHIFT)        /* 0x00000004 */
#define PWM_PWRMATCH_CTRL_PWRKEY_INT_CTRL_SHIFT            (3U)
#define PWM_PWRMATCH_CTRL_PWRKEY_INT_CTRL_MASK             (0x1U << PWM_PWRMATCH_CTRL_PWRKEY_INT_CTRL_SHIFT)            /* 0x00000008 */
/* PWRMATCH_LPRE */
#define PWM_PWRMATCH_LPRE_OFFSET                           (0x108U)
#define PWM_PWRMATCH_LPRE_CNT_MIN_SHIFT                    (0U)
#define PWM_PWRMATCH_LPRE_CNT_MIN_MASK                     (0xFFFFU << PWM_PWRMATCH_LPRE_CNT_MIN_SHIFT)                 /* 0x0000FFFF */
#define PWM_PWRMATCH_LPRE_CNT_MAX_SHIFT                    (16U)
#define PWM_PWRMATCH_LPRE_CNT_MAX_MASK                     (0xFFFFU << PWM_PWRMATCH_LPRE_CNT_MAX_SHIFT)                 /* 0xFFFF0000 */
/* PWRMATCH_HPRE */
#define PWM_PWRMATCH_HPRE_OFFSET                           (0x10CU)
#define PWM_PWRMATCH_HPRE_CNT_MIN_SHIFT                    (0U)
#define PWM_PWRMATCH_HPRE_CNT_MIN_MASK                     (0xFFFFU << PWM_PWRMATCH_HPRE_CNT_MIN_SHIFT)                 /* 0x0000FFFF */
#define PWM_PWRMATCH_HPRE_CNT_MAX_SHIFT                    (16U)
#define PWM_PWRMATCH_HPRE_CNT_MAX_MASK                     (0xFFFFU << PWM_PWRMATCH_HPRE_CNT_MAX_SHIFT)                 /* 0xFFFF0000 */
/* PWRMATCH_LD */
#define PWM_PWRMATCH_LD_OFFSET                             (0x110U)
#define PWM_PWRMATCH_LD_CNT_MIN_SHIFT                      (0U)
#define PWM_PWRMATCH_LD_CNT_MIN_MASK                       (0xFFFFU << PWM_PWRMATCH_LD_CNT_MIN_SHIFT)                   /* 0x0000FFFF */
#define PWM_PWRMATCH_LD_CNT_MAX_SHIFT                      (16U)
#define PWM_PWRMATCH_LD_CNT_MAX_MASK                       (0xFFFFU << PWM_PWRMATCH_LD_CNT_MAX_SHIFT)                   /* 0xFFFF0000 */
/* PWRMATCH_HD_ZERO */
#define PWM_PWRMATCH_HD_ZERO_OFFSET                        (0x114U)
#define PWM_PWRMATCH_HD_ZERO_CNT_MIN_SHIFT                 (0U)
#define PWM_PWRMATCH_HD_ZERO_CNT_MIN_MASK                  (0xFFFFU << PWM_PWRMATCH_HD_ZERO_CNT_MIN_SHIFT)              /* 0x0000FFFF */
#define PWM_PWRMATCH_HD_ZERO_CNT_MAX_SHIFT                 (16U)
#define PWM_PWRMATCH_HD_ZERO_CNT_MAX_MASK                  (0xFFFFU << PWM_PWRMATCH_HD_ZERO_CNT_MAX_SHIFT)              /* 0xFFFF0000 */
/* PWRMATCH_HD_ONE */
#define PWM_PWRMATCH_HD_ONE_OFFSET                         (0x118U)
#define PWM_PWRMATCH_HD_ONE_CNT_MIN_SHIFT                  (0U)
#define PWM_PWRMATCH_HD_ONE_CNT_MIN_MASK                   (0xFFFFU << PWM_PWRMATCH_HD_ONE_CNT_MIN_SHIFT)               /* 0x0000FFFF */
#define PWM_PWRMATCH_HD_ONE_CNT_MAX_SHIFT                  (16U)
#define PWM_PWRMATCH_HD_ONE_CNT_MAX_MASK                   (0xFFFFU << PWM_PWRMATCH_HD_ONE_CNT_MAX_SHIFT)               /* 0xFFFF0000 */
/* PWRMATCH_VALUE0 */
#define PWM_PWRMATCH_VALUE0_OFFSET                         (0x11CU)
#define PWM_PWRMATCH_VALUE0_PWRKEY_MATCH_VALUE0_SHIFT      (0U)
#define PWM_PWRMATCH_VALUE0_PWRKEY_MATCH_VALUE0_MASK       (0xFFFFFFFFU << PWM_PWRMATCH_VALUE0_PWRKEY_MATCH_VALUE0_SHIFT) /* 0xFFFFFFFF */
/* PWRMATCH_VALUE1 */
#define PWM_PWRMATCH_VALUE1_OFFSET                         (0x120U)
#define PWM_PWRMATCH_VALUE1_PWRKEY_MATCH_VALUE1_SHIFT      (0U)
#define PWM_PWRMATCH_VALUE1_PWRKEY_MATCH_VALUE1_MASK       (0xFFFFFFFFU << PWM_PWRMATCH_VALUE1_PWRKEY_MATCH_VALUE1_SHIFT) /* 0xFFFFFFFF */
/* PWRMATCH_VALUE2 */
#define PWM_PWRMATCH_VALUE2_OFFSET                         (0x124U)
#define PWM_PWRMATCH_VALUE2_PWRKEY_MATCH_VALUE2_SHIFT      (0U)
#define PWM_PWRMATCH_VALUE2_PWRKEY_MATCH_VALUE2_MASK       (0xFFFFFFFFU << PWM_PWRMATCH_VALUE2_PWRKEY_MATCH_VALUE2_SHIFT) /* 0xFFFFFFFF */
/* PWRMATCH_VALUE3 */
#define PWM_PWRMATCH_VALUE3_OFFSET                         (0x128U)
#define PWM_PWRMATCH_VALUE3_PWRKEY_MATCH_VALUE3_SHIFT      (0U)
#define PWM_PWRMATCH_VALUE3_PWRKEY_MATCH_VALUE3_MASK       (0xFFFFFFFFU << PWM_PWRMATCH_VALUE3_PWRKEY_MATCH_VALUE3_SHIFT) /* 0xFFFFFFFF */
/* PWRMATCH_VALUE4 */
#define PWM_PWRMATCH_VALUE4_OFFSET                         (0x12CU)
#define PWM_PWRMATCH_VALUE4_PWRKEY_MATCH_VALUE4_SHIFT      (0U)
#define PWM_PWRMATCH_VALUE4_PWRKEY_MATCH_VALUE4_MASK       (0xFFFFFFFFU << PWM_PWRMATCH_VALUE4_PWRKEY_MATCH_VALUE4_SHIFT) /* 0xFFFFFFFF */
/* PWRMATCH_VALUE5 */
#define PWM_PWRMATCH_VALUE5_OFFSET                         (0x130U)
#define PWM_PWRMATCH_VALUE5_PWRKEY_MATCH_VALUE5_SHIFT      (0U)
#define PWM_PWRMATCH_VALUE5_PWRKEY_MATCH_VALUE5_MASK       (0xFFFFFFFFU << PWM_PWRMATCH_VALUE5_PWRKEY_MATCH_VALUE5_SHIFT) /* 0xFFFFFFFF */
/* PWRMATCH_VALUE6 */
#define PWM_PWRMATCH_VALUE6_OFFSET                         (0x134U)
#define PWM_PWRMATCH_VALUE6_PWRKEY_MATCH_VALUE6_SHIFT      (0U)
#define PWM_PWRMATCH_VALUE6_PWRKEY_MATCH_VALUE6_MASK       (0xFFFFFFFFU << PWM_PWRMATCH_VALUE6_PWRKEY_MATCH_VALUE6_SHIFT) /* 0xFFFFFFFF */
/* PWRMATCH_VALUE7 */
#define PWM_PWRMATCH_VALUE7_OFFSET                         (0x138U)
#define PWM_PWRMATCH_VALUE7_PWRKEY_MATCH_VALUE7_SHIFT      (0U)
#define PWM_PWRMATCH_VALUE7_PWRKEY_MATCH_VALUE7_MASK       (0xFFFFFFFFU << PWM_PWRMATCH_VALUE7_PWRKEY_MATCH_VALUE7_SHIFT) /* 0xFFFFFFFF */
/* PWRMATCH_VALUE8 */
#define PWM_PWRMATCH_VALUE8_OFFSET                         (0x13CU)
#define PWM_PWRMATCH_VALUE8_PWRKEY_MATCH_VALUE8_SHIFT      (0U)
#define PWM_PWRMATCH_VALUE8_PWRKEY_MATCH_VALUE8_MASK       (0xFFFFFFFFU << PWM_PWRMATCH_VALUE8_PWRKEY_MATCH_VALUE8_SHIFT) /* 0xFFFFFFFF */
/* PWRMATCH_VALUE9 */
#define PWM_PWRMATCH_VALUE9_OFFSET                         (0x140U)
#define PWM_PWRMATCH_VALUE9_PWRKEY_MATCH_VALUE9_SHIFT      (0U)
#define PWM_PWRMATCH_VALUE9_PWRKEY_MATCH_VALUE9_MASK       (0xFFFFFFFFU << PWM_PWRMATCH_VALUE9_PWRKEY_MATCH_VALUE9_SHIFT) /* 0xFFFFFFFF */
/* PWRMATCH_VALUE10 */
#define PWM_PWRMATCH_VALUE10_OFFSET                        (0x144U)
#define PWM_PWRMATCH_VALUE10_PWRKEY_MATCH_VALUE10_SHIFT    (0U)
#define PWM_PWRMATCH_VALUE10_PWRKEY_MATCH_VALUE10_MASK     (0xFFFFFFFFU << PWM_PWRMATCH_VALUE10_PWRKEY_MATCH_VALUE10_SHIFT) /* 0xFFFFFFFF */
/* PWRMATCH_VALUE11 */
#define PWM_PWRMATCH_VALUE11_OFFSET                        (0x148U)
#define PWM_PWRMATCH_VALUE11_PWRKEY_MATCH_VALUE11_SHIFT    (0U)
#define PWM_PWRMATCH_VALUE11_PWRKEY_MATCH_VALUE11_MASK     (0xFFFFFFFFU << PWM_PWRMATCH_VALUE11_PWRKEY_MATCH_VALUE11_SHIFT) /* 0xFFFFFFFF */
/* PWRMATCH_VALUE12 */
#define PWM_PWRMATCH_VALUE12_OFFSET                        (0x14CU)
#define PWM_PWRMATCH_VALUE12_PWRKEY_MATCH_VALUE12_SHIFT    (0U)
#define PWM_PWRMATCH_VALUE12_PWRKEY_MATCH_VALUE12_MASK     (0xFFFFFFFFU << PWM_PWRMATCH_VALUE12_PWRKEY_MATCH_VALUE12_SHIFT) /* 0xFFFFFFFF */
/* PWRMATCH_VALUE13 */
#define PWM_PWRMATCH_VALUE13_OFFSET                        (0x150U)
#define PWM_PWRMATCH_VALUE13_PWRKEY_MATCH_VALUE13_SHIFT    (0U)
#define PWM_PWRMATCH_VALUE13_PWRKEY_MATCH_VALUE13_MASK     (0xFFFFFFFFU << PWM_PWRMATCH_VALUE13_PWRKEY_MATCH_VALUE13_SHIFT) /* 0xFFFFFFFF */
/* PWRMATCH_VALUE14 */
#define PWM_PWRMATCH_VALUE14_OFFSET                        (0x154U)
#define PWM_PWRMATCH_VALUE14_PWRKEY_MATCH_VALUE14_SHIFT    (0U)
#define PWM_PWRMATCH_VALUE14_PWRKEY_MATCH_VALUE14_MASK     (0xFFFFFFFFU << PWM_PWRMATCH_VALUE14_PWRKEY_MATCH_VALUE14_SHIFT) /* 0xFFFFFFFF */
/* PWRMATCH_VALUE15 */
#define PWM_PWRMATCH_VALUE15_OFFSET                        (0x158U)
#define PWM_PWRMATCH_VALUE15_PWRKEY_MATCH_VALUE15_SHIFT    (0U)
#define PWM_PWRMATCH_VALUE15_PWRKEY_MATCH_VALUE15_MASK     (0xFFFFFFFFU << PWM_PWRMATCH_VALUE15_PWRKEY_MATCH_VALUE15_SHIFT) /* 0xFFFFFFFF */
/* PWRCAPTURE_VALUE */
#define PWM_PWRCAPTURE_VALUE_OFFSET                        (0x15CU)
#define PWM_PWRCAPTURE_VALUE                               (0x0U)
#define PWM_PWRCAPTURE_VALUE_PWRKEY_CAPTURE_VALUE_SHIFT    (0U)
#define PWM_PWRCAPTURE_VALUE_PWRKEY_CAPTURE_VALUE_MASK     (0xFFFFFFFFU << PWM_PWRCAPTURE_VALUE_PWRKEY_CAPTURE_VALUE_SHIFT) /* 0xFFFFFFFF */
/* IR_TRANS_ARBITER */
#define PWM_IR_TRANS_ARBITER_OFFSET                        (0x180U)
#define PWM_IR_TRANS_ARBITER_IR_TRANS_GRANT_SHIFT          (0U)
#define PWM_IR_TRANS_ARBITER_IR_TRANS_GRANT_MASK           (0xFFU << PWM_IR_TRANS_ARBITER_IR_TRANS_GRANT_SHIFT)         /* 0x000000FF */
#define PWM_IR_TRANS_ARBITER_IT_TRANS_READ_LOCK_SHIFT      (16U)
#define PWM_IR_TRANS_ARBITER_IT_TRANS_READ_LOCK_MASK       (0xFFU << PWM_IR_TRANS_ARBITER_IT_TRANS_READ_LOCK_SHIFT)     /* 0x00FF0000 */
/* IR_TRANS_CTRL0 */
#define PWM_IR_TRANS_CTRL0_OFFSET                          (0x184U)
#define PWM_IR_TRANS_CTRL0_IR_TRANS_OUT_ENABLE_SHIFT       (0U)
#define PWM_IR_TRANS_CTRL0_IR_TRANS_OUT_ENABLE_MASK        (0x1U << PWM_IR_TRANS_CTRL0_IR_TRANS_OUT_ENABLE_SHIFT)       /* 0x00000001 */
#define PWM_IR_TRANS_CTRL0_IR_TRANS_DUTY_POL_SHIFT         (1U)
#define PWM_IR_TRANS_CTRL0_IR_TRANS_DUTY_POL_MASK          (0x1U << PWM_IR_TRANS_CTRL0_IR_TRANS_DUTY_POL_SHIFT)         /* 0x00000002 */
#define PWM_IR_TRANS_CTRL0_IT_TRANS_INACTIVE_POL_SHIFT     (2U)
#define PWM_IR_TRANS_CTRL0_IT_TRANS_INACTIVE_POL_MASK      (0x1U << PWM_IR_TRANS_CTRL0_IT_TRANS_INACTIVE_POL_SHIFT)     /* 0x00000004 */
#define PWM_IR_TRANS_CTRL0_IT_TRANS_MODE_SHIFT             (3U)
#define PWM_IR_TRANS_CTRL0_IT_TRANS_MODE_MASK              (0x1U << PWM_IR_TRANS_CTRL0_IT_TRANS_MODE_SHIFT)             /* 0x00000008 */
#define PWM_IR_TRANS_CTRL0_IR_TRANS_FORMAT_SHIFT           (4U)
#define PWM_IR_TRANS_CTRL0_IR_TRANS_FORMAT_MASK            (0xFU << PWM_IR_TRANS_CTRL0_IR_TRANS_FORMAT_SHIFT)           /* 0x000000F0 */
#define PWM_IR_TRANS_CTRL0_IR_TRANS_LENGTH_WITHIN_ONE_FRAME_SHIFT (8U)
#define PWM_IR_TRANS_CTRL0_IR_TRANS_LENGTH_WITHIN_ONE_FRAME_MASK (0x1FU << PWM_IR_TRANS_CTRL0_IR_TRANS_LENGTH_WITHIN_ONE_FRAME_SHIFT) /* 0x00001F00 */
#define PWM_IR_TRANS_CTRL0_IR_TRANS_CLK_EN_FORCE_SHIFT     (13U)
#define PWM_IR_TRANS_CTRL0_IR_TRANS_CLK_EN_FORCE_MASK      (0x1U << PWM_IR_TRANS_CTRL0_IR_TRANS_CLK_EN_FORCE_SHIFT)     /* 0x00002000 */
/* IR_TRANS_CTRL1 */
#define PWM_IR_TRANS_CTRL1_OFFSET                          (0x188U)
#define PWM_IR_TRANS_CTRL1_IR_TRANS_RPT_SHIFT              (0U)
#define PWM_IR_TRANS_CTRL1_IR_TRANS_RPT_MASK               (0xFFFFU << PWM_IR_TRANS_CTRL1_IR_TRANS_RPT_SHIFT)           /* 0x0000FFFF */
/* IR_TRANS_PRE */
#define PWM_IR_TRANS_PRE_OFFSET                            (0x18CU)
#define PWM_IR_TRANS_PRE_IR_TRANS_OUT_LOW_PRELOAD_SHIFT    (0U)
#define PWM_IR_TRANS_PRE_IR_TRANS_OUT_LOW_PRELOAD_MASK     (0xFFFFU << PWM_IR_TRANS_PRE_IR_TRANS_OUT_LOW_PRELOAD_SHIFT) /* 0x0000FFFF */
#define PWM_IR_TRANS_PRE_IR_TRANS_OUT_HIGH_PRELOAD_SHIFT   (16U)
#define PWM_IR_TRANS_PRE_IR_TRANS_OUT_HIGH_PRELOAD_MASK    (0xFFFFU << PWM_IR_TRANS_PRE_IR_TRANS_OUT_HIGH_PRELOAD_SHIFT) /* 0xFFFF0000 */
/* IR_TRANS_SPRE */
#define PWM_IR_TRANS_SPRE_OFFSET                           (0x190U)
#define PWM_IR_TRANS_SPRE_IR_TRANS_OUT_HIGH_SIMPLE_PRELOAD_SHIFT (0U)
#define PWM_IR_TRANS_SPRE_IR_TRANS_OUT_HIGH_SIMPLE_PRELOAD_MASK (0xFFFFU << PWM_IR_TRANS_SPRE_IR_TRANS_OUT_HIGH_SIMPLE_PRELOAD_SHIFT) /* 0x0000FFFF */
/* IR_TRANS_LD */
#define PWM_IR_TRANS_LD_OFFSET                             (0x194U)
#define PWM_IR_TRANS_LD_IR_TRANS_OUT_DATA_LOW_PERIOD_SHIFT (0U)
#define PWM_IR_TRANS_LD_IR_TRANS_OUT_DATA_LOW_PERIOD_MASK  (0xFFFFU << PWM_IR_TRANS_LD_IR_TRANS_OUT_DATA_LOW_PERIOD_SHIFT) /* 0x0000FFFF */
/* IR_TRANS_HD */
#define PWM_IR_TRANS_HD_OFFSET                             (0x198U)
#define PWM_IR_TRANS_HD_IR_TRANS_OUT_HIGH_PERIOD_FOR_ZERO_SHIFT (0U)
#define PWM_IR_TRANS_HD_IR_TRANS_OUT_HIGH_PERIOD_FOR_ZERO_MASK (0xFFFFU << PWM_IR_TRANS_HD_IR_TRANS_OUT_HIGH_PERIOD_FOR_ZERO_SHIFT) /* 0x0000FFFF */
#define PWM_IR_TRANS_HD_IR_TRANS_OUT_HIGH_PERIOD_FOR_ONE_SHIFT (16U)
#define PWM_IR_TRANS_HD_IR_TRANS_OUT_HIGH_PERIOD_FOR_ONE_MASK (0xFFFFU << PWM_IR_TRANS_HD_IR_TRANS_OUT_HIGH_PERIOD_FOR_ONE_SHIFT) /* 0xFFFF0000 */
/* IR_TRANS_BURST_FRAME */
#define PWM_IR_TRANS_BURST_FRAME_OFFSET                    (0x19CU)
#define PWM_IR_TRANS_BURST_FRAME_IR_TRANS_OUT_FRAME_PERIOD_SHIFT (0U)
#define PWM_IR_TRANS_BURST_FRAME_IR_TRANS_OUT_FRAME_PERIOD_MASK (0x3FFFFU << PWM_IR_TRANS_BURST_FRAME_IR_TRANS_OUT_FRAME_PERIOD_SHIFT) /* 0x0003FFFF */
#define PWM_IR_TRANS_BURST_FRAME_IR_TRANS_OUT_BURST_PERIOD_SHIFT (20U)
#define PWM_IR_TRANS_BURST_FRAME_IR_TRANS_OUT_BURST_PERIOD_MASK (0x3FFU << PWM_IR_TRANS_BURST_FRAME_IR_TRANS_OUT_BURST_PERIOD_SHIFT) /* 0x3FF00000 */
/* IR_TRANS_DATA_VALUE */
#define PWM_IR_TRANS_DATA_VALUE_OFFSET                     (0x1A0U)
#define PWM_IR_TRANS_DATA_VALUE_IR_TRANS_OUT_VALUE_SHIFT   (0U)
#define PWM_IR_TRANS_DATA_VALUE_IR_TRANS_OUT_VALUE_MASK    (0xFFFFFFFFU << PWM_IR_TRANS_DATA_VALUE_IR_TRANS_OUT_VALUE_SHIFT) /* 0xFFFFFFFF */
/* IR_TRANS_STATUS */
#define PWM_IR_TRANS_STATUS_OFFSET                         (0x1A4U)
#define PWM_IR_TRANS_STATUS                                (0x1U)
#define PWM_IR_TRANS_STATUS_IR_STATE_IDLE_SHIFT            (0U)
#define PWM_IR_TRANS_STATUS_IR_STATE_IDLE_MASK             (0x1U << PWM_IR_TRANS_STATUS_IR_STATE_IDLE_SHIFT)            /* 0x00000001 */
/* FREQ_ARBITER */
#define PWM_FREQ_ARBITER_OFFSET                            (0x1C0U)
#define PWM_FREQ_ARBITER_FREQ_GRANT_SHIFT                  (0U)
#define PWM_FREQ_ARBITER_FREQ_GRANT_MASK                   (0xFFU << PWM_FREQ_ARBITER_FREQ_GRANT_SHIFT)                 /* 0x000000FF */
#define PWM_FREQ_ARBITER_FREQ_READ_LOCK_SHIFT              (16U)
#define PWM_FREQ_ARBITER_FREQ_READ_LOCK_MASK               (0xFFU << PWM_FREQ_ARBITER_FREQ_READ_LOCK_SHIFT)             /* 0x00FF0000 */
/* FREQ_CTRL */
#define PWM_FREQ_CTRL_OFFSET                               (0x1C4U)
#define PWM_FREQ_CTRL_FREQ_EN_SHIFT                        (0U)
#define PWM_FREQ_CTRL_FREQ_EN_MASK                         (0x1U << PWM_FREQ_CTRL_FREQ_EN_SHIFT)                        /* 0x00000001 */
#define PWM_FREQ_CTRL_FREQ_CLK_SEL_SHIFT                   (1U)
#define PWM_FREQ_CTRL_FREQ_CLK_SEL_MASK                    (0x1U << PWM_FREQ_CTRL_FREQ_CLK_SEL_SHIFT)                   /* 0x00000002 */
#define PWM_FREQ_CTRL_FREQ_CHANNEL_SEL_SHIFT               (3U)
#define PWM_FREQ_CTRL_FREQ_CHANNEL_SEL_MASK                (0x7U << PWM_FREQ_CTRL_FREQ_CHANNEL_SEL_SHIFT)               /* 0x00000038 */
#define PWM_FREQ_CTRL_FREQ_TIMER_CLK_SWITCH_MODE_SHIFT     (6U)
#define PWM_FREQ_CTRL_FREQ_TIMER_CLK_SWITCH_MODE_MASK      (0x1U << PWM_FREQ_CTRL_FREQ_TIMER_CLK_SWITCH_MODE_SHIFT)     /* 0x00000040 */
#define PWM_FREQ_CTRL_FREQ_TIMER_CLK_SEL_SHIFT             (7U)
#define PWM_FREQ_CTRL_FREQ_TIMER_CLK_SEL_MASK              (0x1U << PWM_FREQ_CTRL_FREQ_TIMER_CLK_SEL_SHIFT)             /* 0x00000080 */
/* FREQ_TIMER_VALUE */
#define PWM_FREQ_TIMER_VALUE_OFFSET                        (0x1C8U)
#define PWM_FREQ_TIMER_VALUE_FREQ_TIMER_VALUE_SHIFT        (0U)
#define PWM_FREQ_TIMER_VALUE_FREQ_TIMER_VALUE_MASK         (0xFFFFFFFFU << PWM_FREQ_TIMER_VALUE_FREQ_TIMER_VALUE_SHIFT) /* 0xFFFFFFFF */
/* FREQ_RESULT_VALUE */
#define PWM_FREQ_RESULT_VALUE_OFFSET                       (0x1CCU)
#define PWM_FREQ_RESULT_VALUE_FREQ_RESULT_VALUE_SHIFT      (0U)
#define PWM_FREQ_RESULT_VALUE_FREQ_RESULT_VALUE_MASK       (0xFFFFFFFFU << PWM_FREQ_RESULT_VALUE_FREQ_RESULT_VALUE_SHIFT) /* 0xFFFFFFFF */
/* COUNTER_ARBITER */
#define PWM_COUNTER_ARBITER_OFFSET                         (0x200U)
#define PWM_COUNTER_ARBITER_COUNTER_GRANT_SHIFT            (0U)
#define PWM_COUNTER_ARBITER_COUNTER_GRANT_MASK             (0xFFU << PWM_COUNTER_ARBITER_COUNTER_GRANT_SHIFT)           /* 0x000000FF */
#define PWM_COUNTER_ARBITER_COUNTER_READ_LOCK_SHIFT        (16U)
#define PWM_COUNTER_ARBITER_COUNTER_READ_LOCK_MASK         (0xFFU << PWM_COUNTER_ARBITER_COUNTER_READ_LOCK_SHIFT)       /* 0x00FF0000 */
/* COUNTER_CTRL */
#define PWM_COUNTER_CTRL_OFFSET                            (0x204U)
#define PWM_COUNTER_CTRL_COUNTER_EN_SHIFT                  (0U)
#define PWM_COUNTER_CTRL_COUNTER_EN_MASK                   (0x1U << PWM_COUNTER_CTRL_COUNTER_EN_SHIFT)                  /* 0x00000001 */
#define PWM_COUNTER_CTRL_COUNTER_CLK_SEL_SHIFT             (1U)
#define PWM_COUNTER_CTRL_COUNTER_CLK_SEL_MASK              (0x3U << PWM_COUNTER_CTRL_COUNTER_CLK_SEL_SHIFT)             /* 0x00000006 */
#define PWM_COUNTER_CTRL_COUNTER_CHANNEL_SEL_SHIFT         (3U)
#define PWM_COUNTER_CTRL_COUNTER_CHANNEL_SEL_MASK          (0x7U << PWM_COUNTER_CTRL_COUNTER_CHANNEL_SEL_SHIFT)         /* 0x00000038 */
#define PWM_COUNTER_CTRL_COUNTER_CLR_SHIFT                 (6U)
#define PWM_COUNTER_CTRL_COUNTER_CLR_MASK                  (0x1U << PWM_COUNTER_CTRL_COUNTER_CLR_SHIFT)                 /* 0x00000040 */
/* COUNTER_LOW */
#define PWM_COUNTER_LOW_OFFSET                             (0x208U)
#define PWM_COUNTER_LOW                                    (0x0U)
#define PWM_COUNTER_LOW_COUNTER_LOW_BITS_SHIFT             (0U)
#define PWM_COUNTER_LOW_COUNTER_LOW_BITS_MASK              (0xFFFFFFFFU << PWM_COUNTER_LOW_COUNTER_LOW_BITS_SHIFT)      /* 0xFFFFFFFF */
/* COUNTER_HIGH */
#define PWM_COUNTER_HIGH_OFFSET                            (0x20CU)
#define PWM_COUNTER_HIGH                                   (0x0U)
#define PWM_COUNTER_HIGH_COUNTER_HIGH_BITS_SHIFT           (0U)
#define PWM_COUNTER_HIGH_COUNTER_HIGH_BITS_MASK            (0xFFFFFFFFU << PWM_COUNTER_HIGH_COUNTER_HIGH_BITS_SHIFT)    /* 0xFFFFFFFF */
/* WAVE_MEM */
#define PWM_WAVE_MEM_OFFSET                                (0x400U)
#define PWM_WAVE_MEM_WAVE_MEM_BASE_ADDRESS_SHIFT           (0U)
#define PWM_WAVE_MEM_WAVE_MEM_BASE_ADDRESS_MASK            (0xFFFFU << PWM_WAVE_MEM_WAVE_MEM_BASE_ADDRESS_SHIFT)        /* 0x0000FFFF */
/******************************************GPIO******************************************/
/* SWPORT_DR_L */
#define GPIO_SWPORT_DR_L_OFFSET                            (0x0U)
#define GPIO_SWPORT_DR_L_SWPORT_DR_LOW_SHIFT               (0U)
#define GPIO_SWPORT_DR_L_SWPORT_DR_LOW_MASK                (0xFFFFU << GPIO_SWPORT_DR_L_SWPORT_DR_LOW_SHIFT)            /* 0x0000FFFF */
/* SWPORT_DR_H */
#define GPIO_SWPORT_DR_H_OFFSET                            (0x4U)
#define GPIO_SWPORT_DR_H_SWPORT_DR_HIGH_SHIFT              (0U)
#define GPIO_SWPORT_DR_H_SWPORT_DR_HIGH_MASK               (0xFFFFU << GPIO_SWPORT_DR_H_SWPORT_DR_HIGH_SHIFT)           /* 0x0000FFFF */
/* SWPORT_DDR_L */
#define GPIO_SWPORT_DDR_L_OFFSET                           (0x8U)
#define GPIO_SWPORT_DDR_L_SWPORT_DDR_LOW_SHIFT             (0U)
#define GPIO_SWPORT_DDR_L_SWPORT_DDR_LOW_MASK              (0xFFFFU << GPIO_SWPORT_DDR_L_SWPORT_DDR_LOW_SHIFT)          /* 0x0000FFFF */
/* SWPORT_DDR_H */
#define GPIO_SWPORT_DDR_H_OFFSET                           (0xCU)
#define GPIO_SWPORT_DDR_H_SWPORT_DDR_HIGH_SHIFT            (0U)
#define GPIO_SWPORT_DDR_H_SWPORT_DDR_HIGH_MASK             (0xFFFFU << GPIO_SWPORT_DDR_H_SWPORT_DDR_HIGH_SHIFT)         /* 0x0000FFFF */
/* INT_EN_L */
#define GPIO_INT_EN_L_OFFSET                               (0x10U)
#define GPIO_INT_EN_L_INT_EN_LOW_SHIFT                     (0U)
#define GPIO_INT_EN_L_INT_EN_LOW_MASK                      (0xFFFFU << GPIO_INT_EN_L_INT_EN_LOW_SHIFT)                  /* 0x0000FFFF */
/* INT_EN_H */
#define GPIO_INT_EN_H_OFFSET                               (0x14U)
#define GPIO_INT_EN_H_INT_EN_HIGH_SHIFT                    (0U)
#define GPIO_INT_EN_H_INT_EN_HIGH_MASK                     (0xFFFFU << GPIO_INT_EN_H_INT_EN_HIGH_SHIFT)                 /* 0x0000FFFF */
/* INT_MASK_L */
#define GPIO_INT_MASK_L_OFFSET                             (0x18U)
#define GPIO_INT_MASK_L_INT_MASK_LOW_SHIFT                 (0U)
#define GPIO_INT_MASK_L_INT_MASK_LOW_MASK                  (0xFFFFU << GPIO_INT_MASK_L_INT_MASK_LOW_SHIFT)              /* 0x0000FFFF */
/* INT_MASK_H */
#define GPIO_INT_MASK_H_OFFSET                             (0x1CU)
#define GPIO_INT_MASK_H_INT_MASK_HIGH_SHIFT                (0U)
#define GPIO_INT_MASK_H_INT_MASK_HIGH_MASK                 (0xFFFFU << GPIO_INT_MASK_H_INT_MASK_HIGH_SHIFT)             /* 0x0000FFFF */
/* INT_TYPE_L */
#define GPIO_INT_TYPE_L_OFFSET                             (0x20U)
#define GPIO_INT_TYPE_L_INT_TYPE_LOW_SHIFT                 (0U)
#define GPIO_INT_TYPE_L_INT_TYPE_LOW_MASK                  (0xFFFFU << GPIO_INT_TYPE_L_INT_TYPE_LOW_SHIFT)              /* 0x0000FFFF */
/* INT_TYPE_H */
#define GPIO_INT_TYPE_H_OFFSET                             (0x24U)
#define GPIO_INT_TYPE_H_INT_TYPE_HIGH_SHIFT                (0U)
#define GPIO_INT_TYPE_H_INT_TYPE_HIGH_MASK                 (0xFFFFU << GPIO_INT_TYPE_H_INT_TYPE_HIGH_SHIFT)             /* 0x0000FFFF */
/* INT_POLARITY_L */
#define GPIO_INT_POLARITY_L_OFFSET                         (0x28U)
#define GPIO_INT_POLARITY_L_INT_POLARITY_LOW_SHIFT         (0U)
#define GPIO_INT_POLARITY_L_INT_POLARITY_LOW_MASK          (0xFFFFU << GPIO_INT_POLARITY_L_INT_POLARITY_LOW_SHIFT)      /* 0x0000FFFF */
/* INT_POLARITY_H */
#define GPIO_INT_POLARITY_H_OFFSET                         (0x2CU)
#define GPIO_INT_POLARITY_H_INT_POLARITY_HIGH_SHIFT        (0U)
#define GPIO_INT_POLARITY_H_INT_POLARITY_HIGH_MASK         (0xFFFFU << GPIO_INT_POLARITY_H_INT_POLARITY_HIGH_SHIFT)     /* 0x0000FFFF */
/* INT_BOTHEDGE_L */
#define GPIO_INT_BOTHEDGE_L_OFFSET                         (0x30U)
#define GPIO_INT_BOTHEDGE_L_INT_BOTHEDGE_LOW_SHIFT         (0U)
#define GPIO_INT_BOTHEDGE_L_INT_BOTHEDGE_LOW_MASK          (0xFFFFU << GPIO_INT_BOTHEDGE_L_INT_BOTHEDGE_LOW_SHIFT)      /* 0x0000FFFF */
/* INT_BOTHEDGE_H */
#define GPIO_INT_BOTHEDGE_H_OFFSET                         (0x34U)
#define GPIO_INT_BOTHEDGE_H_INT_BOTHEDGE_HIGH_SHIFT        (0U)
#define GPIO_INT_BOTHEDGE_H_INT_BOTHEDGE_HIGH_MASK         (0xFFFFU << GPIO_INT_BOTHEDGE_H_INT_BOTHEDGE_HIGH_SHIFT)     /* 0x0000FFFF */
/* DEBOUNCE_L */
#define GPIO_DEBOUNCE_L_OFFSET                             (0x38U)
#define GPIO_DEBOUNCE_L_DEBOUNCE_LOW_SHIFT                 (0U)
#define GPIO_DEBOUNCE_L_DEBOUNCE_LOW_MASK                  (0xFFFFU << GPIO_DEBOUNCE_L_DEBOUNCE_LOW_SHIFT)              /* 0x0000FFFF */
/* DEBOUNCE_H */
#define GPIO_DEBOUNCE_H_OFFSET                             (0x3CU)
#define GPIO_DEBOUNCE_H_DEBOUNCE_HIGH_SHIFT                (0U)
#define GPIO_DEBOUNCE_H_DEBOUNCE_HIGH_MASK                 (0xFFFFU << GPIO_DEBOUNCE_H_DEBOUNCE_HIGH_SHIFT)             /* 0x0000FFFF */
/* DBCLK_DIV_EN_L */
#define GPIO_DBCLK_DIV_EN_L_OFFSET                         (0x40U)
#define GPIO_DBCLK_DIV_EN_L_DBCLK_DIV_EN_LOW_SHIFT         (0U)
#define GPIO_DBCLK_DIV_EN_L_DBCLK_DIV_EN_LOW_MASK          (0xFFFFU << GPIO_DBCLK_DIV_EN_L_DBCLK_DIV_EN_LOW_SHIFT)      /* 0x0000FFFF */
/* DBCLK_DIV_EN_H */
#define GPIO_DBCLK_DIV_EN_H_OFFSET                         (0x44U)
#define GPIO_DBCLK_DIV_EN_H_DBCLK_DIV_EN_HIGH_SHIFT        (0U)
#define GPIO_DBCLK_DIV_EN_H_DBCLK_DIV_EN_HIGH_MASK         (0xFFFFU << GPIO_DBCLK_DIV_EN_H_DBCLK_DIV_EN_HIGH_SHIFT)     /* 0x0000FFFF */
/* DBCLK_DIV_CON */
#define GPIO_DBCLK_DIV_CON_OFFSET                          (0x48U)
#define GPIO_DBCLK_DIV_CON_DBCLK_DIV_CON_SHIFT             (0U)
#define GPIO_DBCLK_DIV_CON_DBCLK_DIV_CON_MASK              (0xFFFFFFU << GPIO_DBCLK_DIV_CON_DBCLK_DIV_CON_SHIFT)        /* 0x00FFFFFF */
/* INT_STATUS */
#define GPIO_INT_STATUS_OFFSET                             (0x50U)
#define GPIO_INT_STATUS                                    (0x0U)
#define GPIO_INT_STATUS_INT_STATUS_SHIFT                   (0U)
#define GPIO_INT_STATUS_INT_STATUS_MASK                    (0xFFFFFFFFU << GPIO_INT_STATUS_INT_STATUS_SHIFT)            /* 0xFFFFFFFF */
/* INT_RAWSTATUS */
#define GPIO_INT_RAWSTATUS_OFFSET                          (0x58U)
#define GPIO_INT_RAWSTATUS                                 (0x0U)
#define GPIO_INT_RAWSTATUS_INT_RAWSTATUS_SHIFT             (0U)
#define GPIO_INT_RAWSTATUS_INT_RAWSTATUS_MASK              (0xFFFFFFFFU << GPIO_INT_RAWSTATUS_INT_RAWSTATUS_SHIFT)      /* 0xFFFFFFFF */
/* PORT_EOI_L */
#define GPIO_PORT_EOI_L_OFFSET                             (0x60U)
#define GPIO_PORT_EOI_L_PORT_EOI_LOW_SHIFT                 (0U)
#define GPIO_PORT_EOI_L_PORT_EOI_LOW_MASK                  (0xFFFFU << GPIO_PORT_EOI_L_PORT_EOI_LOW_SHIFT)              /* 0x0000FFFF */
/* PORT_EOI_H */
#define GPIO_PORT_EOI_H_OFFSET                             (0x64U)
#define GPIO_PORT_EOI_H_PORT_EOI_HIGH_SHIFT                (0U)
#define GPIO_PORT_EOI_H_PORT_EOI_HIGH_MASK                 (0xFFFFU << GPIO_PORT_EOI_H_PORT_EOI_HIGH_SHIFT)             /* 0x0000FFFF */
/* EXT_PORT */
#define GPIO_EXT_PORT_OFFSET                               (0x70U)
#define GPIO_EXT_PORT                                      (0x0U)
#define GPIO_EXT_PORT_EXT_PORT_SHIFT                       (0U)
#define GPIO_EXT_PORT_EXT_PORT_MASK                        (0xFFFFFFFFU << GPIO_EXT_PORT_EXT_PORT_SHIFT)                /* 0xFFFFFFFF */
/* VER_ID */
#define GPIO_VER_ID_OFFSET                                 (0x78U)
#define GPIO_VER_ID                                        (0x10219C8U)
#define GPIO_VER_ID_VER_ID_SHIFT                           (0U)
#define GPIO_VER_ID_VER_ID_MASK                            (0xFFFFFFFFU << GPIO_VER_ID_VER_ID_SHIFT)                    /* 0xFFFFFFFF */
/* STORE_ST_L */
#define GPIO_STORE_ST_L_OFFSET                             (0x80U)
#define GPIO_STORE_ST_L_STORE_ST_L_SHIFT                   (0U)
#define GPIO_STORE_ST_L_STORE_ST_L_MASK                    (0xFFFFU << GPIO_STORE_ST_L_STORE_ST_L_SHIFT)                /* 0x0000FFFF */
/* STORE_ST_H */
#define GPIO_STORE_ST_H_OFFSET                             (0x84U)
#define GPIO_STORE_ST_H_STORE_ST_H_SHIFT                   (0U)
#define GPIO_STORE_ST_H_STORE_ST_H_MASK                    (0xFFFFU << GPIO_STORE_ST_H_STORE_ST_H_SHIFT)                /* 0x0000FFFF */
/* GPIO_REG_GROUP_L */
#define GPIO_GPIO_REG_GROUP_L_OFFSET                       (0x100U)
#define GPIO_GPIO_REG_GROUP_L_GPIO_REG_GROUP_LOW_SHIFT     (0U)
#define GPIO_GPIO_REG_GROUP_L_GPIO_REG_GROUP_LOW_MASK      (0xFFFFU << GPIO_GPIO_REG_GROUP_L_GPIO_REG_GROUP_LOW_SHIFT)  /* 0x0000FFFF */
/* GPIO_REG_GROUP_H */
#define GPIO_GPIO_REG_GROUP_H_OFFSET                       (0x104U)
#define GPIO_GPIO_REG_GROUP_H_GPIO_REG_GROUP_HIGH_SHIFT    (0U)
#define GPIO_GPIO_REG_GROUP_H_GPIO_REG_GROUP_HIGH_MASK     (0xFFFFU << GPIO_GPIO_REG_GROUP_H_GPIO_REG_GROUP_HIGH_SHIFT) /* 0x0000FFFF */
/* GPIO_VIRTUAL_EN */
#define GPIO_GPIO_VIRTUAL_EN_OFFSET                        (0x108U)
#define GPIO_GPIO_VIRTUAL_EN_GPIO_VIRTUAL_EN_SHIFT         (0U)
#define GPIO_GPIO_VIRTUAL_EN_GPIO_VIRTUAL_EN_MASK          (0x1U << GPIO_GPIO_VIRTUAL_EN_GPIO_VIRTUAL_EN_SHIFT)         /* 0x00000001 */
/* GPIO_REG_GROUP1_L */
#define GPIO_GPIO_REG_GROUP1_L_OFFSET                      (0x110U)
#define GPIO_GPIO_REG_GROUP1_L_GPIO_REG_GROUP1_LOW_SHIFT   (0U)
#define GPIO_GPIO_REG_GROUP1_L_GPIO_REG_GROUP1_LOW_MASK    (0xFFFFU << GPIO_GPIO_REG_GROUP1_L_GPIO_REG_GROUP1_LOW_SHIFT) /* 0x0000FFFF */
/* GPIO_REG_GROUP1_H */
#define GPIO_GPIO_REG_GROUP1_H_OFFSET                      (0x114U)
#define GPIO_GPIO_REG_GROUP1_H_GPIO_REG_GROUP1_HIGH_SHIFT  (0U)
#define GPIO_GPIO_REG_GROUP1_H_GPIO_REG_GROUP1_HIGH_MASK   (0xFFFFU << GPIO_GPIO_REG_GROUP1_H_GPIO_REG_GROUP1_HIGH_SHIFT) /* 0x0000FFFF */
/* GPIO_REG_GROUP2_L */
#define GPIO_GPIO_REG_GROUP2_L_OFFSET                      (0x118U)
#define GPIO_GPIO_REG_GROUP2_L_GPIO_REG_GROUP2_LOW_SHIFT   (0U)
#define GPIO_GPIO_REG_GROUP2_L_GPIO_REG_GROUP2_LOW_MASK    (0xFFFFU << GPIO_GPIO_REG_GROUP2_L_GPIO_REG_GROUP2_LOW_SHIFT) /* 0x0000FFFF */
/* GPIO_REG_GROUP2_H */
#define GPIO_GPIO_REG_GROUP2_H_OFFSET                      (0x11CU)
#define GPIO_GPIO_REG_GROUP2_H_GPIO_REG_GROUP2_HIGH_SHIFT  (0U)
#define GPIO_GPIO_REG_GROUP2_H_GPIO_REG_GROUP2_HIGH_MASK   (0xFFFFU << GPIO_GPIO_REG_GROUP2_H_GPIO_REG_GROUP2_HIGH_SHIFT) /* 0x0000FFFF */
/* GPIO_REG_GROUP3_L */
#define GPIO_GPIO_REG_GROUP3_L_OFFSET                      (0x120U)
#define GPIO_GPIO_REG_GROUP3_L_GPIO_REG_GROUP3_LOW_SHIFT   (0U)
#define GPIO_GPIO_REG_GROUP3_L_GPIO_REG_GROUP3_LOW_MASK    (0xFFFFU << GPIO_GPIO_REG_GROUP3_L_GPIO_REG_GROUP3_LOW_SHIFT) /* 0x0000FFFF */
/* GPIO_REG_GROUP3_H */
#define GPIO_GPIO_REG_GROUP3_H_OFFSET                      (0x124U)
#define GPIO_GPIO_REG_GROUP3_H_GPIO_REG_GROUP3_HIGH_SHIFT  (0U)
#define GPIO_GPIO_REG_GROUP3_H_GPIO_REG_GROUP3_HIGH_MASK   (0xFFFFU << GPIO_GPIO_REG_GROUP3_H_GPIO_REG_GROUP3_HIGH_SHIFT) /* 0x0000FFFF */
/****************************************SPINLOCK****************************************/
/* STATUS0 */
#define SPINLOCK_STATUS0_OFFSET                            (0x0U)
#define SPINLOCK_STATUS0_SPINLOCK_STATUS_SHIFT             (0U)
#define SPINLOCK_STATUS0_SPINLOCK_STATUS_MASK              (0xFU << SPINLOCK_STATUS0_SPINLOCK_STATUS_SHIFT)             /* 0x0000000F */
/* STATUS1 */
#define SPINLOCK_STATUS1_OFFSET                            (0x4U)
#define SPINLOCK_STATUS1_SPINLOCK_STATUS_SHIFT             (0U)
#define SPINLOCK_STATUS1_SPINLOCK_STATUS_MASK              (0xFU << SPINLOCK_STATUS1_SPINLOCK_STATUS_SHIFT)             /* 0x0000000F */
/* STATUS2 */
#define SPINLOCK_STATUS2_OFFSET                            (0x8U)
#define SPINLOCK_STATUS2_SPINLOCK_STATUS_SHIFT             (0U)
#define SPINLOCK_STATUS2_SPINLOCK_STATUS_MASK              (0xFU << SPINLOCK_STATUS2_SPINLOCK_STATUS_SHIFT)             /* 0x0000000F */
/* STATUS3 */
#define SPINLOCK_STATUS3_OFFSET                            (0xCU)
#define SPINLOCK_STATUS3_SPINLOCK_STATUS_SHIFT             (0U)
#define SPINLOCK_STATUS3_SPINLOCK_STATUS_MASK              (0xFU << SPINLOCK_STATUS3_SPINLOCK_STATUS_SHIFT)             /* 0x0000000F */
/* STATUS4 */
#define SPINLOCK_STATUS4_OFFSET                            (0x10U)
#define SPINLOCK_STATUS4_SPINLOCK_STATUS_SHIFT             (0U)
#define SPINLOCK_STATUS4_SPINLOCK_STATUS_MASK              (0xFU << SPINLOCK_STATUS4_SPINLOCK_STATUS_SHIFT)             /* 0x0000000F */
/* STATUS5 */
#define SPINLOCK_STATUS5_OFFSET                            (0x14U)
#define SPINLOCK_STATUS5_SPINLOCK_STATUS_SHIFT             (0U)
#define SPINLOCK_STATUS5_SPINLOCK_STATUS_MASK              (0xFU << SPINLOCK_STATUS5_SPINLOCK_STATUS_SHIFT)             /* 0x0000000F */
/* STATUS6 */
#define SPINLOCK_STATUS6_OFFSET                            (0x18U)
#define SPINLOCK_STATUS6_SPINLOCK_STATUS_SHIFT             (0U)
#define SPINLOCK_STATUS6_SPINLOCK_STATUS_MASK              (0xFU << SPINLOCK_STATUS6_SPINLOCK_STATUS_SHIFT)             /* 0x0000000F */
/* STATUS7 */
#define SPINLOCK_STATUS7_OFFSET                            (0x1CU)
#define SPINLOCK_STATUS7_SPINLOCK_STATUS_SHIFT             (0U)
#define SPINLOCK_STATUS7_SPINLOCK_STATUS_MASK              (0xFU << SPINLOCK_STATUS7_SPINLOCK_STATUS_SHIFT)             /* 0x0000000F */
/*****************************************TIMER******************************************/
/* LOAD_COUNT0 */
#define TIMER_LOAD_COUNT0_OFFSET                           (0x0U)
#define TIMER_LOAD_COUNT0_COUNT0_SHIFT                     (0U)
#define TIMER_LOAD_COUNT0_COUNT0_MASK                      (0xFFFFFFFFU << TIMER_LOAD_COUNT0_COUNT0_SHIFT)              /* 0xFFFFFFFF */
/* LOAD_COUNT1 */
#define TIMER_LOAD_COUNT1_OFFSET                           (0x4U)
#define TIMER_LOAD_COUNT1_COUNT1_SHIFT                     (0U)
#define TIMER_LOAD_COUNT1_COUNT1_MASK                      (0xFFFFFFFFU << TIMER_LOAD_COUNT1_COUNT1_SHIFT)              /* 0xFFFFFFFF */
/* CURRENT_VALUE0 */
#define TIMER_CURRENT_VALUE0_OFFSET                        (0x8U)
#define TIMER_CURRENT_VALUE0                               (0x0U)
#define TIMER_CURRENT_VALUE0_CURRENT_VALUE0_SHIFT          (0U)
#define TIMER_CURRENT_VALUE0_CURRENT_VALUE0_MASK           (0xFFFFFFFFU << TIMER_CURRENT_VALUE0_CURRENT_VALUE0_SHIFT)   /* 0xFFFFFFFF */
/* CURRENT_VALUE1 */
#define TIMER_CURRENT_VALUE1_OFFSET                        (0xCU)
#define TIMER_CURRENT_VALUE1                               (0x0U)
#define TIMER_CURRENT_VALUE1_CURRENT_VALUE1_SHIFT          (0U)
#define TIMER_CURRENT_VALUE1_CURRENT_VALUE1_MASK           (0xFFFFFFFFU << TIMER_CURRENT_VALUE1_CURRENT_VALUE1_SHIFT)   /* 0xFFFFFFFF */
/* CONTROLREG */
#define TIMER_CONTROLREG_OFFSET                            (0x10U)
#define TIMER_CONTROLREG_TIMER_ENABLE_SHIFT                (0U)
#define TIMER_CONTROLREG_TIMER_ENABLE_MASK                 (0x1U << TIMER_CONTROLREG_TIMER_ENABLE_SHIFT)                /* 0x00000001 */
#define TIMER_CONTROLREG_TIMER_MODE_SHIFT                  (1U)
#define TIMER_CONTROLREG_TIMER_MODE_MASK                   (0x1U << TIMER_CONTROLREG_TIMER_MODE_SHIFT)                  /* 0x00000002 */
#define TIMER_CONTROLREG_TIMER_INT_MASK_SHIFT              (2U)
#define TIMER_CONTROLREG_TIMER_INT_MASK_MASK               (0x1U << TIMER_CONTROLREG_TIMER_INT_MASK_SHIFT)              /* 0x00000004 */
/* INTSTATUS */
#define TIMER_INTSTATUS_OFFSET                             (0x18U)
#define TIMER_INTSTATUS_INT_PD_SHIFT                       (0U)
#define TIMER_INTSTATUS_INT_PD_MASK                        (0x1U << TIMER_INTSTATUS_INT_PD_SHIFT)                       /* 0x00000001 */
/******************************************WDT*******************************************/
/* CR */
#define WDT_CR_OFFSET                                      (0x0U)
#define WDT_CR_EN_SHIFT                                    (0U)
#define WDT_CR_EN_MASK                                     (0x1U << WDT_CR_EN_SHIFT)                                    /* 0x00000001 */
#define WDT_CR_RESP_MODE_SHIFT                             (1U)
#define WDT_CR_RESP_MODE_MASK                              (0x1U << WDT_CR_RESP_MODE_SHIFT)                             /* 0x00000002 */
#define WDT_CR_RST_PLUSE_LENGTH_SHIFT                      (2U)
#define WDT_CR_RST_PLUSE_LENGTH_MASK                       (0x7U << WDT_CR_RST_PLUSE_LENGTH_SHIFT)                      /* 0x0000001C */
/* TORR */
#define WDT_TORR_OFFSET                                    (0x4U)
#define WDT_TORR_TIMEOUT_PERIOD_SHIFT                      (0U)
#define WDT_TORR_TIMEOUT_PERIOD_MASK                       (0xFU << WDT_TORR_TIMEOUT_PERIOD_SHIFT)                      /* 0x0000000F */
/* CCVR */
#define WDT_CCVR_OFFSET                                    (0x8U)
#define WDT_CCVR                                           (0xFFFFU)
#define WDT_CCVR_CUR_CNT_SHIFT                             (0U)
#define WDT_CCVR_CUR_CNT_MASK                              (0xFFFFFFFFU << WDT_CCVR_CUR_CNT_SHIFT)                      /* 0xFFFFFFFF */
/* CRR */
#define WDT_CRR_OFFSET                                     (0xCU)
#define WDT_CRR_CNT_RESTART_SHIFT                          (0U)
#define WDT_CRR_CNT_RESTART_MASK                           (0xFFU << WDT_CRR_CNT_RESTART_SHIFT)                         /* 0x000000FF */
/* STAT */
#define WDT_STAT_OFFSET                                    (0x10U)
#define WDT_STAT                                           (0x0U)
#define WDT_STAT_STATUS_SHIFT                              (0U)
#define WDT_STAT_STATUS_MASK                               (0x1U << WDT_STAT_STATUS_SHIFT)                              /* 0x00000001 */
/* EOI */
#define WDT_EOI_OFFSET                                     (0x14U)
#define WDT_EOI                                            (0x0U)
#define WDT_EOI_INT_CLR_SHIFT                              (0U)
#define WDT_EOI_INT_CLR_MASK                               (0x1U << WDT_EOI_INT_CLR_SHIFT)                              /* 0x00000001 */
/******************************************GRF*******************************************/
/* SOC_CON0 */
#define GRF_SOC_CON0_OFFSET                                (0x0U)
#define GRF_SOC_CON0_GRF_SARADC_PD_SHIFT                   (2U)
#define GRF_SOC_CON0_GRF_SARADC_PD_MASK                    (0x1U << GRF_SOC_CON0_GRF_SARADC_PD_SHIFT)                   /* 0x00000004 */
#define GRF_SOC_CON0_GRF_SARADC_PD_SEL_SHIFT               (3U)
#define GRF_SOC_CON0_GRF_SARADC_PD_SEL_MASK                (0x1U << GRF_SOC_CON0_GRF_SARADC_PD_SEL_SHIFT)               /* 0x00000008 */
#define GRF_SOC_CON0_GRF_JTAG_SEL_SHIFT                    (4U)
#define GRF_SOC_CON0_GRF_JTAG_SEL_MASK                     (0x3U << GRF_SOC_CON0_GRF_JTAG_SEL_SHIFT)                    /* 0x00000030 */
#define GRF_SOC_CON0_VOP_DCF_IDLE_SHIFT                    (6U)
#define GRF_SOC_CON0_VOP_DCF_IDLE_MASK                     (0x1U << GRF_SOC_CON0_VOP_DCF_IDLE_SHIFT)                    /* 0x00000040 */
#define GRF_SOC_CON0_DDRMONITOR_EXTERNAL_TRIGGER_EN_SHIFT  (7U)
#define GRF_SOC_CON0_DDRMONITOR_EXTERNAL_TRIGGER_EN_MASK   (0x1U << GRF_SOC_CON0_DDRMONITOR_EXTERNAL_TRIGGER_EN_SHIFT)  /* 0x00000080 */
#define GRF_SOC_CON0_GRF_SPDIF_RX_LOOPBACK_TX_SHIFT        (8U)
#define GRF_SOC_CON0_GRF_SPDIF_RX_LOOPBACK_TX_MASK         (0x1U << GRF_SOC_CON0_GRF_SPDIF_RX_LOOPBACK_TX_SHIFT)        /* 0x00000100 */
#define GRF_SOC_CON0_GRF_CON_SAI3_SEL_SHIFT                (9U)
#define GRF_SOC_CON0_GRF_CON_SAI3_SEL_MASK                 (0x1U << GRF_SOC_CON0_GRF_CON_SAI3_SEL_SHIFT)                /* 0x00000200 */
#define GRF_SOC_CON0_GRF_CON_DSM_SEL_SHIFT                 (10U)
#define GRF_SOC_CON0_GRF_CON_DSM_SEL_MASK                  (0x1U << GRF_SOC_CON0_GRF_CON_DSM_SEL_SHIFT)                 /* 0x00000400 */
#define GRF_SOC_CON0_MCU_HPROT_BUFFERABLE_SHIFT            (12U)
#define GRF_SOC_CON0_MCU_HPROT_BUFFERABLE_MASK             (0x1U << GRF_SOC_CON0_MCU_HPROT_BUFFERABLE_SHIFT)            /* 0x00001000 */
#define GRF_SOC_CON0_OTG0_HPROT_BUFFERABLE_SHIFT           (13U)
#define GRF_SOC_CON0_OTG0_HPROT_BUFFERABLE_MASK            (0x1U << GRF_SOC_CON0_OTG0_HPROT_BUFFERABLE_SHIFT)           /* 0x00002000 */
#define GRF_SOC_CON0_OTG1_HPROT_BUFFERABLE_SHIFT           (14U)
#define GRF_SOC_CON0_OTG1_HPROT_BUFFERABLE_MASK            (0x1U << GRF_SOC_CON0_OTG1_HPROT_BUFFERABLE_SHIFT)           /* 0x00004000 */
#define GRF_SOC_CON0_SDMMC_HPROT_BUFFERABLE_SHIFT          (15U)
#define GRF_SOC_CON0_SDMMC_HPROT_BUFFERABLE_MASK           (0x1U << GRF_SOC_CON0_SDMMC_HPROT_BUFFERABLE_SHIFT)          /* 0x00008000 */
/* SOC_CON1 */
#define GRF_SOC_CON1_OFFSET                                (0x4U)
#define GRF_SOC_CON1_GRF_FLEXBUS1_CON_SHIFT                (0U)
#define GRF_SOC_CON1_GRF_FLEXBUS1_CON_MASK                 (0x3U << GRF_SOC_CON1_GRF_FLEXBUS1_CON_SHIFT)                /* 0x00000003 */
#define GRF_SOC_CON1_GRF_SAI2_MCLK_OEN_SHIFT               (2U)
#define GRF_SOC_CON1_GRF_SAI2_MCLK_OEN_MASK                (0x1U << GRF_SOC_CON1_GRF_SAI2_MCLK_OEN_SHIFT)               /* 0x00000004 */
#define GRF_SOC_CON1_GRF_SAI3_MCLK_OEN_SHIFT               (3U)
#define GRF_SOC_CON1_GRF_SAI3_MCLK_OEN_MASK                (0x1U << GRF_SOC_CON1_GRF_SAI3_MCLK_OEN_SHIFT)               /* 0x00000008 */
#define GRF_SOC_CON1_DSMC_SLAVE_ENABLE_SHIFT               (4U)
#define GRF_SOC_CON1_DSMC_SLAVE_ENABLE_MASK                (0x1U << GRF_SOC_CON1_DSMC_SLAVE_ENABLE_SHIFT)               /* 0x00000010 */
#define GRF_SOC_CON1_DSMC_SLAVE_RDYN_MODE_SHIFT            (5U)
#define GRF_SOC_CON1_DSMC_SLAVE_RDYN_MODE_MASK             (0x1U << GRF_SOC_CON1_DSMC_SLAVE_RDYN_MODE_SHIFT)            /* 0x00000020 */
/* SOC_CON2 */
#define GRF_SOC_CON2_OFFSET                                (0x8U)
#define GRF_SOC_CON2_GRF_VOP_DCLK_INV_SHIFT                (0U)
#define GRF_SOC_CON2_GRF_VOP_DCLK_INV_MASK                 (0x1U << GRF_SOC_CON2_GRF_VOP_DCLK_INV_SHIFT)                /* 0x00000001 */
#define GRF_SOC_CON2_GRF_VOP_DCLK_BYPASS_SHIFT             (1U)
#define GRF_SOC_CON2_GRF_VOP_DCLK_BYPASS_MASK              (0x1U << GRF_SOC_CON2_GRF_VOP_DCLK_BYPASS_SHIFT)             /* 0x00000002 */
#define GRF_SOC_CON2_GRF_VOP_DATA_BYPASS_SHIFT             (2U)
#define GRF_SOC_CON2_GRF_VOP_DATA_BYPASS_MASK              (0x1U << GRF_SOC_CON2_GRF_VOP_DATA_BYPASS_SHIFT)             /* 0x00000004 */
#define GRF_SOC_CON2_GRF_VOP_DDL_SEL_SHIFT                 (4U)
#define GRF_SOC_CON2_GRF_VOP_DDL_SEL_MASK                  (0x7FU << GRF_SOC_CON2_GRF_VOP_DDL_SEL_SHIFT)                /* 0x000007F0 */
/* SOC_CON3 */
#define GRF_SOC_CON3_OFFSET                                (0xCU)
#define GRF_SOC_CON3_UART3_CTS_INV_SHIFT                   (3U)
#define GRF_SOC_CON3_UART3_CTS_INV_MASK                    (0x1U << GRF_SOC_CON3_UART3_CTS_INV_SHIFT)                   /* 0x00000008 */
#define GRF_SOC_CON3_UART4_CTS_INV_SHIFT                   (4U)
#define GRF_SOC_CON3_UART4_CTS_INV_MASK                    (0x1U << GRF_SOC_CON3_UART4_CTS_INV_SHIFT)                   /* 0x00000010 */
#define GRF_SOC_CON3_UART5_CTS_INV_SHIFT                   (5U)
#define GRF_SOC_CON3_UART5_CTS_INV_MASK                    (0x1U << GRF_SOC_CON3_UART5_CTS_INV_SHIFT)                   /* 0x00000020 */
#define GRF_SOC_CON3_UART3_RTS_INV_SHIFT                   (11U)
#define GRF_SOC_CON3_UART3_RTS_INV_MASK                    (0x1U << GRF_SOC_CON3_UART3_RTS_INV_SHIFT)                   /* 0x00000800 */
#define GRF_SOC_CON3_UART4_RTS_INV_SHIFT                   (12U)
#define GRF_SOC_CON3_UART4_RTS_INV_MASK                    (0x1U << GRF_SOC_CON3_UART4_RTS_INV_SHIFT)                   /* 0x00001000 */
#define GRF_SOC_CON3_UART5_RTS_INV_SHIFT                   (13U)
#define GRF_SOC_CON3_UART5_RTS_INV_MASK                    (0x1U << GRF_SOC_CON3_UART5_RTS_INV_SHIFT)                   /* 0x00002000 */
/* SOC_CON4 */
#define GRF_SOC_CON4_OFFSET                                (0x10U)
#define GRF_SOC_CON4_TSADC_ANA_REG_SHIFT                   (0U)
#define GRF_SOC_CON4_TSADC_ANA_REG_MASK                    (0xFFU << GRF_SOC_CON4_TSADC_ANA_REG_SHIFT)                  /* 0x000000FF */
#define GRF_SOC_CON4_TSADC_TSEN_EN_SHIFT                   (8U)
#define GRF_SOC_CON4_TSADC_TSEN_EN_MASK                    (0x1U << GRF_SOC_CON4_TSADC_TSEN_EN_SHIFT)                   /* 0x00000100 */
#define GRF_SOC_CON4_TSADC_PHY_PD_SHIFT                    (9U)
#define GRF_SOC_CON4_TSADC_PHY_PD_MASK                     (0x1U << GRF_SOC_CON4_TSADC_PHY_PD_SHIFT)                    /* 0x00000200 */
#define GRF_SOC_CON4_TSADC_PHY_PD_SEL_SHIFT                (10U)
#define GRF_SOC_CON4_TSADC_PHY_PD_SEL_MASK                 (0x1U << GRF_SOC_CON4_TSADC_PHY_PD_SEL_SHIFT)                /* 0x00000400 */
/* SOC_CON5 */
#define GRF_SOC_CON5_OFFSET                                (0x14U)
#define GRF_SOC_CON5_GRF_DSI_DPISHUTDN_SHIFT               (0U)
#define GRF_SOC_CON5_GRF_DSI_DPISHUTDN_MASK                (0x1U << GRF_SOC_CON5_GRF_DSI_DPISHUTDN_SHIFT)               /* 0x00000001 */
#define GRF_SOC_CON5_GRF_DSI_DPICOLORM_SHIFT               (1U)
#define GRF_SOC_CON5_GRF_DSI_DPICOLORM_MASK                (0x1U << GRF_SOC_CON5_GRF_DSI_DPICOLORM_SHIFT)               /* 0x00000002 */
#define GRF_SOC_CON5_GRF_DSI_DPIUPDATACFG_SHIFT            (2U)
#define GRF_SOC_CON5_GRF_DSI_DPIUPDATACFG_MASK             (0x1U << GRF_SOC_CON5_GRF_DSI_DPIUPDATACFG_SHIFT)            /* 0x00000004 */
#define GRF_SOC_CON5_GRF_IO_MIPI_TE_SEL_SHIFT              (3U)
#define GRF_SOC_CON5_GRF_IO_MIPI_TE_SEL_MASK               (0x1U << GRF_SOC_CON5_GRF_IO_MIPI_TE_SEL_SHIFT)              /* 0x00000008 */
/* SOC_CON6 */
#define GRF_SOC_CON6_OFFSET                                (0x18U)
#define GRF_SOC_CON6_GRF_DSIPHY_FORCERXMODE_SHIFT          (0U)
#define GRF_SOC_CON6_GRF_DSIPHY_FORCERXMODE_MASK           (0x1U << GRF_SOC_CON6_GRF_DSIPHY_FORCERXMODE_SHIFT)          /* 0x00000001 */
#define GRF_SOC_CON6_GRF_DSIPHY_TURNDISABLE_SHIFT          (2U)
#define GRF_SOC_CON6_GRF_DSIPHY_TURNDISABLE_MASK           (0x1U << GRF_SOC_CON6_GRF_DSIPHY_TURNDISABLE_SHIFT)          /* 0x00000004 */
#define GRF_SOC_CON6_GRF_DSIPHY_LANE0_FRCTXSTOPM_SHIFT     (4U)
#define GRF_SOC_CON6_GRF_DSIPHY_LANE0_FRCTXSTOPM_MASK      (0x1U << GRF_SOC_CON6_GRF_DSIPHY_LANE0_FRCTXSTOPM_SHIFT)     /* 0x00000010 */
#define GRF_SOC_CON6_GRF_DSIPHY_LANE1_FRCTXSTOPM_SHIFT     (5U)
#define GRF_SOC_CON6_GRF_DSIPHY_LANE1_FRCTXSTOPM_MASK      (0x1U << GRF_SOC_CON6_GRF_DSIPHY_LANE1_FRCTXSTOPM_SHIFT)     /* 0x00000020 */
#define GRF_SOC_CON6_GRF_DSIPHY_LANE2_FRCTXSTOPM_SHIFT     (6U)
#define GRF_SOC_CON6_GRF_DSIPHY_LANE2_FRCTXSTOPM_MASK      (0x1U << GRF_SOC_CON6_GRF_DSIPHY_LANE2_FRCTXSTOPM_SHIFT)     /* 0x00000040 */
#define GRF_SOC_CON6_GRF_DSIPHY_LANE3_FRCTXSTOPM_SHIFT     (7U)
#define GRF_SOC_CON6_GRF_DSIPHY_LANE3_FRCTXSTOPM_MASK      (0x1U << GRF_SOC_CON6_GRF_DSIPHY_LANE3_FRCTXSTOPM_SHIFT)     /* 0x00000080 */
#define GRF_SOC_CON6_GRF_DSIPHY_PHYENABLE_0_SHIFT          (8U)
#define GRF_SOC_CON6_GRF_DSIPHY_PHYENABLE_0_MASK           (0x1U << GRF_SOC_CON6_GRF_DSIPHY_PHYENABLE_0_SHIFT)          /* 0x00000100 */
#define GRF_SOC_CON6_GRF_DSIPHY_PHYENABLE_1_SHIFT          (9U)
#define GRF_SOC_CON6_GRF_DSIPHY_PHYENABLE_1_MASK           (0x1U << GRF_SOC_CON6_GRF_DSIPHY_PHYENABLE_1_SHIFT)          /* 0x00000200 */
#define GRF_SOC_CON6_GRF_DSIPHY_TXSKEWCALHS_CK_SHIFT       (11U)
#define GRF_SOC_CON6_GRF_DSIPHY_TXSKEWCALHS_CK_MASK        (0x1U << GRF_SOC_CON6_GRF_DSIPHY_TXSKEWCALHS_CK_SHIFT)       /* 0x00000800 */
#define GRF_SOC_CON6_GRF_DSIPHY_TXSKEWCALHS_0_SHIFT        (12U)
#define GRF_SOC_CON6_GRF_DSIPHY_TXSKEWCALHS_0_MASK         (0x1U << GRF_SOC_CON6_GRF_DSIPHY_TXSKEWCALHS_0_SHIFT)        /* 0x00001000 */
#define GRF_SOC_CON6_GRF_DSIPHY_TXSKEWCALHS_1_SHIFT        (13U)
#define GRF_SOC_CON6_GRF_DSIPHY_TXSKEWCALHS_1_MASK         (0x1U << GRF_SOC_CON6_GRF_DSIPHY_TXSKEWCALHS_1_SHIFT)        /* 0x00002000 */
#define GRF_SOC_CON6_GRF_DSIPHY_TXSKEWCALHS_2_SHIFT        (14U)
#define GRF_SOC_CON6_GRF_DSIPHY_TXSKEWCALHS_2_MASK         (0x1U << GRF_SOC_CON6_GRF_DSIPHY_TXSKEWCALHS_2_SHIFT)        /* 0x00004000 */
#define GRF_SOC_CON6_GRF_DSIPHY_TXSKEWCALHS_3_SHIFT        (15U)
#define GRF_SOC_CON6_GRF_DSIPHY_TXSKEWCALHS_3_MASK         (0x1U << GRF_SOC_CON6_GRF_DSIPHY_TXSKEWCALHS_3_SHIFT)        /* 0x00008000 */
/* SOC_CON7 */
#define GRF_SOC_CON7_OFFSET                                (0x1CU)
#define GRF_SOC_CON7_OTG0_SCALEDOWN_MODE_SHIFT             (0U)
#define GRF_SOC_CON7_OTG0_SCALEDOWN_MODE_MASK              (0x3U << GRF_SOC_CON7_OTG0_SCALEDOWN_MODE_SHIFT)             /* 0x00000003 */
#define GRF_SOC_CON7_OTG0_DBNCE_FLTR_BYPASS_SHIFT          (2U)
#define GRF_SOC_CON7_OTG0_DBNCE_FLTR_BYPASS_MASK           (0x1U << GRF_SOC_CON7_OTG0_DBNCE_FLTR_BYPASS_SHIFT)          /* 0x00000004 */
#define GRF_SOC_CON7_OTG1_SCALEDOWN_MODE_SHIFT             (4U)
#define GRF_SOC_CON7_OTG1_SCALEDOWN_MODE_MASK              (0x3U << GRF_SOC_CON7_OTG1_SCALEDOWN_MODE_SHIFT)             /* 0x00000030 */
#define GRF_SOC_CON7_OTG1_DBNCE_FLTR_BYPASS_SHIFT          (6U)
#define GRF_SOC_CON7_OTG1_DBNCE_FLTR_BYPASS_MASK           (0x1U << GRF_SOC_CON7_OTG1_DBNCE_FLTR_BYPASS_SHIFT)          /* 0x00000040 */
/* SOC_CON8 */
#define GRF_SOC_CON8_OFFSET                                (0x20U)
#define GRF_SOC_CON8_MAC0_SBD_FLOWCTRL_SHIFT               (0U)
#define GRF_SOC_CON8_MAC0_SBD_FLOWCTRL_MASK                (0x1U << GRF_SOC_CON8_MAC0_SBD_FLOWCTRL_SHIFT)               /* 0x00000001 */
#define GRF_SOC_CON8_MAC0_RMII_MODE_SHIFT                  (1U)
#define GRF_SOC_CON8_MAC0_RMII_MODE_MASK                   (0x1U << GRF_SOC_CON8_MAC0_RMII_MODE_SHIFT)                  /* 0x00000002 */
#define GRF_SOC_CON8_MAC0_RMII_GATE_EN_SHIFT               (2U)
#define GRF_SOC_CON8_MAC0_RMII_GATE_EN_MASK                (0x1U << GRF_SOC_CON8_MAC0_RMII_GATE_EN_SHIFT)               /* 0x00000004 */
#define GRF_SOC_CON8_MAC0_RMII_TXCLK_SEL_SHIFT             (3U)
#define GRF_SOC_CON8_MAC0_RMII_TXCLK_SEL_MASK              (0x3U << GRF_SOC_CON8_MAC0_RMII_TXCLK_SEL_SHIFT)             /* 0x00000018 */
#define GRF_SOC_CON8_MAC0_EXTCLK_SEL_SHIFT                 (5U)
#define GRF_SOC_CON8_MAC0_EXTCLK_SEL_MASK                  (0x1U << GRF_SOC_CON8_MAC0_EXTCLK_SEL_SHIFT)                 /* 0x00000020 */
#define GRF_SOC_CON8_MAC0_MCG_PST_TRIG_SEL_SHIFT           (6U)
#define GRF_SOC_CON8_MAC0_MCG_PST_TRIG_SEL_MASK            (0x1U << GRF_SOC_CON8_MAC0_MCG_PST_TRIG_SEL_SHIFT)           /* 0x00000040 */
#define GRF_SOC_CON8_MAC0_MCG_PST_TRIG_SHIFT               (7U)
#define GRF_SOC_CON8_MAC0_MCG_PST_TRIG_MASK                (0x1U << GRF_SOC_CON8_MAC0_MCG_PST_TRIG_SHIFT)               /* 0x00000080 */
#define GRF_SOC_CON8_MAC0_PTP_AUX_TS_TRIG_SHIFT            (8U)
#define GRF_SOC_CON8_MAC0_PTP_AUX_TS_TRIG_MASK             (0x1U << GRF_SOC_CON8_MAC0_PTP_AUX_TS_TRIG_SHIFT)            /* 0x00000100 */
/* SOC_CON9 */
#define GRF_SOC_CON9_OFFSET                                (0x24U)
#define GRF_SOC_CON9_SARADC_ANA_REG_SHIFT                  (0U)
#define GRF_SOC_CON9_SARADC_ANA_REG_MASK                   (0xFFFFU << GRF_SOC_CON9_SARADC_ANA_REG_SHIFT)               /* 0x0000FFFF */
/* SOC_CON10 */
#define GRF_SOC_CON10_OFFSET                               (0x28U)
#define GRF_SOC_CON10_WDT0_PAUSE_EN_SHIFT                  (0U)
#define GRF_SOC_CON10_WDT0_PAUSE_EN_MASK                   (0x1U << GRF_SOC_CON10_WDT0_PAUSE_EN_SHIFT)                  /* 0x00000001 */
#define GRF_SOC_CON10_WDT0_SPEEDUP_SHIFT                   (1U)
#define GRF_SOC_CON10_WDT0_SPEEDUP_MASK                    (0x1U << GRF_SOC_CON10_WDT0_SPEEDUP_SHIFT)                   /* 0x00000002 */
#define GRF_SOC_CON10_WDT1_PAUSE_EN_SHIFT                  (2U)
#define GRF_SOC_CON10_WDT1_PAUSE_EN_MASK                   (0x1U << GRF_SOC_CON10_WDT1_PAUSE_EN_SHIFT)                  /* 0x00000004 */
#define GRF_SOC_CON10_WDT1_SPEEDUP_SHIFT                   (3U)
#define GRF_SOC_CON10_WDT1_SPEEDUP_MASK                    (0x1U << GRF_SOC_CON10_WDT1_SPEEDUP_SHIFT)                   /* 0x00000008 */
#define GRF_SOC_CON10_GRF_CON_WDT0_RESET_TO_IO_EN_SHIFT    (8U)
#define GRF_SOC_CON10_GRF_CON_WDT0_RESET_TO_IO_EN_MASK     (0x1U << GRF_SOC_CON10_GRF_CON_WDT0_RESET_TO_IO_EN_SHIFT)    /* 0x00000100 */
#define GRF_SOC_CON10_GRF_CON_WDT1_RESET_TO_IO_EN_SHIFT    (9U)
#define GRF_SOC_CON10_GRF_CON_WDT1_RESET_TO_IO_EN_MASK     (0x1U << GRF_SOC_CON10_GRF_CON_WDT1_RESET_TO_IO_EN_SHIFT)    /* 0x00000200 */
/* SOC_CON11 */
#define GRF_SOC_CON11_OFFSET                               (0x2CU)
#define GRF_SOC_CON11_MAC1_SBD_FLOWCTRL_SHIFT              (0U)
#define GRF_SOC_CON11_MAC1_SBD_FLOWCTRL_MASK               (0x1U << GRF_SOC_CON11_MAC1_SBD_FLOWCTRL_SHIFT)              /* 0x00000001 */
#define GRF_SOC_CON11_MAC1_RMII_MODE_SHIFT                 (1U)
#define GRF_SOC_CON11_MAC1_RMII_MODE_MASK                  (0x1U << GRF_SOC_CON11_MAC1_RMII_MODE_SHIFT)                 /* 0x00000002 */
#define GRF_SOC_CON11_MAC1_RMII_GATE_EN_SHIFT              (2U)
#define GRF_SOC_CON11_MAC1_RMII_GATE_EN_MASK               (0x1U << GRF_SOC_CON11_MAC1_RMII_GATE_EN_SHIFT)              /* 0x00000004 */
#define GRF_SOC_CON11_MAC1_RMII_TXCLK_SEL_SHIFT            (3U)
#define GRF_SOC_CON11_MAC1_RMII_TXCLK_SEL_MASK             (0x3U << GRF_SOC_CON11_MAC1_RMII_TXCLK_SEL_SHIFT)            /* 0x00000018 */
#define GRF_SOC_CON11_MAC1_EXTCLK_SEL_SHIFT                (5U)
#define GRF_SOC_CON11_MAC1_EXTCLK_SEL_MASK                 (0x1U << GRF_SOC_CON11_MAC1_EXTCLK_SEL_SHIFT)                /* 0x00000020 */
#define GRF_SOC_CON11_MAC1_MCG_PST_TRIG_SEL_SHIFT          (6U)
#define GRF_SOC_CON11_MAC1_MCG_PST_TRIG_SEL_MASK           (0x1U << GRF_SOC_CON11_MAC1_MCG_PST_TRIG_SEL_SHIFT)          /* 0x00000040 */
#define GRF_SOC_CON11_MAC1_MCG_PST_TRIG_SHIFT              (7U)
#define GRF_SOC_CON11_MAC1_MCG_PST_TRIG_MASK               (0x1U << GRF_SOC_CON11_MAC1_MCG_PST_TRIG_SHIFT)              /* 0x00000080 */
#define GRF_SOC_CON11_MAC1_PTP_AUX_TS_TRIG_SHIFT           (8U)
#define GRF_SOC_CON11_MAC1_PTP_AUX_TS_TRIG_MASK            (0x1U << GRF_SOC_CON11_MAC1_PTP_AUX_TS_TRIG_SHIFT)           /* 0x00000100 */
/* SOC_CON13 */
#define GRF_SOC_CON13_OFFSET                               (0x34U)
#define GRF_SOC_CON13_GPIO1_1_INTR_MCU_SEL_SHIFT           (0U)
#define GRF_SOC_CON13_GPIO1_1_INTR_MCU_SEL_MASK            (0x1U << GRF_SOC_CON13_GPIO1_1_INTR_MCU_SEL_SHIFT)           /* 0x00000001 */
#define GRF_SOC_CON13_GPIO1_2_INTR_MCU_SEL_SHIFT           (1U)
#define GRF_SOC_CON13_GPIO1_2_INTR_MCU_SEL_MASK            (0x1U << GRF_SOC_CON13_GPIO1_2_INTR_MCU_SEL_SHIFT)           /* 0x00000002 */
#define GRF_SOC_CON13_GPIO1_3_INTR_MCU_SEL_SHIFT           (2U)
#define GRF_SOC_CON13_GPIO1_3_INTR_MCU_SEL_MASK            (0x1U << GRF_SOC_CON13_GPIO1_3_INTR_MCU_SEL_SHIFT)           /* 0x00000004 */
#define GRF_SOC_CON13_GPIO1_1_INTR_INTMUX_SEL_SHIFT        (3U)
#define GRF_SOC_CON13_GPIO1_1_INTR_INTMUX_SEL_MASK         (0x1U << GRF_SOC_CON13_GPIO1_1_INTR_INTMUX_SEL_SHIFT)        /* 0x00000008 */
#define GRF_SOC_CON13_GPIO1_2_INTR_INTMUX_SEL_SHIFT        (4U)
#define GRF_SOC_CON13_GPIO1_2_INTR_INTMUX_SEL_MASK         (0x1U << GRF_SOC_CON13_GPIO1_2_INTR_INTMUX_SEL_SHIFT)        /* 0x00000010 */
#define GRF_SOC_CON13_GPIO1_3_INTR_INTMUX_SEL_SHIFT        (5U)
#define GRF_SOC_CON13_GPIO1_3_INTR_INTMUX_SEL_MASK         (0x1U << GRF_SOC_CON13_GPIO1_3_INTR_INTMUX_SEL_SHIFT)        /* 0x00000020 */
#define GRF_SOC_CON13_TIMER1CH5_DSMC_INTR_MCU_SEL_SHIFT    (6U)
#define GRF_SOC_CON13_TIMER1CH5_DSMC_INTR_MCU_SEL_MASK     (0x1U << GRF_SOC_CON13_TIMER1CH5_DSMC_INTR_MCU_SEL_SHIFT)    /* 0x00000040 */
#define GRF_SOC_CON13_TIMER1CH5_DSMC_INTR_INTMUX_SEL_SHIFT (7U)
#define GRF_SOC_CON13_TIMER1CH5_DSMC_INTR_INTMUX_SEL_MASK  (0x1U << GRF_SOC_CON13_TIMER1CH5_DSMC_INTR_INTMUX_SEL_SHIFT) /* 0x00000080 */
/* SOC_CON14 */
#define GRF_SOC_CON14_OFFSET                               (0x38U)
#define GRF_SOC_CON14_MCU_TO_CORE_STALL_SHIFT              (0U)
#define GRF_SOC_CON14_MCU_TO_CORE_STALL_MASK               (0x1U << GRF_SOC_CON14_MCU_TO_CORE_STALL_SHIFT)              /* 0x00000001 */
#define GRF_SOC_CON14_BUS_TO_DDR_STALL_SHIFT               (1U)
#define GRF_SOC_CON14_BUS_TO_DDR_STALL_MASK                (0x1U << GRF_SOC_CON14_BUS_TO_DDR_STALL_SHIFT)               /* 0x00000002 */
#define GRF_SOC_CON14_BUS_TO_HSPERI_STALL_SHIFT            (2U)
#define GRF_SOC_CON14_BUS_TO_HSPERI_STALL_MASK             (0x1U << GRF_SOC_CON14_BUS_TO_HSPERI_STALL_SHIFT)            /* 0x00000004 */
#define GRF_SOC_CON14_BUS_TO_LSPERI_STALL_SHIFT            (3U)
#define GRF_SOC_CON14_BUS_TO_LSPERI_STALL_MASK             (0x1U << GRF_SOC_CON14_BUS_TO_LSPERI_STALL_SHIFT)            /* 0x00000008 */
#define GRF_SOC_CON14_BUS_TO_VIO_STALL_SHIFT               (4U)
#define GRF_SOC_CON14_BUS_TO_VIO_STALL_MASK                (0x1U << GRF_SOC_CON14_BUS_TO_VIO_STALL_SHIFT)               /* 0x00000010 */
#define GRF_SOC_CON14_VIO_TO_DDR_STALL_SHIFT               (6U)
#define GRF_SOC_CON14_VIO_TO_DDR_STALL_MASK                (0x1U << GRF_SOC_CON14_VIO_TO_DDR_STALL_SHIFT)               /* 0x00000040 */
#define GRF_SOC_CON14_HSPERI_TO_BUS_STALL_SHIFT            (7U)
#define GRF_SOC_CON14_HSPERI_TO_BUS_STALL_MASK             (0x1U << GRF_SOC_CON14_HSPERI_TO_BUS_STALL_SHIFT)            /* 0x00000080 */
#define GRF_SOC_CON14_CORE_TO_BUS_STALL_SHIFT              (8U)
#define GRF_SOC_CON14_CORE_TO_BUS_STALL_MASK               (0x1U << GRF_SOC_CON14_CORE_TO_BUS_STALL_SHIFT)              /* 0x00000100 */
#define GRF_SOC_CON14_CORE_TO_DDR_STALL_SHIFT              (9U)
#define GRF_SOC_CON14_CORE_TO_DDR_STALL_MASK               (0x1U << GRF_SOC_CON14_CORE_TO_DDR_STALL_SHIFT)              /* 0x00000200 */
#define GRF_SOC_CON14_CORE_TO_COREP_STALL_SHIFT            (10U)
#define GRF_SOC_CON14_CORE_TO_COREP_STALL_MASK             (0x1U << GRF_SOC_CON14_CORE_TO_COREP_STALL_SHIFT)            /* 0x00000400 */
#define GRF_SOC_CON14_COREP_TO_CORE_STALL_SHIFT            (11U)
#define GRF_SOC_CON14_COREP_TO_CORE_STALL_MASK             (0x1U << GRF_SOC_CON14_COREP_TO_CORE_STALL_SHIFT)            /* 0x00000800 */
#define GRF_SOC_CON14_DDR_PROBE_SUSPEND_SHIFT              (12U)
#define GRF_SOC_CON14_DDR_PROBE_SUSPEND_MASK               (0x1U << GRF_SOC_CON14_DDR_PROBE_SUSPEND_SHIFT)              /* 0x00001000 */
/* SOC_CON15 */
#define GRF_SOC_CON15_OFFSET                               (0x3CU)
#define GRF_SOC_CON15_GRF_CON_DDRC_LPR_FULL2CRITICAL_SHIFT (3U)
#define GRF_SOC_CON15_GRF_CON_DDRC_LPR_FULL2CRITICAL_MASK  (0x1U << GRF_SOC_CON15_GRF_CON_DDRC_LPR_FULL2CRITICAL_SHIFT) /* 0x00000008 */
#define GRF_SOC_CON15_GRF_CON_DDRC_HPR_FULL2CRITICAL_SHIFT (4U)
#define GRF_SOC_CON15_GRF_CON_DDRC_HPR_FULL2CRITICAL_MASK  (0x1U << GRF_SOC_CON15_GRF_CON_DDRC_HPR_FULL2CRITICAL_SHIFT) /* 0x00000010 */
#define GRF_SOC_CON15_GRF_CON_DDRC_WR_FULL2CRITICAL_SHIFT  (5U)
#define GRF_SOC_CON15_GRF_CON_DDRC_WR_FULL2CRITICAL_MASK   (0x1U << GRF_SOC_CON15_GRF_CON_DDRC_WR_FULL2CRITICAL_SHIFT)  /* 0x00000020 */
#define GRF_SOC_CON15_GRF_CON_DDRC_RRBTOKEN_EMPTY2CRITICAL_SHIFT (6U)
#define GRF_SOC_CON15_GRF_CON_DDRC_RRBTOKEN_EMPTY2CRITICAL_MASK (0x1U << GRF_SOC_CON15_GRF_CON_DDRC_RRBTOKEN_EMPTY2CRITICAL_SHIFT) /* 0x00000040 */
#define GRF_SOC_CON15_GRF_CON_DDRC_HPR_ENTRY_NUM_SHIFT     (7U)
#define GRF_SOC_CON15_GRF_CON_DDRC_HPR_ENTRY_NUM_MASK      (0x3FU << GRF_SOC_CON15_GRF_CON_DDRC_HPR_ENTRY_NUM_SHIFT)    /* 0x00001F80 */
#define GRF_SOC_CON15_GRF_CON_DDRC_WR_MASK_BY_HPR_SHIFT    (13U)
#define GRF_SOC_CON15_GRF_CON_DDRC_WR_MASK_BY_HPR_MASK     (0x1U << GRF_SOC_CON15_GRF_CON_DDRC_WR_MASK_BY_HPR_SHIFT)    /* 0x00002000 */
/* SOC_CON16 */
#define GRF_SOC_CON16_OFFSET                               (0x40U)
#define GRF_SOC_CON16_GRF_CON_UPCTL2_SCRAMBLE_GATE_DIS_SHIFT (0U)
#define GRF_SOC_CON16_GRF_CON_UPCTL2_SCRAMBLE_GATE_DIS_MASK (0x1U << GRF_SOC_CON16_GRF_CON_UPCTL2_SCRAMBLE_GATE_DIS_SHIFT) /* 0x00000001 */
#define GRF_SOC_CON16_GRF_CON_DDRCTL_AXI0_CG_EN_SHIFT      (1U)
#define GRF_SOC_CON16_GRF_CON_DDRCTL_AXI0_CG_EN_MASK       (0x1U << GRF_SOC_CON16_GRF_CON_DDRCTL_AXI0_CG_EN_SHIFT)      /* 0x00000002 */
#define GRF_SOC_CON16_GRF_CON_DDRCTL_AXI1_CG_EN_SHIFT      (2U)
#define GRF_SOC_CON16_GRF_CON_DDRCTL_AXI1_CG_EN_MASK       (0x1U << GRF_SOC_CON16_GRF_CON_DDRCTL_AXI1_CG_EN_SHIFT)      /* 0x00000004 */
#define GRF_SOC_CON16_GRF_CON_DDRCTL_APB_CG_EN0_SHIFT      (3U)
#define GRF_SOC_CON16_GRF_CON_DDRCTL_APB_CG_EN0_MASK       (0x1U << GRF_SOC_CON16_GRF_CON_DDRCTL_APB_CG_EN0_SHIFT)      /* 0x00000008 */
#define GRF_SOC_CON16_GRF_CON_DDRCTL_APB_CG_EN1_SHIFT      (4U)
#define GRF_SOC_CON16_GRF_CON_DDRCTL_APB_CG_EN1_MASK       (0x1U << GRF_SOC_CON16_GRF_CON_DDRCTL_APB_CG_EN1_SHIFT)      /* 0x00000010 */
#define GRF_SOC_CON16_GRF_CON_DDRCTL_CORE_CG_EN_SHIFT      (5U)
#define GRF_SOC_CON16_GRF_CON_DDRCTL_CORE_CG_EN_MASK       (0x1U << GRF_SOC_CON16_GRF_CON_DDRCTL_CORE_CG_EN_SHIFT)      /* 0x00000020 */
#define GRF_SOC_CON16_GRF_CON_DDRCTL_SYSCREQ_CG_EN_SHIFT   (6U)
#define GRF_SOC_CON16_GRF_CON_DDRCTL_SYSCREQ_CG_EN_MASK    (0x1U << GRF_SOC_CON16_GRF_CON_DDRCTL_SYSCREQ_CG_EN_SHIFT)   /* 0x00000040 */
#define GRF_SOC_CON16_GRF_CON_DDRC_AUTO_SR_DLY_SHIFT       (8U)
#define GRF_SOC_CON16_GRF_CON_DDRC_AUTO_SR_DLY_MASK        (0xFU << GRF_SOC_CON16_GRF_CON_DDRC_AUTO_SR_DLY_SHIFT)       /* 0x00000F00 */
#define GRF_SOC_CON16_GRF_CON_SELFREF_TYPE2_EN_SHIFT       (12U)
#define GRF_SOC_CON16_GRF_CON_SELFREF_TYPE2_EN_MASK        (0x1U << GRF_SOC_CON16_GRF_CON_SELFREF_TYPE2_EN_SHIFT)       /* 0x00001000 */
/* SOC_CON17 */
#define GRF_SOC_CON17_OFFSET                               (0x44U)
#define GRF_SOC_CON17_GRF_CON_PA_RMASK_SHIFT               (0U)
#define GRF_SOC_CON17_GRF_CON_PA_RMASK_MASK                (0xFU << GRF_SOC_CON17_GRF_CON_PA_RMASK_SHIFT)               /* 0x0000000F */
#define GRF_SOC_CON17_GRF_CON_PA_WMASK_SHIFT               (4U)
#define GRF_SOC_CON17_GRF_CON_PA_WMASK_MASK                (0x3U << GRF_SOC_CON17_GRF_CON_PA_WMASK_SHIFT)               /* 0x00000030 */
#define GRF_SOC_CON17_GRF_CON_ARURGENT_SHIFT               (6U)
#define GRF_SOC_CON17_GRF_CON_ARURGENT_MASK                (0x3U << GRF_SOC_CON17_GRF_CON_ARURGENT_SHIFT)               /* 0x000000C0 */
#define GRF_SOC_CON17_GRF_CON_ARPOISON_SHIFT               (8U)
#define GRF_SOC_CON17_GRF_CON_ARPOISON_MASK                (0x3U << GRF_SOC_CON17_GRF_CON_ARPOISON_SHIFT)               /* 0x00000300 */
#define GRF_SOC_CON17_GRF_CON_AWURGENT_SHIFT               (10U)
#define GRF_SOC_CON17_GRF_CON_AWURGENT_MASK                (0x3U << GRF_SOC_CON17_GRF_CON_AWURGENT_SHIFT)               /* 0x00000C00 */
#define GRF_SOC_CON17_GRF_CON_AWPOISON_SHIFT               (12U)
#define GRF_SOC_CON17_GRF_CON_AWPOISON_MASK                (0x3U << GRF_SOC_CON17_GRF_CON_AWPOISON_SHIFT)               /* 0x00003000 */
#define GRF_SOC_CON17_GRF_CON_ARAUTOPRE_SHIFT              (14U)
#define GRF_SOC_CON17_GRF_CON_ARAUTOPRE_MASK               (0x3U << GRF_SOC_CON17_GRF_CON_ARAUTOPRE_SHIFT)              /* 0x0000C000 */
/* SOC_CON18 */
#define GRF_SOC_CON18_OFFSET                               (0x48U)
#define GRF_SOC_CON18_GRF_CON_AWAUTOPRE_SHIFT              (0U)
#define GRF_SOC_CON18_GRF_CON_AWAUTOPRE_MASK               (0x3U << GRF_SOC_CON18_GRF_CON_AWAUTOPRE_SHIFT)              /* 0x00000003 */
#define GRF_SOC_CON18_GRF_CON_DDRC_PRESS_EN_SHIFT          (2U)
#define GRF_SOC_CON18_GRF_CON_DDRC_PRESS_EN_MASK           (0x3U << GRF_SOC_CON18_GRF_CON_DDRC_PRESS_EN_SHIFT)          /* 0x0000000C */
#define GRF_SOC_CON18_GRF_CON_DDRC_PRESS_CG_EN_SHIFT       (4U)
#define GRF_SOC_CON18_GRF_CON_DDRC_PRESS_CG_EN_MASK        (0x3U << GRF_SOC_CON18_GRF_CON_DDRC_PRESS_CG_EN_SHIFT)       /* 0x00000030 */
#define GRF_SOC_CON18_GRF_CON_DDRC_PRESS_RDWR_ORDER_SHIFT  (6U)
#define GRF_SOC_CON18_GRF_CON_DDRC_PRESS_RDWR_ORDER_MASK   (0x3U << GRF_SOC_CON18_GRF_CON_DDRC_PRESS_RDWR_ORDER_SHIFT)  /* 0x000000C0 */
#define GRF_SOC_CON18_GRF_CON_DDRC_PRESS_POLICY_SHIFT      (8U)
#define GRF_SOC_CON18_GRF_CON_DDRC_PRESS_POLICY_MASK       (0x3U << GRF_SOC_CON18_GRF_CON_DDRC_PRESS_POLICY_SHIFT)      /* 0x00000300 */
#define GRF_SOC_CON18_GRF_CON_DDRC_PRESS_QUEUE_WAIT_LIMIT_SHIFT (10U)
#define GRF_SOC_CON18_GRF_CON_DDRC_PRESS_QUEUE_WAIT_LIMIT_MASK (0x1FU << GRF_SOC_CON18_GRF_CON_DDRC_PRESS_QUEUE_WAIT_LIMIT_SHIFT) /* 0x00007C00 */
/* SOC_CON19 */
#define GRF_SOC_CON19_OFFSET                               (0x4CU)
#define GRF_SOC_CON19_GRF_CON_UPCTL_SLVERR_ENABLE_SHIFT    (0U)
#define GRF_SOC_CON19_GRF_CON_UPCTL_SLVERR_ENABLE_MASK     (0x1U << GRF_SOC_CON19_GRF_CON_UPCTL_SLVERR_ENABLE_SHIFT)    /* 0x00000001 */
#define GRF_SOC_CON19_GRF_CON_DFI_INIT_START_SEL_SHIFT     (1U)
#define GRF_SOC_CON19_GRF_CON_DFI_INIT_START_SEL_MASK      (0x1U << GRF_SOC_CON19_GRF_CON_DFI_INIT_START_SEL_SHIFT)     /* 0x00000002 */
#define GRF_SOC_CON19_GRF_CON_DFI_INIT_START_SHIFT         (2U)
#define GRF_SOC_CON19_GRF_CON_DFI_INIT_START_MASK          (0x1U << GRF_SOC_CON19_GRF_CON_DFI_INIT_START_SHIFT)         /* 0x00000004 */
#define GRF_SOC_CON19_GRF_CON_DFI_INIT_COMPLETE_SEL_SHIFT  (3U)
#define GRF_SOC_CON19_GRF_CON_DFI_INIT_COMPLETE_SEL_MASK   (0x1U << GRF_SOC_CON19_GRF_CON_DFI_INIT_COMPLETE_SEL_SHIFT)  /* 0x00000008 */
#define GRF_SOC_CON19_GRF_CON_DFI_INIT_COMPLETE_SHIFT      (4U)
#define GRF_SOC_CON19_GRF_CON_DFI_INIT_COMPLETE_MASK       (0x1U << GRF_SOC_CON19_GRF_CON_DFI_INIT_COMPLETE_SHIFT)      /* 0x00000010 */
#define GRF_SOC_CON19_GRF_CON_CSYSREQ_DDRC_PMU_SHIFT       (6U)
#define GRF_SOC_CON19_GRF_CON_CSYSREQ_DDRC_PMU_MASK        (0x1U << GRF_SOC_CON19_GRF_CON_CSYSREQ_DDRC_PMU_SHIFT)       /* 0x00000040 */
#define GRF_SOC_CON19_GRF_CON_CSYSREQ_DDRC_DDRLPC_SHIFT    (7U)
#define GRF_SOC_CON19_GRF_CON_CSYSREQ_DDRC_DDRLPC_MASK     (0x1U << GRF_SOC_CON19_GRF_CON_CSYSREQ_DDRC_DDRLPC_SHIFT)    /* 0x00000080 */
#define GRF_SOC_CON19_GRF_CON_CSYSREQ_AXI_PMU_SHIFT        (8U)
#define GRF_SOC_CON19_GRF_CON_CSYSREQ_AXI_PMU_MASK         (0x1U << GRF_SOC_CON19_GRF_CON_CSYSREQ_AXI_PMU_SHIFT)        /* 0x00000100 */
#define GRF_SOC_CON19_GRF_CON_CSYSREQ_AXI_DDRLPC_SHIFT     (9U)
#define GRF_SOC_CON19_GRF_CON_CSYSREQ_AXI_DDRLPC_MASK      (0x1U << GRF_SOC_CON19_GRF_CON_CSYSREQ_AXI_DDRLPC_SHIFT)     /* 0x00000200 */
#define GRF_SOC_CON19_GRF_CON_DDRC_ARQOS_URGENT_EN_SHIFT   (10U)
#define GRF_SOC_CON19_GRF_CON_DDRC_ARQOS_URGENT_EN_MASK    (0x3U << GRF_SOC_CON19_GRF_CON_DDRC_ARQOS_URGENT_EN_SHIFT)   /* 0x00000C00 */
#define GRF_SOC_CON19_GRF_CON_DDRC_AWQOS_URGENT_EN_SHIFT   (12U)
#define GRF_SOC_CON19_GRF_CON_DDRC_AWQOS_URGENT_EN_MASK    (0x3U << GRF_SOC_CON19_GRF_CON_DDRC_AWQOS_URGENT_EN_SHIFT)   /* 0x00003000 */
/* SOC_CON20 */
#define GRF_SOC_CON20_OFFSET                               (0x50U)
#define GRF_SOC_CON20_GRF_CON_PRESS_AR_TH_SHIFT            (0U)
#define GRF_SOC_CON20_GRF_CON_PRESS_AR_TH_MASK             (0xFFU << GRF_SOC_CON20_GRF_CON_PRESS_AR_TH_SHIFT)           /* 0x000000FF */
#define GRF_SOC_CON20_GRF_CON_PRESS_AW_TH_SHIFT            (8U)
#define GRF_SOC_CON20_GRF_CON_PRESS_AW_TH_MASK             (0xFFU << GRF_SOC_CON20_GRF_CON_PRESS_AW_TH_SHIFT)           /* 0x0000FF00 */
/* SOC_CON21 */
#define GRF_SOC_CON21_OFFSET                               (0x54U)
#define GRF_SOC_CON21_MEM_CFG_UHDSPRA_SHIFT                (0U)
#define GRF_SOC_CON21_MEM_CFG_UHDSPRA_MASK                 (0xFFFU << GRF_SOC_CON21_MEM_CFG_UHDSPRA_SHIFT)              /* 0x00000FFF */
/* SOC_CON22 */
#define GRF_SOC_CON22_OFFSET                               (0x58U)
#define GRF_SOC_CON22_MEM_CFG_UHDDPRA_SHIFT                (0U)
#define GRF_SOC_CON22_MEM_CFG_UHDDPRA_MASK                 (0x3FU << GRF_SOC_CON22_MEM_CFG_UHDDPRA_SHIFT)               /* 0x0000003F */
/* SOC_CON23 */
#define GRF_SOC_CON23_OFFSET                               (0x5CU)
#define GRF_SOC_CON23_MEM_CFG_ROM_SHIFT                    (0U)
#define GRF_SOC_CON23_MEM_CFG_ROM_MASK                     (0xFFFU << GRF_SOC_CON23_MEM_CFG_ROM_SHIFT)                  /* 0x00000FFF */
/* SOC_CON24 */
#define GRF_SOC_CON24_OFFSET                               (0x60U)
#define GRF_SOC_CON24_USBOTG0_SW_EN_SHIFT                  (0U)
#define GRF_SOC_CON24_USBOTG0_SW_EN_MASK                   (0x1U << GRF_SOC_CON24_USBOTG0_SW_EN_SHIFT)                  /* 0x00000001 */
#define GRF_SOC_CON24_USBOTG0_UTMI_SUSPEND_N_SHIFT         (1U)
#define GRF_SOC_CON24_USBOTG0_UTMI_SUSPEND_N_MASK          (0x1U << GRF_SOC_CON24_USBOTG0_UTMI_SUSPEND_N_SHIFT)         /* 0x00000002 */
#define GRF_SOC_CON24_USBOTG0_UTMI_OPMODE_SHIFT            (2U)
#define GRF_SOC_CON24_USBOTG0_UTMI_OPMODE_MASK             (0x3U << GRF_SOC_CON24_USBOTG0_UTMI_OPMODE_SHIFT)            /* 0x0000000C */
#define GRF_SOC_CON24_USBOTG0_UTMI_XCVRSELECT_SHIFT        (4U)
#define GRF_SOC_CON24_USBOTG0_UTMI_XCVRSELECT_MASK         (0x3U << GRF_SOC_CON24_USBOTG0_UTMI_XCVRSELECT_SHIFT)        /* 0x00000030 */
#define GRF_SOC_CON24_USBOTG0_UTMI_TERMSELECT_SHIFT        (6U)
#define GRF_SOC_CON24_USBOTG0_UTMI_TERMSELECT_MASK         (0x1U << GRF_SOC_CON24_USBOTG0_UTMI_TERMSELECT_SHIFT)        /* 0x00000040 */
#define GRF_SOC_CON24_USBOTG0_UTMI_DPPULLDOWN_SHIFT        (7U)
#define GRF_SOC_CON24_USBOTG0_UTMI_DPPULLDOWN_MASK         (0x1U << GRF_SOC_CON24_USBOTG0_UTMI_DPPULLDOWN_SHIFT)        /* 0x00000080 */
#define GRF_SOC_CON24_USBOTG0_UTMI_DMPULLDOWN_SHIFT        (8U)
#define GRF_SOC_CON24_USBOTG0_UTMI_DMPULLDOWN_MASK         (0x1U << GRF_SOC_CON24_USBOTG0_UTMI_DMPULLDOWN_SHIFT)        /* 0x00000100 */
#define GRF_SOC_CON24_USBOTG0_UTMI_IDDIG_SEL_SHIFT         (9U)
#define GRF_SOC_CON24_USBOTG0_UTMI_IDDIG_SEL_MASK          (0x1U << GRF_SOC_CON24_USBOTG0_UTMI_IDDIG_SEL_SHIFT)         /* 0x00000200 */
#define GRF_SOC_CON24_USBOTG0_UTMI_IDDIG_SHIFT             (10U)
#define GRF_SOC_CON24_USBOTG0_UTMI_IDDIG_MASK              (0x1U << GRF_SOC_CON24_USBOTG0_UTMI_IDDIG_SHIFT)             /* 0x00000400 */
#define GRF_SOC_CON24_USBOTG0_UTMI_IDPULLUP_SHIFT          (11U)
#define GRF_SOC_CON24_USBOTG0_UTMI_IDPULLUP_MASK           (0x1U << GRF_SOC_CON24_USBOTG0_UTMI_IDPULLUP_SHIFT)          /* 0x00000800 */
#define GRF_SOC_CON24_USBOTG0_UTMI_BVALID_SEL_SHIFT        (14U)
#define GRF_SOC_CON24_USBOTG0_UTMI_BVALID_SEL_MASK         (0x1U << GRF_SOC_CON24_USBOTG0_UTMI_BVALID_SEL_SHIFT)        /* 0x00004000 */
#define GRF_SOC_CON24_USBOTG0_UTMI_BVALID_SHIFT            (15U)
#define GRF_SOC_CON24_USBOTG0_UTMI_BVALID_MASK             (0x1U << GRF_SOC_CON24_USBOTG0_UTMI_BVALID_SHIFT)            /* 0x00008000 */
/* SOC_CON25 */
#define GRF_SOC_CON25_OFFSET                               (0x64U)
#define GRF_SOC_CON25_USBOTG0_UTMI_SESSEND_SEL_SHIFT       (0U)
#define GRF_SOC_CON25_USBOTG0_UTMI_SESSEND_SEL_MASK        (0x1U << GRF_SOC_CON25_USBOTG0_UTMI_SESSEND_SEL_SHIFT)       /* 0x00000001 */
#define GRF_SOC_CON25_USBOTG0_UTMI_SESSEND_SHIFT           (1U)
#define GRF_SOC_CON25_USBOTG0_UTMI_SESSEND_MASK            (0x1U << GRF_SOC_CON25_USBOTG0_UTMI_SESSEND_SHIFT)           /* 0x00000002 */
#define GRF_SOC_CON25_USBOTG0_UTMI_AVALID_SEL_SHIFT        (2U)
#define GRF_SOC_CON25_USBOTG0_UTMI_AVALID_SEL_MASK         (0x1U << GRF_SOC_CON25_USBOTG0_UTMI_AVALID_SEL_SHIFT)        /* 0x00000004 */
#define GRF_SOC_CON25_USBOTG0_UTMI_AVALID_SHIFT            (3U)
#define GRF_SOC_CON25_USBOTG0_UTMI_AVALID_MASK             (0x1U << GRF_SOC_CON25_USBOTG0_UTMI_AVALID_SHIFT)            /* 0x00000008 */
#define GRF_SOC_CON25_USBOTG0_UTMI_FS_XVER_OWN_SHIFT       (6U)
#define GRF_SOC_CON25_USBOTG0_UTMI_FS_XVER_OWN_MASK        (0x1U << GRF_SOC_CON25_USBOTG0_UTMI_FS_XVER_OWN_SHIFT)       /* 0x00000040 */
#define GRF_SOC_CON25_USBOTG0_UTMI_FS_OE_SHIFT             (7U)
#define GRF_SOC_CON25_USBOTG0_UTMI_FS_OE_MASK              (0x1U << GRF_SOC_CON25_USBOTG0_UTMI_FS_OE_SHIFT)             /* 0x00000080 */
#define GRF_SOC_CON25_USBOTG0_UTMI_FS_DATA_SHIFT           (8U)
#define GRF_SOC_CON25_USBOTG0_UTMI_FS_DATA_MASK            (0x1U << GRF_SOC_CON25_USBOTG0_UTMI_FS_DATA_SHIFT)           /* 0x00000100 */
#define GRF_SOC_CON25_USBOTG0_UTMI_FS_SE0_SHIFT            (9U)
#define GRF_SOC_CON25_USBOTG0_UTMI_FS_SE0_MASK             (0x1U << GRF_SOC_CON25_USBOTG0_UTMI_FS_SE0_SHIFT)            /* 0x00000200 */
/* SOC_CON26 */
#define GRF_SOC_CON26_OFFSET                               (0x68U)
#define GRF_SOC_CON26_USBOTG0_UTMI_DRVVBUS_SEL_SHIFT       (4U)
#define GRF_SOC_CON26_USBOTG0_UTMI_DRVVBUS_SEL_MASK        (0x1U << GRF_SOC_CON26_USBOTG0_UTMI_DRVVBUS_SEL_SHIFT)       /* 0x00000010 */
#define GRF_SOC_CON26_USBOTG0_UTMI_DRVVBUS_SHIFT           (5U)
#define GRF_SOC_CON26_USBOTG0_UTMI_DRVVBUS_MASK            (0x1U << GRF_SOC_CON26_USBOTG0_UTMI_DRVVBUS_SHIFT)           /* 0x00000020 */
#define GRF_SOC_CON26_USBOTG0_UTMI_CHRGVBUS_SHIFT          (7U)
#define GRF_SOC_CON26_USBOTG0_UTMI_CHRGVBUS_MASK           (0x1U << GRF_SOC_CON26_USBOTG0_UTMI_CHRGVBUS_SHIFT)          /* 0x00000080 */
#define GRF_SOC_CON26_USBOTG0_UTMI_DISCHRGVBUS_SHIFT       (8U)
#define GRF_SOC_CON26_USBOTG0_UTMI_DISCHRGVBUS_MASK        (0x1U << GRF_SOC_CON26_USBOTG0_UTMI_DISCHRGVBUS_SHIFT)       /* 0x00000100 */
/* SOC_CON27 */
#define GRF_SOC_CON27_OFFSET                               (0x6CU)
#define GRF_SOC_CON27_USBPHY_IDP_SINK_EN_SHIFT             (0U)
#define GRF_SOC_CON27_USBPHY_IDP_SINK_EN_MASK              (0x1U << GRF_SOC_CON27_USBPHY_IDP_SINK_EN_SHIFT)             /* 0x00000001 */
#define GRF_SOC_CON27_USBPHY_IDM_SINK_EN_SHIFT             (1U)
#define GRF_SOC_CON27_USBPHY_IDM_SINK_EN_MASK              (0x1U << GRF_SOC_CON27_USBPHY_IDM_SINK_EN_SHIFT)             /* 0x00000002 */
#define GRF_SOC_CON27_USBPHY_IDP_SRC_EN_SHIFT              (2U)
#define GRF_SOC_CON27_USBPHY_IDP_SRC_EN_MASK               (0x1U << GRF_SOC_CON27_USBPHY_IDP_SRC_EN_SHIFT)              /* 0x00000004 */
#define GRF_SOC_CON27_USBPHY_RDM_PDWN_EN_SHIFT             (3U)
#define GRF_SOC_CON27_USBPHY_RDM_PDWN_EN_MASK              (0x1U << GRF_SOC_CON27_USBPHY_RDM_PDWN_EN_SHIFT)             /* 0x00000008 */
#define GRF_SOC_CON27_USBPHY_VDP_SRC_EN_SHIFT              (4U)
#define GRF_SOC_CON27_USBPHY_VDP_SRC_EN_MASK               (0x1U << GRF_SOC_CON27_USBPHY_VDP_SRC_EN_SHIFT)              /* 0x00000010 */
#define GRF_SOC_CON27_USBPHY_VDM_SRC_EN_SHIFT              (5U)
#define GRF_SOC_CON27_USBPHY_VDM_SRC_EN_MASK               (0x1U << GRF_SOC_CON27_USBPHY_VDM_SRC_EN_SHIFT)              /* 0x00000020 */
#define GRF_SOC_CON27_USBPHY_CHARGE_DET_BYP_SHIFT          (6U)
#define GRF_SOC_CON27_USBPHY_CHARGE_DET_BYP_MASK           (0x1U << GRF_SOC_CON27_USBPHY_CHARGE_DET_BYP_SHIFT)          /* 0x00000040 */
#define GRF_SOC_CON27_USBPHY_FORCE_DP_ATTACHED_SHIFT       (7U)
#define GRF_SOC_CON27_USBPHY_FORCE_DP_ATTACHED_MASK        (0x1U << GRF_SOC_CON27_USBPHY_FORCE_DP_ATTACHED_SHIFT)       /* 0x00000080 */
#define GRF_SOC_CON27_USBPHY_FORCE_CP_DET_SHIFT            (8U)
#define GRF_SOC_CON27_USBPHY_FORCE_CP_DET_MASK             (0x1U << GRF_SOC_CON27_USBPHY_FORCE_CP_DET_SHIFT)            /* 0x00000100 */
#define GRF_SOC_CON27_USBPHY_FORCE_DCP_DET_SHIFT           (9U)
#define GRF_SOC_CON27_USBPHY_FORCE_DCP_DET_MASK            (0x1U << GRF_SOC_CON27_USBPHY_FORCE_DCP_DET_SHIFT)           /* 0x00000200 */
#define GRF_SOC_CON27_USBPHY_BC_WEAKPULLUP_EN_SHIFT        (10U)
#define GRF_SOC_CON27_USBPHY_BC_WEAKPULLUP_EN_MASK         (0x1U << GRF_SOC_CON27_USBPHY_BC_WEAKPULLUP_EN_SHIFT)        /* 0x00000400 */
#define GRF_SOC_CON27_USBPHY_BC_WEAKPULLDOWN_EN_SHIFT      (11U)
#define GRF_SOC_CON27_USBPHY_BC_WEAKPULLDOWN_EN_MASK       (0x1U << GRF_SOC_CON27_USBPHY_BC_WEAKPULLDOWN_EN_SHIFT)      /* 0x00000800 */
#define GRF_SOC_CON27_USBPHY_BC_WEAKPULLUP_TUNE_SHIFT      (12U)
#define GRF_SOC_CON27_USBPHY_BC_WEAKPULLUP_TUNE_MASK       (0x3U << GRF_SOC_CON27_USBPHY_BC_WEAKPULLUP_TUNE_SHIFT)      /* 0x00003000 */
#define GRF_SOC_CON27_USBPHY_BC_WEAKPULLDOWN_TUNE_SHIFT    (14U)
#define GRF_SOC_CON27_USBPHY_BC_WEAKPULLDOWN_TUNE_MASK     (0x3U << GRF_SOC_CON27_USBPHY_BC_WEAKPULLDOWN_TUNE_SHIFT)    /* 0x0000C000 */
/* SOC_CON28 */
#define GRF_SOC_CON28_OFFSET                               (0x70U)
#define GRF_SOC_CON28_USBOTG1_SW_EN_SHIFT                  (0U)
#define GRF_SOC_CON28_USBOTG1_SW_EN_MASK                   (0x1U << GRF_SOC_CON28_USBOTG1_SW_EN_SHIFT)                  /* 0x00000001 */
#define GRF_SOC_CON28_USBOTG1_UTMI_SUSPEND_N_SHIFT         (1U)
#define GRF_SOC_CON28_USBOTG1_UTMI_SUSPEND_N_MASK          (0x1U << GRF_SOC_CON28_USBOTG1_UTMI_SUSPEND_N_SHIFT)         /* 0x00000002 */
#define GRF_SOC_CON28_USBOTG1_UTMI_OPMODE_SHIFT            (2U)
#define GRF_SOC_CON28_USBOTG1_UTMI_OPMODE_MASK             (0x3U << GRF_SOC_CON28_USBOTG1_UTMI_OPMODE_SHIFT)            /* 0x0000000C */
#define GRF_SOC_CON28_USBOTG1_UTMI_XCVRSELECT_SHIFT        (4U)
#define GRF_SOC_CON28_USBOTG1_UTMI_XCVRSELECT_MASK         (0x3U << GRF_SOC_CON28_USBOTG1_UTMI_XCVRSELECT_SHIFT)        /* 0x00000030 */
#define GRF_SOC_CON28_USBOTG1_UTMI_TERMSELECT_SHIFT        (6U)
#define GRF_SOC_CON28_USBOTG1_UTMI_TERMSELECT_MASK         (0x1U << GRF_SOC_CON28_USBOTG1_UTMI_TERMSELECT_SHIFT)        /* 0x00000040 */
#define GRF_SOC_CON28_USBOTG1_UTMI_DPPULLDOWN_SHIFT        (7U)
#define GRF_SOC_CON28_USBOTG1_UTMI_DPPULLDOWN_MASK         (0x1U << GRF_SOC_CON28_USBOTG1_UTMI_DPPULLDOWN_SHIFT)        /* 0x00000080 */
#define GRF_SOC_CON28_USBOTG1_UTMI_DMPULLDOWN_SHIFT        (8U)
#define GRF_SOC_CON28_USBOTG1_UTMI_DMPULLDOWN_MASK         (0x1U << GRF_SOC_CON28_USBOTG1_UTMI_DMPULLDOWN_SHIFT)        /* 0x00000100 */
#define GRF_SOC_CON28_USBOTG1_UTMI_IDDIG_SEL_SHIFT         (9U)
#define GRF_SOC_CON28_USBOTG1_UTMI_IDDIG_SEL_MASK          (0x1U << GRF_SOC_CON28_USBOTG1_UTMI_IDDIG_SEL_SHIFT)         /* 0x00000200 */
#define GRF_SOC_CON28_USBOTG1_UTMI_IDDIG_SHIFT             (10U)
#define GRF_SOC_CON28_USBOTG1_UTMI_IDDIG_MASK              (0x1U << GRF_SOC_CON28_USBOTG1_UTMI_IDDIG_SHIFT)             /* 0x00000400 */
#define GRF_SOC_CON28_USBOTG1_UTMI_BVALID_SEL_SHIFT        (14U)
#define GRF_SOC_CON28_USBOTG1_UTMI_BVALID_SEL_MASK         (0x1U << GRF_SOC_CON28_USBOTG1_UTMI_BVALID_SEL_SHIFT)        /* 0x00004000 */
#define GRF_SOC_CON28_USBOTG1_UTMI_BVALID_SHIFT            (15U)
#define GRF_SOC_CON28_USBOTG1_UTMI_BVALID_MASK             (0x1U << GRF_SOC_CON28_USBOTG1_UTMI_BVALID_SHIFT)            /* 0x00008000 */
/* SOC_CON29 */
#define GRF_SOC_CON29_OFFSET                               (0x74U)
#define GRF_SOC_CON29_USBOTG1_UTMI_SESSEND_SEL_SHIFT       (0U)
#define GRF_SOC_CON29_USBOTG1_UTMI_SESSEND_SEL_MASK        (0x1U << GRF_SOC_CON29_USBOTG1_UTMI_SESSEND_SEL_SHIFT)       /* 0x00000001 */
#define GRF_SOC_CON29_USBOTG1_UTMI_SESSEND_SHIFT           (1U)
#define GRF_SOC_CON29_USBOTG1_UTMI_SESSEND_MASK            (0x1U << GRF_SOC_CON29_USBOTG1_UTMI_SESSEND_SHIFT)           /* 0x00000002 */
#define GRF_SOC_CON29_USBOTG1_UTMI_AVALID_SEL_SHIFT        (2U)
#define GRF_SOC_CON29_USBOTG1_UTMI_AVALID_SEL_MASK         (0x1U << GRF_SOC_CON29_USBOTG1_UTMI_AVALID_SEL_SHIFT)        /* 0x00000004 */
#define GRF_SOC_CON29_USBOTG1_UTMI_AVALID_SHIFT            (3U)
#define GRF_SOC_CON29_USBOTG1_UTMI_AVALID_MASK             (0x1U << GRF_SOC_CON29_USBOTG1_UTMI_AVALID_SHIFT)            /* 0x00000008 */
#define GRF_SOC_CON29_USBOTG1_UTMI_FS_XVER_OWN_SHIFT       (6U)
#define GRF_SOC_CON29_USBOTG1_UTMI_FS_XVER_OWN_MASK        (0x1U << GRF_SOC_CON29_USBOTG1_UTMI_FS_XVER_OWN_SHIFT)       /* 0x00000040 */
#define GRF_SOC_CON29_USBOTG1_UTMI_FS_OE_SHIFT             (7U)
#define GRF_SOC_CON29_USBOTG1_UTMI_FS_OE_MASK              (0x1U << GRF_SOC_CON29_USBOTG1_UTMI_FS_OE_SHIFT)             /* 0x00000080 */
#define GRF_SOC_CON29_USBOTG1_UTMI_FS_DATA_SHIFT           (8U)
#define GRF_SOC_CON29_USBOTG1_UTMI_FS_DATA_MASK            (0x1U << GRF_SOC_CON29_USBOTG1_UTMI_FS_DATA_SHIFT)           /* 0x00000100 */
#define GRF_SOC_CON29_USBOTG1_UTMI_FS_SE0_SHIFT            (9U)
#define GRF_SOC_CON29_USBOTG1_UTMI_FS_SE0_MASK             (0x1U << GRF_SOC_CON29_USBOTG1_UTMI_FS_SE0_SHIFT)            /* 0x00000200 */
/* SOC_CON30 */
#define GRF_SOC_CON30_OFFSET                               (0x78U)
#define GRF_SOC_CON30_GRF_CAN0_RX_DMAC_SEL_SHIFT           (10U)
#define GRF_SOC_CON30_GRF_CAN0_RX_DMAC_SEL_MASK            (0x3U << GRF_SOC_CON30_GRF_CAN0_RX_DMAC_SEL_SHIFT)           /* 0x00000C00 */
#define GRF_SOC_CON30_GRF_CAN1_RX_DMAC_SEL_SHIFT           (12U)
#define GRF_SOC_CON30_GRF_CAN1_RX_DMAC_SEL_MASK            (0x3U << GRF_SOC_CON30_GRF_CAN1_RX_DMAC_SEL_SHIFT)           /* 0x00003000 */
#define GRF_SOC_CON30_GRF_DSMC_REQ1_DMAC_SEL_SHIFT         (14U)
#define GRF_SOC_CON30_GRF_DSMC_REQ1_DMAC_SEL_MASK          (0x1U << GRF_SOC_CON30_GRF_DSMC_REQ1_DMAC_SEL_SHIFT)         /* 0x00004000 */
#define GRF_SOC_CON30_GRF_DSMC_REQ0_DMAC_SEL_SHIFT         (15U)
#define GRF_SOC_CON30_GRF_DSMC_REQ0_DMAC_SEL_MASK          (0x1U << GRF_SOC_CON30_GRF_DSMC_REQ0_DMAC_SEL_SHIFT)         /* 0x00008000 */
/* SOC_CON31 */
#define GRF_SOC_CON31_OFFSET                               (0x7CU)
#define GRF_SOC_CON31_GRF_GPIO234_FILTER_EN_SHIFT          (0U)
#define GRF_SOC_CON31_GRF_GPIO234_FILTER_EN_MASK           (0x3U << GRF_SOC_CON31_GRF_GPIO234_FILTER_EN_SHIFT)          /* 0x00000003 */
#define GRF_SOC_CON31_GRF_GPIO234_FILTER_SEL0_SHIFT        (4U)
#define GRF_SOC_CON31_GRF_GPIO234_FILTER_SEL0_MASK         (0x3FU << GRF_SOC_CON31_GRF_GPIO234_FILTER_SEL0_SHIFT)       /* 0x000003F0 */
#define GRF_SOC_CON31_GRF_GPIO234_FILTER_SEL1_SHIFT        (10U)
#define GRF_SOC_CON31_GRF_GPIO234_FILTER_SEL1_MASK         (0x3FU << GRF_SOC_CON31_GRF_GPIO234_FILTER_SEL1_SHIFT)       /* 0x0000FC00 */
/* SOC_CON32 */
#define GRF_SOC_CON32_OFFSET                               (0x80U)
#define GRF_SOC_CON32_GRF_GPIO234_FILTER_COUNT0_SHIFT      (0U)
#define GRF_SOC_CON32_GRF_GPIO234_FILTER_COUNT0_MASK       (0xFFFFFU << GRF_SOC_CON32_GRF_GPIO234_FILTER_COUNT0_SHIFT)  /* 0x000FFFFF */
/* SOC_CON33 */
#define GRF_SOC_CON33_OFFSET                               (0x84U)
#define GRF_SOC_CON33_GRF_GPIO234_FILTER_COUNT1_SHIFT      (0U)
#define GRF_SOC_CON33_GRF_GPIO234_FILTER_COUNT1_MASK       (0xFFFFFU << GRF_SOC_CON33_GRF_GPIO234_FILTER_COUNT1_SHIFT)  /* 0x000FFFFF */
/* SOC_CON35 */
#define GRF_SOC_CON35_OFFSET                               (0x8CU)
#define GRF_SOC_CON35_GRF_PWM1_PHASE_A0_SEL_SHIFT          (0U)
#define GRF_SOC_CON35_GRF_PWM1_PHASE_A0_SEL_MASK           (0x1U << GRF_SOC_CON35_GRF_PWM1_PHASE_A0_SEL_SHIFT)          /* 0x00000001 */
#define GRF_SOC_CON35_GRF_PWM1_PHASE_A1_SEL_SHIFT          (1U)
#define GRF_SOC_CON35_GRF_PWM1_PHASE_A1_SEL_MASK           (0x1U << GRF_SOC_CON35_GRF_PWM1_PHASE_A1_SEL_SHIFT)          /* 0x00000002 */
#define GRF_SOC_CON35_GRF_PWM1_PHASE_A2_SEL_SHIFT          (2U)
#define GRF_SOC_CON35_GRF_PWM1_PHASE_A2_SEL_MASK           (0x1U << GRF_SOC_CON35_GRF_PWM1_PHASE_A2_SEL_SHIFT)          /* 0x00000004 */
#define GRF_SOC_CON35_GRF_PWM1_PHASE_A3_SEL_SHIFT          (3U)
#define GRF_SOC_CON35_GRF_PWM1_PHASE_A3_SEL_MASK           (0x1U << GRF_SOC_CON35_GRF_PWM1_PHASE_A3_SEL_SHIFT)          /* 0x00000008 */
#define GRF_SOC_CON35_GRF_PWM1_PHASE_A4_SEL_SHIFT          (4U)
#define GRF_SOC_CON35_GRF_PWM1_PHASE_A4_SEL_MASK           (0x1U << GRF_SOC_CON35_GRF_PWM1_PHASE_A4_SEL_SHIFT)          /* 0x00000010 */
#define GRF_SOC_CON35_GRF_PWM1_PHASE_A5_SEL_SHIFT          (5U)
#define GRF_SOC_CON35_GRF_PWM1_PHASE_A5_SEL_MASK           (0x1U << GRF_SOC_CON35_GRF_PWM1_PHASE_A5_SEL_SHIFT)          /* 0x00000020 */
#define GRF_SOC_CON35_GRF_PWM1_PHASE_A6_SEL_SHIFT          (6U)
#define GRF_SOC_CON35_GRF_PWM1_PHASE_A6_SEL_MASK           (0x1U << GRF_SOC_CON35_GRF_PWM1_PHASE_A6_SEL_SHIFT)          /* 0x00000040 */
#define GRF_SOC_CON35_GRF_PWM1_UART_RX_MUX_SEL_SHIFT       (7U)
#define GRF_SOC_CON35_GRF_PWM1_UART_RX_MUX_SEL_MASK        (0x7U << GRF_SOC_CON35_GRF_PWM1_UART_RX_MUX_SEL_SHIFT)       /* 0x00000380 */
/* SOC_CON36 */
#define GRF_SOC_CON36_OFFSET                               (0x90U)
#define GRF_SOC_CON36_GRF_CON_M0_STALIB_SHIFT              (0U)
#define GRF_SOC_CON36_GRF_CON_M0_STALIB_MASK               (0x3FFFFFFU << GRF_SOC_CON36_GRF_CON_M0_STALIB_SHIFT)        /* 0x03FFFFFF */
/* SOC_CON37 */
#define GRF_SOC_CON37_OFFSET                               (0x94U)
#define GRF_SOC_CON37_GRF_CON_MCU_DBGRESTART_SHIFT         (0U)
#define GRF_SOC_CON37_GRF_CON_MCU_DBGRESTART_MASK          (0x1U << GRF_SOC_CON37_GRF_CON_MCU_DBGRESTART_SHIFT)         /* 0x00000001 */
#define GRF_SOC_CON37_GRF_CON_MCU_EDBGRP_SHIFT             (1U)
#define GRF_SOC_CON37_GRF_CON_MCU_EDBGRP_MASK              (0x1U << GRF_SOC_CON37_GRF_CON_MCU_EDBGRP_SHIFT)             /* 0x00000002 */
#define GRF_SOC_CON37_GRF_CON_MCU_NMI_SHIFT                (2U)
#define GRF_SOC_CON37_GRF_CON_MCU_NMI_MASK                 (0x1U << GRF_SOC_CON37_GRF_CON_MCU_NMI_SHIFT)                /* 0x00000004 */
#define GRF_SOC_CON37_GRF_CON_MCU_RXEV_SHIFT               (3U)
#define GRF_SOC_CON37_GRF_CON_MCU_RXEV_MASK                (0x1U << GRF_SOC_CON37_GRF_CON_MCU_RXEV_SHIFT)               /* 0x00000008 */
#define GRF_SOC_CON37_GRF_CON_MCU_SLEEPHOLDREQN_SHIFT      (4U)
#define GRF_SOC_CON37_GRF_CON_MCU_SLEEPHOLDREQN_MASK       (0x1U << GRF_SOC_CON37_GRF_CON_MCU_SLEEPHOLDREQN_SHIFT)      /* 0x00000010 */
#define GRF_SOC_CON37_GRF_CON_MCU_WICENREQ_SHIFT           (5U)
#define GRF_SOC_CON37_GRF_CON_MCU_WICENREQ_MASK            (0x1U << GRF_SOC_CON37_GRF_CON_MCU_WICENREQ_SHIFT)           /* 0x00000020 */
#define GRF_SOC_CON37_GRF_CON_MCU_IRQLATENCY_SHIFT         (7U)
#define GRF_SOC_CON37_GRF_CON_MCU_IRQLATENCY_MASK          (0xFFU << GRF_SOC_CON37_GRF_CON_MCU_IRQLATENCY_SHIFT)        /* 0x00007F80 */
/* SOC_CON38 */
#define GRF_SOC_CON38_OFFSET                               (0x98U)
#define GRF_SOC_CON38_DMAC0_INTR_MASK0_SHIFT               (0U)
#define GRF_SOC_CON38_DMAC0_INTR_MASK0_MASK                (0x3FU << GRF_SOC_CON38_DMAC0_INTR_MASK0_SHIFT)              /* 0x0000003F */
#define GRF_SOC_CON38_DMAC0_INTR_MASK1_SHIFT               (8U)
#define GRF_SOC_CON38_DMAC0_INTR_MASK1_MASK                (0x3FU << GRF_SOC_CON38_DMAC0_INTR_MASK1_SHIFT)              /* 0x00003F00 */
/* SOC_CON39 */
#define GRF_SOC_CON39_OFFSET                               (0x9CU)
#define GRF_SOC_CON39_DMAC0_INTR_MASK2_SHIFT               (0U)
#define GRF_SOC_CON39_DMAC0_INTR_MASK2_MASK                (0x3FU << GRF_SOC_CON39_DMAC0_INTR_MASK2_SHIFT)              /* 0x0000003F */
#define GRF_SOC_CON39_DMAC1_INTR_MASK0_SHIFT               (8U)
#define GRF_SOC_CON39_DMAC1_INTR_MASK0_MASK                (0xFFU << GRF_SOC_CON39_DMAC1_INTR_MASK0_SHIFT)              /* 0x0000FF00 */
/* SOC_CON40 */
#define GRF_SOC_CON40_OFFSET                               (0xA0U)
#define GRF_SOC_CON40_DMAC1_INTR_MASK1_SHIFT               (0U)
#define GRF_SOC_CON40_DMAC1_INTR_MASK1_MASK                (0xFFU << GRF_SOC_CON40_DMAC1_INTR_MASK1_SHIFT)              /* 0x000000FF */
#define GRF_SOC_CON40_DMAC1_INTR_MASK2_SHIFT               (8U)
#define GRF_SOC_CON40_DMAC1_INTR_MASK2_MASK                (0xFFU << GRF_SOC_CON40_DMAC1_INTR_MASK2_SHIFT)              /* 0x0000FF00 */
/* SOC_CON41 */
#define GRF_SOC_CON41_OFFSET                               (0xA4U)
#define GRF_SOC_CON41_GRF_ASRC0_RX_DMAC_SEL_SHIFT          (0U)
#define GRF_SOC_CON41_GRF_ASRC0_RX_DMAC_SEL_MASK           (0x1U << GRF_SOC_CON41_GRF_ASRC0_RX_DMAC_SEL_SHIFT)          /* 0x00000001 */
#define GRF_SOC_CON41_GRF_ASRC0_TX_DMAC_SEL_SHIFT          (1U)
#define GRF_SOC_CON41_GRF_ASRC0_TX_DMAC_SEL_MASK           (0x1U << GRF_SOC_CON41_GRF_ASRC0_TX_DMAC_SEL_SHIFT)          /* 0x00000002 */
#define GRF_SOC_CON41_GRF_ASRC1_RX_DMAC_SEL_SHIFT          (2U)
#define GRF_SOC_CON41_GRF_ASRC1_RX_DMAC_SEL_MASK           (0x1U << GRF_SOC_CON41_GRF_ASRC1_RX_DMAC_SEL_SHIFT)          /* 0x00000004 */
#define GRF_SOC_CON41_GRF_ASRC1_TX_DMAC_SEL_SHIFT          (3U)
#define GRF_SOC_CON41_GRF_ASRC1_TX_DMAC_SEL_MASK           (0x1U << GRF_SOC_CON41_GRF_ASRC1_TX_DMAC_SEL_SHIFT)          /* 0x00000008 */
#define GRF_SOC_CON41_GRF_PDM_RX_DMAC_SEL_SHIFT            (4U)
#define GRF_SOC_CON41_GRF_PDM_RX_DMAC_SEL_MASK             (0x1U << GRF_SOC_CON41_GRF_PDM_RX_DMAC_SEL_SHIFT)            /* 0x00000010 */
#define GRF_SOC_CON41_GRF_SPDIFTX_DMAC_SEL_SHIFT           (5U)
#define GRF_SOC_CON41_GRF_SPDIFTX_DMAC_SEL_MASK            (0x1U << GRF_SOC_CON41_GRF_SPDIFTX_DMAC_SEL_SHIFT)           /* 0x00000020 */
#define GRF_SOC_CON41_GRF_SPDIFRX_DMAC_SEL_SHIFT           (6U)
#define GRF_SOC_CON41_GRF_SPDIFRX_DMAC_SEL_MASK            (0x1U << GRF_SOC_CON41_GRF_SPDIFRX_DMAC_SEL_SHIFT)           /* 0x00000040 */
#define GRF_SOC_CON41_GRF_SAI0_RX_DMAC_SEL_SHIFT           (7U)
#define GRF_SOC_CON41_GRF_SAI0_RX_DMAC_SEL_MASK            (0x1U << GRF_SOC_CON41_GRF_SAI0_RX_DMAC_SEL_SHIFT)           /* 0x00000080 */
#define GRF_SOC_CON41_GRF_SAI0_TX_DMAC_SEL_SHIFT           (8U)
#define GRF_SOC_CON41_GRF_SAI0_TX_DMAC_SEL_MASK            (0x1U << GRF_SOC_CON41_GRF_SAI0_TX_DMAC_SEL_SHIFT)           /* 0x00000100 */
#define GRF_SOC_CON41_GRF_SAI1_RX_DMAC_SEL_SHIFT           (9U)
#define GRF_SOC_CON41_GRF_SAI1_RX_DMAC_SEL_MASK            (0x1U << GRF_SOC_CON41_GRF_SAI1_RX_DMAC_SEL_SHIFT)           /* 0x00000200 */
#define GRF_SOC_CON41_GRF_SAI1_TX_DMAC_SEL_SHIFT           (10U)
#define GRF_SOC_CON41_GRF_SAI1_TX_DMAC_SEL_MASK            (0x1U << GRF_SOC_CON41_GRF_SAI1_TX_DMAC_SEL_SHIFT)           /* 0x00000400 */
/* SOC_CON42 */
#define GRF_SOC_CON42_OFFSET                               (0xA8U)
#define GRF_SOC_CON42_DMAC0_CH0_SEL_SHIFT                  (0U)
#define GRF_SOC_CON42_DMAC0_CH0_SEL_MASK                   (0x3U << GRF_SOC_CON42_DMAC0_CH0_SEL_SHIFT)                  /* 0x00000003 */
#define GRF_SOC_CON42_DMAC0_CH1_SEL_SHIFT                  (2U)
#define GRF_SOC_CON42_DMAC0_CH1_SEL_MASK                   (0x3U << GRF_SOC_CON42_DMAC0_CH1_SEL_SHIFT)                  /* 0x0000000C */
#define GRF_SOC_CON42_DMAC0_CH2_SEL_SHIFT                  (4U)
#define GRF_SOC_CON42_DMAC0_CH2_SEL_MASK                   (0x3U << GRF_SOC_CON42_DMAC0_CH2_SEL_SHIFT)                  /* 0x00000030 */
#define GRF_SOC_CON42_DMAC0_CH3_SEL_SHIFT                  (6U)
#define GRF_SOC_CON42_DMAC0_CH3_SEL_MASK                   (0x3U << GRF_SOC_CON42_DMAC0_CH3_SEL_SHIFT)                  /* 0x000000C0 */
#define GRF_SOC_CON42_DMAC0_CH4_SEL_SHIFT                  (8U)
#define GRF_SOC_CON42_DMAC0_CH4_SEL_MASK                   (0x3U << GRF_SOC_CON42_DMAC0_CH4_SEL_SHIFT)                  /* 0x00000300 */
#define GRF_SOC_CON42_DMAC0_CH5_SEL_SHIFT                  (10U)
#define GRF_SOC_CON42_DMAC0_CH5_SEL_MASK                   (0x3U << GRF_SOC_CON42_DMAC0_CH5_SEL_SHIFT)                  /* 0x00000C00 */
#define GRF_SOC_CON42_DMAC0_CH6_SEL_SHIFT                  (12U)
#define GRF_SOC_CON42_DMAC0_CH6_SEL_MASK                   (0x3U << GRF_SOC_CON42_DMAC0_CH6_SEL_SHIFT)                  /* 0x00003000 */
#define GRF_SOC_CON42_DMAC0_CH7_SEL_SHIFT                  (14U)
#define GRF_SOC_CON42_DMAC0_CH7_SEL_MASK                   (0x3U << GRF_SOC_CON42_DMAC0_CH7_SEL_SHIFT)                  /* 0x0000C000 */
/* SOC_CON43 */
#define GRF_SOC_CON43_OFFSET                               (0xACU)
#define GRF_SOC_CON43_DMAC0_CH8_SEL_SHIFT                  (0U)
#define GRF_SOC_CON43_DMAC0_CH8_SEL_MASK                   (0x3U << GRF_SOC_CON43_DMAC0_CH8_SEL_SHIFT)                  /* 0x00000003 */
#define GRF_SOC_CON43_DMAC0_CH9_SEL_SHIFT                  (2U)
#define GRF_SOC_CON43_DMAC0_CH9_SEL_MASK                   (0x3U << GRF_SOC_CON43_DMAC0_CH9_SEL_SHIFT)                  /* 0x0000000C */
#define GRF_SOC_CON43_DMAC0_CH10_SEL_SHIFT                 (4U)
#define GRF_SOC_CON43_DMAC0_CH10_SEL_MASK                  (0x3U << GRF_SOC_CON43_DMAC0_CH10_SEL_SHIFT)                 /* 0x00000030 */
#define GRF_SOC_CON43_DMAC0_CH11_SEL_SHIFT                 (6U)
#define GRF_SOC_CON43_DMAC0_CH11_SEL_MASK                  (0x3U << GRF_SOC_CON43_DMAC0_CH11_SEL_SHIFT)                 /* 0x000000C0 */
#define GRF_SOC_CON43_DMAC1_CH10_SEL_SHIFT                 (8U)
#define GRF_SOC_CON43_DMAC1_CH10_SEL_MASK                  (0x3U << GRF_SOC_CON43_DMAC1_CH10_SEL_SHIFT)                 /* 0x00000300 */
#define GRF_SOC_CON43_DMAC1_CH11_SEL_SHIFT                 (10U)
#define GRF_SOC_CON43_DMAC1_CH11_SEL_MASK                  (0x3U << GRF_SOC_CON43_DMAC1_CH11_SEL_SHIFT)                 /* 0x00000C00 */
/* SOC_STATUS0 */
#define GRF_SOC_STATUS0_OFFSET                             (0x100U)
#define GRF_SOC_STATUS0_V0PLL_LOCK_SHIFT                   (0U)
#define GRF_SOC_STATUS0_V0PLL_LOCK_MASK                    (0x1U << GRF_SOC_STATUS0_V0PLL_LOCK_SHIFT)                   /* 0x00000001 */
#define GRF_SOC_STATUS0_V1PLL_LOCK_SHIFT                   (1U)
#define GRF_SOC_STATUS0_V1PLL_LOCK_MASK                    (0x1U << GRF_SOC_STATUS0_V1PLL_LOCK_SHIFT)                   /* 0x00000002 */
#define GRF_SOC_STATUS0_GPLL_LOCK_SHIFT                    (2U)
#define GRF_SOC_STATUS0_GPLL_LOCK_MASK                     (0x1U << GRF_SOC_STATUS0_GPLL_LOCK_SHIFT)                    /* 0x00000004 */
#define GRF_SOC_STATUS0_VOP_DMA_FINISH_SHIFT               (3U)
#define GRF_SOC_STATUS0_VOP_DMA_FINISH_MASK                (0x1U << GRF_SOC_STATUS0_VOP_DMA_FINISH_SHIFT)               /* 0x00000008 */
#define GRF_SOC_STATUS0_VOP_DSP_HOLD_SHIFT                 (4U)
#define GRF_SOC_STATUS0_VOP_DSP_HOLD_MASK                  (0x1U << GRF_SOC_STATUS0_VOP_DSP_HOLD_SHIFT)                 /* 0x00000010 */
#define GRF_SOC_STATUS0_TIMER0_CH0_EN_STATUS_SHIFT         (5U)
#define GRF_SOC_STATUS0_TIMER0_CH0_EN_STATUS_MASK          (0x1U << GRF_SOC_STATUS0_TIMER0_CH0_EN_STATUS_SHIFT)         /* 0x00000020 */
#define GRF_SOC_STATUS0_TIMER0_CH1_EN_STATUS_SHIFT         (6U)
#define GRF_SOC_STATUS0_TIMER0_CH1_EN_STATUS_MASK          (0x1U << GRF_SOC_STATUS0_TIMER0_CH1_EN_STATUS_SHIFT)         /* 0x00000040 */
#define GRF_SOC_STATUS0_TIMER0_CH2_EN_STATUS_SHIFT         (7U)
#define GRF_SOC_STATUS0_TIMER0_CH2_EN_STATUS_MASK          (0x1U << GRF_SOC_STATUS0_TIMER0_CH2_EN_STATUS_SHIFT)         /* 0x00000080 */
#define GRF_SOC_STATUS0_TIMER0_CH3_EN_STATUS_SHIFT         (8U)
#define GRF_SOC_STATUS0_TIMER0_CH3_EN_STATUS_MASK          (0x1U << GRF_SOC_STATUS0_TIMER0_CH3_EN_STATUS_SHIFT)         /* 0x00000100 */
#define GRF_SOC_STATUS0_TIMER0_CH4_EN_STATUS_SHIFT         (9U)
#define GRF_SOC_STATUS0_TIMER0_CH4_EN_STATUS_MASK          (0x1U << GRF_SOC_STATUS0_TIMER0_CH4_EN_STATUS_SHIFT)         /* 0x00000200 */
#define GRF_SOC_STATUS0_TIMER0_CH5_EN_STATUS_SHIFT         (10U)
#define GRF_SOC_STATUS0_TIMER0_CH5_EN_STATUS_MASK          (0x1U << GRF_SOC_STATUS0_TIMER0_CH5_EN_STATUS_SHIFT)         /* 0x00000400 */
#define GRF_SOC_STATUS0_GRF_ST_MAC0_SPEED_SHIFT            (11U)
#define GRF_SOC_STATUS0_GRF_ST_MAC0_SPEED_MASK             (0x3U << GRF_SOC_STATUS0_GRF_ST_MAC0_SPEED_SHIFT)            /* 0x00001800 */
#define GRF_SOC_STATUS0_GRF_ST_MAC1_SPEED_SHIFT            (13U)
#define GRF_SOC_STATUS0_GRF_ST_MAC1_SPEED_MASK             (0x3U << GRF_SOC_STATUS0_GRF_ST_MAC1_SPEED_SHIFT)            /* 0x00006000 */
#define GRF_SOC_STATUS0_DFI_INIT_COMPLETE_SHIFT            (17U)
#define GRF_SOC_STATUS0_DFI_INIT_COMPLETE_MASK             (0x1U << GRF_SOC_STATUS0_DFI_INIT_COMPLETE_SHIFT)            /* 0x00020000 */
#define GRF_SOC_STATUS0_TIMER1_CH0_EN_STATUS_SHIFT         (18U)
#define GRF_SOC_STATUS0_TIMER1_CH0_EN_STATUS_MASK          (0x1U << GRF_SOC_STATUS0_TIMER1_CH0_EN_STATUS_SHIFT)         /* 0x00040000 */
#define GRF_SOC_STATUS0_TIMER1_CH1_EN_STATUS_SHIFT         (19U)
#define GRF_SOC_STATUS0_TIMER1_CH1_EN_STATUS_MASK          (0x1U << GRF_SOC_STATUS0_TIMER1_CH1_EN_STATUS_SHIFT)         /* 0x00080000 */
#define GRF_SOC_STATUS0_TIMER1_CH2_EN_STATUS_SHIFT         (20U)
#define GRF_SOC_STATUS0_TIMER1_CH2_EN_STATUS_MASK          (0x1U << GRF_SOC_STATUS0_TIMER1_CH2_EN_STATUS_SHIFT)         /* 0x00100000 */
#define GRF_SOC_STATUS0_TIMER1_CH3_EN_STATUS_SHIFT         (21U)
#define GRF_SOC_STATUS0_TIMER1_CH3_EN_STATUS_MASK          (0x1U << GRF_SOC_STATUS0_TIMER1_CH3_EN_STATUS_SHIFT)         /* 0x00200000 */
#define GRF_SOC_STATUS0_TIMER1_CH4_EN_STATUS_SHIFT         (22U)
#define GRF_SOC_STATUS0_TIMER1_CH4_EN_STATUS_MASK          (0x1U << GRF_SOC_STATUS0_TIMER1_CH4_EN_STATUS_SHIFT)         /* 0x00400000 */
#define GRF_SOC_STATUS0_TIMER1_CH5_EN_STATUS_SHIFT         (23U)
#define GRF_SOC_STATUS0_TIMER1_CH5_EN_STATUS_MASK          (0x1U << GRF_SOC_STATUS0_TIMER1_CH5_EN_STATUS_SHIFT)         /* 0x00800000 */
#define GRF_SOC_STATUS0_CRYPTO_IDLE_SHIFT                  (24U)
#define GRF_SOC_STATUS0_CRYPTO_IDLE_MASK                   (0x1U << GRF_SOC_STATUS0_CRYPTO_IDLE_SHIFT)                  /* 0x01000000 */
#define GRF_SOC_STATUS0_VCCIO1_SUPPLY_VOLTAGE_SHIFT        (25U)
#define GRF_SOC_STATUS0_VCCIO1_SUPPLY_VOLTAGE_MASK         (0x1U << GRF_SOC_STATUS0_VCCIO1_SUPPLY_VOLTAGE_SHIFT)        /* 0x02000000 */
#define GRF_SOC_STATUS0_VCCIO2_SUPPLY_VOLTAGE_SHIFT        (26U)
#define GRF_SOC_STATUS0_VCCIO2_SUPPLY_VOLTAGE_MASK         (0x1U << GRF_SOC_STATUS0_VCCIO2_SUPPLY_VOLTAGE_SHIFT)        /* 0x04000000 */
#define GRF_SOC_STATUS0_VCCIO3_SUPPLY_VOLTAGE_SHIFT        (27U)
#define GRF_SOC_STATUS0_VCCIO3_SUPPLY_VOLTAGE_MASK         (0x1U << GRF_SOC_STATUS0_VCCIO3_SUPPLY_VOLTAGE_SHIFT)        /* 0x08000000 */
#define GRF_SOC_STATUS0_VCCIO4_SUPPLY_VOLTAGE_SHIFT        (28U)
#define GRF_SOC_STATUS0_VCCIO4_SUPPLY_VOLTAGE_MASK         (0x1U << GRF_SOC_STATUS0_VCCIO4_SUPPLY_VOLTAGE_SHIFT)        /* 0x10000000 */
/* SOC_STATUS1 */
#define GRF_SOC_STATUS1_OFFSET                             (0x104U)
#define GRF_SOC_STATUS1                                    (0x0U)
#define GRF_SOC_STATUS1_BIU_ACTIVE_STATUS_SHIFT            (0U)
#define GRF_SOC_STATUS1_BIU_ACTIVE_STATUS_MASK             (0x3FFU << GRF_SOC_STATUS1_BIU_ACTIVE_STATUS_SHIFT)          /* 0x000003FF */
/* SOC_STATUS2 */
#define GRF_SOC_STATUS2_OFFSET                             (0x108U)
#define GRF_SOC_STATUS2_GRF_MCU_DBGRESTARTED_SHIFT         (0U)
#define GRF_SOC_STATUS2_GRF_MCU_DBGRESTARTED_MASK          (0x1U << GRF_SOC_STATUS2_GRF_MCU_DBGRESTARTED_SHIFT)         /* 0x00000001 */
#define GRF_SOC_STATUS2_GRF_MCU_HALT_SHIFT                 (1U)
#define GRF_SOC_STATUS2_GRF_MCU_HALT_MASK                  (0x1U << GRF_SOC_STATUS2_GRF_MCU_HALT_SHIFT)                 /* 0x00000002 */
#define GRF_SOC_STATUS2_GRF_MCU_TXEV_SHIFT                 (2U)
#define GRF_SOC_STATUS2_GRF_MCU_TXEV_MASK                  (0x1U << GRF_SOC_STATUS2_GRF_MCU_TXEV_SHIFT)                 /* 0x00000004 */
#define GRF_SOC_STATUS2_GRF_MCU_LOCKUP_SHIFT               (3U)
#define GRF_SOC_STATUS2_GRF_MCU_LOCKUP_MASK                (0x1U << GRF_SOC_STATUS2_GRF_MCU_LOCKUP_SHIFT)               /* 0x00000008 */
#define GRF_SOC_STATUS2_GRF_MCU_HCLK_GATE_SHIFT            (4U)
#define GRF_SOC_STATUS2_GRF_MCU_HCLK_GATE_MASK             (0x1U << GRF_SOC_STATUS2_GRF_MCU_HCLK_GATE_SHIFT)            /* 0x00000010 */
#define GRF_SOC_STATUS2_GRF_MCU_WAKEUP_SHIFT               (5U)
#define GRF_SOC_STATUS2_GRF_MCU_WAKEUP_MASK                (0x1U << GRF_SOC_STATUS2_GRF_MCU_WAKEUP_SHIFT)               /* 0x00000020 */
#define GRF_SOC_STATUS2_GRF_MCU_SLEEPING_SHIFT             (6U)
#define GRF_SOC_STATUS2_GRF_MCU_SLEEPING_MASK              (0x1U << GRF_SOC_STATUS2_GRF_MCU_SLEEPING_SHIFT)             /* 0x00000040 */
#define GRF_SOC_STATUS2_GRF_MCU_SLEEPDEEP_SHIFT            (7U)
#define GRF_SOC_STATUS2_GRF_MCU_SLEEPDEEP_MASK             (0x1U << GRF_SOC_STATUS2_GRF_MCU_SLEEPDEEP_SHIFT)            /* 0x00000080 */
#define GRF_SOC_STATUS2_GRF_MCU_SLEEPHOLDACKN_SHIFT        (8U)
#define GRF_SOC_STATUS2_GRF_MCU_SLEEPHOLDACKN_MASK         (0x1U << GRF_SOC_STATUS2_GRF_MCU_SLEEPHOLDACKN_SHIFT)        /* 0x00000100 */
#define GRF_SOC_STATUS2_GRF_MCU_WICENACK_SHIFT             (9U)
#define GRF_SOC_STATUS2_GRF_MCU_WICENACK_MASK              (0x1U << GRF_SOC_STATUS2_GRF_MCU_WICENACK_SHIFT)             /* 0x00000200 */
/* DDR_STATUS0 */
#define GRF_DDR_STATUS0_OFFSET                             (0x110U)
#define GRF_DDR_STATUS0                                    (0x0U)
#define GRF_DDR_STATUS0_GRF_ST_LPR_CREDIT_CNT_SHIFT        (0U)
#define GRF_DDR_STATUS0_GRF_ST_LPR_CREDIT_CNT_MASK         (0x7FU << GRF_DDR_STATUS0_GRF_ST_LPR_CREDIT_CNT_SHIFT)       /* 0x0000007F */
#define GRF_DDR_STATUS0_GRF_ST_HPR_CREDIT_CNT_SHIFT        (8U)
#define GRF_DDR_STATUS0_GRF_ST_HPR_CREDIT_CNT_MASK         (0x7FU << GRF_DDR_STATUS0_GRF_ST_HPR_CREDIT_CNT_SHIFT)       /* 0x00007F00 */
#define GRF_DDR_STATUS0_GRF_ST_WR_CREDIT_CNT_SHIFT         (16U)
#define GRF_DDR_STATUS0_GRF_ST_WR_CREDIT_CNT_MASK          (0x7FU << GRF_DDR_STATUS0_GRF_ST_WR_CREDIT_CNT_SHIFT)        /* 0x007F0000 */
/* DDR_STATUS1 */
#define GRF_DDR_STATUS1_OFFSET                             (0x114U)
#define GRF_DDR_STATUS1_CSYSREQ_DDRC_SHIFT                 (0U)
#define GRF_DDR_STATUS1_CSYSREQ_DDRC_MASK                  (0x1U << GRF_DDR_STATUS1_CSYSREQ_DDRC_SHIFT)                 /* 0x00000001 */
#define GRF_DDR_STATUS1_CSYSACK_DDRC_SHIFT                 (1U)
#define GRF_DDR_STATUS1_CSYSACK_DDRC_MASK                  (0x1U << GRF_DDR_STATUS1_CSYSACK_DDRC_SHIFT)                 /* 0x00000002 */
#define GRF_DDR_STATUS1_CACTIVE_DDRC_SHIFT                 (2U)
#define GRF_DDR_STATUS1_CACTIVE_DDRC_MASK                  (0x1U << GRF_DDR_STATUS1_CACTIVE_DDRC_SHIFT)                 /* 0x00000004 */
#define GRF_DDR_STATUS1_CSYSREQ_AXI0_SHIFT                 (3U)
#define GRF_DDR_STATUS1_CSYSREQ_AXI0_MASK                  (0x1U << GRF_DDR_STATUS1_CSYSREQ_AXI0_SHIFT)                 /* 0x00000008 */
#define GRF_DDR_STATUS1_CSYSACK_AXI0_SHIFT                 (4U)
#define GRF_DDR_STATUS1_CSYSACK_AXI0_MASK                  (0x1U << GRF_DDR_STATUS1_CSYSACK_AXI0_SHIFT)                 /* 0x00000010 */
#define GRF_DDR_STATUS1_CACTIVE_AXI0_SHIFT                 (5U)
#define GRF_DDR_STATUS1_CACTIVE_AXI0_MASK                  (0x1U << GRF_DDR_STATUS1_CACTIVE_AXI0_SHIFT)                 /* 0x00000020 */
#define GRF_DDR_STATUS1_CSYSREQ_AXI1_SHIFT                 (6U)
#define GRF_DDR_STATUS1_CSYSREQ_AXI1_MASK                  (0x1U << GRF_DDR_STATUS1_CSYSREQ_AXI1_SHIFT)                 /* 0x00000040 */
#define GRF_DDR_STATUS1_CSYSACK_AXI1_SHIFT                 (7U)
#define GRF_DDR_STATUS1_CSYSACK_AXI1_MASK                  (0x1U << GRF_DDR_STATUS1_CSYSACK_AXI1_SHIFT)                 /* 0x00000080 */
#define GRF_DDR_STATUS1_CACTIVE_AXI1_SHIFT                 (8U)
#define GRF_DDR_STATUS1_CACTIVE_AXI1_MASK                  (0x1U << GRF_DDR_STATUS1_CACTIVE_AXI1_SHIFT)                 /* 0x00000100 */
#define GRF_DDR_STATUS1_GRF_ST_STAT_DDRC_REG_SELFREF_TYPE_SHIFT (9U)
#define GRF_DDR_STATUS1_GRF_ST_STAT_DDRC_REG_SELFREF_TYPE_MASK (0x1U << GRF_DDR_STATUS1_GRF_ST_STAT_DDRC_REG_SELFREF_TYPE_SHIFT) /* 0x00000200 */
/* USBPHY_STATUS */
#define GRF_USBPHY_STATUS_OFFSET                           (0x118U)
#define GRF_USBPHY_STATUS_USBOTG0_UTMI_BVALID_SHIFT        (0U)
#define GRF_USBPHY_STATUS_USBOTG0_UTMI_BVALID_MASK         (0x1U << GRF_USBPHY_STATUS_USBOTG0_UTMI_BVALID_SHIFT)        /* 0x00000001 */
#define GRF_USBPHY_STATUS_USBOTG0_UTMI_AVALID_SHIFT        (1U)
#define GRF_USBPHY_STATUS_USBOTG0_UTMI_AVALID_MASK         (0x1U << GRF_USBPHY_STATUS_USBOTG0_UTMI_AVALID_SHIFT)        /* 0x00000002 */
#define GRF_USBPHY_STATUS_USBOTG0_UTMI_VBUSVALID_SHIFT     (2U)
#define GRF_USBPHY_STATUS_USBOTG0_UTMI_VBUSVALID_MASK      (0x1U << GRF_USBPHY_STATUS_USBOTG0_UTMI_VBUSVALID_SHIFT)     /* 0x00000004 */
#define GRF_USBPHY_STATUS_USBOTG0_UTMI_SESSEND_SHIFT       (3U)
#define GRF_USBPHY_STATUS_USBOTG0_UTMI_SESSEND_MASK        (0x1U << GRF_USBPHY_STATUS_USBOTG0_UTMI_SESSEND_SHIFT)       /* 0x00000008 */
#define GRF_USBPHY_STATUS_USBOTG0_UTMI_LINESTATE_SHIFT     (4U)
#define GRF_USBPHY_STATUS_USBOTG0_UTMI_LINESTATE_MASK      (0x3U << GRF_USBPHY_STATUS_USBOTG0_UTMI_LINESTATE_SHIFT)     /* 0x00000030 */
#define GRF_USBPHY_STATUS_USBOTG0_UTMI_IDDIG_SHIFT         (6U)
#define GRF_USBPHY_STATUS_USBOTG0_UTMI_IDDIG_MASK          (0x1U << GRF_USBPHY_STATUS_USBOTG0_UTMI_IDDIG_SHIFT)         /* 0x00000040 */
#define GRF_USBPHY_STATUS_USBOTG0_UTMI_HOSTDISCONNECT_SHIFT (7U)
#define GRF_USBPHY_STATUS_USBOTG0_UTMI_HOSTDISCONNECT_MASK (0x1U << GRF_USBPHY_STATUS_USBOTG0_UTMI_HOSTDISCONNECT_SHIFT) /* 0x00000080 */
#define GRF_USBPHY_STATUS_USBOTG1_UTMI_BVALID_SHIFT        (8U)
#define GRF_USBPHY_STATUS_USBOTG1_UTMI_BVALID_MASK         (0x1U << GRF_USBPHY_STATUS_USBOTG1_UTMI_BVALID_SHIFT)        /* 0x00000100 */
#define GRF_USBPHY_STATUS_USBOTG1_UTMI_AVALID_SHIFT        (9U)
#define GRF_USBPHY_STATUS_USBOTG1_UTMI_AVALID_MASK         (0x1U << GRF_USBPHY_STATUS_USBOTG1_UTMI_AVALID_SHIFT)        /* 0x00000200 */
#define GRF_USBPHY_STATUS_USBOTG1_UTMI_VBUSVALID_SHIFT     (10U)
#define GRF_USBPHY_STATUS_USBOTG1_UTMI_VBUSVALID_MASK      (0x1U << GRF_USBPHY_STATUS_USBOTG1_UTMI_VBUSVALID_SHIFT)     /* 0x00000400 */
#define GRF_USBPHY_STATUS_USBOTG1_UTMI_SESSEND_SHIFT       (11U)
#define GRF_USBPHY_STATUS_USBOTG1_UTMI_SESSEND_MASK        (0x1U << GRF_USBPHY_STATUS_USBOTG1_UTMI_SESSEND_SHIFT)       /* 0x00000800 */
#define GRF_USBPHY_STATUS_USBOTG1_UTMI_LINESTATE_SHIFT     (12U)
#define GRF_USBPHY_STATUS_USBOTG1_UTMI_LINESTATE_MASK      (0x3U << GRF_USBPHY_STATUS_USBOTG1_UTMI_LINESTATE_SHIFT)     /* 0x00003000 */
#define GRF_USBPHY_STATUS_USBOTG1_UTMI_IDDIG_SHIFT         (14U)
#define GRF_USBPHY_STATUS_USBOTG1_UTMI_IDDIG_MASK          (0x1U << GRF_USBPHY_STATUS_USBOTG1_UTMI_IDDIG_SHIFT)         /* 0x00004000 */
#define GRF_USBPHY_STATUS_USBOTG1_UTMI_HOSTDISCONNECT_SHIFT (15U)
#define GRF_USBPHY_STATUS_USBOTG1_UTMI_HOSTDISCONNECT_MASK (0x1U << GRF_USBPHY_STATUS_USBOTG1_UTMI_HOSTDISCONNECT_SHIFT) /* 0x00008000 */
#define GRF_USBPHY_STATUS_USBPHY_DM_FLOATDET_SHIFT         (16U)
#define GRF_USBPHY_STATUS_USBPHY_DM_FLOATDET_MASK          (0x1U << GRF_USBPHY_STATUS_USBPHY_DM_FLOATDET_SHIFT)         /* 0x00010000 */
#define GRF_USBPHY_STATUS_USBPHY_DP_FLOATDET_SHIFT         (17U)
#define GRF_USBPHY_STATUS_USBPHY_DP_FLOATDET_MASK          (0x1U << GRF_USBPHY_STATUS_USBPHY_DP_FLOATDET_SHIFT)         /* 0x00020000 */
#define GRF_USBPHY_STATUS_USBPHY_DCP_DETECTED_SHIFT        (18U)
#define GRF_USBPHY_STATUS_USBPHY_DCP_DETECTED_MASK         (0x1U << GRF_USBPHY_STATUS_USBPHY_DCP_DETECTED_SHIFT)        /* 0x00040000 */
#define GRF_USBPHY_STATUS_USBPHY_CP_DETECTED_SHIFT         (19U)
#define GRF_USBPHY_STATUS_USBPHY_CP_DETECTED_MASK          (0x1U << GRF_USBPHY_STATUS_USBPHY_CP_DETECTED_SHIFT)         /* 0x00080000 */
#define GRF_USBPHY_STATUS_USBPHY_DP_ATTACHED_SHIFT         (20U)
#define GRF_USBPHY_STATUS_USBPHY_DP_ATTACHED_MASK          (0x1U << GRF_USBPHY_STATUS_USBPHY_DP_ATTACHED_SHIFT)         /* 0x00100000 */
#define GRF_USBPHY_STATUS_USBOTG0_PHY_LS_FS_RCV_SHIFT      (21U)
#define GRF_USBPHY_STATUS_USBOTG0_PHY_LS_FS_RCV_MASK       (0x1U << GRF_USBPHY_STATUS_USBOTG0_PHY_LS_FS_RCV_SHIFT)      /* 0x00200000 */
#define GRF_USBPHY_STATUS_USBOTG0_UTMI_VMI_SHIFT           (22U)
#define GRF_USBPHY_STATUS_USBOTG0_UTMI_VMI_MASK            (0x1U << GRF_USBPHY_STATUS_USBOTG0_UTMI_VMI_SHIFT)           /* 0x00400000 */
#define GRF_USBPHY_STATUS_USBOTG0_PHY_UTMI_VPI_SHIFT       (23U)
#define GRF_USBPHY_STATUS_USBOTG0_PHY_UTMI_VPI_MASK        (0x1U << GRF_USBPHY_STATUS_USBOTG0_PHY_UTMI_VPI_SHIFT)       /* 0x00800000 */
#define GRF_USBPHY_STATUS_USBOTG1_PHY_LS_FS_RCV_SHIFT      (24U)
#define GRF_USBPHY_STATUS_USBOTG1_PHY_LS_FS_RCV_MASK       (0x1U << GRF_USBPHY_STATUS_USBOTG1_PHY_LS_FS_RCV_SHIFT)      /* 0x01000000 */
#define GRF_USBPHY_STATUS_USBOTG1_UTMI_VMI_SHIFT           (25U)
#define GRF_USBPHY_STATUS_USBOTG1_UTMI_VMI_MASK            (0x1U << GRF_USBPHY_STATUS_USBOTG1_UTMI_VMI_SHIFT)           /* 0x02000000 */
#define GRF_USBPHY_STATUS_USBOTG1_PHY_UTMI_VPI_SHIFT       (26U)
#define GRF_USBPHY_STATUS_USBOTG1_PHY_UTMI_VPI_MASK        (0x1U << GRF_USBPHY_STATUS_USBOTG1_PHY_UTMI_VPI_SHIFT)       /* 0x04000000 */
/* USBOTG0_SIG_DETECT_CON */
#define GRF_USBOTG0_SIG_DETECT_CON_OFFSET                  (0x150U)
#define GRF_USBOTG0_SIG_DETECT_CON_OTG0_LINESTATE_IRQ_EN_SHIFT (0U)
#define GRF_USBOTG0_SIG_DETECT_CON_OTG0_LINESTATE_IRQ_EN_MASK (0x1U << GRF_USBOTG0_SIG_DETECT_CON_OTG0_LINESTATE_IRQ_EN_SHIFT) /* 0x00000001 */
#define GRF_USBOTG0_SIG_DETECT_CON_OTG0_BVALID_RISE_IRQ_EN_SHIFT (2U)
#define GRF_USBOTG0_SIG_DETECT_CON_OTG0_BVALID_RISE_IRQ_EN_MASK (0x1U << GRF_USBOTG0_SIG_DETECT_CON_OTG0_BVALID_RISE_IRQ_EN_SHIFT) /* 0x00000004 */
#define GRF_USBOTG0_SIG_DETECT_CON_OTG0_BVALID_FALL_IRQ_EN_SHIFT (3U)
#define GRF_USBOTG0_SIG_DETECT_CON_OTG0_BVALID_FALL_IRQ_EN_MASK (0x1U << GRF_USBOTG0_SIG_DETECT_CON_OTG0_BVALID_FALL_IRQ_EN_SHIFT) /* 0x00000008 */
#define GRF_USBOTG0_SIG_DETECT_CON_OTG0_ID_RISE_IRQ_EN_SHIFT (4U)
#define GRF_USBOTG0_SIG_DETECT_CON_OTG0_ID_RISE_IRQ_EN_MASK (0x1U << GRF_USBOTG0_SIG_DETECT_CON_OTG0_ID_RISE_IRQ_EN_SHIFT) /* 0x00000010 */
#define GRF_USBOTG0_SIG_DETECT_CON_OTG0_ID_FALL_IRQ_EN_SHIFT (5U)
#define GRF_USBOTG0_SIG_DETECT_CON_OTG0_ID_FALL_IRQ_EN_MASK (0x1U << GRF_USBOTG0_SIG_DETECT_CON_OTG0_ID_FALL_IRQ_EN_SHIFT) /* 0x00000020 */
#define GRF_USBOTG0_SIG_DETECT_CON_OTG0_DISCONNECT_RISE_IRQ_EN_SHIFT (6U)
#define GRF_USBOTG0_SIG_DETECT_CON_OTG0_DISCONNECT_RISE_IRQ_EN_MASK (0x1U << GRF_USBOTG0_SIG_DETECT_CON_OTG0_DISCONNECT_RISE_IRQ_EN_SHIFT) /* 0x00000040 */
#define GRF_USBOTG0_SIG_DETECT_CON_OTG0_DISCONNECT_FALL_IRQ_EN_SHIFT (7U)
#define GRF_USBOTG0_SIG_DETECT_CON_OTG0_DISCONNECT_FALL_IRQ_EN_MASK (0x1U << GRF_USBOTG0_SIG_DETECT_CON_OTG0_DISCONNECT_FALL_IRQ_EN_SHIFT) /* 0x00000080 */
#define GRF_USBOTG0_SIG_DETECT_CON_OTG0_VBUSVALID_RISE_IRQ_EN_SHIFT (8U)
#define GRF_USBOTG0_SIG_DETECT_CON_OTG0_VBUSVALID_RISE_IRQ_EN_MASK (0x1U << GRF_USBOTG0_SIG_DETECT_CON_OTG0_VBUSVALID_RISE_IRQ_EN_SHIFT) /* 0x00000100 */
#define GRF_USBOTG0_SIG_DETECT_CON_OTG0_VBUSVALID_FALL_IRQ_EN_SHIFT (9U)
#define GRF_USBOTG0_SIG_DETECT_CON_OTG0_VBUSVALID_FALL_IRQ_EN_MASK (0x1U << GRF_USBOTG0_SIG_DETECT_CON_OTG0_VBUSVALID_FALL_IRQ_EN_SHIFT) /* 0x00000200 */
/* USBOTG0_SIG_DETECT_STATUS */
#define GRF_USBOTG0_SIG_DETECT_STATUS_OFFSET               (0x154U)
#define GRF_USBOTG0_SIG_DETECT_STATUS                      (0x0U)
#define GRF_USBOTG0_SIG_DETECT_STATUS_OTG0_LINESTATE_IRQ_SHIFT (0U)
#define GRF_USBOTG0_SIG_DETECT_STATUS_OTG0_LINESTATE_IRQ_MASK (0x1U << GRF_USBOTG0_SIG_DETECT_STATUS_OTG0_LINESTATE_IRQ_SHIFT) /* 0x00000001 */
#define GRF_USBOTG0_SIG_DETECT_STATUS_OTG0_BVALID_RISE_IRQ_SHIFT (2U)
#define GRF_USBOTG0_SIG_DETECT_STATUS_OTG0_BVALID_RISE_IRQ_MASK (0x1U << GRF_USBOTG0_SIG_DETECT_STATUS_OTG0_BVALID_RISE_IRQ_SHIFT) /* 0x00000004 */
#define GRF_USBOTG0_SIG_DETECT_STATUS_OTG0_BVALID_FALL_IRQ_SHIFT (3U)
#define GRF_USBOTG0_SIG_DETECT_STATUS_OTG0_BVALID_FALL_IRQ_MASK (0x1U << GRF_USBOTG0_SIG_DETECT_STATUS_OTG0_BVALID_FALL_IRQ_SHIFT) /* 0x00000008 */
#define GRF_USBOTG0_SIG_DETECT_STATUS_OTG0_ID_RISE_IRQ_SHIFT (4U)
#define GRF_USBOTG0_SIG_DETECT_STATUS_OTG0_ID_RISE_IRQ_MASK (0x1U << GRF_USBOTG0_SIG_DETECT_STATUS_OTG0_ID_RISE_IRQ_SHIFT) /* 0x00000010 */
#define GRF_USBOTG0_SIG_DETECT_STATUS_OTG0_ID_FALL_IRQ_SHIFT (5U)
#define GRF_USBOTG0_SIG_DETECT_STATUS_OTG0_ID_FALL_IRQ_MASK (0x1U << GRF_USBOTG0_SIG_DETECT_STATUS_OTG0_ID_FALL_IRQ_SHIFT) /* 0x00000020 */
#define GRF_USBOTG0_SIG_DETECT_STATUS_OTG0_DISCONNECT_RISE_IRQ_SHIFT (6U)
#define GRF_USBOTG0_SIG_DETECT_STATUS_OTG0_DISCONNECT_RISE_IRQ_MASK (0x1U << GRF_USBOTG0_SIG_DETECT_STATUS_OTG0_DISCONNECT_RISE_IRQ_SHIFT) /* 0x00000040 */
#define GRF_USBOTG0_SIG_DETECT_STATUS_OTG0_DISCONNECT_FALL_IRQ_SHIFT (7U)
#define GRF_USBOTG0_SIG_DETECT_STATUS_OTG0_DISCONNECT_FALL_IRQ_MASK (0x1U << GRF_USBOTG0_SIG_DETECT_STATUS_OTG0_DISCONNECT_FALL_IRQ_SHIFT) /* 0x00000080 */
#define GRF_USBOTG0_SIG_DETECT_STATUS_OTG0_VBUSVALID_RISE_IRQ_SHIFT (8U)
#define GRF_USBOTG0_SIG_DETECT_STATUS_OTG0_VBUSVALID_RISE_IRQ_MASK (0x1U << GRF_USBOTG0_SIG_DETECT_STATUS_OTG0_VBUSVALID_RISE_IRQ_SHIFT) /* 0x00000100 */
#define GRF_USBOTG0_SIG_DETECT_STATUS_OTG0_VBUSVALID_FALL_IRQ_SHIFT (9U)
#define GRF_USBOTG0_SIG_DETECT_STATUS_OTG0_VBUSVALID_FALL_IRQ_MASK (0x1U << GRF_USBOTG0_SIG_DETECT_STATUS_OTG0_VBUSVALID_FALL_IRQ_SHIFT) /* 0x00000200 */
/* USBOTG0_SIG_DETECT_CLR */
#define GRF_USBOTG0_SIG_DETECT_CLR_OFFSET                  (0x158U)
#define GRF_USBOTG0_SIG_DETECT_CLR_OTG0_LINESTATE_IRQ_CLR_SHIFT (0U)
#define GRF_USBOTG0_SIG_DETECT_CLR_OTG0_LINESTATE_IRQ_CLR_MASK (0x1U << GRF_USBOTG0_SIG_DETECT_CLR_OTG0_LINESTATE_IRQ_CLR_SHIFT) /* 0x00000001 */
#define GRF_USBOTG0_SIG_DETECT_CLR_OTG0_BVALID_RISE_IRQ_CLR_SHIFT (2U)
#define GRF_USBOTG0_SIG_DETECT_CLR_OTG0_BVALID_RISE_IRQ_CLR_MASK (0x1U << GRF_USBOTG0_SIG_DETECT_CLR_OTG0_BVALID_RISE_IRQ_CLR_SHIFT) /* 0x00000004 */
#define GRF_USBOTG0_SIG_DETECT_CLR_OTG0_BVALID_FALL_IRQ_CLR_SHIFT (3U)
#define GRF_USBOTG0_SIG_DETECT_CLR_OTG0_BVALID_FALL_IRQ_CLR_MASK (0x1U << GRF_USBOTG0_SIG_DETECT_CLR_OTG0_BVALID_FALL_IRQ_CLR_SHIFT) /* 0x00000008 */
#define GRF_USBOTG0_SIG_DETECT_CLR_OTG0_ID_RISE_IRQ_CLR_SHIFT (4U)
#define GRF_USBOTG0_SIG_DETECT_CLR_OTG0_ID_RISE_IRQ_CLR_MASK (0x1U << GRF_USBOTG0_SIG_DETECT_CLR_OTG0_ID_RISE_IRQ_CLR_SHIFT) /* 0x00000010 */
#define GRF_USBOTG0_SIG_DETECT_CLR_OTG0_ID_FALL_IRQ_CLR_SHIFT (5U)
#define GRF_USBOTG0_SIG_DETECT_CLR_OTG0_ID_FALL_IRQ_CLR_MASK (0x1U << GRF_USBOTG0_SIG_DETECT_CLR_OTG0_ID_FALL_IRQ_CLR_SHIFT) /* 0x00000020 */
#define GRF_USBOTG0_SIG_DETECT_CLR_OTG0_DISCONNECT_RISE_IRQ_CLR_SHIFT (6U)
#define GRF_USBOTG0_SIG_DETECT_CLR_OTG0_DISCONNECT_RISE_IRQ_CLR_MASK (0x1U << GRF_USBOTG0_SIG_DETECT_CLR_OTG0_DISCONNECT_RISE_IRQ_CLR_SHIFT) /* 0x00000040 */
#define GRF_USBOTG0_SIG_DETECT_CLR_OTG0_DISCONNECT_FALL_IRQ_CLR_SHIFT (7U)
#define GRF_USBOTG0_SIG_DETECT_CLR_OTG0_DISCONNECT_FALL_IRQ_CLR_MASK (0x1U << GRF_USBOTG0_SIG_DETECT_CLR_OTG0_DISCONNECT_FALL_IRQ_CLR_SHIFT) /* 0x00000080 */
/* USBOTG0_VBUSVALID_DETECT_CON */
#define GRF_USBOTG0_VBUSVALID_DETECT_CON_OFFSET            (0x15CU)
#define GRF_USBOTG0_VBUSVALID_DETECT_CON_OTG0_VBUSVALID_DETECT_CON_SHIFT (0U)
#define GRF_USBOTG0_VBUSVALID_DETECT_CON_OTG0_VBUSVALID_DETECT_CON_MASK (0xFFFFFU << GRF_USBOTG0_VBUSVALID_DETECT_CON_OTG0_VBUSVALID_DETECT_CON_SHIFT) /* 0x000FFFFF */
/* USBOTG0_LINESTATE_DETECT_CON */
#define GRF_USBOTG0_LINESTATE_DETECT_CON_OFFSET            (0x160U)
#define GRF_USBOTG0_LINESTATE_DETECT_CON_OTG0_LINESTATE_DETECT_CON_SHIFT (0U)
#define GRF_USBOTG0_LINESTATE_DETECT_CON_OTG0_LINESTATE_DETECT_CON_MASK (0xFFFFFU << GRF_USBOTG0_LINESTATE_DETECT_CON_OTG0_LINESTATE_DETECT_CON_SHIFT) /* 0x000FFFFF */
/* USBOTG0_DISCONNECT_DETECT_CON */
#define GRF_USBOTG0_DISCONNECT_DETECT_CON_OFFSET           (0x164U)
#define GRF_USBOTG0_DISCONNECT_DETECT_CON_OTG0_DISCONNECT_DETECT_CON_SHIFT (0U)
#define GRF_USBOTG0_DISCONNECT_DETECT_CON_OTG0_DISCONNECT_DETECT_CON_MASK (0xFFFFFU << GRF_USBOTG0_DISCONNECT_DETECT_CON_OTG0_DISCONNECT_DETECT_CON_SHIFT) /* 0x000FFFFF */
/* USBOTG0_BVALID_DETECT_CON */
#define GRF_USBOTG0_BVALID_DETECT_CON_OFFSET               (0x168U)
#define GRF_USBOTG0_BVALID_DETECT_CON_OTG0_BVALID_DETECT_CON_SHIFT (0U)
#define GRF_USBOTG0_BVALID_DETECT_CON_OTG0_BVALID_DETECT_CON_MASK (0xFFFFFU << GRF_USBOTG0_BVALID_DETECT_CON_OTG0_BVALID_DETECT_CON_SHIFT) /* 0x000FFFFF */
/* USBOTG0_ID_DETECT_CON */
#define GRF_USBOTG0_ID_DETECT_CON_OFFSET                   (0x16CU)
#define GRF_USBOTG0_ID_DETECT_CON_OTG0_ID_DETECT_CON_SHIFT (0U)
#define GRF_USBOTG0_ID_DETECT_CON_OTG0_ID_DETECT_CON_MASK  (0xFFFFFFFU << GRF_USBOTG0_ID_DETECT_CON_OTG0_ID_DETECT_CON_SHIFT) /* 0x0FFFFFFF */
/* USBOTG1_SIG_DETECT_CON */
#define GRF_USBOTG1_SIG_DETECT_CON_OFFSET                  (0x170U)
#define GRF_USBOTG1_SIG_DETECT_CON_OTG1_LINESTATE_IRQ_EN_SHIFT (0U)
#define GRF_USBOTG1_SIG_DETECT_CON_OTG1_LINESTATE_IRQ_EN_MASK (0x1U << GRF_USBOTG1_SIG_DETECT_CON_OTG1_LINESTATE_IRQ_EN_SHIFT) /* 0x00000001 */
#define GRF_USBOTG1_SIG_DETECT_CON_OTG1_BVALID_RISE_IRQ_EN_SHIFT (2U)
#define GRF_USBOTG1_SIG_DETECT_CON_OTG1_BVALID_RISE_IRQ_EN_MASK (0x1U << GRF_USBOTG1_SIG_DETECT_CON_OTG1_BVALID_RISE_IRQ_EN_SHIFT) /* 0x00000004 */
#define GRF_USBOTG1_SIG_DETECT_CON_OTG1_BVALID_FALL_IRQ_EN_SHIFT (3U)
#define GRF_USBOTG1_SIG_DETECT_CON_OTG1_BVALID_FALL_IRQ_EN_MASK (0x1U << GRF_USBOTG1_SIG_DETECT_CON_OTG1_BVALID_FALL_IRQ_EN_SHIFT) /* 0x00000008 */
#define GRF_USBOTG1_SIG_DETECT_CON_OTG1_ID_RISE_IRQ_EN_SHIFT (4U)
#define GRF_USBOTG1_SIG_DETECT_CON_OTG1_ID_RISE_IRQ_EN_MASK (0x1U << GRF_USBOTG1_SIG_DETECT_CON_OTG1_ID_RISE_IRQ_EN_SHIFT) /* 0x00000010 */
#define GRF_USBOTG1_SIG_DETECT_CON_OTG1_ID_FALL_IRQ_EN_SHIFT (5U)
#define GRF_USBOTG1_SIG_DETECT_CON_OTG1_ID_FALL_IRQ_EN_MASK (0x1U << GRF_USBOTG1_SIG_DETECT_CON_OTG1_ID_FALL_IRQ_EN_SHIFT) /* 0x00000020 */
#define GRF_USBOTG1_SIG_DETECT_CON_OTG1_DISCONNECT_RISE_IRQ_EN_SHIFT (6U)
#define GRF_USBOTG1_SIG_DETECT_CON_OTG1_DISCONNECT_RISE_IRQ_EN_MASK (0x1U << GRF_USBOTG1_SIG_DETECT_CON_OTG1_DISCONNECT_RISE_IRQ_EN_SHIFT) /* 0x00000040 */
#define GRF_USBOTG1_SIG_DETECT_CON_OTG1_DISCONNECT_FALL_IRQ_EN_SHIFT (7U)
#define GRF_USBOTG1_SIG_DETECT_CON_OTG1_DISCONNECT_FALL_IRQ_EN_MASK (0x1U << GRF_USBOTG1_SIG_DETECT_CON_OTG1_DISCONNECT_FALL_IRQ_EN_SHIFT) /* 0x00000080 */
#define GRF_USBOTG1_SIG_DETECT_CON_OTG1_VBUSVALID_RISE_IRQ_EN_SHIFT (8U)
#define GRF_USBOTG1_SIG_DETECT_CON_OTG1_VBUSVALID_RISE_IRQ_EN_MASK (0x1U << GRF_USBOTG1_SIG_DETECT_CON_OTG1_VBUSVALID_RISE_IRQ_EN_SHIFT) /* 0x00000100 */
#define GRF_USBOTG1_SIG_DETECT_CON_OTG1_VBUSVALID_FALL_IRQ_EN_SHIFT (9U)
#define GRF_USBOTG1_SIG_DETECT_CON_OTG1_VBUSVALID_FALL_IRQ_EN_MASK (0x1U << GRF_USBOTG1_SIG_DETECT_CON_OTG1_VBUSVALID_FALL_IRQ_EN_SHIFT) /* 0x00000200 */
/* USBOTG1_SIG_DETECT_STATUS */
#define GRF_USBOTG1_SIG_DETECT_STATUS_OFFSET               (0x174U)
#define GRF_USBOTG1_SIG_DETECT_STATUS                      (0x0U)
#define GRF_USBOTG1_SIG_DETECT_STATUS_OTG1_LINESTATE_IRQ_SHIFT (0U)
#define GRF_USBOTG1_SIG_DETECT_STATUS_OTG1_LINESTATE_IRQ_MASK (0x1U << GRF_USBOTG1_SIG_DETECT_STATUS_OTG1_LINESTATE_IRQ_SHIFT) /* 0x00000001 */
#define GRF_USBOTG1_SIG_DETECT_STATUS_OTG1_BVALID_RISE_IRQ_SHIFT (2U)
#define GRF_USBOTG1_SIG_DETECT_STATUS_OTG1_BVALID_RISE_IRQ_MASK (0x1U << GRF_USBOTG1_SIG_DETECT_STATUS_OTG1_BVALID_RISE_IRQ_SHIFT) /* 0x00000004 */
#define GRF_USBOTG1_SIG_DETECT_STATUS_OTG1_BVALID_FALL_IRQ_SHIFT (3U)
#define GRF_USBOTG1_SIG_DETECT_STATUS_OTG1_BVALID_FALL_IRQ_MASK (0x1U << GRF_USBOTG1_SIG_DETECT_STATUS_OTG1_BVALID_FALL_IRQ_SHIFT) /* 0x00000008 */
#define GRF_USBOTG1_SIG_DETECT_STATUS_OTG1_ID_RISE_IRQ_SHIFT (4U)
#define GRF_USBOTG1_SIG_DETECT_STATUS_OTG1_ID_RISE_IRQ_MASK (0x1U << GRF_USBOTG1_SIG_DETECT_STATUS_OTG1_ID_RISE_IRQ_SHIFT) /* 0x00000010 */
#define GRF_USBOTG1_SIG_DETECT_STATUS_OTG1_ID_FALL_IRQ_SHIFT (5U)
#define GRF_USBOTG1_SIG_DETECT_STATUS_OTG1_ID_FALL_IRQ_MASK (0x1U << GRF_USBOTG1_SIG_DETECT_STATUS_OTG1_ID_FALL_IRQ_SHIFT) /* 0x00000020 */
#define GRF_USBOTG1_SIG_DETECT_STATUS_OTG1_DISCONNECT_RISE_IRQ_SHIFT (6U)
#define GRF_USBOTG1_SIG_DETECT_STATUS_OTG1_DISCONNECT_RISE_IRQ_MASK (0x1U << GRF_USBOTG1_SIG_DETECT_STATUS_OTG1_DISCONNECT_RISE_IRQ_SHIFT) /* 0x00000040 */
#define GRF_USBOTG1_SIG_DETECT_STATUS_OTG1_DISCONNECT_FALL_IRQ_SHIFT (7U)
#define GRF_USBOTG1_SIG_DETECT_STATUS_OTG1_DISCONNECT_FALL_IRQ_MASK (0x1U << GRF_USBOTG1_SIG_DETECT_STATUS_OTG1_DISCONNECT_FALL_IRQ_SHIFT) /* 0x00000080 */
#define GRF_USBOTG1_SIG_DETECT_STATUS_OTG1_VBUSVALID_RISE_IRQ_SHIFT (8U)
#define GRF_USBOTG1_SIG_DETECT_STATUS_OTG1_VBUSVALID_RISE_IRQ_MASK (0x1U << GRF_USBOTG1_SIG_DETECT_STATUS_OTG1_VBUSVALID_RISE_IRQ_SHIFT) /* 0x00000100 */
#define GRF_USBOTG1_SIG_DETECT_STATUS_OTG1_VBUSVALID_FALL_IRQ_SHIFT (9U)
#define GRF_USBOTG1_SIG_DETECT_STATUS_OTG1_VBUSVALID_FALL_IRQ_MASK (0x1U << GRF_USBOTG1_SIG_DETECT_STATUS_OTG1_VBUSVALID_FALL_IRQ_SHIFT) /* 0x00000200 */
/* USBOTG1_SIG_DETECT_CLR */
#define GRF_USBOTG1_SIG_DETECT_CLR_OFFSET                  (0x178U)
#define GRF_USBOTG1_SIG_DETECT_CLR_OTG1_LINESTATE_IRQ_CLR_SHIFT (0U)
#define GRF_USBOTG1_SIG_DETECT_CLR_OTG1_LINESTATE_IRQ_CLR_MASK (0x1U << GRF_USBOTG1_SIG_DETECT_CLR_OTG1_LINESTATE_IRQ_CLR_SHIFT) /* 0x00000001 */
#define GRF_USBOTG1_SIG_DETECT_CLR_OTG1_BVALID_RISE_IRQ_CLR_SHIFT (2U)
#define GRF_USBOTG1_SIG_DETECT_CLR_OTG1_BVALID_RISE_IRQ_CLR_MASK (0x1U << GRF_USBOTG1_SIG_DETECT_CLR_OTG1_BVALID_RISE_IRQ_CLR_SHIFT) /* 0x00000004 */
#define GRF_USBOTG1_SIG_DETECT_CLR_OTG1_BVALID_FALL_IRQ_CLR_SHIFT (3U)
#define GRF_USBOTG1_SIG_DETECT_CLR_OTG1_BVALID_FALL_IRQ_CLR_MASK (0x1U << GRF_USBOTG1_SIG_DETECT_CLR_OTG1_BVALID_FALL_IRQ_CLR_SHIFT) /* 0x00000008 */
#define GRF_USBOTG1_SIG_DETECT_CLR_OTG1_ID_RISE_IRQ_CLR_SHIFT (4U)
#define GRF_USBOTG1_SIG_DETECT_CLR_OTG1_ID_RISE_IRQ_CLR_MASK (0x1U << GRF_USBOTG1_SIG_DETECT_CLR_OTG1_ID_RISE_IRQ_CLR_SHIFT) /* 0x00000010 */
#define GRF_USBOTG1_SIG_DETECT_CLR_OTG1_ID_FALL_IRQ_CLR_SHIFT (5U)
#define GRF_USBOTG1_SIG_DETECT_CLR_OTG1_ID_FALL_IRQ_CLR_MASK (0x1U << GRF_USBOTG1_SIG_DETECT_CLR_OTG1_ID_FALL_IRQ_CLR_SHIFT) /* 0x00000020 */
#define GRF_USBOTG1_SIG_DETECT_CLR_OTG1_DISCONNECT_RISE_IRQ_CLR_SHIFT (6U)
#define GRF_USBOTG1_SIG_DETECT_CLR_OTG1_DISCONNECT_RISE_IRQ_CLR_MASK (0x1U << GRF_USBOTG1_SIG_DETECT_CLR_OTG1_DISCONNECT_RISE_IRQ_CLR_SHIFT) /* 0x00000040 */
#define GRF_USBOTG1_SIG_DETECT_CLR_OTG1_DISCONNECT_FALL_IRQ_CLR_SHIFT (7U)
#define GRF_USBOTG1_SIG_DETECT_CLR_OTG1_DISCONNECT_FALL_IRQ_CLR_MASK (0x1U << GRF_USBOTG1_SIG_DETECT_CLR_OTG1_DISCONNECT_FALL_IRQ_CLR_SHIFT) /* 0x00000080 */
/* USBOTG1_VBUSVALID_DETECT_CON */
#define GRF_USBOTG1_VBUSVALID_DETECT_CON_OFFSET            (0x17CU)
#define GRF_USBOTG1_VBUSVALID_DETECT_CON_OTG1_VBUSVALID_DETECT_CON_SHIFT (0U)
#define GRF_USBOTG1_VBUSVALID_DETECT_CON_OTG1_VBUSVALID_DETECT_CON_MASK (0xFFFFFU << GRF_USBOTG1_VBUSVALID_DETECT_CON_OTG1_VBUSVALID_DETECT_CON_SHIFT) /* 0x000FFFFF */
/* USBOTG1_LINESTATE_DETECT_CON */
#define GRF_USBOTG1_LINESTATE_DETECT_CON_OFFSET            (0x180U)
#define GRF_USBOTG1_LINESTATE_DETECT_CON_OTG1_LINESTATE_DETECT_CON_SHIFT (0U)
#define GRF_USBOTG1_LINESTATE_DETECT_CON_OTG1_LINESTATE_DETECT_CON_MASK (0xFFFFFU << GRF_USBOTG1_LINESTATE_DETECT_CON_OTG1_LINESTATE_DETECT_CON_SHIFT) /* 0x000FFFFF */
/* USBOTG1_DISCONNECT_DETECT_CON */
#define GRF_USBOTG1_DISCONNECT_DETECT_CON_OFFSET           (0x184U)
#define GRF_USBOTG1_DISCONNECT_DETECT_CON_OTG1_DISCONNECT_DETECT_CON_SHIFT (0U)
#define GRF_USBOTG1_DISCONNECT_DETECT_CON_OTG1_DISCONNECT_DETECT_CON_MASK (0xFFFFFU << GRF_USBOTG1_DISCONNECT_DETECT_CON_OTG1_DISCONNECT_DETECT_CON_SHIFT) /* 0x000FFFFF */
/* USBOTG1_BVALID_DETECT_CON */
#define GRF_USBOTG1_BVALID_DETECT_CON_OFFSET               (0x188U)
#define GRF_USBOTG1_BVALID_DETECT_CON_OTG1_BVALID_DETECT_CON_SHIFT (0U)
#define GRF_USBOTG1_BVALID_DETECT_CON_OTG1_BVALID_DETECT_CON_MASK (0xFFFFFU << GRF_USBOTG1_BVALID_DETECT_CON_OTG1_BVALID_DETECT_CON_SHIFT) /* 0x000FFFFF */
/* USBOTG1_ID_DETECT_CON */
#define GRF_USBOTG1_ID_DETECT_CON_OFFSET                   (0x18CU)
#define GRF_USBOTG1_ID_DETECT_CON_OTG1_ID_DETECT_CON_SHIFT (0U)
#define GRF_USBOTG1_ID_DETECT_CON_OTG1_ID_DETECT_CON_MASK  (0xFFFFFFFU << GRF_USBOTG1_ID_DETECT_CON_OTG1_ID_DETECT_CON_SHIFT) /* 0x0FFFFFFF */
/* MAC0_MCGR_ACK */
#define GRF_MAC0_MCGR_ACK_OFFSET                           (0x1A0U)
#define GRF_MAC0_MCGR_ACK_MAC0_MCGR_ACK_SHIFT              (0U)
#define GRF_MAC0_MCGR_ACK_MAC0_MCGR_ACK_MASK               (0x1U << GRF_MAC0_MCGR_ACK_MAC0_MCGR_ACK_SHIFT)              /* 0x00000001 */
/* MAC1_MCGR_ACK */
#define GRF_MAC1_MCGR_ACK_OFFSET                           (0x1A4U)
#define GRF_MAC1_MCGR_ACK_MAC1_MCGR_ACK_SHIFT              (0U)
#define GRF_MAC1_MCGR_ACK_MAC1_MCGR_ACK_MASK               (0x1U << GRF_MAC1_MCGR_ACK_MAC1_MCGR_ACK_SHIFT)              /* 0x00000001 */
/* OS_REG0 */
#define GRF_OS_REG0_OFFSET                                 (0x200U)
#define GRF_OS_REG0_OS_REG_SHIFT                           (0U)
#define GRF_OS_REG0_OS_REG_MASK                            (0xFFFFFFFFU << GRF_OS_REG0_OS_REG_SHIFT)                    /* 0xFFFFFFFF */
/* OS_REG1 */
#define GRF_OS_REG1_OFFSET                                 (0x204U)
#define GRF_OS_REG1_OS_REG_SHIFT                           (0U)
#define GRF_OS_REG1_OS_REG_MASK                            (0xFFFFFFFFU << GRF_OS_REG1_OS_REG_SHIFT)                    /* 0xFFFFFFFF */
/* OS_REG2 */
#define GRF_OS_REG2_OFFSET                                 (0x208U)
#define GRF_OS_REG2_OS_REG_SHIFT                           (0U)
#define GRF_OS_REG2_OS_REG_MASK                            (0xFFFFFFFFU << GRF_OS_REG2_OS_REG_SHIFT)                    /* 0xFFFFFFFF */
/* OS_REG3 */
#define GRF_OS_REG3_OFFSET                                 (0x20CU)
#define GRF_OS_REG3_OS_REG_SHIFT                           (0U)
#define GRF_OS_REG3_OS_REG_MASK                            (0xFFFFFFFFU << GRF_OS_REG3_OS_REG_SHIFT)                    /* 0xFFFFFFFF */
/* OS_REG4 */
#define GRF_OS_REG4_OFFSET                                 (0x210U)
#define GRF_OS_REG4_OS_REG_SHIFT                           (0U)
#define GRF_OS_REG4_OS_REG_MASK                            (0xFFFFFFFFU << GRF_OS_REG4_OS_REG_SHIFT)                    /* 0xFFFFFFFF */
/* OS_REG5 */
#define GRF_OS_REG5_OFFSET                                 (0x214U)
#define GRF_OS_REG5_OS_REG_SHIFT                           (0U)
#define GRF_OS_REG5_OS_REG_MASK                            (0xFFFFFFFFU << GRF_OS_REG5_OS_REG_SHIFT)                    /* 0xFFFFFFFF */
/* OS_REG6 */
#define GRF_OS_REG6_OFFSET                                 (0x218U)
#define GRF_OS_REG6_OS_REG_SHIFT                           (0U)
#define GRF_OS_REG6_OS_REG_MASK                            (0xFFFFFFFFU << GRF_OS_REG6_OS_REG_SHIFT)                    /* 0xFFFFFFFF */
/* OS_REG7 */
#define GRF_OS_REG7_OFFSET                                 (0x21CU)
#define GRF_OS_REG7_OS_REG_SHIFT                           (0U)
#define GRF_OS_REG7_OS_REG_MASK                            (0xFFFFFFFFU << GRF_OS_REG7_OS_REG_SHIFT)                    /* 0xFFFFFFFF */
/* OS_REG8 */
#define GRF_OS_REG8_OFFSET                                 (0x220U)
#define GRF_OS_REG8_OS_REG_SHIFT                           (0U)
#define GRF_OS_REG8_OS_REG_MASK                            (0xFFFFFFFFU << GRF_OS_REG8_OS_REG_SHIFT)                    /* 0xFFFFFFFF */
/* OS_REG9 */
#define GRF_OS_REG9_OFFSET                                 (0x224U)
#define GRF_OS_REG9_OS_REG_SHIFT                           (0U)
#define GRF_OS_REG9_OS_REG_MASK                            (0xFFFFFFFFU << GRF_OS_REG9_OS_REG_SHIFT)                    /* 0xFFFFFFFF */
/* OS_REG10 */
#define GRF_OS_REG10_OFFSET                                (0x228U)
#define GRF_OS_REG10_OS_REG_SHIFT                          (0U)
#define GRF_OS_REG10_OS_REG_MASK                           (0xFFFFFFFFU << GRF_OS_REG10_OS_REG_SHIFT)                   /* 0xFFFFFFFF */
/* OS_REG11 */
#define GRF_OS_REG11_OFFSET                                (0x22CU)
#define GRF_OS_REG11_OS_REG_SHIFT                          (0U)
#define GRF_OS_REG11_OS_REG_MASK                           (0xFFFFFFFFU << GRF_OS_REG11_OS_REG_SHIFT)                   /* 0xFFFFFFFF */
/* SOC_VERSION */
#define GRF_SOC_VERSION_OFFSET                             (0x300U)
#define GRF_SOC_VERSION_SOC_VERSION_SHIFT                  (0U)
#define GRF_SOC_VERSION_SOC_VERSION_MASK                   (0xFFFFFFFFU << GRF_SOC_VERSION_SOC_VERSION_SHIFT)           /* 0xFFFFFFFF */
/******************************************MBOX******************************************/
/* A2B_INTEN */
#define MBOX_A2B_INTEN_OFFSET                              (0x0U)
#define MBOX_A2B_INTEN_A2B_INTENX_SHIFT                    (0U)
#define MBOX_A2B_INTEN_A2B_INTENX_MASK                     (0x1U << MBOX_A2B_INTEN_A2B_INTENX_SHIFT)                    /* 0x00000001 */
#define MBOX_A2B_INTEN_A2B_TRIG_MODEX_SHIFT                (8U)
#define MBOX_A2B_INTEN_A2B_TRIG_MODEX_MASK                 (0x1U << MBOX_A2B_INTEN_A2B_TRIG_MODEX_SHIFT)                /* 0x00000100 */
/* A2B_STATUS */
#define MBOX_A2B_STATUS_OFFSET                             (0x4U)
#define MBOX_A2B_STATUS_A2B_INTX_SHIFT                     (0U)
#define MBOX_A2B_STATUS_A2B_INTX_MASK                      (0x1U << MBOX_A2B_STATUS_A2B_INTX_SHIFT)                     /* 0x00000001 */
/* A2B_CMD */
#define MBOX_A2B_CMD_OFFSET                                (0x8U)
#define MBOX_A2B_CMD_COMMAND_SHIFT                         (0U)
#define MBOX_A2B_CMD_COMMAND_MASK                          (0xFFFFFFFFU << MBOX_A2B_CMD_COMMAND_SHIFT)                  /* 0xFFFFFFFF */
/* A2B_DATA */
#define MBOX_A2B_DATA_OFFSET                               (0xCU)
#define MBOX_A2B_DATA_DATA_SHIFT                           (0U)
#define MBOX_A2B_DATA_DATA_MASK                            (0xFFFFFFFFU << MBOX_A2B_DATA_DATA_SHIFT)                    /* 0xFFFFFFFF */
/* B2A_INTEN */
#define MBOX_B2A_INTEN_OFFSET                              (0x10U)
#define MBOX_B2A_INTEN_B2A_INTENX_SHIFT                    (0U)
#define MBOX_B2A_INTEN_B2A_INTENX_MASK                     (0x1U << MBOX_B2A_INTEN_B2A_INTENX_SHIFT)                    /* 0x00000001 */
#define MBOX_B2A_INTEN_B2A_TRIG_MODEX_SHIFT                (8U)
#define MBOX_B2A_INTEN_B2A_TRIG_MODEX_MASK                 (0x1U << MBOX_B2A_INTEN_B2A_TRIG_MODEX_SHIFT)                /* 0x00000100 */
/* B2A_STATUS */
#define MBOX_B2A_STATUS_OFFSET                             (0x14U)
#define MBOX_B2A_STATUS_B2A_INTX_SHIFT                     (0U)
#define MBOX_B2A_STATUS_B2A_INTX_MASK                      (0x1U << MBOX_B2A_STATUS_B2A_INTX_SHIFT)                     /* 0x00000001 */
/* B2A_CMD */
#define MBOX_B2A_CMD_OFFSET                                (0x18U)
#define MBOX_B2A_CMD_COMMAND_SHIFT                         (0U)
#define MBOX_B2A_CMD_COMMAND_MASK                          (0xFFFFFFFFU << MBOX_B2A_CMD_COMMAND_SHIFT)                  /* 0xFFFFFFFF */
/* B2A_DATA */
#define MBOX_B2A_DATA_OFFSET                               (0x1CU)
#define MBOX_B2A_DATA_DATA_SHIFT                           (0U)
#define MBOX_B2A_DATA_DATA_MASK                            (0xFFFFFFFFU << MBOX_B2A_DATA_DATA_SHIFT)                    /* 0xFFFFFFFF */
/*****************************************INTMUX*****************************************/
/* INT_ENABLE_GROUP0 */
#define INTMUX_INT_ENABLE_GROUP0_OFFSET                    (0x0U)
#define INTMUX_INT_ENABLE_GROUP0_ENABLE_SHIFT              (0U)
#define INTMUX_INT_ENABLE_GROUP0_ENABLE_MASK               (0xFFU << INTMUX_INT_ENABLE_GROUP0_ENABLE_SHIFT)             /* 0x000000FF */
/* INT_ENABLE_GROUP1 */
#define INTMUX_INT_ENABLE_GROUP1_OFFSET                    (0x4U)
#define INTMUX_INT_ENABLE_GROUP1_ENABLE_SHIFT              (0U)
#define INTMUX_INT_ENABLE_GROUP1_ENABLE_MASK               (0xFFU << INTMUX_INT_ENABLE_GROUP1_ENABLE_SHIFT)             /* 0x000000FF */
/* INT_ENABLE_GROUP2 */
#define INTMUX_INT_ENABLE_GROUP2_OFFSET                    (0x8U)
#define INTMUX_INT_ENABLE_GROUP2_ENABLE_SHIFT              (0U)
#define INTMUX_INT_ENABLE_GROUP2_ENABLE_MASK               (0xFFU << INTMUX_INT_ENABLE_GROUP2_ENABLE_SHIFT)             /* 0x000000FF */
/* INT_ENABLE_GROUP3 */
#define INTMUX_INT_ENABLE_GROUP3_OFFSET                    (0xCU)
#define INTMUX_INT_ENABLE_GROUP3_ENABLE_SHIFT              (0U)
#define INTMUX_INT_ENABLE_GROUP3_ENABLE_MASK               (0xFFU << INTMUX_INT_ENABLE_GROUP3_ENABLE_SHIFT)             /* 0x000000FF */
/* INT_FLAG_GROUP0 */
#define INTMUX_INT_FLAG_GROUP0_OFFSET                      (0x80U)
#define INTMUX_INT_FLAG_GROUP0                             (0x0U)
#define INTMUX_INT_FLAG_GROUP0_FLAG_SHIFT                  (0U)
#define INTMUX_INT_FLAG_GROUP0_FLAG_MASK                   (0xFFU << INTMUX_INT_FLAG_GROUP0_FLAG_SHIFT)                 /* 0x000000FF */
/* INT_FLAG_GROUP1 */
#define INTMUX_INT_FLAG_GROUP1_OFFSET                      (0x84U)
#define INTMUX_INT_FLAG_GROUP1                             (0x0U)
#define INTMUX_INT_FLAG_GROUP1_FLAG_SHIFT                  (0U)
#define INTMUX_INT_FLAG_GROUP1_FLAG_MASK                   (0xFFU << INTMUX_INT_FLAG_GROUP1_FLAG_SHIFT)                 /* 0x000000FF */
/* INT_FLAG_GROUP2 */
#define INTMUX_INT_FLAG_GROUP2_OFFSET                      (0x88U)
#define INTMUX_INT_FLAG_GROUP2                             (0x0U)
#define INTMUX_INT_FLAG_GROUP2_FLAG_SHIFT                  (0U)
#define INTMUX_INT_FLAG_GROUP2_FLAG_MASK                   (0xFFU << INTMUX_INT_FLAG_GROUP2_FLAG_SHIFT)                 /* 0x000000FF */
/* INT_FLAG_GROUP3 */
#define INTMUX_INT_FLAG_GROUP3_OFFSET                      (0x8CU)
#define INTMUX_INT_FLAG_GROUP3                             (0x0U)
#define INTMUX_INT_FLAG_GROUP3_FLAG_SHIFT                  (0U)
#define INTMUX_INT_FLAG_GROUP3_FLAG_MASK                   (0xFFU << INTMUX_INT_FLAG_GROUP3_FLAG_SHIFT)                 /* 0x000000FF */
/******************************************SAI*******************************************/
/* TXCR */
#define SAI_TXCR_OFFSET                                    (0x0U)
#define SAI_TXCR_VDW_SHIFT                                 (0U)
#define SAI_TXCR_VDW_MASK                                  (0x1FU << SAI_TXCR_VDW_SHIFT)                                /* 0x0000001F */
#define SAI_TXCR_SBW_SHIFT                                 (5U)
#define SAI_TXCR_SBW_MASK                                  (0x1FU << SAI_TXCR_SBW_SHIFT)                                /* 0x000003E0 */
#define SAI_TXCR_VDJ_SHIFT                                 (10U)
#define SAI_TXCR_VDJ_MASK                                  (0x1U << SAI_TXCR_VDJ_SHIFT)                                 /* 0x00000400 */
#define SAI_TXCR_SNB_SHIFT                                 (11U)
#define SAI_TXCR_SNB_MASK                                  (0x7FU << SAI_TXCR_SNB_SHIFT)                                /* 0x0003F800 */
#define SAI_TXCR_FBM_SHIFT                                 (18U)
#define SAI_TXCR_FBM_MASK                                  (0x1U << SAI_TXCR_FBM_SHIFT)                                 /* 0x00040000 */
#define SAI_TXCR_SJM_SHIFT                                 (19U)
#define SAI_TXCR_SJM_MASK                                  (0x1U << SAI_TXCR_SJM_SHIFT)                                 /* 0x00080000 */
#define SAI_TXCR_LANE_SHIFT                                (20U)
#define SAI_TXCR_LANE_MASK                                 (0x3U << SAI_TXCR_LANE_SHIFT)                                /* 0x00300000 */
#define SAI_TXCR_DSE_SHIFT                                 (22U)
#define SAI_TXCR_DSE_MASK                                  (0x1U << SAI_TXCR_DSE_SHIFT)                                 /* 0x00400000 */
#define SAI_TXCR_CTL_SHIFT                                 (23U)
#define SAI_TXCR_CTL_MASK                                  (0x1U << SAI_TXCR_CTL_SHIFT)                                 /* 0x00800000 */
/* FSCR */
#define SAI_FSCR_OFFSET                                    (0x4U)
#define SAI_FSCR_FW_SHIFT                                  (0U)
#define SAI_FSCR_FW_MASK                                   (0xFFFU << SAI_FSCR_FW_SHIFT)                                /* 0x00000FFF */
#define SAI_FSCR_FPW_SHIFT                                 (12U)
#define SAI_FSCR_FPW_MASK                                  (0xFFFU << SAI_FSCR_FPW_SHIFT)                               /* 0x00FFF000 */
#define SAI_FSCR_EDGE_SHIFT                                (24U)
#define SAI_FSCR_EDGE_MASK                                 (0x1U << SAI_FSCR_EDGE_SHIFT)                                /* 0x01000000 */
/* RXCR */
#define SAI_RXCR_OFFSET                                    (0x8U)
#define SAI_RXCR_VDW_SHIFT                                 (0U)
#define SAI_RXCR_VDW_MASK                                  (0x1FU << SAI_RXCR_VDW_SHIFT)                                /* 0x0000001F */
#define SAI_RXCR_SBW_SHIFT                                 (5U)
#define SAI_RXCR_SBW_MASK                                  (0x1FU << SAI_RXCR_SBW_SHIFT)                                /* 0x000003E0 */
#define SAI_RXCR_VDJ_SHIFT                                 (10U)
#define SAI_RXCR_VDJ_MASK                                  (0x1U << SAI_RXCR_VDJ_SHIFT)                                 /* 0x00000400 */
#define SAI_RXCR_SNB_SHIFT                                 (11U)
#define SAI_RXCR_SNB_MASK                                  (0x7FU << SAI_RXCR_SNB_SHIFT)                                /* 0x0003F800 */
#define SAI_RXCR_FBM_SHIFT                                 (18U)
#define SAI_RXCR_FBM_MASK                                  (0x1U << SAI_RXCR_FBM_SHIFT)                                 /* 0x00040000 */
#define SAI_RXCR_SJM_SHIFT                                 (19U)
#define SAI_RXCR_SJM_MASK                                  (0x1U << SAI_RXCR_SJM_SHIFT)                                 /* 0x00080000 */
#define SAI_RXCR_LANE_SHIFT                                (20U)
#define SAI_RXCR_LANE_MASK                                 (0x3U << SAI_RXCR_LANE_SHIFT)                                /* 0x00300000 */
#define SAI_RXCR_DSE_SHIFT                                 (22U)
#define SAI_RXCR_DSE_MASK                                  (0x1U << SAI_RXCR_DSE_SHIFT)                                 /* 0x00400000 */
#define SAI_RXCR_CTL_SHIFT                                 (23U)
#define SAI_RXCR_CTL_MASK                                  (0x1U << SAI_RXCR_CTL_SHIFT)                                 /* 0x00800000 */
/* MONOCR */
#define SAI_MONOCR_OFFSET                                  (0xCU)
#define SAI_MONOCR_TMONO_SHIFT                             (0U)
#define SAI_MONOCR_TMONO_MASK                              (0x1U << SAI_MONOCR_TMONO_SHIFT)                             /* 0x00000001 */
#define SAI_MONOCR_RMONO_SHIFT                             (1U)
#define SAI_MONOCR_RMONO_MASK                              (0x1U << SAI_MONOCR_RMONO_SHIFT)                             /* 0x00000002 */
#define SAI_MONOCR_RMONO_SLOT_SHIFT                        (2U)
#define SAI_MONOCR_RMONO_SLOT_MASK                         (0x7FU << SAI_MONOCR_RMONO_SLOT_SHIFT)                       /* 0x000001FC */
/* XFER */
#define SAI_XFER_OFFSET                                    (0x10U)
#define SAI_XFER_CLK_EN_SHIFT                              (0U)
#define SAI_XFER_CLK_EN_MASK                               (0x1U << SAI_XFER_CLK_EN_SHIFT)                              /* 0x00000001 */
#define SAI_XFER_FSS_SHIFT                                 (1U)
#define SAI_XFER_FSS_MASK                                  (0x1U << SAI_XFER_FSS_SHIFT)                                 /* 0x00000002 */
#define SAI_XFER_TXS_SHIFT                                 (2U)
#define SAI_XFER_TXS_MASK                                  (0x1U << SAI_XFER_TXS_SHIFT)                                 /* 0x00000004 */
#define SAI_XFER_RXS_SHIFT                                 (3U)
#define SAI_XFER_RXS_MASK                                  (0x1U << SAI_XFER_RXS_SHIFT)                                 /* 0x00000008 */
#define SAI_XFER_TDC_SHIFT                                 (4U)
#define SAI_XFER_TDC_MASK                                  (0x1U << SAI_XFER_TDC_SHIFT)                                 /* 0x00000010 */
#define SAI_XFER_RDC_SHIFT                                 (5U)
#define SAI_XFER_RDC_MASK                                  (0x1U << SAI_XFER_RDC_SHIFT)                                 /* 0x00000020 */
#define SAI_XFER_TX_AUTO_SHIFT                             (6U)
#define SAI_XFER_TX_AUTO_MASK                              (0x1U << SAI_XFER_TX_AUTO_SHIFT)                             /* 0x00000040 */
/* CLR */
#define SAI_CLR_OFFSET                                     (0x14U)
#define SAI_CLR_TXC_SHIFT                                  (0U)
#define SAI_CLR_TXC_MASK                                   (0x1U << SAI_CLR_TXC_SHIFT)                                  /* 0x00000001 */
#define SAI_CLR_RXC_SHIFT                                  (1U)
#define SAI_CLR_RXC_MASK                                   (0x1U << SAI_CLR_RXC_SHIFT)                                  /* 0x00000002 */
#define SAI_CLR_FSC_SHIFT                                  (2U)
#define SAI_CLR_FSC_MASK                                   (0x1U << SAI_CLR_FSC_SHIFT)                                  /* 0x00000004 */
#define SAI_CLR_FCR_SHIFT                                  (3U)
#define SAI_CLR_FCR_MASK                                   (0x1U << SAI_CLR_FCR_SHIFT)                                  /* 0x00000008 */
/* CKR */
#define SAI_CKR_OFFSET                                     (0x18U)
#define SAI_CKR_FSP_SHIFT                                  (0U)
#define SAI_CKR_FSP_MASK                                   (0x1U << SAI_CKR_FSP_SHIFT)                                  /* 0x00000001 */
#define SAI_CKR_CKP_SHIFT                                  (1U)
#define SAI_CKR_CKP_MASK                                   (0x1U << SAI_CKR_CKP_SHIFT)                                  /* 0x00000002 */
#define SAI_CKR_MSS_SHIFT                                  (2U)
#define SAI_CKR_MSS_MASK                                   (0x1U << SAI_CKR_MSS_SHIFT)                                  /* 0x00000004 */
#define SAI_CKR_MDIV_SHIFT                                 (3U)
#define SAI_CKR_MDIV_MASK                                  (0xFFFU << SAI_CKR_MDIV_SHIFT)                               /* 0x00007FF8 */
/* TXFIFOLR */
#define SAI_TXFIFOLR_OFFSET                                (0x1CU)
#define SAI_TXFIFOLR                                       (0x0U)
#define SAI_TXFIFOLR_TFL0_SHIFT                            (0U)
#define SAI_TXFIFOLR_TFL0_MASK                             (0x3FU << SAI_TXFIFOLR_TFL0_SHIFT)                           /* 0x0000003F */
#define SAI_TXFIFOLR_TFL1_SHIFT                            (6U)
#define SAI_TXFIFOLR_TFL1_MASK                             (0x3FU << SAI_TXFIFOLR_TFL1_SHIFT)                           /* 0x00000FC0 */
#define SAI_TXFIFOLR_TFL2_SHIFT                            (12U)
#define SAI_TXFIFOLR_TFL2_MASK                             (0x3FU << SAI_TXFIFOLR_TFL2_SHIFT)                           /* 0x0003F000 */
#define SAI_TXFIFOLR_TFL3_SHIFT                            (18U)
#define SAI_TXFIFOLR_TFL3_MASK                             (0x3FU << SAI_TXFIFOLR_TFL3_SHIFT)                           /* 0x00FC0000 */
/* RXFIFOLR */
#define SAI_RXFIFOLR_OFFSET                                (0x20U)
#define SAI_RXFIFOLR                                       (0x0U)
#define SAI_RXFIFOLR_RFL0_SHIFT                            (0U)
#define SAI_RXFIFOLR_RFL0_MASK                             (0x3FU << SAI_RXFIFOLR_RFL0_SHIFT)                           /* 0x0000003F */
#define SAI_RXFIFOLR_RFL1_SHIFT                            (6U)
#define SAI_RXFIFOLR_RFL1_MASK                             (0x3FU << SAI_RXFIFOLR_RFL1_SHIFT)                           /* 0x00000FC0 */
#define SAI_RXFIFOLR_RFL2_SHIFT                            (12U)
#define SAI_RXFIFOLR_RFL2_MASK                             (0x3FU << SAI_RXFIFOLR_RFL2_SHIFT)                           /* 0x0003F000 */
#define SAI_RXFIFOLR_RFL3_SHIFT                            (18U)
#define SAI_RXFIFOLR_RFL3_MASK                             (0x3FU << SAI_RXFIFOLR_RFL3_SHIFT)                           /* 0x00FC0000 */
/* DMACR */
#define SAI_DMACR_OFFSET                                   (0x24U)
#define SAI_DMACR_TDL_SHIFT                                (0U)
#define SAI_DMACR_TDL_MASK                                 (0x1FU << SAI_DMACR_TDL_SHIFT)                               /* 0x0000001F */
#define SAI_DMACR_TDE_SHIFT                                (8U)
#define SAI_DMACR_TDE_MASK                                 (0x1U << SAI_DMACR_TDE_SHIFT)                                /* 0x00000100 */
#define SAI_DMACR_RDL_SHIFT                                (16U)
#define SAI_DMACR_RDL_MASK                                 (0x1FU << SAI_DMACR_RDL_SHIFT)                               /* 0x001F0000 */
#define SAI_DMACR_RDE_SHIFT                                (24U)
#define SAI_DMACR_RDE_MASK                                 (0x1U << SAI_DMACR_RDE_SHIFT)                                /* 0x01000000 */
/* INTCR */
#define SAI_INTCR_OFFSET                                   (0x28U)
#define SAI_INTCR_TXEIE_SHIFT                              (0U)
#define SAI_INTCR_TXEIE_MASK                               (0x1U << SAI_INTCR_TXEIE_SHIFT)                              /* 0x00000001 */
#define SAI_INTCR_TXUIE_SHIFT                              (1U)
#define SAI_INTCR_TXUIE_MASK                               (0x1U << SAI_INTCR_TXUIE_SHIFT)                              /* 0x00000002 */
#define SAI_INTCR_TXUIC_SHIFT                              (2U)
#define SAI_INTCR_TXUIC_MASK                               (0x1U << SAI_INTCR_TXUIC_SHIFT)                              /* 0x00000004 */
#define SAI_INTCR_TFT_SHIFT                                (4U)
#define SAI_INTCR_TFT_MASK                                 (0x1FU << SAI_INTCR_TFT_SHIFT)                               /* 0x000001F0 */
#define SAI_INTCR_RXFIE_SHIFT                              (16U)
#define SAI_INTCR_RXFIE_MASK                               (0x1U << SAI_INTCR_RXFIE_SHIFT)                              /* 0x00010000 */
#define SAI_INTCR_RXOIE_SHIFT                              (17U)
#define SAI_INTCR_RXOIE_MASK                               (0x1U << SAI_INTCR_RXOIE_SHIFT)                              /* 0x00020000 */
#define SAI_INTCR_RXOIC_SHIFT                              (18U)
#define SAI_INTCR_RXOIC_MASK                               (0x1U << SAI_INTCR_RXOIC_SHIFT)                              /* 0x00040000 */
#define SAI_INTCR_RFT_SHIFT                                (20U)
#define SAI_INTCR_RFT_MASK                                 (0x1FU << SAI_INTCR_RFT_SHIFT)                               /* 0x01F00000 */
#define SAI_INTCR_FSERR_SHIFT                              (25U)
#define SAI_INTCR_FSERR_MASK                               (0x1U << SAI_INTCR_FSERR_SHIFT)                              /* 0x02000000 */
#define SAI_INTCR_FSERRC_SHIFT                             (26U)
#define SAI_INTCR_FSERRC_MASK                              (0x1U << SAI_INTCR_FSERRC_SHIFT)                             /* 0x04000000 */
#define SAI_INTCR_FSLOST_SHIFT                             (27U)
#define SAI_INTCR_FSLOST_MASK                              (0x1U << SAI_INTCR_FSLOST_SHIFT)                             /* 0x08000000 */
#define SAI_INTCR_FSLOSTC_SHIFT                            (28U)
#define SAI_INTCR_FSLOSTC_MASK                             (0x1U << SAI_INTCR_FSLOSTC_SHIFT)                            /* 0x10000000 */
/* INTSR */
#define SAI_INTSR_OFFSET                                   (0x2CU)
#define SAI_INTSR                                          (0x0U)
#define SAI_INTSR_TXEI_SHIFT                               (0U)
#define SAI_INTSR_TXEI_MASK                                (0x1U << SAI_INTSR_TXEI_SHIFT)                               /* 0x00000001 */
#define SAI_INTSR_TXUI_SHIFT                               (1U)
#define SAI_INTSR_TXUI_MASK                                (0x1U << SAI_INTSR_TXUI_SHIFT)                               /* 0x00000002 */
#define SAI_INTSR_RXFI_SHIFT                               (16U)
#define SAI_INTSR_RXFI_MASK                                (0x1U << SAI_INTSR_RXFI_SHIFT)                               /* 0x00010000 */
#define SAI_INTSR_RXOI_SHIFT                               (17U)
#define SAI_INTSR_RXOI_MASK                                (0x1U << SAI_INTSR_RXOI_SHIFT)                               /* 0x00020000 */
#define SAI_INTSR_FSERRI_SHIFT                             (18U)
#define SAI_INTSR_FSERRI_MASK                              (0x1U << SAI_INTSR_FSERRI_SHIFT)                             /* 0x00040000 */
#define SAI_INTSR_FSLOSTI_SHIFT                            (19U)
#define SAI_INTSR_FSLOSTI_MASK                             (0x1U << SAI_INTSR_FSLOSTI_SHIFT)                            /* 0x00080000 */
/* TXDR */
#define SAI_TXDR_OFFSET                                    (0x30U)
#define SAI_TXDR_TXDR_SHIFT                                (0U)
#define SAI_TXDR_TXDR_MASK                                 (0xFFFFFFFFU << SAI_TXDR_TXDR_SHIFT)                         /* 0xFFFFFFFF */
/* RXDR */
#define SAI_RXDR_OFFSET                                    (0x34U)
#define SAI_RXDR_RXDR_SHIFT                                (0U)
#define SAI_RXDR_RXDR_MASK                                 (0xFFFFFFFFU << SAI_RXDR_RXDR_SHIFT)                         /* 0xFFFFFFFF */
/* PATH_SEL */
#define SAI_PATH_SEL_OFFSET                                (0x38U)
#define SAI_PATH_SEL_TX_PATH_SELECT0_SHIFT                 (0U)
#define SAI_PATH_SEL_TX_PATH_SELECT0_MASK                  (0x3U << SAI_PATH_SEL_TX_PATH_SELECT0_SHIFT)                 /* 0x00000003 */
#define SAI_PATH_SEL_TX_PATH_SELECT1_SHIFT                 (2U)
#define SAI_PATH_SEL_TX_PATH_SELECT1_MASK                  (0x3U << SAI_PATH_SEL_TX_PATH_SELECT1_SHIFT)                 /* 0x0000000C */
#define SAI_PATH_SEL_TX_PATH_SELECT2_SHIFT                 (4U)
#define SAI_PATH_SEL_TX_PATH_SELECT2_MASK                  (0x3U << SAI_PATH_SEL_TX_PATH_SELECT2_SHIFT)                 /* 0x00000030 */
#define SAI_PATH_SEL_TX_PATH_SELECT3_SHIFT                 (6U)
#define SAI_PATH_SEL_TX_PATH_SELECT3_MASK                  (0x3U << SAI_PATH_SEL_TX_PATH_SELECT3_SHIFT)                 /* 0x000000C0 */
#define SAI_PATH_SEL_RX_PATH_SELECT0_SHIFT                 (8U)
#define SAI_PATH_SEL_RX_PATH_SELECT0_MASK                  (0x3U << SAI_PATH_SEL_RX_PATH_SELECT0_SHIFT)                 /* 0x00000300 */
#define SAI_PATH_SEL_RX_PATH_SELECT1_SHIFT                 (10U)
#define SAI_PATH_SEL_RX_PATH_SELECT1_MASK                  (0x3U << SAI_PATH_SEL_RX_PATH_SELECT1_SHIFT)                 /* 0x00000C00 */
#define SAI_PATH_SEL_RX_PATH_SELECT2_SHIFT                 (12U)
#define SAI_PATH_SEL_RX_PATH_SELECT2_MASK                  (0x3U << SAI_PATH_SEL_RX_PATH_SELECT2_SHIFT)                 /* 0x00003000 */
#define SAI_PATH_SEL_RX_PATH_SELECT3_SHIFT                 (14U)
#define SAI_PATH_SEL_RX_PATH_SELECT3_MASK                  (0x3U << SAI_PATH_SEL_RX_PATH_SELECT3_SHIFT)                 /* 0x0000C000 */
#define SAI_PATH_SEL_SYNC_IN_SEL_SHIFT                     (16U)
#define SAI_PATH_SEL_SYNC_IN_SEL_MASK                      (0x1U << SAI_PATH_SEL_SYNC_IN_SEL_SHIFT)                     /* 0x00010000 */
#define SAI_PATH_SEL_SYNC_OUT_SEL_SHIFT                    (17U)
#define SAI_PATH_SEL_SYNC_OUT_SEL_MASK                     (0x1U << SAI_PATH_SEL_SYNC_OUT_SEL_SHIFT)                    /* 0x00020000 */
#define SAI_PATH_SEL_LOOPBACK_SHIFT                        (18U)
#define SAI_PATH_SEL_LOOPBACK_MASK                         (0xFU << SAI_PATH_SEL_LOOPBACK_SHIFT)                        /* 0x003C0000 */
#define SAI_PATH_SEL_LOOPBACK_PATH_SEL_SHIFT               (22U)
#define SAI_PATH_SEL_LOOPBACK_PATH_SEL_MASK                (0xFFU << SAI_PATH_SEL_LOOPBACK_PATH_SEL_SHIFT)              /* 0x3FC00000 */
/* TX_SLOT_MASK0 */
#define SAI_TX_SLOT_MASK0_OFFSET                           (0x3CU)
#define SAI_TX_SLOT_MASK0_TX_SLOT_MASK0_SHIFT              (0U)
#define SAI_TX_SLOT_MASK0_TX_SLOT_MASK0_MASK               (0xFFFFFFFFU << SAI_TX_SLOT_MASK0_TX_SLOT_MASK0_SHIFT)       /* 0xFFFFFFFF */
/* TX_SLOT_MASK1 */
#define SAI_TX_SLOT_MASK1_OFFSET                           (0x40U)
#define SAI_TX_SLOT_MASK1_TX_SLOT_MASK1_SHIFT              (0U)
#define SAI_TX_SLOT_MASK1_TX_SLOT_MASK1_MASK               (0xFFFFFFFFU << SAI_TX_SLOT_MASK1_TX_SLOT_MASK1_SHIFT)       /* 0xFFFFFFFF */
/* TX_SLOT_MASK2 */
#define SAI_TX_SLOT_MASK2_OFFSET                           (0x44U)
#define SAI_TX_SLOT_MASK2_TX_SLOT_MASK2_SHIFT              (0U)
#define SAI_TX_SLOT_MASK2_TX_SLOT_MASK2_MASK               (0xFFFFFFFFU << SAI_TX_SLOT_MASK2_TX_SLOT_MASK2_SHIFT)       /* 0xFFFFFFFF */
/* TX_SLOT_MASK3 */
#define SAI_TX_SLOT_MASK3_OFFSET                           (0x48U)
#define SAI_TX_SLOT_MASK3_TX_SLOT_MASK3_SHIFT              (0U)
#define SAI_TX_SLOT_MASK3_TX_SLOT_MASK3_MASK               (0xFFFFFFFFU << SAI_TX_SLOT_MASK3_TX_SLOT_MASK3_SHIFT)       /* 0xFFFFFFFF */
/* RX_SLOT_MASK0 */
#define SAI_RX_SLOT_MASK0_OFFSET                           (0x4CU)
#define SAI_RX_SLOT_MASK0_RX_SLOT_MASK0_SHIFT              (0U)
#define SAI_RX_SLOT_MASK0_RX_SLOT_MASK0_MASK               (0xFFFFFFFFU << SAI_RX_SLOT_MASK0_RX_SLOT_MASK0_SHIFT)       /* 0xFFFFFFFF */
/* RX_SLOT_MASK1 */
#define SAI_RX_SLOT_MASK1_OFFSET                           (0x50U)
#define SAI_RX_SLOT_MASK1_RX_SLOT_MASK1_SHIFT              (0U)
#define SAI_RX_SLOT_MASK1_RX_SLOT_MASK1_MASK               (0xFFFFFFFFU << SAI_RX_SLOT_MASK1_RX_SLOT_MASK1_SHIFT)       /* 0xFFFFFFFF */
/* RX_SLOT_MASK2 */
#define SAI_RX_SLOT_MASK2_OFFSET                           (0x54U)
#define SAI_RX_SLOT_MASK2_RX_SLOT_MASK2_SHIFT              (0U)
#define SAI_RX_SLOT_MASK2_RX_SLOT_MASK2_MASK               (0xFFFFFFFFU << SAI_RX_SLOT_MASK2_RX_SLOT_MASK2_SHIFT)       /* 0xFFFFFFFF */
/* RX_SLOT_MASK3 */
#define SAI_RX_SLOT_MASK3_OFFSET                           (0x58U)
#define SAI_RX_SLOT_MASK3_RX_SLOT_MASK3_SHIFT              (0U)
#define SAI_RX_SLOT_MASK3_RX_SLOT_MASK3_MASK               (0xFFFFFFFFU << SAI_RX_SLOT_MASK3_RX_SLOT_MASK3_SHIFT)       /* 0xFFFFFFFF */
/* TX_DATA_CNT */
#define SAI_TX_DATA_CNT_OFFSET                             (0x5CU)
#define SAI_TX_DATA_CNT                                    (0x0U)
#define SAI_TX_DATA_CNT_TX_DATA_CNT_SHIFT                  (0U)
#define SAI_TX_DATA_CNT_TX_DATA_CNT_MASK                   (0xFFFFFFFFU << SAI_TX_DATA_CNT_TX_DATA_CNT_SHIFT)           /* 0xFFFFFFFF */
/* RX_DATA_CNT */
#define SAI_RX_DATA_CNT_OFFSET                             (0x60U)
#define SAI_RX_DATA_CNT                                    (0x0U)
#define SAI_RX_DATA_CNT_RX_DATA_CNT_SHIFT                  (0U)
#define SAI_RX_DATA_CNT_RX_DATA_CNT_MASK                   (0xFFFFFFFFU << SAI_RX_DATA_CNT_RX_DATA_CNT_SHIFT)           /* 0xFFFFFFFF */
/* TX_TIMING_SHIFT */
#define SAI_TX_TIMING_SHIFT_OFFSET                         (0x64U)
#define SAI_TX_TIMING_SHIFT_DATA_SHIFT_RIGHT_SHIFT         (0U)
#define SAI_TX_TIMING_SHIFT_DATA_SHIFT_RIGHT_MASK          (0xFFFFFFU << SAI_TX_TIMING_SHIFT_DATA_SHIFT_RIGHT_SHIFT)    /* 0x00FFFFFF */
#define SAI_TX_TIMING_SHIFT_DATA_SHIFT_LEFT_SHIFT          (24U)
#define SAI_TX_TIMING_SHIFT_DATA_SHIFT_LEFT_MASK           (0x3U << SAI_TX_TIMING_SHIFT_DATA_SHIFT_LEFT_SHIFT)          /* 0x03000000 */
/* RX_TIMING_SHIFT */
#define SAI_RX_TIMING_SHIFT_OFFSET                         (0x68U)
#define SAI_RX_TIMING_SHIFT_DATA_SHIFT_RIGHT_SHIFT         (0U)
#define SAI_RX_TIMING_SHIFT_DATA_SHIFT_RIGHT_MASK          (0xFFFFFFU << SAI_RX_TIMING_SHIFT_DATA_SHIFT_RIGHT_SHIFT)    /* 0x00FFFFFF */
/* STATUS */
#define SAI_STATUS_OFFSET                                  (0x6CU)
#define SAI_STATUS_FS_IDLE_SHIFT                           (0U)
#define SAI_STATUS_FS_IDLE_MASK                            (0x1U << SAI_STATUS_FS_IDLE_SHIFT)                           /* 0x00000001 */
#define SAI_STATUS_TX_IDLE_SHIFT                           (1U)
#define SAI_STATUS_TX_IDLE_MASK                            (0x1U << SAI_STATUS_TX_IDLE_SHIFT)                           /* 0x00000002 */
#define SAI_STATUS_RX_IDLE_SHIFT                           (2U)
#define SAI_STATUS_RX_IDLE_MASK                            (0x1U << SAI_STATUS_RX_IDLE_SHIFT)                           /* 0x00000004 */
/* VERSION */
#define SAI_VERSION_OFFSET                                 (0x70U)
#define SAI_VERSION                                        (0x24013506U)
#define SAI_VERSION_SAI_VERTION_SHIFT                      (0U)
#define SAI_VERSION_SAI_VERTION_MASK                       (0xFFFFFFFFU << SAI_VERSION_SAI_VERTION_SHIFT)               /* 0xFFFFFFFF */
/* FSXN */
#define SAI_FSXN_OFFSET                                    (0x74U)
#define SAI_FSXN_FSXN0_EN_SHIFT                            (0U)
#define SAI_FSXN_FSXN0_EN_MASK                             (0x1U << SAI_FSXN_FSXN0_EN_SHIFT)                            /* 0x00000001 */
#define SAI_FSXN_FSXN0_FW_SHIFT                            (1U)
#define SAI_FSXN_FSXN0_FW_MASK                             (0xFFFU << SAI_FSXN_FSXN0_FW_SHIFT)                          /* 0x00001FFE */
#define SAI_FSXN_FSXN1_EN_SHIFT                            (13U)
#define SAI_FSXN_FSXN1_EN_MASK                             (0x1U << SAI_FSXN_FSXN1_EN_SHIFT)                            /* 0x00002000 */
#define SAI_FSXN_FSXN1_FW_SHIFT                            (14U)
#define SAI_FSXN_FSXN1_FW_MASK                             (0xFFFU << SAI_FSXN_FSXN1_FW_SHIFT)                          /* 0x03FFC000 */
#define SAI_FSXN_FSXN0_SHIFT_SHIFT                         (26U)
#define SAI_FSXN_FSXN0_SHIFT_MASK                          (0x7U << SAI_FSXN_FSXN0_SHIFT_SHIFT)                         /* 0x1C000000 */
#define SAI_FSXN_FSXN1_SHIFT_SHIFT                         (29U)
#define SAI_FSXN_FSXN1_SHIFT_MASK                          (0x7U << SAI_FSXN_FSXN1_SHIFT_SHIFT)                         /* 0xE0000000 */
/* FS_TIMEOUT */
#define SAI_FS_TIMEOUT_OFFSET                              (0x78U)
#define SAI_FS_TIMEOUT_TIMEOUT_EN_SHIFT                    (0U)
#define SAI_FS_TIMEOUT_TIMEOUT_EN_MASK                     (0x1U << SAI_FS_TIMEOUT_TIMEOUT_EN_SHIFT)                    /* 0x00000001 */
#define SAI_FS_TIMEOUT_TIMEOUT_VALUE_SHIFT                 (1U)
#define SAI_FS_TIMEOUT_TIMEOUT_VALUE_MASK                  (0x7FFFFFFFU << SAI_FS_TIMEOUT_TIMEOUT_VALUE_SHIFT)          /* 0xFFFFFFFE */
/******************************************CAN*******************************************/
/* MODE */
#define CAN_MODE_OFFSET                                    (0x0U)
#define CAN_MODE_WORK_MODE_SHIFT                           (0U)
#define CAN_MODE_WORK_MODE_MASK                            (0x1U << CAN_MODE_WORK_MODE_SHIFT)                           /* 0x00000001 */
#define CAN_MODE_SLEEP_MODE_SHIFT                          (1U)
#define CAN_MODE_SLEEP_MODE_MASK                           (0x1U << CAN_MODE_SLEEP_MODE_SHIFT)                          /* 0x00000002 */
#define CAN_MODE_SELF_TEST_SHIFT                           (2U)
#define CAN_MODE_SELF_TEST_MASK                            (0x1U << CAN_MODE_SELF_TEST_SHIFT)                           /* 0x00000004 */
#define CAN_MODE_SILENT_MODE_SHIFT                         (3U)
#define CAN_MODE_SILENT_MODE_MASK                          (0x1U << CAN_MODE_SILENT_MODE_SHIFT)                         /* 0x00000008 */
#define CAN_MODE_LBACK_MODE_SHIFT                          (4U)
#define CAN_MODE_LBACK_MODE_MASK                           (0x1U << CAN_MODE_LBACK_MODE_SHIFT)                          /* 0x00000010 */
#define CAN_MODE_RXSTX_MODE_SHIFT                          (5U)
#define CAN_MODE_RXSTX_MODE_MASK                           (0x1U << CAN_MODE_RXSTX_MODE_SHIFT)                          /* 0x00000020 */
#define CAN_MODE_AUTO_BUS_ON_SHIFT                         (7U)
#define CAN_MODE_AUTO_BUS_ON_MASK                          (0x1U << CAN_MODE_AUTO_BUS_ON_SHIFT)                         /* 0x00000080 */
#define CAN_MODE_RETT_MODE_SHIFT                           (8U)
#define CAN_MODE_RETT_MODE_MASK                            (0x1U << CAN_MODE_RETT_MODE_SHIFT)                           /* 0x00000100 */
#define CAN_MODE_DIS_PEE_SHIFT                             (9U)
#define CAN_MODE_DIS_PEE_MASK                              (0x1U << CAN_MODE_DIS_PEE_SHIFT)                             /* 0x00000200 */
#define CAN_MODE_PASS_ERR_MODE_SHIFT                       (10U)
#define CAN_MODE_PASS_ERR_MODE_MASK                        (0x1U << CAN_MODE_PASS_ERR_MODE_SHIFT)                       /* 0x00000400 */
#define CAN_MODE_CRCERR_ACK_MODE_SHIFT                     (11U)
#define CAN_MODE_CRCERR_ACK_MODE_MASK                      (0x1U << CAN_MODE_CRCERR_ACK_MODE_SHIFT)                     /* 0x00000800 */
#define CAN_MODE_CRCERR_PASS_MODE_SHIFT                    (12U)
#define CAN_MODE_CRCERR_PASS_MODE_MASK                     (0x1U << CAN_MODE_CRCERR_PASS_MODE_SHIFT)                    /* 0x00001000 */
#define CAN_MODE_FORCE_ACTIVE_ERR_SHIFT                    (13U)
#define CAN_MODE_FORCE_ACTIVE_ERR_MASK                     (0x1U << CAN_MODE_FORCE_ACTIVE_ERR_SHIFT)                    /* 0x00002000 */
#define CAN_MODE_FORCE_PASSIVE_ERR_SHIFT                   (14U)
#define CAN_MODE_FORCE_PASSIVE_ERR_MASK                    (0x1U << CAN_MODE_FORCE_PASSIVE_ERR_SHIFT)                   /* 0x00004000 */
#define CAN_MODE_NOACK_MODE_SHIFT                          (15U)
#define CAN_MODE_NOACK_MODE_MASK                           (0x1U << CAN_MODE_NOACK_MODE_SHIFT)                          /* 0x00008000 */
/* CMD */
#define CAN_CMD_OFFSET                                     (0x4U)
#define CAN_CMD_TX0_REQ_SHIFT                              (0U)
#define CAN_CMD_TX0_REQ_MASK                               (0x1U << CAN_CMD_TX0_REQ_SHIFT)                              /* 0x00000001 */
#define CAN_CMD_TX1_REQ_SHIFT                              (1U)
#define CAN_CMD_TX1_REQ_MASK                               (0x1U << CAN_CMD_TX1_REQ_SHIFT)                              /* 0x00000002 */
/* STATE */
#define CAN_STATE_OFFSET                                   (0x8U)
#define CAN_STATE                                          (0x0U)
#define CAN_STATE_TX_BUFFER_FULL_SHIFT                     (0U)
#define CAN_STATE_TX_BUFFER_FULL_MASK                      (0x1U << CAN_STATE_TX_BUFFER_FULL_SHIFT)                     /* 0x00000001 */
#define CAN_STATE_RX_PERIOD_SHIFT                          (1U)
#define CAN_STATE_RX_PERIOD_MASK                           (0x1U << CAN_STATE_RX_PERIOD_SHIFT)                          /* 0x00000002 */
#define CAN_STATE_TX_PERIOD_SHIFT                          (2U)
#define CAN_STATE_TX_PERIOD_MASK                           (0x1U << CAN_STATE_TX_PERIOD_SHIFT)                          /* 0x00000004 */
#define CAN_STATE_ERROR_WARNING_STATE_SHIFT                (3U)
#define CAN_STATE_ERROR_WARNING_STATE_MASK                 (0x1U << CAN_STATE_ERROR_WARNING_STATE_SHIFT)                /* 0x00000008 */
#define CAN_STATE_BUS_OFF_STATE_SHIFT                      (4U)
#define CAN_STATE_BUS_OFF_STATE_MASK                       (0x1U << CAN_STATE_BUS_OFF_STATE_SHIFT)                      /* 0x00000010 */
#define CAN_STATE_SLEEP_STATE_SHIFT                        (5U)
#define CAN_STATE_SLEEP_STATE_MASK                         (0x1U << CAN_STATE_SLEEP_STATE_SHIFT)                        /* 0x00000020 */
/* INT */
#define CAN_INT_OFFSET                                     (0xCU)
#define CAN_INT_RX_FINISH_INT_SHIFT                        (0U)
#define CAN_INT_RX_FINISH_INT_MASK                         (0x1U << CAN_INT_RX_FINISH_INT_SHIFT)                        /* 0x00000001 */
#define CAN_INT_TX_FINISH_INT_SHIFT                        (1U)
#define CAN_INT_TX_FINISH_INT_MASK                         (0x1U << CAN_INT_TX_FINISH_INT_SHIFT)                        /* 0x00000002 */
#define CAN_INT_ERROR_WARNING_INT_SHIFT                    (2U)
#define CAN_INT_ERROR_WARNING_INT_MASK                     (0x1U << CAN_INT_ERROR_WARNING_INT_SHIFT)                    /* 0x00000004 */
#define CAN_INT_OVERLOAD_INT_SHIFT                         (3U)
#define CAN_INT_OVERLOAD_INT_MASK                          (0x1U << CAN_INT_OVERLOAD_INT_SHIFT)                         /* 0x00000008 */
#define CAN_INT_PASSIVE_ERROR_INT_SHIFT                    (4U)
#define CAN_INT_PASSIVE_ERROR_INT_MASK                     (0x1U << CAN_INT_PASSIVE_ERROR_INT_SHIFT)                    /* 0x00000010 */
#define CAN_INT_TX_ARBIT_FAIL_INT_SHIFT                    (5U)
#define CAN_INT_TX_ARBIT_FAIL_INT_MASK                     (0x1U << CAN_INT_TX_ARBIT_FAIL_INT_SHIFT)                    /* 0x00000020 */
#define CAN_INT_ERROR_INT_SHIFT                            (6U)
#define CAN_INT_ERROR_INT_MASK                             (0x1U << CAN_INT_ERROR_INT_SHIFT)                            /* 0x00000040 */
#define CAN_INT_RXSTR_FULL_INT_SHIFT                       (7U)
#define CAN_INT_RXSTR_FULL_INT_MASK                        (0x1U << CAN_INT_RXSTR_FULL_INT_SHIFT)                       /* 0x00000080 */
#define CAN_INT_RXSTR_OVERFLOW_INT_SHIFT                   (8U)
#define CAN_INT_RXSTR_OVERFLOW_INT_MASK                    (0x1U << CAN_INT_RXSTR_OVERFLOW_INT_SHIFT)                   /* 0x00000100 */
#define CAN_INT_BUS_OFF_INT_SHIFT                          (9U)
#define CAN_INT_BUS_OFF_INT_MASK                           (0x1U << CAN_INT_BUS_OFF_INT_SHIFT)                          /* 0x00000200 */
#define CAN_INT_BUS_OFF_RECOVERY_INT_SHIFT                 (10U)
#define CAN_INT_BUS_OFF_RECOVERY_INT_MASK                  (0x1U << CAN_INT_BUS_OFF_RECOVERY_INT_SHIFT)                 /* 0x00000400 */
#define CAN_INT_WAKEUP_INT_SHIFT                           (11U)
#define CAN_INT_WAKEUP_INT_MASK                            (0x1U << CAN_INT_WAKEUP_INT_SHIFT)                           /* 0x00000800 */
#define CAN_INT_AUTO_RETX_FAIL_INT_SHIFT                   (12U)
#define CAN_INT_AUTO_RETX_FAIL_INT_MASK                    (0x1U << CAN_INT_AUTO_RETX_FAIL_INT_SHIFT)                   /* 0x00001000 */
#define CAN_INT_MFI_INT_SHIFT                              (13U)
#define CAN_INT_MFI_INT_MASK                               (0x1U << CAN_INT_MFI_INT_SHIFT)                              /* 0x00002000 */
#define CAN_INT_MFI_TIMEOUT_INT_SHIFT                      (14U)
#define CAN_INT_MFI_TIMEOUT_INT_MASK                       (0x1U << CAN_INT_MFI_TIMEOUT_INT_SHIFT)                      /* 0x00004000 */
#define CAN_INT_RXSTR_TIMEOUT_INT_SHIFT                    (15U)
#define CAN_INT_RXSTR_TIMEOUT_INT_MASK                     (0x1U << CAN_INT_RXSTR_TIMEOUT_INT_SHIFT)                    /* 0x00008000 */
#define CAN_INT_BUSINT_INT_SHIFT                           (16U)
#define CAN_INT_BUSINT_INT_MASK                            (0x1U << CAN_INT_BUSINT_INT_SHIFT)                           /* 0x00010000 */
#define CAN_INT_ISM_WTM_INT_SHIFT                          (17U)
#define CAN_INT_ISM_WTM_INT_MASK                           (0x1U << CAN_INT_ISM_WTM_INT_SHIFT)                          /* 0x00020000 */
#define CAN_INT_ESM_WTM_INT_SHIFT                          (18U)
#define CAN_INT_ESM_WTM_INT_MASK                           (0x1U << CAN_INT_ESM_WTM_INT_SHIFT)                          /* 0x00040000 */
#define CAN_INT_BUSOFF_RCY_INT_SHIFT                       (19U)
#define CAN_INT_BUSOFF_RCY_INT_MASK                        (0x1U << CAN_INT_BUSOFF_RCY_INT_SHIFT)                       /* 0x00080000 */
/* INT_MASK */
#define CAN_INT_MASK_OFFSET                                (0x10U)
#define CAN_INT_MASK_RX_FINISH_INT_MASK_SHIFT              (0U)
#define CAN_INT_MASK_RX_FINISH_INT_MASK_MASK               (0x1U << CAN_INT_MASK_RX_FINISH_INT_MASK_SHIFT)              /* 0x00000001 */
#define CAN_INT_MASK_TX_FINISH_INT_MASK_SHIFT              (1U)
#define CAN_INT_MASK_TX_FINISH_INT_MASK_MASK               (0x1U << CAN_INT_MASK_TX_FINISH_INT_MASK_SHIFT)              /* 0x00000002 */
#define CAN_INT_MASK_ERROR_WARNING_INT_MASK_SHIFT          (2U)
#define CAN_INT_MASK_ERROR_WARNING_INT_MASK_MASK           (0x1U << CAN_INT_MASK_ERROR_WARNING_INT_MASK_SHIFT)          /* 0x00000004 */
#define CAN_INT_MASK_OVERLOAD_INT_MASK_SHIFT               (3U)
#define CAN_INT_MASK_OVERLOAD_INT_MASK_MASK                (0x1U << CAN_INT_MASK_OVERLOAD_INT_MASK_SHIFT)               /* 0x00000008 */
#define CAN_INT_MASK_PASSIVE_ERROR_INT_MASK_SHIFT          (4U)
#define CAN_INT_MASK_PASSIVE_ERROR_INT_MASK_MASK           (0x1U << CAN_INT_MASK_PASSIVE_ERROR_INT_MASK_SHIFT)          /* 0x00000010 */
#define CAN_INT_MASK_TX_ARBIT_FAIL_INT_MASK_SHIFT          (5U)
#define CAN_INT_MASK_TX_ARBIT_FAIL_INT_MASK_MASK           (0x1U << CAN_INT_MASK_TX_ARBIT_FAIL_INT_MASK_SHIFT)          /* 0x00000020 */
#define CAN_INT_MASK_ERROR_INT_MASK_SHIFT                  (6U)
#define CAN_INT_MASK_ERROR_INT_MASK_MASK                   (0x1U << CAN_INT_MASK_ERROR_INT_MASK_SHIFT)                  /* 0x00000040 */
#define CAN_INT_MASK_RXSTR_FULL_INT_MASK_SHIFT             (7U)
#define CAN_INT_MASK_RXSTR_FULL_INT_MASK_MASK              (0x1U << CAN_INT_MASK_RXSTR_FULL_INT_MASK_SHIFT)             /* 0x00000080 */
#define CAN_INT_MASK_RXSTR_OVERFLOW_INT_MASK_SHIFT         (8U)
#define CAN_INT_MASK_RXSTR_OVERFLOW_INT_MASK_MASK          (0x1U << CAN_INT_MASK_RXSTR_OVERFLOW_INT_MASK_SHIFT)         /* 0x00000100 */
#define CAN_INT_MASK_BUS_OFF_INT_MASK_SHIFT                (9U)
#define CAN_INT_MASK_BUS_OFF_INT_MASK_MASK                 (0x1U << CAN_INT_MASK_BUS_OFF_INT_MASK_SHIFT)                /* 0x00000200 */
#define CAN_INT_MASK_BUS_OFF_RECOVERY_INT_MASK_SHIFT       (10U)
#define CAN_INT_MASK_BUS_OFF_RECOVERY_INT_MASK_MASK        (0x1U << CAN_INT_MASK_BUS_OFF_RECOVERY_INT_MASK_SHIFT)       /* 0x00000400 */
#define CAN_INT_MASK_WAKEUP_INT_MASK_SHIFT                 (11U)
#define CAN_INT_MASK_WAKEUP_INT_MASK_MASK                  (0x1U << CAN_INT_MASK_WAKEUP_INT_MASK_SHIFT)                 /* 0x00000800 */
#define CAN_INT_MASK_AUTO_RETX_FAIL_INT_MASK_SHIFT         (12U)
#define CAN_INT_MASK_AUTO_RETX_FAIL_INT_MASK_MASK          (0x1U << CAN_INT_MASK_AUTO_RETX_FAIL_INT_MASK_SHIFT)         /* 0x00001000 */
#define CAN_INT_MASK_MFI_INT_MASK_SHIFT                    (13U)
#define CAN_INT_MASK_MFI_INT_MASK_MASK                     (0x1U << CAN_INT_MASK_MFI_INT_MASK_SHIFT)                    /* 0x00002000 */
#define CAN_INT_MASK_MFI_TIMEOUT_INT_MASK_SHIFT            (14U)
#define CAN_INT_MASK_MFI_TIMEOUT_INT_MASK_MASK             (0x1U << CAN_INT_MASK_MFI_TIMEOUT_INT_MASK_SHIFT)            /* 0x00004000 */
#define CAN_INT_MASK_RXSTR_TIMEOUT_INT_MASK_SHIFT          (15U)
#define CAN_INT_MASK_RXSTR_TIMEOUT_INT_MASK_MASK           (0x1U << CAN_INT_MASK_RXSTR_TIMEOUT_INT_MASK_SHIFT)          /* 0x00008000 */
#define CAN_INT_MASK_BUSINT_INT_MASK_SHIFT                 (16U)
#define CAN_INT_MASK_BUSINT_INT_MASK_MASK                  (0x1U << CAN_INT_MASK_BUSINT_INT_MASK_SHIFT)                 /* 0x00010000 */
#define CAN_INT_MASK_ISM_WTM_INT_MASK_SHIFT                (17U)
#define CAN_INT_MASK_ISM_WTM_INT_MASK_MASK                 (0x1U << CAN_INT_MASK_ISM_WTM_INT_MASK_SHIFT)                /* 0x00020000 */
#define CAN_INT_MASK_ESM_WTM_INT_MASK_SHIFT                (18U)
#define CAN_INT_MASK_ESM_WTM_INT_MASK_MASK                 (0x1U << CAN_INT_MASK_ESM_WTM_INT_MASK_SHIFT)                /* 0x00040000 */
#define CAN_INT_MASK_BUSOFF_RCY_INT_MASK_SHIFT             (19U)
#define CAN_INT_MASK_BUSOFF_RCY_INT_MASK_MASK              (0x1U << CAN_INT_MASK_BUSOFF_RCY_INT_MASK_SHIFT)             /* 0x00080000 */
/* FD_NOMINAL_BITTIMING */
#define CAN_FD_NOMINAL_BITTIMING_OFFSET                    (0x100U)
#define CAN_FD_NOMINAL_BITTIMING_TSEG1_SHIFT               (0U)
#define CAN_FD_NOMINAL_BITTIMING_TSEG1_MASK                (0xFFU << CAN_FD_NOMINAL_BITTIMING_TSEG1_SHIFT)              /* 0x000000FF */
#define CAN_FD_NOMINAL_BITTIMING_TSEG2_SHIFT               (8U)
#define CAN_FD_NOMINAL_BITTIMING_TSEG2_MASK                (0x7FU << CAN_FD_NOMINAL_BITTIMING_TSEG2_SHIFT)              /* 0x00007F00 */
#define CAN_FD_NOMINAL_BITTIMING_BRQ_SHIFT                 (16U)
#define CAN_FD_NOMINAL_BITTIMING_BRQ_MASK                  (0xFFU << CAN_FD_NOMINAL_BITTIMING_BRQ_SHIFT)                /* 0x00FF0000 */
#define CAN_FD_NOMINAL_BITTIMING_SJW_SHIFT                 (24U)
#define CAN_FD_NOMINAL_BITTIMING_SJW_MASK                  (0x7FU << CAN_FD_NOMINAL_BITTIMING_SJW_SHIFT)                /* 0x7F000000 */
#define CAN_FD_NOMINAL_BITTIMING_SAMPLE_MODE_SHIFT         (31U)
#define CAN_FD_NOMINAL_BITTIMING_SAMPLE_MODE_MASK          (0x1U << CAN_FD_NOMINAL_BITTIMING_SAMPLE_MODE_SHIFT)         /* 0x80000000 */
/* FD_DATA_BITTIMING */
#define CAN_FD_DATA_BITTIMING_OFFSET                       (0x104U)
#define CAN_FD_DATA_BITTIMING_TSEG1_SHIFT                  (0U)
#define CAN_FD_DATA_BITTIMING_TSEG1_MASK                   (0x1FU << CAN_FD_DATA_BITTIMING_TSEG1_SHIFT)                 /* 0x0000001F */
#define CAN_FD_DATA_BITTIMING_TSEG2_SHIFT                  (5U)
#define CAN_FD_DATA_BITTIMING_TSEG2_MASK                   (0xFU << CAN_FD_DATA_BITTIMING_TSEG2_SHIFT)                  /* 0x000001E0 */
#define CAN_FD_DATA_BITTIMING_BRQ_SHIFT                    (9U)
#define CAN_FD_DATA_BITTIMING_BRQ_MASK                     (0xFFU << CAN_FD_DATA_BITTIMING_BRQ_SHIFT)                   /* 0x0001FE00 */
#define CAN_FD_DATA_BITTIMING_SJW_SHIFT                    (17U)
#define CAN_FD_DATA_BITTIMING_SJW_MASK                     (0xFU << CAN_FD_DATA_BITTIMING_SJW_SHIFT)                    /* 0x001E0000 */
#define CAN_FD_DATA_BITTIMING_ACKSLOT_SYNC_DIS_SHIFT       (22U)
#define CAN_FD_DATA_BITTIMING_ACKSLOT_SYNC_DIS_MASK        (0x1U << CAN_FD_DATA_BITTIMING_ACKSLOT_SYNC_DIS_SHIFT)       /* 0x00400000 */
#define CAN_FD_DATA_BITTIMING_BRS_MODE_SHIFT               (23U)
#define CAN_FD_DATA_BITTIMING_BRS_MODE_MASK                (0x1U << CAN_FD_DATA_BITTIMING_BRS_MODE_SHIFT)               /* 0x00800000 */
#define CAN_FD_DATA_BITTIMING_BRS_TSEG1_SHIFT              (24U)
#define CAN_FD_DATA_BITTIMING_BRS_TSEG1_MASK               (0xFFU << CAN_FD_DATA_BITTIMING_BRS_TSEG1_SHIFT)             /* 0xFF000000 */
/* FD_TDC */
#define CAN_FD_TDC_OFFSET                                  (0x108U)
#define CAN_FD_TDC_TDC_ENABLE_SHIFT                        (0U)
#define CAN_FD_TDC_TDC_ENABLE_MASK                         (0x1U << CAN_FD_TDC_TDC_ENABLE_SHIFT)                        /* 0x00000001 */
#define CAN_FD_TDC_TDC_OFFSET_SHIFT                        (1U)
#define CAN_FD_TDC_TDC_OFFSET_MASK                         (0x3FU << CAN_FD_TDC_TDC_OFFSET_SHIFT)                       /* 0x0000007E */
#define CAN_FD_TDC_LCNT_MEAS_EN_SHIFT                      (7U)
#define CAN_FD_TDC_LCNT_MEAS_EN_MASK                       (0x1U << CAN_FD_TDC_LCNT_MEAS_EN_SHIFT)                      /* 0x00000080 */
#define CAN_FD_TDC_LCNT_CLR_SHIFT                          (8U)
#define CAN_FD_TDC_LCNT_CLR_MASK                           (0x1U << CAN_FD_TDC_LCNT_CLR_SHIFT)                          /* 0x00000100 */
/* FD_BRS_CFG */
#define CAN_FD_BRS_CFG_OFFSET                              (0x10CU)
#define CAN_FD_BRS_CFG_BRS_NEGSYNC_EN_SHIFT                (0U)
#define CAN_FD_BRS_CFG_BRS_NEGSYNC_EN_MASK                 (0x1U << CAN_FD_BRS_CFG_BRS_NEGSYNC_EN_SHIFT)                /* 0x00000001 */
#define CAN_FD_BRS_CFG_BRS_POSSYNC_EN_SHIFT                (1U)
#define CAN_FD_BRS_CFG_BRS_POSSYNC_EN_MASK                 (0x1U << CAN_FD_BRS_CFG_BRS_POSSYNC_EN_SHIFT)                /* 0x00000002 */
#define CAN_FD_BRS_CFG_RESYNC_MODE_SHIFT                   (3U)
#define CAN_FD_BRS_CFG_RESYNC_MODE_MASK                    (0x1U << CAN_FD_BRS_CFG_RESYNC_MODE_SHIFT)                   /* 0x00000008 */
#define CAN_FD_BRS_CFG_SP1_NTSEG1_SHIFT                    (5U)
#define CAN_FD_BRS_CFG_SP1_NTSEG1_MASK                     (0xFFU << CAN_FD_BRS_CFG_SP1_NTSEG1_SHIFT)                   /* 0x00001FE0 */
#define CAN_FD_BRS_CFG_SP1_DTSEG2_SHIFT                    (13U)
#define CAN_FD_BRS_CFG_SP1_DTSEG2_MASK                     (0x1FU << CAN_FD_BRS_CFG_SP1_DTSEG2_SHIFT)                   /* 0x0003E000 */
#define CAN_FD_BRS_CFG_SP2_NTSEG1_SHIFT                    (18U)
#define CAN_FD_BRS_CFG_SP2_NTSEG1_MASK                     (0xFFU << CAN_FD_BRS_CFG_SP2_NTSEG1_SHIFT)                   /* 0x03FC0000 */
#define CAN_FD_BRS_CFG_SP2_DTSEG2_SHIFT                    (26U)
#define CAN_FD_BRS_CFG_SP2_DTSEG2_MASK                     (0x1FU << CAN_FD_BRS_CFG_SP2_DTSEG2_SHIFT)                   /* 0x7C000000 */
#define CAN_FD_BRS_CFG_TRIPLE_SYNC_MODE_SHIFT              (31U)
#define CAN_FD_BRS_CFG_TRIPLE_SYNC_MODE_MASK               (0x1U << CAN_FD_BRS_CFG_TRIPLE_SYNC_MODE_SHIFT)              /* 0x80000000 */
/* FD_LOOP_CNT */
#define CAN_FD_LOOP_CNT_OFFSET                             (0x110U)
#define CAN_FD_LOOP_CNT                                    (0x0U)
#define CAN_FD_LOOP_CNT_LOOP_DELAY_CNT_SHIFT               (0U)
#define CAN_FD_LOOP_CNT_LOOP_DELAY_CNT_MASK                (0xFFFFFFFFU << CAN_FD_LOOP_CNT_LOOP_DELAY_CNT_SHIFT)        /* 0xFFFFFFFF */
/* DMA_CTRL */
#define CAN_DMA_CTRL_OFFSET                                (0x11CU)
#define CAN_DMA_CTRL_DMA_THR_SHIFT                         (0U)
#define CAN_DMA_CTRL_DMA_THR_MASK                          (0x1FFU << CAN_DMA_CTRL_DMA_THR_SHIFT)                       /* 0x000001FF */
#define CAN_DMA_CTRL_DMA_RX_EN_SHIFT                       (9U)
#define CAN_DMA_CTRL_DMA_RX_EN_MASK                        (0x1U << CAN_DMA_CTRL_DMA_RX_EN_SHIFT)                       /* 0x00000200 */
/* FD_TXFRAMEINFO */
#define CAN_FD_TXFRAMEINFO_OFFSET                          (0x200U)
#define CAN_FD_TXFRAMEINFO_TXDATA_LENGTH_SHIFT             (0U)
#define CAN_FD_TXFRAMEINFO_TXDATA_LENGTH_MASK              (0xFU << CAN_FD_TXFRAMEINFO_TXDATA_LENGTH_SHIFT)             /* 0x0000000F */
#define CAN_FD_TXFRAMEINFO_TX_BRS_SHIFT                    (4U)
#define CAN_FD_TXFRAMEINFO_TX_BRS_MASK                     (0x1U << CAN_FD_TXFRAMEINFO_TX_BRS_SHIFT)                    /* 0x00000010 */
#define CAN_FD_TXFRAMEINFO_TX_FDF_SHIFT                    (5U)
#define CAN_FD_TXFRAMEINFO_TX_FDF_MASK                     (0x1U << CAN_FD_TXFRAMEINFO_TX_FDF_SHIFT)                    /* 0x00000020 */
#define CAN_FD_TXFRAMEINFO_TX_RTR_SHIFT                    (6U)
#define CAN_FD_TXFRAMEINFO_TX_RTR_MASK                     (0x1U << CAN_FD_TXFRAMEINFO_TX_RTR_SHIFT)                    /* 0x00000040 */
#define CAN_FD_TXFRAMEINFO_TXFRAME_FORMAT_SHIFT            (7U)
#define CAN_FD_TXFRAMEINFO_TXFRAME_FORMAT_MASK             (0x1U << CAN_FD_TXFRAMEINFO_TXFRAME_FORMAT_SHIFT)            /* 0x00000080 */
/* FD_TXID */
#define CAN_FD_TXID_OFFSET                                 (0x204U)
#define CAN_FD_TXID_TX_ID_SHIFT                            (0U)
#define CAN_FD_TXID_TX_ID_MASK                             (0x1FFFFFFFU << CAN_FD_TXID_TX_ID_SHIFT)                     /* 0x1FFFFFFF */
/* FD_TXDATA0 */
#define CAN_FD_TXDATA0_OFFSET                              (0x208U)
#define CAN_FD_TXDATA0_TX_DATA0_SHIFT                      (0U)
#define CAN_FD_TXDATA0_TX_DATA0_MASK                       (0xFFFFFFFFU << CAN_FD_TXDATA0_TX_DATA0_SHIFT)               /* 0xFFFFFFFF */
/* FD_TXDATA1 */
#define CAN_FD_TXDATA1_OFFSET                              (0x20CU)
#define CAN_FD_TXDATA1_TX_DATA1_SHIFT                      (0U)
#define CAN_FD_TXDATA1_TX_DATA1_MASK                       (0xFFFFFFFFU << CAN_FD_TXDATA1_TX_DATA1_SHIFT)               /* 0xFFFFFFFF */
/* FD_TXDATA2 */
#define CAN_FD_TXDATA2_OFFSET                              (0x210U)
#define CAN_FD_TXDATA2_TX_DATA2_SHIFT                      (0U)
#define CAN_FD_TXDATA2_TX_DATA2_MASK                       (0xFFFFFFFFU << CAN_FD_TXDATA2_TX_DATA2_SHIFT)               /* 0xFFFFFFFF */
/* FD_TXDATA3 */
#define CAN_FD_TXDATA3_OFFSET                              (0x214U)
#define CAN_FD_TXDATA3_TX_DATA3_SHIFT                      (0U)
#define CAN_FD_TXDATA3_TX_DATA3_MASK                       (0xFFFFFFFFU << CAN_FD_TXDATA3_TX_DATA3_SHIFT)               /* 0xFFFFFFFF */
/* FD_TXDATA4 */
#define CAN_FD_TXDATA4_OFFSET                              (0x218U)
#define CAN_FD_TXDATA4_TX_DATA4_SHIFT                      (0U)
#define CAN_FD_TXDATA4_TX_DATA4_MASK                       (0xFFFFFFFFU << CAN_FD_TXDATA4_TX_DATA4_SHIFT)               /* 0xFFFFFFFF */
/* FD_TXDATA5 */
#define CAN_FD_TXDATA5_OFFSET                              (0x21CU)
#define CAN_FD_TXDATA5_TX_DATA5_SHIFT                      (0U)
#define CAN_FD_TXDATA5_TX_DATA5_MASK                       (0xFFFFFFFFU << CAN_FD_TXDATA5_TX_DATA5_SHIFT)               /* 0xFFFFFFFF */
/* FD_TXDATA6 */
#define CAN_FD_TXDATA6_OFFSET                              (0x220U)
#define CAN_FD_TXDATA6_TX_DATA6_SHIFT                      (0U)
#define CAN_FD_TXDATA6_TX_DATA6_MASK                       (0xFFFFFFFFU << CAN_FD_TXDATA6_TX_DATA6_SHIFT)               /* 0xFFFFFFFF */
/* FD_TXDATA7 */
#define CAN_FD_TXDATA7_OFFSET                              (0x224U)
#define CAN_FD_TXDATA7_TX_DATA7_SHIFT                      (0U)
#define CAN_FD_TXDATA7_TX_DATA7_MASK                       (0xFFFFFFFFU << CAN_FD_TXDATA7_TX_DATA7_SHIFT)               /* 0xFFFFFFFF */
/* FD_TXDATA8 */
#define CAN_FD_TXDATA8_OFFSET                              (0x228U)
#define CAN_FD_TXDATA8_TX_DATA8_SHIFT                      (0U)
#define CAN_FD_TXDATA8_TX_DATA8_MASK                       (0xFFFFFFFFU << CAN_FD_TXDATA8_TX_DATA8_SHIFT)               /* 0xFFFFFFFF */
/* FD_TXDATA9 */
#define CAN_FD_TXDATA9_OFFSET                              (0x22CU)
#define CAN_FD_TXDATA9_TX_DATA9_SHIFT                      (0U)
#define CAN_FD_TXDATA9_TX_DATA9_MASK                       (0xFFFFFFFFU << CAN_FD_TXDATA9_TX_DATA9_SHIFT)               /* 0xFFFFFFFF */
/* FD_TXDATA10 */
#define CAN_FD_TXDATA10_OFFSET                             (0x230U)
#define CAN_FD_TXDATA10_TX_DATA10_SHIFT                    (0U)
#define CAN_FD_TXDATA10_TX_DATA10_MASK                     (0xFFFFFFFFU << CAN_FD_TXDATA10_TX_DATA10_SHIFT)             /* 0xFFFFFFFF */
/* FD_TXDATA11 */
#define CAN_FD_TXDATA11_OFFSET                             (0x234U)
#define CAN_FD_TXDATA11_TX_DATA11_SHIFT                    (0U)
#define CAN_FD_TXDATA11_TX_DATA11_MASK                     (0xFFFFFFFFU << CAN_FD_TXDATA11_TX_DATA11_SHIFT)             /* 0xFFFFFFFF */
/* FD_TXDATA12 */
#define CAN_FD_TXDATA12_OFFSET                             (0x238U)
#define CAN_FD_TXDATA12_TX_DATA12_SHIFT                    (0U)
#define CAN_FD_TXDATA12_TX_DATA12_MASK                     (0xFFFFFFFFU << CAN_FD_TXDATA12_TX_DATA12_SHIFT)             /* 0xFFFFFFFF */
/* FD_TXDATA13 */
#define CAN_FD_TXDATA13_OFFSET                             (0x23CU)
#define CAN_FD_TXDATA13_TX_DATA13_SHIFT                    (0U)
#define CAN_FD_TXDATA13_TX_DATA13_MASK                     (0xFFFFFFFFU << CAN_FD_TXDATA13_TX_DATA13_SHIFT)             /* 0xFFFFFFFF */
/* FD_TXDATA14 */
#define CAN_FD_TXDATA14_OFFSET                             (0x240U)
#define CAN_FD_TXDATA14_TX_DATA14_SHIFT                    (0U)
#define CAN_FD_TXDATA14_TX_DATA14_MASK                     (0xFFFFFFFFU << CAN_FD_TXDATA14_TX_DATA14_SHIFT)             /* 0xFFFFFFFF */
/* FD_TXDATA15 */
#define CAN_FD_TXDATA15_OFFSET                             (0x244U)
#define CAN_FD_TXDATA15_TX_DATA15_SHIFT                    (0U)
#define CAN_FD_TXDATA15_TX_DATA15_MASK                     (0xFFFFFFFFU << CAN_FD_TXDATA15_TX_DATA15_SHIFT)             /* 0xFFFFFFFF */
/* FD_RXFRAMEINFO */
#define CAN_FD_RXFRAMEINFO_OFFSET                          (0x300U)
#define CAN_FD_RXFRAMEINFO                                 (0x0U)
#define CAN_FD_RXFRAMEINFO_BUF_RXDATA_LENGTH_SHIFT         (0U)
#define CAN_FD_RXFRAMEINFO_BUF_RXDATA_LENGTH_MASK          (0xFU << CAN_FD_RXFRAMEINFO_BUF_RXDATA_LENGTH_SHIFT)         /* 0x0000000F */
#define CAN_FD_RXFRAMEINFO_BUF_RX_BRS_SHIFT                (4U)
#define CAN_FD_RXFRAMEINFO_BUF_RX_BRS_MASK                 (0x1U << CAN_FD_RXFRAMEINFO_BUF_RX_BRS_SHIFT)                /* 0x00000010 */
#define CAN_FD_RXFRAMEINFO_BUF_RX_FDF_SHIFT                (5U)
#define CAN_FD_RXFRAMEINFO_BUF_RX_FDF_MASK                 (0x1U << CAN_FD_RXFRAMEINFO_BUF_RX_FDF_SHIFT)                /* 0x00000020 */
#define CAN_FD_RXFRAMEINFO_BUF_RX_RTR_SHIFT                (6U)
#define CAN_FD_RXFRAMEINFO_BUF_RX_RTR_MASK                 (0x1U << CAN_FD_RXFRAMEINFO_BUF_RX_RTR_SHIFT)                /* 0x00000040 */
#define CAN_FD_RXFRAMEINFO_BUF_RXFRAME_FORMAT_SHIFT        (7U)
#define CAN_FD_RXFRAMEINFO_BUF_RXFRAME_FORMAT_MASK         (0x1U << CAN_FD_RXFRAMEINFO_BUF_RXFRAME_FORMAT_SHIFT)        /* 0x00000080 */
#define CAN_FD_RXFRAMEINFO_RX_BRS_SHIFT                    (20U)
#define CAN_FD_RXFRAMEINFO_RX_BRS_MASK                     (0x1U << CAN_FD_RXFRAMEINFO_RX_BRS_SHIFT)                    /* 0x00100000 */
#define CAN_FD_RXFRAMEINFO_RX_FDF_SHIFT                    (21U)
#define CAN_FD_RXFRAMEINFO_RX_FDF_MASK                     (0x1U << CAN_FD_RXFRAMEINFO_RX_FDF_SHIFT)                    /* 0x00200000 */
#define CAN_FD_RXFRAMEINFO_RX_RTR_SHIFT                    (22U)
#define CAN_FD_RXFRAMEINFO_RX_RTR_MASK                     (0x1U << CAN_FD_RXFRAMEINFO_RX_RTR_SHIFT)                    /* 0x00400000 */
#define CAN_FD_RXFRAMEINFO_RXFRAME_FORMAT_SHIFT            (23U)
#define CAN_FD_RXFRAMEINFO_RXFRAME_FORMAT_MASK             (0x1U << CAN_FD_RXFRAMEINFO_RXFRAME_FORMAT_SHIFT)            /* 0x00800000 */
#define CAN_FD_RXFRAMEINFO_RXDATA_LENGTH_SHIFT             (24U)
#define CAN_FD_RXFRAMEINFO_RXDATA_LENGTH_MASK              (0xFU << CAN_FD_RXFRAMEINFO_RXDATA_LENGTH_SHIFT)             /* 0x0F000000 */
/* FD_RXID */
#define CAN_FD_RXID_OFFSET                                 (0x304U)
#define CAN_FD_RXID                                        (0x0U)
#define CAN_FD_RXID_RX_ID_SHIFT                            (0U)
#define CAN_FD_RXID_RX_ID_MASK                             (0x1FFFFFFFU << CAN_FD_RXID_RX_ID_SHIFT)                     /* 0x1FFFFFFF */
/* FD_RXTIMESTAMP */
#define CAN_FD_RXTIMESTAMP_OFFSET                          (0x308U)
#define CAN_FD_RXTIMESTAMP                                 (0x0U)
#define CAN_FD_RXTIMESTAMP_TIMESTAMP_SHIFT                 (0U)
#define CAN_FD_RXTIMESTAMP_TIMESTAMP_MASK                  (0xFFFFFFFFU << CAN_FD_RXTIMESTAMP_TIMESTAMP_SHIFT)          /* 0xFFFFFFFF */
/* FD_RXDATA0 */
#define CAN_FD_RXDATA0_OFFSET                              (0x30CU)
#define CAN_FD_RXDATA0                                     (0x0U)
#define CAN_FD_RXDATA0_RX_DATA0_SHIFT                      (0U)
#define CAN_FD_RXDATA0_RX_DATA0_MASK                       (0xFFFFFFFFU << CAN_FD_RXDATA0_RX_DATA0_SHIFT)               /* 0xFFFFFFFF */
/* FD_RXDATA1 */
#define CAN_FD_RXDATA1_OFFSET                              (0x310U)
#define CAN_FD_RXDATA1                                     (0x0U)
#define CAN_FD_RXDATA1_RX_DATA1_SHIFT                      (0U)
#define CAN_FD_RXDATA1_RX_DATA1_MASK                       (0xFFFFFFFFU << CAN_FD_RXDATA1_RX_DATA1_SHIFT)               /* 0xFFFFFFFF */
/* FD_RXDATA2 */
#define CAN_FD_RXDATA2_OFFSET                              (0x314U)
#define CAN_FD_RXDATA2                                     (0x0U)
#define CAN_FD_RXDATA2_RX_DATA2_SHIFT                      (0U)
#define CAN_FD_RXDATA2_RX_DATA2_MASK                       (0xFFFFFFFFU << CAN_FD_RXDATA2_RX_DATA2_SHIFT)               /* 0xFFFFFFFF */
/* FD_RXDATA3 */
#define CAN_FD_RXDATA3_OFFSET                              (0x318U)
#define CAN_FD_RXDATA3                                     (0x0U)
#define CAN_FD_RXDATA3_RX_DATA3_SHIFT                      (0U)
#define CAN_FD_RXDATA3_RX_DATA3_MASK                       (0xFFFFFFFFU << CAN_FD_RXDATA3_RX_DATA3_SHIFT)               /* 0xFFFFFFFF */
/* FD_RXDATA4 */
#define CAN_FD_RXDATA4_OFFSET                              (0x31CU)
#define CAN_FD_RXDATA4                                     (0x0U)
#define CAN_FD_RXDATA4_RX_DATA4_SHIFT                      (0U)
#define CAN_FD_RXDATA4_RX_DATA4_MASK                       (0xFFFFFFFFU << CAN_FD_RXDATA4_RX_DATA4_SHIFT)               /* 0xFFFFFFFF */
/* FD_RXDATA5 */
#define CAN_FD_RXDATA5_OFFSET                              (0x320U)
#define CAN_FD_RXDATA5                                     (0x0U)
#define CAN_FD_RXDATA5_RX_DATA5_SHIFT                      (0U)
#define CAN_FD_RXDATA5_RX_DATA5_MASK                       (0xFFFFFFFFU << CAN_FD_RXDATA5_RX_DATA5_SHIFT)               /* 0xFFFFFFFF */
/* FD_RXDATA6 */
#define CAN_FD_RXDATA6_OFFSET                              (0x324U)
#define CAN_FD_RXDATA6                                     (0x0U)
#define CAN_FD_RXDATA6_RX_DATA6_SHIFT                      (0U)
#define CAN_FD_RXDATA6_RX_DATA6_MASK                       (0xFFFFFFFFU << CAN_FD_RXDATA6_RX_DATA6_SHIFT)               /* 0xFFFFFFFF */
/* FD_RXDATA7 */
#define CAN_FD_RXDATA7_OFFSET                              (0x328U)
#define CAN_FD_RXDATA7                                     (0x0U)
#define CAN_FD_RXDATA7_RX_DATA7_SHIFT                      (0U)
#define CAN_FD_RXDATA7_RX_DATA7_MASK                       (0xFFFFFFFFU << CAN_FD_RXDATA7_RX_DATA7_SHIFT)               /* 0xFFFFFFFF */
/* FD_RXDATA8 */
#define CAN_FD_RXDATA8_OFFSET                              (0x32CU)
#define CAN_FD_RXDATA8                                     (0x0U)
#define CAN_FD_RXDATA8_RX_DATA8_SHIFT                      (0U)
#define CAN_FD_RXDATA8_RX_DATA8_MASK                       (0xFFFFFFFFU << CAN_FD_RXDATA8_RX_DATA8_SHIFT)               /* 0xFFFFFFFF */
/* FD_RXDATA9 */
#define CAN_FD_RXDATA9_OFFSET                              (0x330U)
#define CAN_FD_RXDATA9                                     (0x0U)
#define CAN_FD_RXDATA9_RX_DATA9_SHIFT                      (0U)
#define CAN_FD_RXDATA9_RX_DATA9_MASK                       (0xFFFFFFFFU << CAN_FD_RXDATA9_RX_DATA9_SHIFT)               /* 0xFFFFFFFF */
/* FD_RXDATA10 */
#define CAN_FD_RXDATA10_OFFSET                             (0x334U)
#define CAN_FD_RXDATA10                                    (0x0U)
#define CAN_FD_RXDATA10_RX_DATA10_SHIFT                    (0U)
#define CAN_FD_RXDATA10_RX_DATA10_MASK                     (0xFFFFFFFFU << CAN_FD_RXDATA10_RX_DATA10_SHIFT)             /* 0xFFFFFFFF */
/* FD_RXDATA11 */
#define CAN_FD_RXDATA11_OFFSET                             (0x338U)
#define CAN_FD_RXDATA11                                    (0x0U)
#define CAN_FD_RXDATA11_RX_DATA11_SHIFT                    (0U)
#define CAN_FD_RXDATA11_RX_DATA11_MASK                     (0xFFFFFFFFU << CAN_FD_RXDATA11_RX_DATA11_SHIFT)             /* 0xFFFFFFFF */
/* FD_RXDATA12 */
#define CAN_FD_RXDATA12_OFFSET                             (0x33CU)
#define CAN_FD_RXDATA12                                    (0x0U)
#define CAN_FD_RXDATA12_RX_DATA12_SHIFT                    (0U)
#define CAN_FD_RXDATA12_RX_DATA12_MASK                     (0xFFFFFFFFU << CAN_FD_RXDATA12_RX_DATA12_SHIFT)             /* 0xFFFFFFFF */
/* FD_RXDATA13 */
#define CAN_FD_RXDATA13_OFFSET                             (0x340U)
#define CAN_FD_RXDATA13                                    (0x0U)
#define CAN_FD_RXDATA13_RX_DATA13_SHIFT                    (0U)
#define CAN_FD_RXDATA13_RX_DATA13_MASK                     (0xFFFFFFFFU << CAN_FD_RXDATA13_RX_DATA13_SHIFT)             /* 0xFFFFFFFF */
/* FD_RXDATA14 */
#define CAN_FD_RXDATA14_OFFSET                             (0x344U)
#define CAN_FD_RXDATA14                                    (0x0U)
#define CAN_FD_RXDATA14_RX_DATA14_SHIFT                    (0U)
#define CAN_FD_RXDATA14_RX_DATA14_MASK                     (0xFFFFFFFFU << CAN_FD_RXDATA14_RX_DATA14_SHIFT)             /* 0xFFFFFFFF */
/* FD_RXDATA15 */
#define CAN_FD_RXDATA15_OFFSET                             (0x348U)
#define CAN_FD_RXDATA15                                    (0x0U)
#define CAN_FD_RXDATA15_RX_DATA15_SHIFT                    (0U)
#define CAN_FD_RXDATA15_RX_DATA15_MASK                     (0xFFFFFFFFU << CAN_FD_RXDATA15_RX_DATA15_SHIFT)             /* 0xFFFFFFFF */
/* RX_FIFO_RDATA */
#define CAN_RX_FIFO_RDATA_OFFSET                           (0x400U)
#define CAN_RX_FIFO_RDATA                                  (0x0U)
#define CAN_RX_FIFO_RDATA_RX_STR_RDATA_SHIFT               (0U)
#define CAN_RX_FIFO_RDATA_RX_STR_RDATA_MASK                (0xFFFFFFFFU << CAN_RX_FIFO_RDATA_RX_STR_RDATA_SHIFT)        /* 0xFFFFFFFF */
/* STR_CTL */
#define CAN_STR_CTL_OFFSET                                 (0x600U)
#define CAN_STR_CTL_BUFF_MODE_EN_SHIFT                     (0U)
#define CAN_STR_CTL_BUFF_MODE_EN_MASK                      (0x1U << CAN_STR_CTL_BUFF_MODE_EN_SHIFT)                     /* 0x00000001 */
#define CAN_STR_CTL_STM_SHIFT                              (1U)
#define CAN_STR_CTL_STM_MASK                               (0x1U << CAN_STR_CTL_STM_SHIFT)                              /* 0x00000002 */
#define CAN_STR_CTL_ISM_SEL_SHIFT                          (2U)
#define CAN_STR_CTL_ISM_SEL_MASK                           (0x3U << CAN_STR_CTL_ISM_SEL_SHIFT)                          /* 0x0000000C */
#define CAN_STR_CTL_SRST_SHIFT                             (4U)
#define CAN_STR_CTL_SRST_MASK                              (0x1U << CAN_STR_CTL_SRST_SHIFT)                             /* 0x00000010 */
#define CAN_STR_CTL_ESM_SEL_SHIFT                          (6U)
#define CAN_STR_CTL_ESM_SEL_MASK                           (0x3U << CAN_STR_CTL_ESM_SEL_SHIFT)                          /* 0x000000C0 */
#define CAN_STR_CTL_STR_TIMEOUT_MODE_SHIFT                 (8U)
#define CAN_STR_CTL_STR_TIMEOUT_MODE_MASK                  (0x1U << CAN_STR_CTL_STR_TIMEOUT_MODE_SHIFT)                 /* 0x00000100 */
/* STR_STATE */
#define CAN_STR_STATE_OFFSET                               (0x604U)
#define CAN_STR_STATE                                      (0x0U)
#define CAN_STR_STATE_INTM_EMPTY_SHIFT                     (0U)
#define CAN_STR_STATE_INTM_EMPTY_MASK                      (0x1U << CAN_STR_STATE_INTM_EMPTY_SHIFT)                     /* 0x00000001 */
#define CAN_STR_STATE_INTM_FULL_SHIFT                      (1U)
#define CAN_STR_STATE_INTM_FULL_MASK                       (0x1U << CAN_STR_STATE_INTM_FULL_SHIFT)                      /* 0x00000002 */
#define CAN_STR_STATE_EXTM_EMPTY_SHIFT                     (2U)
#define CAN_STR_STATE_EXTM_EMPTY_MASK                      (0x1U << CAN_STR_STATE_EXTM_EMPTY_SHIFT)                     /* 0x00000004 */
#define CAN_STR_STATE_EXTM_FULL_SHIFT                      (3U)
#define CAN_STR_STATE_EXTM_FULL_MASK                       (0x1U << CAN_STR_STATE_EXTM_FULL_SHIFT)                      /* 0x00000008 */
#define CAN_STR_STATE_INTM_LEFT_CNT_SHIFT                  (8U)
#define CAN_STR_STATE_INTM_LEFT_CNT_MASK                   (0x1FFU << CAN_STR_STATE_INTM_LEFT_CNT_SHIFT)                /* 0x0001FF00 */
#define CAN_STR_STATE_INTM_FRAME_CNT_SHIFT                 (17U)
#define CAN_STR_STATE_INTM_FRAME_CNT_MASK                  (0x1FFU << CAN_STR_STATE_INTM_FRAME_CNT_SHIFT)               /* 0x03FE0000 */
/* STR_TIMEOUT */
#define CAN_STR_TIMEOUT_OFFSET                             (0x608U)
#define CAN_STR_TIMEOUT_STR_TIMEOUT_THR_SHIFT              (0U)
#define CAN_STR_TIMEOUT_STR_TIMEOUT_THR_MASK               (0xFFFFFFFFU << CAN_STR_TIMEOUT_STR_TIMEOUT_THR_SHIFT)       /* 0xFFFFFFFF */
/* STR_WTM */
#define CAN_STR_WTM_OFFSET                                 (0x60CU)
#define CAN_STR_WTM_ISM_WATERMARK_SHIFT                    (0U)
#define CAN_STR_WTM_ISM_WATERMARK_MASK                     (0x1FFU << CAN_STR_WTM_ISM_WATERMARK_SHIFT)                  /* 0x000001FF */
#define CAN_STR_WTM_ESM_WATERMARK_SHIFT                    (9U)
#define CAN_STR_WTM_ESM_WATERMARK_MASK                     (0x3FFFFFU << CAN_STR_WTM_ESM_WATERMARK_SHIFT)               /* 0x7FFFFE00 */
/* EXTM_START_ADDR */
#define CAN_EXTM_START_ADDR_OFFSET                         (0x610U)
#define CAN_EXTM_START_ADDR_START_ADDR_SHIFT               (0U)
#define CAN_EXTM_START_ADDR_START_ADDR_MASK                (0xFFFFFFFFU << CAN_EXTM_START_ADDR_START_ADDR_SHIFT)        /* 0xFFFFFFFF */
/* EXTM_SIZE */
#define CAN_EXTM_SIZE_OFFSET                               (0x614U)
#define CAN_EXTM_SIZE_EXT_MEM_SIZE_SHIFT                   (0U)
#define CAN_EXTM_SIZE_EXT_MEM_SIZE_MASK                    (0xFFFFFFFFU << CAN_EXTM_SIZE_EXT_MEM_SIZE_SHIFT)            /* 0xFFFFFFFF */
/* EXTM_WADDR */
#define CAN_EXTM_WADDR_OFFSET                              (0x618U)
#define CAN_EXTM_WADDR                                     (0x0U)
#define CAN_EXTM_WADDR_CAN_WADDR_SHIFT                     (0U)
#define CAN_EXTM_WADDR_CAN_WADDR_MASK                      (0xFFFFFFFFU << CAN_EXTM_WADDR_CAN_WADDR_SHIFT)              /* 0xFFFFFFFF */
/* EXTM_RADDR */
#define CAN_EXTM_RADDR_OFFSET                              (0x61CU)
#define CAN_EXTM_RADDR_CPU_RADDR_SHIFT                     (0U)
#define CAN_EXTM_RADDR_CPU_RADDR_MASK                      (0xFFFFFFFFU << CAN_EXTM_RADDR_CPU_RADDR_SHIFT)              /* 0xFFFFFFFF */
/* EXTM_AHB_TXTHR */
#define CAN_EXTM_AHB_TXTHR_OFFSET                          (0x620U)
#define CAN_EXTM_AHB_TXTHR_AHB_TXTHR_SHIFT                 (0U)
#define CAN_EXTM_AHB_TXTHR_AHB_TXTHR_MASK                  (0x1FFU << CAN_EXTM_AHB_TXTHR_AHB_TXTHR_SHIFT)               /* 0x000001FF */
/* EXTM_LEFT_CNT */
#define CAN_EXTM_LEFT_CNT_OFFSET                           (0x624U)
#define CAN_EXTM_LEFT_CNT                                  (0x0U)
#define CAN_EXTM_LEFT_CNT_EXTM_LEFT_CNT_SHIFT              (0U)
#define CAN_EXTM_LEFT_CNT_EXTM_LEFT_CNT_MASK               (0x3FFFFFU << CAN_EXTM_LEFT_CNT_EXTM_LEFT_CNT_SHIFT)         /* 0x003FFFFF */
/* ATF0 */
#define CAN_ATF0_OFFSET                                    (0x700U)
#define CAN_ATF0_ID_SHIFT                                  (0U)
#define CAN_ATF0_ID_MASK                                   (0x1FFFFFFFU << CAN_ATF0_ID_SHIFT)                           /* 0x1FFFFFFF */
#define CAN_ATF0_RTR_SHIFT                                 (29U)
#define CAN_ATF0_RTR_MASK                                  (0x1U << CAN_ATF0_RTR_SHIFT)                                 /* 0x20000000 */
#define CAN_ATF0_RTR_EN_SHIFT                              (30U)
#define CAN_ATF0_RTR_EN_MASK                               (0x1U << CAN_ATF0_RTR_EN_SHIFT)                              /* 0x40000000 */
/* ATF1 */
#define CAN_ATF1_OFFSET                                    (0x704U)
#define CAN_ATF1_ID_SHIFT                                  (0U)
#define CAN_ATF1_ID_MASK                                   (0x1FFFFFFFU << CAN_ATF1_ID_SHIFT)                           /* 0x1FFFFFFF */
#define CAN_ATF1_RTR_SHIFT                                 (29U)
#define CAN_ATF1_RTR_MASK                                  (0x1U << CAN_ATF1_RTR_SHIFT)                                 /* 0x20000000 */
#define CAN_ATF1_RTR_EN_SHIFT                              (30U)
#define CAN_ATF1_RTR_EN_MASK                               (0x1U << CAN_ATF1_RTR_EN_SHIFT)                              /* 0x40000000 */
/* ATF2 */
#define CAN_ATF2_OFFSET                                    (0x708U)
#define CAN_ATF2_ID_SHIFT                                  (0U)
#define CAN_ATF2_ID_MASK                                   (0x1FFFFFFFU << CAN_ATF2_ID_SHIFT)                           /* 0x1FFFFFFF */
#define CAN_ATF2_RTR_SHIFT                                 (29U)
#define CAN_ATF2_RTR_MASK                                  (0x1U << CAN_ATF2_RTR_SHIFT)                                 /* 0x20000000 */
#define CAN_ATF2_RTR_EN_SHIFT                              (30U)
#define CAN_ATF2_RTR_EN_MASK                               (0x1U << CAN_ATF2_RTR_EN_SHIFT)                              /* 0x40000000 */
/* ATF3 */
#define CAN_ATF3_OFFSET                                    (0x70CU)
#define CAN_ATF3_ID_SHIFT                                  (0U)
#define CAN_ATF3_ID_MASK                                   (0x1FFFFFFFU << CAN_ATF3_ID_SHIFT)                           /* 0x1FFFFFFF */
#define CAN_ATF3_RTR_SHIFT                                 (29U)
#define CAN_ATF3_RTR_MASK                                  (0x1U << CAN_ATF3_RTR_SHIFT)                                 /* 0x20000000 */
#define CAN_ATF3_RTR_EN_SHIFT                              (30U)
#define CAN_ATF3_RTR_EN_MASK                               (0x1U << CAN_ATF3_RTR_EN_SHIFT)                              /* 0x40000000 */
/* ATF4 */
#define CAN_ATF4_OFFSET                                    (0x710U)
#define CAN_ATF4_ID_SHIFT                                  (0U)
#define CAN_ATF4_ID_MASK                                   (0x1FFFFFFFU << CAN_ATF4_ID_SHIFT)                           /* 0x1FFFFFFF */
#define CAN_ATF4_RTR_SHIFT                                 (29U)
#define CAN_ATF4_RTR_MASK                                  (0x1U << CAN_ATF4_RTR_SHIFT)                                 /* 0x20000000 */
#define CAN_ATF4_RTR_EN_SHIFT                              (30U)
#define CAN_ATF4_RTR_EN_MASK                               (0x1U << CAN_ATF4_RTR_EN_SHIFT)                              /* 0x40000000 */
/* ATFM0 */
#define CAN_ATFM0_OFFSET                                   (0x714U)
#define CAN_ATFM0_ID_SHIFT                                 (0U)
#define CAN_ATFM0_ID_MASK                                  (0x1FFFFFFFU << CAN_ATFM0_ID_SHIFT)                          /* 0x1FFFFFFF */
#define CAN_ATFM0_RTR_SHIFT                                (29U)
#define CAN_ATFM0_RTR_MASK                                 (0x1U << CAN_ATFM0_RTR_SHIFT)                                /* 0x20000000 */
#define CAN_ATFM0_RTR_EN_SHIFT                             (30U)
#define CAN_ATFM0_RTR_EN_MASK                              (0x1U << CAN_ATFM0_RTR_EN_SHIFT)                             /* 0x40000000 */
#define CAN_ATFM0_MASK_SHIFT                               (31U)
#define CAN_ATFM0_MASK_MASK                                (0x1U << CAN_ATFM0_MASK_SHIFT)                               /* 0x80000000 */
/* ATFM1 */
#define CAN_ATFM1_OFFSET                                   (0x718U)
#define CAN_ATFM1_ID_SHIFT                                 (0U)
#define CAN_ATFM1_ID_MASK                                  (0x1FFFFFFFU << CAN_ATFM1_ID_SHIFT)                          /* 0x1FFFFFFF */
#define CAN_ATFM1_RTR_SHIFT                                (29U)
#define CAN_ATFM1_RTR_MASK                                 (0x1U << CAN_ATFM1_RTR_SHIFT)                                /* 0x20000000 */
#define CAN_ATFM1_RTR_EN_SHIFT                             (30U)
#define CAN_ATFM1_RTR_EN_MASK                              (0x1U << CAN_ATFM1_RTR_EN_SHIFT)                             /* 0x40000000 */
#define CAN_ATFM1_MASK_SHIFT                               (31U)
#define CAN_ATFM1_MASK_MASK                                (0x1U << CAN_ATFM1_MASK_SHIFT)                               /* 0x80000000 */
/* ATFM2 */
#define CAN_ATFM2_OFFSET                                   (0x71CU)
#define CAN_ATFM2_ID_SHIFT                                 (0U)
#define CAN_ATFM2_ID_MASK                                  (0x1FFFFFFFU << CAN_ATFM2_ID_SHIFT)                          /* 0x1FFFFFFF */
#define CAN_ATFM2_RTR_SHIFT                                (29U)
#define CAN_ATFM2_RTR_MASK                                 (0x1U << CAN_ATFM2_RTR_SHIFT)                                /* 0x20000000 */
#define CAN_ATFM2_RTR_EN_SHIFT                             (30U)
#define CAN_ATFM2_RTR_EN_MASK                              (0x1U << CAN_ATFM2_RTR_EN_SHIFT)                             /* 0x40000000 */
#define CAN_ATFM2_MASK_SHIFT                               (31U)
#define CAN_ATFM2_MASK_MASK                                (0x1U << CAN_ATFM2_MASK_SHIFT)                               /* 0x80000000 */
/* ATFM3 */
#define CAN_ATFM3_OFFSET                                   (0x720U)
#define CAN_ATFM3_ID_SHIFT                                 (0U)
#define CAN_ATFM3_ID_MASK                                  (0x1FFFFFFFU << CAN_ATFM3_ID_SHIFT)                          /* 0x1FFFFFFF */
#define CAN_ATFM3_RTR_SHIFT                                (29U)
#define CAN_ATFM3_RTR_MASK                                 (0x1U << CAN_ATFM3_RTR_SHIFT)                                /* 0x20000000 */
#define CAN_ATFM3_RTR_EN_SHIFT                             (30U)
#define CAN_ATFM3_RTR_EN_MASK                              (0x1U << CAN_ATFM3_RTR_EN_SHIFT)                             /* 0x40000000 */
#define CAN_ATFM3_MASK_SHIFT                               (31U)
#define CAN_ATFM3_MASK_MASK                                (0x1U << CAN_ATFM3_MASK_SHIFT)                               /* 0x80000000 */
/* ATFM4 */
#define CAN_ATFM4_OFFSET                                   (0x724U)
#define CAN_ATFM4_ID_SHIFT                                 (0U)
#define CAN_ATFM4_ID_MASK                                  (0x1FFFFFFFU << CAN_ATFM4_ID_SHIFT)                          /* 0x1FFFFFFF */
#define CAN_ATFM4_RTR_SHIFT                                (29U)
#define CAN_ATFM4_RTR_MASK                                 (0x1U << CAN_ATFM4_RTR_SHIFT)                                /* 0x20000000 */
#define CAN_ATFM4_RTR_EN_SHIFT                             (30U)
#define CAN_ATFM4_RTR_EN_MASK                              (0x1U << CAN_ATFM4_RTR_EN_SHIFT)                             /* 0x40000000 */
#define CAN_ATFM4_MASK_SHIFT                               (31U)
#define CAN_ATFM4_MASK_MASK                                (0x1U << CAN_ATFM4_MASK_SHIFT)                               /* 0x80000000 */
/* ATF_DLC */
#define CAN_ATF_DLC_OFFSET                                 (0x728U)
#define CAN_ATF_DLC_ATF_DLC_SHIFT                          (0U)
#define CAN_ATF_DLC_ATF_DLC_MASK                           (0xFU << CAN_ATF_DLC_ATF_DLC_SHIFT)                          /* 0x0000000F */
#define CAN_ATF_DLC_ATF_DLC_EN_SHIFT                       (4U)
#define CAN_ATF_DLC_ATF_DLC_EN_MASK                        (0x1U << CAN_ATF_DLC_ATF_DLC_EN_SHIFT)                       /* 0x00000010 */
#define CAN_ATF_DLC_ATF_DLC_MODE_SHIFT                     (5U)
#define CAN_ATF_DLC_ATF_DLC_MODE_MASK                      (0x1U << CAN_ATF_DLC_ATF_DLC_MODE_SHIFT)                     /* 0x00000020 */
/* ATF_CTL */
#define CAN_ATF_CTL_OFFSET                                 (0x72CU)
#define CAN_ATF_CTL_ATF0_EN_SHIFT                          (0U)
#define CAN_ATF_CTL_ATF0_EN_MASK                           (0x1U << CAN_ATF_CTL_ATF0_EN_SHIFT)                          /* 0x00000001 */
#define CAN_ATF_CTL_ATF1_EN_SHIFT                          (1U)
#define CAN_ATF_CTL_ATF1_EN_MASK                           (0x1U << CAN_ATF_CTL_ATF1_EN_SHIFT)                          /* 0x00000002 */
#define CAN_ATF_CTL_ATF2_EN_SHIFT                          (2U)
#define CAN_ATF_CTL_ATF2_EN_MASK                           (0x1U << CAN_ATF_CTL_ATF2_EN_SHIFT)                          /* 0x00000004 */
#define CAN_ATF_CTL_ATF3_EN_SHIFT                          (3U)
#define CAN_ATF_CTL_ATF3_EN_MASK                           (0x1U << CAN_ATF_CTL_ATF3_EN_SHIFT)                          /* 0x00000008 */
#define CAN_ATF_CTL_ATF4_EN_SHIFT                          (4U)
#define CAN_ATF_CTL_ATF4_EN_MASK                           (0x1U << CAN_ATF_CTL_ATF4_EN_SHIFT)                          /* 0x00000010 */
#define CAN_ATF_CTL_ATF5_EN_SHIFT                          (5U)
#define CAN_ATF_CTL_ATF5_EN_MASK                           (0x1U << CAN_ATF_CTL_ATF5_EN_SHIFT)                          /* 0x00000020 */
#define CAN_ATF_CTL_ATF6_EN_SHIFT                          (6U)
#define CAN_ATF_CTL_ATF6_EN_MASK                           (0x1U << CAN_ATF_CTL_ATF6_EN_SHIFT)                          /* 0x00000040 */
#define CAN_ATF_CTL_ATF7_EN_SHIFT                          (7U)
#define CAN_ATF_CTL_ATF7_EN_MASK                           (0x1U << CAN_ATF_CTL_ATF7_EN_SHIFT)                          /* 0x00000080 */
#define CAN_ATF_CTL_ATF8_EN_SHIFT                          (8U)
#define CAN_ATF_CTL_ATF8_EN_MASK                           (0x1U << CAN_ATF_CTL_ATF8_EN_SHIFT)                          /* 0x00000100 */
#define CAN_ATF_CTL_ATF9_EN_SHIFT                          (9U)
#define CAN_ATF_CTL_ATF9_EN_MASK                           (0x1U << CAN_ATF_CTL_ATF9_EN_SHIFT)                          /* 0x00000200 */
/* AUTO_RETX_CFG */
#define CAN_AUTO_RETX_CFG_OFFSET                           (0x808U)
#define CAN_AUTO_RETX_CFG_AUTO_RETX_MODE_SHIFT             (0U)
#define CAN_AUTO_RETX_CFG_AUTO_RETX_MODE_MASK              (0x1U << CAN_AUTO_RETX_CFG_AUTO_RETX_MODE_SHIFT)             /* 0x00000001 */
#define CAN_AUTO_RETX_CFG_RETX_LIMIT_EN_SHIFT              (1U)
#define CAN_AUTO_RETX_CFG_RETX_LIMIT_EN_MASK               (0x1U << CAN_AUTO_RETX_CFG_RETX_LIMIT_EN_SHIFT)              /* 0x00000002 */
#define CAN_AUTO_RETX_CFG_AUTO_RETX_CNT_CLR_SHIFT          (2U)
#define CAN_AUTO_RETX_CFG_AUTO_RETX_CNT_CLR_MASK           (0x1U << CAN_AUTO_RETX_CFG_AUTO_RETX_CNT_CLR_SHIFT)          /* 0x00000004 */
#define CAN_AUTO_RETX_CFG_RETX_TIME_LIMIT_SHIFT            (3U)
#define CAN_AUTO_RETX_CFG_RETX_TIME_LIMIT_MASK             (0xFFFFU << CAN_AUTO_RETX_CFG_RETX_TIME_LIMIT_SHIFT)         /* 0x0007FFF8 */
#define CAN_AUTO_RETX_CFG_RETX_CNT_SELF_CLR_SHIFT          (19U)
#define CAN_AUTO_RETX_CFG_RETX_CNT_SELF_CLR_MASK           (0x1U << CAN_AUTO_RETX_CFG_RETX_CNT_SELF_CLR_SHIFT)          /* 0x00080000 */
/* AUTO_RETX_STATE0 */
#define CAN_AUTO_RETX_STATE0_OFFSET                        (0x80CU)
#define CAN_AUTO_RETX_STATE0                               (0x0U)
#define CAN_AUTO_RETX_STATE0_AUTO_RETX_CNT_SHIFT           (0U)
#define CAN_AUTO_RETX_STATE0_AUTO_RETX_CNT_MASK            (0xFFFFU << CAN_AUTO_RETX_STATE0_AUTO_RETX_CNT_SHIFT)        /* 0x0000FFFF */
#define CAN_AUTO_RETX_STATE0_NOACK_CNT_SHIFT               (16U)
#define CAN_AUTO_RETX_STATE0_NOACK_CNT_MASK                (0xFFFFU << CAN_AUTO_RETX_STATE0_NOACK_CNT_SHIFT)            /* 0xFFFF0000 */
/* AUTO_RETX_STATE1 */
#define CAN_AUTO_RETX_STATE1_OFFSET                        (0x810U)
#define CAN_AUTO_RETX_STATE1                               (0x0U)
#define CAN_AUTO_RETX_STATE1_ARBIT_FAIL_CNT_SHIFT          (0U)
#define CAN_AUTO_RETX_STATE1_ARBIT_FAIL_CNT_MASK           (0xFFFFU << CAN_AUTO_RETX_STATE1_ARBIT_FAIL_CNT_SHIFT)       /* 0x0000FFFF */
#define CAN_AUTO_RETX_STATE1_TXERR_CNT_SHIFT               (16U)
#define CAN_AUTO_RETX_STATE1_TXERR_CNT_MASK                (0xFFFFU << CAN_AUTO_RETX_STATE1_TXERR_CNT_SHIFT)            /* 0xFFFF0000 */
/* OLF_CFG */
#define CAN_OLF_CFG_OFFSET                                 (0x814U)
#define CAN_OLF_CFG_OVD_TX_THR_SHIFT                       (0U)
#define CAN_OLF_CFG_OVD_TX_THR_MASK                        (0x1FFU << CAN_OLF_CFG_OVD_TX_THR_SHIFT)                     /* 0x000001FF */
#define CAN_OLF_CFG_AUTO_OVD_MODE_SHIFT                    (9U)
#define CAN_OLF_CFG_AUTO_OVD_MODE_MASK                     (0x1U << CAN_OLF_CFG_AUTO_OVD_MODE_SHIFT)                    /* 0x00000200 */
#define CAN_OLF_CFG_OVD_TIME_SHIFT                         (10U)
#define CAN_OLF_CFG_OVD_TIME_MASK                          (0x1U << CAN_OLF_CFG_OVD_TIME_SHIFT)                         /* 0x00000400 */
#define CAN_OLF_CFG_TX_WAIT_MODE_SHIFT                     (11U)
#define CAN_OLF_CFG_TX_WAIT_MODE_MASK                      (0x1U << CAN_OLF_CFG_TX_WAIT_MODE_SHIFT)                     /* 0x00000800 */
#define CAN_OLF_CFG_TX_WAIT_CLR_SHIFT                      (12U)
#define CAN_OLF_CFG_TX_WAIT_CLR_MASK                       (0x1U << CAN_OLF_CFG_TX_WAIT_CLR_SHIFT)                      /* 0x00001000 */
#define CAN_OLF_CFG_TX_WAIT_THR_SHIFT                      (16U)
#define CAN_OLF_CFG_TX_WAIT_THR_MASK                       (0xFFU << CAN_OLF_CFG_TX_WAIT_THR_SHIFT)                     /* 0x00FF0000 */
/* RXINT_CTRL */
#define CAN_RXINT_CTRL_OFFSET                              (0x818U)
#define CAN_RXINT_CTRL_RXINT_NUM_SHIFT                     (0U)
#define CAN_RXINT_CTRL_RXINT_NUM_MASK                      (0xFFFFU << CAN_RXINT_CTRL_RXINT_NUM_SHIFT)                  /* 0x0000FFFF */
#define CAN_RXINT_CTRL_MFI_MODE_SHIFT                      (16U)
#define CAN_RXINT_CTRL_MFI_MODE_MASK                       (0x1U << CAN_RXINT_CTRL_MFI_MODE_SHIFT)                      /* 0x00010000 */
#define CAN_RXINT_CTRL_MFI_TIMEOUT_MODE_SHIFT              (17U)
#define CAN_RXINT_CTRL_MFI_TIMEOUT_MODE_MASK               (0x1U << CAN_RXINT_CTRL_MFI_TIMEOUT_MODE_SHIFT)              /* 0x00020000 */
/* RXINT_TIMEOUT */
#define CAN_RXINT_TIMEOUT_OFFSET                           (0x81CU)
#define CAN_RXINT_TIMEOUT_THRESHOLD_SHIFT                  (0U)
#define CAN_RXINT_TIMEOUT_THRESHOLD_MASK                   (0xFFFFFFFFU << CAN_RXINT_TIMEOUT_THRESHOLD_SHIFT)           /* 0xFFFFFFFF */
/* WAVE_FILTER_CFG */
#define CAN_WAVE_FILTER_CFG_OFFSET                         (0x824U)
#define CAN_WAVE_FILTER_CFG_FILTER_WIDTH_SHIFT             (0U)
#define CAN_WAVE_FILTER_CFG_FILTER_WIDTH_MASK              (0xFFU << CAN_WAVE_FILTER_CFG_FILTER_WIDTH_SHIFT)            /* 0x000000FF */
#define CAN_WAVE_FILTER_CFG_FILTER_MODE_SHIFT              (8U)
#define CAN_WAVE_FILTER_CFG_FILTER_MODE_MASK               (0x1U << CAN_WAVE_FILTER_CFG_FILTER_MODE_SHIFT)              /* 0x00000100 */
#define CAN_WAVE_FILTER_CFG_FILTER_EN_SHIFT                (9U)
#define CAN_WAVE_FILTER_CFG_FILTER_EN_MASK                 (0x1U << CAN_WAVE_FILTER_CFG_FILTER_EN_SHIFT)                /* 0x00000200 */
#define CAN_WAVE_FILTER_CFG_FILTER_BYPASS_SHIFT            (10U)
#define CAN_WAVE_FILTER_CFG_FILTER_BYPASS_MASK             (0x1U << CAN_WAVE_FILTER_CFG_FILTER_BYPASS_SHIFT)            /* 0x00000400 */
#define CAN_WAVE_FILTER_CFG_FILTER_IN_SEL_SHIFT            (11U)
#define CAN_WAVE_FILTER_CFG_FILTER_IN_SEL_MASK             (0x3U << CAN_WAVE_FILTER_CFG_FILTER_IN_SEL_SHIFT)            /* 0x00001800 */
/* BUSOFF_RCY_CFG */
#define CAN_BUSOFF_RCY_CFG_OFFSET                          (0x830U)
#define CAN_BUSOFF_RCY_CFG_RCY_TIMES_THR_SHIFT             (0U)
#define CAN_BUSOFF_RCY_CFG_RCY_TIMES_THR_MASK              (0xFFU << CAN_BUSOFF_RCY_CFG_RCY_TIMES_THR_SHIFT)            /* 0x000000FF */
#define CAN_BUSOFF_RCY_CFG_RCY_EN_SHIFT                    (8U)
#define CAN_BUSOFF_RCY_CFG_RCY_EN_MASK                     (0x1U << CAN_BUSOFF_RCY_CFG_RCY_EN_SHIFT)                    /* 0x00000100 */
#define CAN_BUSOFF_RCY_CFG_RCY_SCLR_SHIFT                  (9U)
#define CAN_BUSOFF_RCY_CFG_RCY_SCLR_MASK                   (0x1U << CAN_BUSOFF_RCY_CFG_RCY_SCLR_SHIFT)                  /* 0x00000200 */
/* BUSOFF_RCY_THR */
#define CAN_BUSOFF_RCY_THR_OFFSET                          (0x834U)
#define CAN_BUSOFF_RCY_THR_RCY_CNT_THR_SHIFT               (0U)
#define CAN_BUSOFF_RCY_THR_RCY_CNT_THR_MASK                (0xFFFFFFFFU << CAN_BUSOFF_RCY_THR_RCY_CNT_THR_SHIFT)        /* 0xFFFFFFFF */
/* ERROR_CODE */
#define CAN_ERROR_CODE_OFFSET                              (0x900U)
#define CAN_ERROR_CODE_RX_STATE_SHIFT                      (0U)
#define CAN_ERROR_CODE_RX_STATE_MASK                       (0x7FFFFU << CAN_ERROR_CODE_RX_STATE_SHIFT)                  /* 0x0007FFFF */
#define CAN_ERROR_CODE_TX_STATE_SHIFT                      (19U)
#define CAN_ERROR_CODE_TX_STATE_MASK                       (0x3FU << CAN_ERROR_CODE_TX_STATE_SHIFT)                     /* 0x01F80000 */
#define CAN_ERROR_CODE_ERROR_DIRECTION_SHIFT               (25U)
#define CAN_ERROR_CODE_ERROR_DIRECTION_MASK                (0x1U << CAN_ERROR_CODE_ERROR_DIRECTION_SHIFT)               /* 0x02000000 */
#define CAN_ERROR_CODE_ERROR_TYPE_SHIFT                    (26U)
#define CAN_ERROR_CODE_ERROR_TYPE_MASK                     (0x7U << CAN_ERROR_CODE_ERROR_TYPE_SHIFT)                    /* 0x1C000000 */
#define CAN_ERROR_CODE_ERROR_PHASE_SHIFT                   (29U)
#define CAN_ERROR_CODE_ERROR_PHASE_MASK                    (0x1U << CAN_ERROR_CODE_ERROR_PHASE_SHIFT)                   /* 0x20000000 */
#define CAN_ERROR_CODE_RX_CRC_ERROR_FLAG_SHIFT             (30U)
#define CAN_ERROR_CODE_RX_CRC_ERROR_FLAG_MASK              (0x1U << CAN_ERROR_CODE_RX_CRC_ERROR_FLAG_SHIFT)             /* 0x40000000 */
#define CAN_ERROR_CODE_TX_CRC_ERROR_FLAG_SHIFT             (31U)
#define CAN_ERROR_CODE_TX_CRC_ERROR_FLAG_MASK              (0x1U << CAN_ERROR_CODE_TX_CRC_ERROR_FLAG_SHIFT)             /* 0x80000000 */
/* ERROR_MASK */
#define CAN_ERROR_MASK_OFFSET                              (0x904U)
#define CAN_ERROR_MASK_BIT_ERROR_SHIFT                     (0U)
#define CAN_ERROR_MASK_BIT_ERROR_MASK                      (0x1U << CAN_ERROR_MASK_BIT_ERROR_SHIFT)                     /* 0x00000001 */
#define CAN_ERROR_MASK_STUFF_ERROR_SHIFT                   (1U)
#define CAN_ERROR_MASK_STUFF_ERROR_MASK                    (0x1U << CAN_ERROR_MASK_STUFF_ERROR_SHIFT)                   /* 0x00000002 */
#define CAN_ERROR_MASK_CRC_ERROR_SHIFT                     (2U)
#define CAN_ERROR_MASK_CRC_ERROR_MASK                      (0x1U << CAN_ERROR_MASK_CRC_ERROR_SHIFT)                     /* 0x00000004 */
#define CAN_ERROR_MASK_FORM_ERROR_SHIFT                    (3U)
#define CAN_ERROR_MASK_FORM_ERROR_MASK                     (0x1U << CAN_ERROR_MASK_FORM_ERROR_SHIFT)                    /* 0x00000008 */
#define CAN_ERROR_MASK_ACK_ERROR_SHIFT                     (4U)
#define CAN_ERROR_MASK_ACK_ERROR_MASK                      (0x1U << CAN_ERROR_MASK_ACK_ERROR_SHIFT)                     /* 0x00000010 */
/* RXERRORCNT */
#define CAN_RXERRORCNT_OFFSET                              (0x910U)
#define CAN_RXERRORCNT                                     (0x0U)
#define CAN_RXERRORCNT_RX_ERR_CNT_SHIFT                    (0U)
#define CAN_RXERRORCNT_RX_ERR_CNT_MASK                     (0xFFU << CAN_RXERRORCNT_RX_ERR_CNT_SHIFT)                   /* 0x000000FF */
/* TXERRORCNT */
#define CAN_TXERRORCNT_OFFSET                              (0x914U)
#define CAN_TXERRORCNT                                     (0x0U)
#define CAN_TXERRORCNT_TX_ERR_CNT_SHIFT                    (0U)
#define CAN_TXERRORCNT_TX_ERR_CNT_MASK                     (0x1FFU << CAN_TXERRORCNT_TX_ERR_CNT_SHIFT)                  /* 0x000001FF */
/* ARBIT_FAIL_STATE */
#define CAN_ARBIT_FAIL_STATE_OFFSET                        (0x918U)
#define CAN_ARBIT_FAIL_STATE                               (0x0U)
#define CAN_ARBIT_FAIL_STATE_ARBIT_FAIL_CODE_SHIFT         (0U)
#define CAN_ARBIT_FAIL_STATE_ARBIT_FAIL_CODE_MASK          (0x1FFU << CAN_ARBIT_FAIL_STATE_ARBIT_FAIL_CODE_SHIFT)       /* 0x000001FF */
/* RX_RXSRAM_RDATA */
#define CAN_RX_RXSRAM_RDATA_OFFSET                         (0xC00U)
#define CAN_RX_RXSRAM_RDATA                                (0x0U)
#define CAN_RX_RXSRAM_RDATA_RX_SRAM_RDATA_SHIFT            (0U)
#define CAN_RX_RXSRAM_RDATA_RX_SRAM_RDATA_MASK             (0xFFFFFFFFU << CAN_RX_RXSRAM_RDATA_RX_SRAM_RDATA_SHIFT)     /* 0xFFFFFFFF */
/* RTL_VERSION */
#define CAN_RTL_VERSION_OFFSET                             (0xF0CU)
#define CAN_RTL_VERSION                                    (0xCFDBA0E1U)
#define CAN_RTL_VERSION_VERSION_SHIFT                      (0U)
#define CAN_RTL_VERSION_VERSION_MASK                       (0xFFFFFFFFU << CAN_RTL_VERSION_VERSION_SHIFT)               /* 0xFFFFFFFF */
/******************************************PDM*******************************************/
/* SYSCONFIG */
#define PDM_SYSCONFIG_OFFSET                               (0x0U)
#define PDM_SYSCONFIG_RX_CLR_SHIFT                         (0U)
#define PDM_SYSCONFIG_RX_CLR_MASK                          (0x1U << PDM_SYSCONFIG_RX_CLR_SHIFT)                         /* 0x00000001 */
#define PDM_SYSCONFIG_MEM_GATE_EN_SHIFT                    (1U)
#define PDM_SYSCONFIG_MEM_GATE_EN_MASK                     (0x1U << PDM_SYSCONFIG_MEM_GATE_EN_SHIFT)                    /* 0x00000002 */
#define PDM_SYSCONFIG_RX_START_SHIFT                       (2U)
#define PDM_SYSCONFIG_RX_START_MASK                        (0x1U << PDM_SYSCONFIG_RX_START_SHIFT)                       /* 0x00000004 */
#define PDM_SYSCONFIG_NUM_START_SHIFT                      (3U)
#define PDM_SYSCONFIG_NUM_START_MASK                       (0x1U << PDM_SYSCONFIG_NUM_START_SHIFT)                      /* 0x00000008 */
#define PDM_SYSCONFIG_FILTER_GATE_EN_SHIFT                 (4U)
#define PDM_SYSCONFIG_FILTER_GATE_EN_MASK                  (0x1U << PDM_SYSCONFIG_FILTER_GATE_EN_SHIFT)                 /* 0x00000010 */
#define PDM_SYSCONFIG_MUTE_SHIFT                           (5U)
#define PDM_SYSCONFIG_MUTE_MASK                            (0xFFU << PDM_SYSCONFIG_MUTE_SHIFT)                          /* 0x00001FE0 */
/* CTRL */
#define PDM_CTRL_OFFSET                                    (0x4U)
#define PDM_CTRL_DATA_VLD_WIDTH_SHIFT                      (0U)
#define PDM_CTRL_DATA_VLD_WIDTH_MASK                       (0x1FU << PDM_CTRL_DATA_VLD_WIDTH_SHIFT)                     /* 0x0000001F */
#define PDM_CTRL_MONO_PATH_ENABLE_SHIFT                    (5U)
#define PDM_CTRL_MONO_PATH_ENABLE_MASK                     (0x1U << PDM_CTRL_MONO_PATH_ENABLE_SHIFT)                    /* 0x00000020 */
#define PDM_CTRL_HWT_EN_SHIFT                              (6U)
#define PDM_CTRL_HWT_EN_MASK                               (0x1U << PDM_CTRL_HWT_EN_SHIFT)                              /* 0x00000040 */
#define PDM_CTRL_PATH0_EN_SHIFT                            (7U)
#define PDM_CTRL_PATH0_EN_MASK                             (0x1U << PDM_CTRL_PATH0_EN_SHIFT)                            /* 0x00000080 */
#define PDM_CTRL_PATH1_EN_SHIFT                            (8U)
#define PDM_CTRL_PATH1_EN_MASK                             (0x1U << PDM_CTRL_PATH1_EN_SHIFT)                            /* 0x00000100 */
#define PDM_CTRL_PATH2_EN_SHIFT                            (9U)
#define PDM_CTRL_PATH2_EN_MASK                             (0x1U << PDM_CTRL_PATH2_EN_SHIFT)                            /* 0x00000200 */
#define PDM_CTRL_PATH3_EN_SHIFT                            (10U)
#define PDM_CTRL_PATH3_EN_MASK                             (0x1U << PDM_CTRL_PATH3_EN_SHIFT)                            /* 0x00000400 */
#define PDM_CTRL_SJM_SEL_SHIFT                             (11U)
#define PDM_CTRL_SJM_SEL_MASK                              (0x1U << PDM_CTRL_SJM_SEL_SHIFT)                             /* 0x00000800 */
#define PDM_CTRL_PDM_CH_EX_SHIFT                           (12U)
#define PDM_CTRL_PDM_CH_EX_MASK                            (0x1U << PDM_CTRL_PDM_CH_EX_SHIFT)                           /* 0x00001000 */
#define PDM_CTRL_RX_PATH_SELECT0_SHIFT                     (13U)
#define PDM_CTRL_RX_PATH_SELECT0_MASK                      (0x3U << PDM_CTRL_RX_PATH_SELECT0_SHIFT)                     /* 0x00006000 */
#define PDM_CTRL_RX_PATH_SELECT1_SHIFT                     (15U)
#define PDM_CTRL_RX_PATH_SELECT1_MASK                      (0x3U << PDM_CTRL_RX_PATH_SELECT1_SHIFT)                     /* 0x00018000 */
#define PDM_CTRL_RX_PATH_SELECT2_SHIFT                     (17U)
#define PDM_CTRL_RX_PATH_SELECT2_MASK                      (0x3U << PDM_CTRL_RX_PATH_SELECT2_SHIFT)                     /* 0x00060000 */
#define PDM_CTRL_RX_PATH_SELECT3_SHIFT                     (19U)
#define PDM_CTRL_RX_PATH_SELECT3_MASK                      (0x3U << PDM_CTRL_RX_PATH_SELECT3_SHIFT)                     /* 0x00180000 */
#define PDM_CTRL_SPLIT_EN_SHIFT                            (21U)
#define PDM_CTRL_SPLIT_EN_MASK                             (0x1U << PDM_CTRL_SPLIT_EN_SHIFT)                            /* 0x00200000 */
#define PDM_CTRL_PATH_MODE_SELECT_SHIFT                    (22U)
#define PDM_CTRL_PATH_MODE_SELECT_MASK                     (0x3U << PDM_CTRL_PATH_MODE_SELECT_SHIFT)                    /* 0x00C00000 */
#define PDM_CTRL_PATH0_CH_SEL_SHIFT                        (24U)
#define PDM_CTRL_PATH0_CH_SEL_MASK                         (0x7U << PDM_CTRL_PATH0_CH_SEL_SHIFT)                        /* 0x07000000 */
#define PDM_CTRL_PATH1_CH_SEL_SHIFT                        (27U)
#define PDM_CTRL_PATH1_CH_SEL_MASK                         (0x7U << PDM_CTRL_PATH1_CH_SEL_SHIFT)                        /* 0x38000000 */
/* FILTER_CTRL */
#define PDM_FILTER_CTRL_OFFSET                             (0x8U)
#define PDM_FILTER_CTRL_FILTER_EN_SHIFT                    (0U)
#define PDM_FILTER_CTRL_FILTER_EN_MASK                     (0x1U << PDM_FILTER_CTRL_FILTER_EN_SHIFT)                    /* 0x00000001 */
#define PDM_FILTER_CTRL_CIC_VALUE_SHIFT                    (1U)
#define PDM_FILTER_CTRL_CIC_VALUE_MASK                     (0x1FFU << PDM_FILTER_CTRL_CIC_VALUE_SHIFT)                  /* 0x000003FE */
#define PDM_FILTER_CTRL_CIC_SCALE_SHIFT                    (10U)
#define PDM_FILTER_CTRL_CIC_SCALE_MASK                     (0x7FU << PDM_FILTER_CTRL_CIC_SCALE_SHIFT)                   /* 0x0001FC00 */
#define PDM_FILTER_CTRL_SIG_SCALE_MODE_SHIFT               (17U)
#define PDM_FILTER_CTRL_SIG_SCALE_MODE_MASK                (0x1U << PDM_FILTER_CTRL_SIG_SCALE_MODE_SHIFT)               /* 0x00020000 */
#define PDM_FILTER_CTRL_FIR_COM_BPS_SHIFT                  (18U)
#define PDM_FILTER_CTRL_FIR_COM_BPS_MASK                   (0x1U << PDM_FILTER_CTRL_FIR_COM_BPS_SHIFT)                  /* 0x00040000 */
#define PDM_FILTER_CTRL_HPF_CTRLR_SHIFT                    (19U)
#define PDM_FILTER_CTRL_HPF_CTRLR_MASK                     (0x1U << PDM_FILTER_CTRL_HPF_CTRLR_SHIFT)                    /* 0x00080000 */
#define PDM_FILTER_CTRL_HPF_CTRLL_SHIFT                    (20U)
#define PDM_FILTER_CTRL_HPF_CTRLL_MASK                     (0x1U << PDM_FILTER_CTRL_HPF_CTRLL_SHIFT)                    /* 0x00100000 */
#define PDM_FILTER_CTRL_HPF_CTRL_SHIFT                     (21U)
#define PDM_FILTER_CTRL_HPF_CTRL_MASK                      (0xFU << PDM_FILTER_CTRL_HPF_CTRL_SHIFT)                     /* 0x01E00000 */
/* FIFO_CTRL */
#define PDM_FIFO_CTRL_OFFSET                               (0xCU)
#define PDM_FIFO_CTRL_RXFTIE_SHIFT                         (0U)
#define PDM_FIFO_CTRL_RXFTIE_MASK                          (0x1U << PDM_FIFO_CTRL_RXFTIE_SHIFT)                         /* 0x00000001 */
#define PDM_FIFO_CTRL_RXOIE_SHIFT                          (1U)
#define PDM_FIFO_CTRL_RXOIE_MASK                           (0x1U << PDM_FIFO_CTRL_RXOIE_SHIFT)                          /* 0x00000002 */
#define PDM_FIFO_CTRL_RFT_SHIFT                            (2U)
#define PDM_FIFO_CTRL_RFT_MASK                             (0x7FU << PDM_FIFO_CTRL_RFT_SHIFT)                           /* 0x000001FC */
#define PDM_FIFO_CTRL_RXOIC_SHIFT                          (9U)
#define PDM_FIFO_CTRL_RXOIC_MASK                           (0x1U << PDM_FIFO_CTRL_RXOIC_SHIFT)                          /* 0x00000200 */
#define PDM_FIFO_CTRL_RXFI_SHIFT                           (10U)
#define PDM_FIFO_CTRL_RXFI_MASK                            (0x1U << PDM_FIFO_CTRL_RXFI_SHIFT)                           /* 0x00000400 */
#define PDM_FIFO_CTRL_RXOI_SHIFT                           (11U)
#define PDM_FIFO_CTRL_RXOI_MASK                            (0x1U << PDM_FIFO_CTRL_RXOI_SHIFT)                           /* 0x00000800 */
#define PDM_FIFO_CTRL_RDE_SHIFT                            (12U)
#define PDM_FIFO_CTRL_RDE_MASK                             (0x1U << PDM_FIFO_CTRL_RDE_SHIFT)                            /* 0x00001000 */
#define PDM_FIFO_CTRL_RDL_SHIFT                            (13U)
#define PDM_FIFO_CTRL_RDL_MASK                             (0x7FU << PDM_FIFO_CTRL_RDL_SHIFT)                           /* 0x000FE000 */
#define PDM_FIFO_CTRL_RFL_SHIFT                            (20U)
#define PDM_FIFO_CTRL_RFL_MASK                             (0xFFU << PDM_FIFO_CTRL_RFL_SHIFT)                           /* 0x0FF00000 */
/* DATA_VALID */
#define PDM_DATA_VALID_OFFSET                              (0x10U)
#define PDM_DATA_VALID                                     (0x0U)
#define PDM_DATA_VALID_PATH3_VLD_SHIFT                     (0U)
#define PDM_DATA_VALID_PATH3_VLD_MASK                      (0x1U << PDM_DATA_VALID_PATH3_VLD_SHIFT)                     /* 0x00000001 */
#define PDM_DATA_VALID_PATH2_VLD_SHIFT                     (1U)
#define PDM_DATA_VALID_PATH2_VLD_MASK                      (0x1U << PDM_DATA_VALID_PATH2_VLD_SHIFT)                     /* 0x00000002 */
#define PDM_DATA_VALID_PATH1_VLD_SHIFT                     (2U)
#define PDM_DATA_VALID_PATH1_VLD_MASK                      (0x1U << PDM_DATA_VALID_PATH1_VLD_SHIFT)                     /* 0x00000004 */
#define PDM_DATA_VALID_PATH0_VLD_SHIFT                     (3U)
#define PDM_DATA_VALID_PATH0_VLD_MASK                      (0x1U << PDM_DATA_VALID_PATH0_VLD_SHIFT)                     /* 0x00000008 */
/* RXFIFO_DATA_REG */
#define PDM_RXFIFO_DATA_REG_OFFSET                         (0x14U)
#define PDM_RXFIFO_DATA_REG                                (0x0U)
#define PDM_RXFIFO_DATA_REG_RXDR_SHIFT                     (0U)
#define PDM_RXFIFO_DATA_REG_RXDR_MASK                      (0xFFFFFFFFU << PDM_RXFIFO_DATA_REG_RXDR_SHIFT)              /* 0xFFFFFFFF */
/* DATA0R */
#define PDM_DATA0R_OFFSET                                  (0x18U)
#define PDM_DATA0R                                         (0x0U)
#define PDM_DATA0R_DATA0R_SHIFT                            (0U)
#define PDM_DATA0R_DATA0R_MASK                             (0xFFFFFFFFU << PDM_DATA0R_DATA0R_SHIFT)                     /* 0xFFFFFFFF */
/* DATA0L */
#define PDM_DATA0L_OFFSET                                  (0x1CU)
#define PDM_DATA0L                                         (0x0U)
#define PDM_DATA0L_DATA0L_SHIFT                            (0U)
#define PDM_DATA0L_DATA0L_MASK                             (0xFFFFFFFFU << PDM_DATA0L_DATA0L_SHIFT)                     /* 0xFFFFFFFF */
/* DATA1R */
#define PDM_DATA1R_OFFSET                                  (0x20U)
#define PDM_DATA1R                                         (0x0U)
#define PDM_DATA1R_DATA1R_SHIFT                            (0U)
#define PDM_DATA1R_DATA1R_MASK                             (0xFFFFFFFFU << PDM_DATA1R_DATA1R_SHIFT)                     /* 0xFFFFFFFF */
/* DATA1L */
#define PDM_DATA1L_OFFSET                                  (0x24U)
#define PDM_DATA1L                                         (0x0U)
#define PDM_DATA1L_DATA1L_SHIFT                            (0U)
#define PDM_DATA1L_DATA1L_MASK                             (0xFFFFFFFFU << PDM_DATA1L_DATA1L_SHIFT)                     /* 0xFFFFFFFF */
/* DATA2R */
#define PDM_DATA2R_OFFSET                                  (0x28U)
#define PDM_DATA2R                                         (0x0U)
#define PDM_DATA2R_DATA2R_SHIFT                            (0U)
#define PDM_DATA2R_DATA2R_MASK                             (0xFFFFFFFFU << PDM_DATA2R_DATA2R_SHIFT)                     /* 0xFFFFFFFF */
/* DATA2L */
#define PDM_DATA2L_OFFSET                                  (0x2CU)
#define PDM_DATA2L                                         (0x0U)
#define PDM_DATA2L_DATA2L_SHIFT                            (0U)
#define PDM_DATA2L_DATA2L_MASK                             (0xFFFFFFFFU << PDM_DATA2L_DATA2L_SHIFT)                     /* 0xFFFFFFFF */
/* DATA3R */
#define PDM_DATA3R_OFFSET                                  (0x30U)
#define PDM_DATA3R                                         (0x0U)
#define PDM_DATA3R_DATA3R_SHIFT                            (0U)
#define PDM_DATA3R_DATA3R_MASK                             (0xFFFFFFFFU << PDM_DATA3R_DATA3R_SHIFT)                     /* 0xFFFFFFFF */
/* DATA3L */
#define PDM_DATA3L_OFFSET                                  (0x34U)
#define PDM_DATA3L                                         (0x0U)
#define PDM_DATA3L_DATA3L_SHIFT                            (0U)
#define PDM_DATA3L_DATA3L_MASK                             (0xFFFFFFFFU << PDM_DATA3L_DATA3L_SHIFT)                     /* 0xFFFFFFFF */
/* VERSION */
#define PDM_VERSION_OFFSET                                 (0x38U)
#define PDM_VERSION                                        (0x23112118U)
#define PDM_VERSION_VER_SHIFT                              (0U)
#define PDM_VERSION_VER_MASK                               (0xFFFFFFFFU << PDM_VERSION_VER_SHIFT)                       /* 0xFFFFFFFF */
/* GAIN_CTRL */
#define PDM_GAIN_CTRL_OFFSET                               (0x3CU)
#define PDM_GAIN_CTRL_GAIN_CTRL_SHIFT                      (0U)
#define PDM_GAIN_CTRL_GAIN_CTRL_MASK                       (0xFFU << PDM_GAIN_CTRL_GAIN_CTRL_SHIFT)                     /* 0x000000FF */
/****************************************SPDIFTX*****************************************/
/* CFGR */
#define SPDIFTX_CFGR_OFFSET                                (0x0U)
#define SPDIFTX_CFGR_VDW_SHIFT                             (0U)
#define SPDIFTX_CFGR_VDW_MASK                              (0x3U << SPDIFTX_CFGR_VDW_SHIFT)                             /* 0x00000003 */
#define SPDIFTX_CFGR_HWT_SHIFT                             (2U)
#define SPDIFTX_CFGR_HWT_MASK                              (0x1U << SPDIFTX_CFGR_HWT_SHIFT)                             /* 0x00000004 */
#define SPDIFTX_CFGR_ADJ_SHIFT                             (3U)
#define SPDIFTX_CFGR_ADJ_MASK                              (0x1U << SPDIFTX_CFGR_ADJ_SHIFT)                             /* 0x00000008 */
#define SPDIFTX_CFGR_VFE_SHIFT                             (4U)
#define SPDIFTX_CFGR_VFE_MASK                              (0x1U << SPDIFTX_CFGR_VFE_SHIFT)                             /* 0x00000010 */
#define SPDIFTX_CFGR_UDE_SHIFT                             (5U)
#define SPDIFTX_CFGR_UDE_MASK                              (0x1U << SPDIFTX_CFGR_UDE_SHIFT)                             /* 0x00000020 */
#define SPDIFTX_CFGR_CSE_SHIFT                             (6U)
#define SPDIFTX_CFGR_CSE_MASK                              (0x1U << SPDIFTX_CFGR_CSE_SHIFT)                             /* 0x00000040 */
#define SPDIFTX_CFGR_CLR_SHIFT                             (7U)
#define SPDIFTX_CFGR_CLR_MASK                              (0x1U << SPDIFTX_CFGR_CLR_SHIFT)                             /* 0x00000080 */
#define SPDIFTX_CFGR_PCMTYPE_SHIFT                         (8U)
#define SPDIFTX_CFGR_PCMTYPE_MASK                          (0x1U << SPDIFTX_CFGR_PCMTYPE_SHIFT)                         /* 0x00000100 */
#define SPDIFTX_CFGR_PRECHANGE_SHIFT                       (9U)
#define SPDIFTX_CFGR_PRECHANGE_MASK                        (0x1U << SPDIFTX_CFGR_PRECHANGE_SHIFT)                       /* 0x00000200 */
#define SPDIFTX_CFGR_MCD_SHIFT                             (16U)
#define SPDIFTX_CFGR_MCD_MASK                              (0xFFU << SPDIFTX_CFGR_MCD_SHIFT)                            /* 0x00FF0000 */
/* SDBLR */
#define SPDIFTX_SDBLR_OFFSET                               (0x4U)
#define SPDIFTX_SDBLR                                      (0x0U)
#define SPDIFTX_SDBLR_TFL_SHIFT                            (0U)
#define SPDIFTX_SDBLR_TFL_MASK                             (0x3FU << SPDIFTX_SDBLR_TFL_SHIFT)                           /* 0x0000003F */
/* DMACR */
#define SPDIFTX_DMACR_OFFSET                               (0x8U)
#define SPDIFTX_DMACR_TDL_SHIFT                            (0U)
#define SPDIFTX_DMACR_TDL_MASK                             (0x1FU << SPDIFTX_DMACR_TDL_SHIFT)                           /* 0x0000001F */
#define SPDIFTX_DMACR_TDE_SHIFT                            (5U)
#define SPDIFTX_DMACR_TDE_MASK                             (0x1U << SPDIFTX_DMACR_TDE_SHIFT)                            /* 0x00000020 */
/* INTCR */
#define SPDIFTX_INTCR_OFFSET                               (0xCU)
#define SPDIFTX_INTCR_UDTIE_SHIFT                          (2U)
#define SPDIFTX_INTCR_UDTIE_MASK                           (0x1U << SPDIFTX_INTCR_UDTIE_SHIFT)                          /* 0x00000004 */
#define SPDIFTX_INTCR_BTTIE_SHIFT                          (3U)
#define SPDIFTX_INTCR_BTTIE_MASK                           (0x1U << SPDIFTX_INTCR_BTTIE_SHIFT)                          /* 0x00000008 */
#define SPDIFTX_INTCR_SDBEIE_SHIFT                         (4U)
#define SPDIFTX_INTCR_SDBEIE_MASK                          (0x1U << SPDIFTX_INTCR_SDBEIE_SHIFT)                         /* 0x00000010 */
#define SPDIFTX_INTCR_SDBT_SHIFT                           (5U)
#define SPDIFTX_INTCR_SDBT_MASK                            (0x1FU << SPDIFTX_INTCR_SDBT_SHIFT)                          /* 0x000003E0 */
#define SPDIFTX_INTCR_BTTIC_SHIFT                          (16U)
#define SPDIFTX_INTCR_BTTIC_MASK                           (0x1U << SPDIFTX_INTCR_BTTIC_SHIFT)                          /* 0x00010000 */
#define SPDIFTX_INTCR_UDTIC_SHIFT                          (17U)
#define SPDIFTX_INTCR_UDTIC_MASK                           (0x1U << SPDIFTX_INTCR_UDTIC_SHIFT)                          /* 0x00020000 */
/* INTSR */
#define SPDIFTX_INTSR_OFFSET                               (0x10U)
#define SPDIFTX_INTSR_UDTIS_SHIFT                          (2U)
#define SPDIFTX_INTSR_UDTIS_MASK                           (0x1U << SPDIFTX_INTSR_UDTIS_SHIFT)                          /* 0x00000004 */
#define SPDIFTX_INTSR_BTTIS_SHIFT                          (3U)
#define SPDIFTX_INTSR_BTTIS_MASK                           (0x1U << SPDIFTX_INTSR_BTTIS_SHIFT)                          /* 0x00000008 */
#define SPDIFTX_INTSR_SDBEIS_SHIFT                         (4U)
#define SPDIFTX_INTSR_SDBEIS_MASK                          (0x1U << SPDIFTX_INTSR_SDBEIS_SHIFT)                         /* 0x00000010 */
/* XFER */
#define SPDIFTX_XFER_OFFSET                                (0x18U)
#define SPDIFTX_XFER_EN_SHIFT                              (0U)
#define SPDIFTX_XFER_EN_MASK                               (0x1U << SPDIFTX_XFER_EN_SHIFT)                              /* 0x00000001 */
/* SMPDR */
#define SPDIFTX_SMPDR_OFFSET                               (0x20U)
#define SPDIFTX_SMPDR_SMPDR_SHIFT                          (0U)
#define SPDIFTX_SMPDR_SMPDR_MASK                           (0xFFFFFFFFU << SPDIFTX_SMPDR_SMPDR_SHIFT)                   /* 0xFFFFFFFF */
/* VLDFRN */
#define SPDIFTX_VLDFRN_OFFSET                              (0x60U)
#define SPDIFTX_VLDFRN_VLDFR_SUB_0_SHIFT                   (0U)
#define SPDIFTX_VLDFRN_VLDFR_SUB_0_MASK                    (0xFFFFU << SPDIFTX_VLDFRN_VLDFR_SUB_0_SHIFT)                /* 0x0000FFFF */
#define SPDIFTX_VLDFRN_VLDFR_SUB_1_SHIFT                   (16U)
#define SPDIFTX_VLDFRN_VLDFR_SUB_1_MASK                    (0xFFFFU << SPDIFTX_VLDFRN_VLDFR_SUB_1_SHIFT)                /* 0xFFFF0000 */
/* USRDRN */
#define SPDIFTX_USRDRN_OFFSET                              (0x90U)
#define SPDIFTX_USRDRN_USR_SUB_0_SHIFT                     (0U)
#define SPDIFTX_USRDRN_USR_SUB_0_MASK                      (0xFFFFU << SPDIFTX_USRDRN_USR_SUB_0_SHIFT)                  /* 0x0000FFFF */
#define SPDIFTX_USRDRN_USR_SUB_1_SHIFT                     (16U)
#define SPDIFTX_USRDRN_USR_SUB_1_MASK                      (0xFFFFU << SPDIFTX_USRDRN_USR_SUB_1_SHIFT)                  /* 0xFFFF0000 */
/* CHNSRN */
#define SPDIFTX_CHNSRN_OFFSET                              (0xC0U)
#define SPDIFTX_CHNSRN_CHNSR_SUB_0_SHIFT                   (0U)
#define SPDIFTX_CHNSRN_CHNSR_SUB_0_MASK                    (0xFFFFU << SPDIFTX_CHNSRN_CHNSR_SUB_0_SHIFT)                /* 0x0000FFFF */
#define SPDIFTX_CHNSRN_CHNSR_SUB_1_SHIFT                   (16U)
#define SPDIFTX_CHNSRN_CHNSR_SUB_1_MASK                    (0xFFFFU << SPDIFTX_CHNSRN_CHNSR_SUB_1_SHIFT)                /* 0xFFFF0000 */
/* BURSTINFO */
#define SPDIFTX_BURSTINFO_OFFSET                           (0x100U)
#define SPDIFTX_BURSTINFO_DATATYPE_SHIFT                   (0U)
#define SPDIFTX_BURSTINFO_DATATYPE_MASK                    (0x7FU << SPDIFTX_BURSTINFO_DATATYPE_SHIFT)                  /* 0x0000007F */
#define SPDIFTX_BURSTINFO_ERRFLAG_SHIFT                    (7U)
#define SPDIFTX_BURSTINFO_ERRFLAG_MASK                     (0x1U << SPDIFTX_BURSTINFO_ERRFLAG_SHIFT)                    /* 0x00000080 */
#define SPDIFTX_BURSTINFO_DATAINFO_SHIFT                   (8U)
#define SPDIFTX_BURSTINFO_DATAINFO_MASK                    (0x1FU << SPDIFTX_BURSTINFO_DATAINFO_SHIFT)                  /* 0x00001F00 */
#define SPDIFTX_BURSTINFO_BSNUM_SHIFT                      (13U)
#define SPDIFTX_BURSTINFO_BSNUM_MASK                       (0x7U << SPDIFTX_BURSTINFO_BSNUM_SHIFT)                      /* 0x0000E000 */
#define SPDIFTX_BURSTINFO_PD_SHIFT                         (16U)
#define SPDIFTX_BURSTINFO_PD_MASK                          (0xFFFFU << SPDIFTX_BURSTINFO_PD_SHIFT)                      /* 0xFFFF0000 */
/* REPETTION */
#define SPDIFTX_REPETTION_OFFSET                           (0x104U)
#define SPDIFTX_REPETTION_PERIOD_SHIFT                     (0U)
#define SPDIFTX_REPETTION_PERIOD_MASK                      (0xFFFFU << SPDIFTX_REPETTION_PERIOD_SHIFT)                  /* 0x0000FFFF */
/* BURSTINFO_SHD */
#define SPDIFTX_BURSTINFO_SHD_OFFSET                       (0x108U)
#define SPDIFTX_BURSTINFO_SHD                              (0x0U)
#define SPDIFTX_BURSTINFO_SHD_DATATYPE_SHIFT               (0U)
#define SPDIFTX_BURSTINFO_SHD_DATATYPE_MASK                (0x7FU << SPDIFTX_BURSTINFO_SHD_DATATYPE_SHIFT)              /* 0x0000007F */
#define SPDIFTX_BURSTINFO_SHD_ERRFLAG_SHIFT                (7U)
#define SPDIFTX_BURSTINFO_SHD_ERRFLAG_MASK                 (0x1U << SPDIFTX_BURSTINFO_SHD_ERRFLAG_SHIFT)                /* 0x00000080 */
#define SPDIFTX_BURSTINFO_SHD_DATAINFO_SHIFT               (8U)
#define SPDIFTX_BURSTINFO_SHD_DATAINFO_MASK                (0x1FU << SPDIFTX_BURSTINFO_SHD_DATAINFO_SHIFT)              /* 0x00001F00 */
#define SPDIFTX_BURSTINFO_SHD_BSNUM_SHIFT                  (13U)
#define SPDIFTX_BURSTINFO_SHD_BSNUM_MASK                   (0x7U << SPDIFTX_BURSTINFO_SHD_BSNUM_SHIFT)                  /* 0x0000E000 */
#define SPDIFTX_BURSTINFO_SHD_PD_SHIFT                     (16U)
#define SPDIFTX_BURSTINFO_SHD_PD_MASK                      (0xFFFFU << SPDIFTX_BURSTINFO_SHD_PD_SHIFT)                  /* 0xFFFF0000 */
/* REPETTION_SHD */
#define SPDIFTX_REPETTION_SHD_OFFSET                       (0x10CU)
#define SPDIFTX_REPETTION_SHD_PERIOD_SHIFT                 (0U)
#define SPDIFTX_REPETTION_SHD_PERIOD_MASK                  (0xFFFFU << SPDIFTX_REPETTION_SHD_PERIOD_SHIFT)              /* 0x0000FFFF */
/* USRDR_SHDN */
#define SPDIFTX_USRDR_SHDN_OFFSET                          (0x190U)
#define SPDIFTX_USRDR_SHDN                                 (0x0U)
#define SPDIFTX_USRDR_SHDN_USR_SUB_0_SHIFT                 (0U)
#define SPDIFTX_USRDR_SHDN_USR_SUB_0_MASK                  (0xFFFFU << SPDIFTX_USRDR_SHDN_USR_SUB_0_SHIFT)              /* 0x0000FFFF */
#define SPDIFTX_USRDR_SHDN_USR_SUB_1_SHIFT                 (16U)
#define SPDIFTX_USRDR_SHDN_USR_SUB_1_MASK                  (0xFFFFU << SPDIFTX_USRDR_SHDN_USR_SUB_1_SHIFT)              /* 0xFFFF0000 */
/****************************************SPDIFRX*****************************************/
/* VERSION */
#define SPDIFRX_VERSION_OFFSET                             (0x0U)
#define SPDIFRX_VERSION                                    (0x23122118U)
#define SPDIFRX_VERSION_VER_SHIFT                          (0U)
#define SPDIFRX_VERSION_VER_MASK                           (0xFFFFFFFFU << SPDIFRX_VERSION_VER_SHIFT)                   /* 0xFFFFFFFF */
/* CFGR */
#define SPDIFRX_CFGR_OFFSET                                (0x4U)
#define SPDIFRX_CFGR_EN_SHIFT                              (0U)
#define SPDIFRX_CFGR_EN_MASK                               (0x1U << SPDIFRX_CFGR_EN_SHIFT)                              /* 0x00000001 */
#define SPDIFRX_CFGR_TWAD_SHIFT                            (1U)
#define SPDIFRX_CFGR_TWAD_MASK                             (0x1U << SPDIFRX_CFGR_TWAD_SHIFT)                            /* 0x00000002 */
#define SPDIFRX_CFGR_DAT_SHIFT                             (2U)
#define SPDIFRX_CFGR_DAT_MASK                              (0x1U << SPDIFRX_CFGR_DAT_SHIFT)                             /* 0x00000004 */
/* CLR */
#define SPDIFRX_CLR_OFFSET                                 (0x8U)
#define SPDIFRX_CLR_RXSC_SHIFT                             (0U)
#define SPDIFRX_CLR_RXSC_MASK                              (0x1U << SPDIFRX_CLR_RXSC_SHIFT)                             /* 0x00000001 */
/* CDR */
#define SPDIFRX_CDR_OFFSET                                 (0xCU)
#define SPDIFRX_CDR_BYPASS_SHIFT                           (0U)
#define SPDIFRX_CDR_BYPASS_MASK                            (0x1U << SPDIFRX_CDR_BYPASS_SHIFT)                           /* 0x00000001 */
#define SPDIFRX_CDR_AVGSEL_SHIFT                           (1U)
#define SPDIFRX_CDR_AVGSEL_MASK                            (0x1U << SPDIFRX_CDR_AVGSEL_SHIFT)                           /* 0x00000002 */
#define SPDIFRX_CDR_AVGWIN_SHIFT                           (2U)
#define SPDIFRX_CDR_AVGWIN_MASK                            (0x7U << SPDIFRX_CDR_AVGWIN_SHIFT)                           /* 0x0000001C */
#define SPDIFRX_CDR_EMPTY_SHIFT                            (5U)
#define SPDIFRX_CDR_EMPTY_MASK                             (0x1U << SPDIFRX_CDR_EMPTY_SHIFT)                            /* 0x00000020 */
#define SPDIFRX_CDR_FULL_SHIFT                             (6U)
#define SPDIFRX_CDR_FULL_MASK                              (0x1U << SPDIFRX_CDR_FULL_SHIFT)                             /* 0x00000040 */
#define SPDIFRX_CDR_JITST_SHIFT                            (7U)
#define SPDIFRX_CDR_JITST_MASK                             (0x3U << SPDIFRX_CDR_JITST_SHIFT)                            /* 0x00000180 */
#define SPDIFRX_CDR_CS_SHIFT                               (9U)
#define SPDIFRX_CDR_CS_MASK                                (0x3U << SPDIFRX_CDR_CS_SHIFT)                               /* 0x00000600 */
#define SPDIFRX_CDR_MIDRGE_SHIFT                           (16U)
#define SPDIFRX_CDR_MIDRGE_MASK                            (0xFFU << SPDIFRX_CDR_MIDRGE_SHIFT)                          /* 0x00FF0000 */
#define SPDIFRX_CDR_JITTRSH_SHIFT                          (24U)
#define SPDIFRX_CDR_JITTRSH_MASK                           (0xFFU << SPDIFRX_CDR_JITTRSH_SHIFT)                         /* 0xFF000000 */
/* CDRST */
#define SPDIFRX_CDRST_OFFSET                               (0x10U)
#define SPDIFRX_CDRST_MINCNT_SHIFT                         (0U)
#define SPDIFRX_CDRST_MINCNT_MASK                          (0xFFU << SPDIFRX_CDRST_MINCNT_SHIFT)                        /* 0x000000FF */
#define SPDIFRX_CDRST_MAXCNT_SHIFT                         (8U)
#define SPDIFRX_CDRST_MAXCNT_MASK                          (0xFFU << SPDIFRX_CDRST_MAXCNT_SHIFT)                        /* 0x0000FF00 */
#define SPDIFRX_CDRST_NOSTRTHR_SHIFT                       (16U)
#define SPDIFRX_CDRST_NOSTRTHR_MASK                        (0xFFFFU << SPDIFRX_CDRST_NOSTRTHR_SHIFT)                    /* 0xFFFF0000 */
/* DMACR */
#define SPDIFRX_DMACR_OFFSET                               (0x14U)
#define SPDIFRX_DMACR_RDL_SHIFT                            (0U)
#define SPDIFRX_DMACR_RDL_MASK                             (0x1FU << SPDIFRX_DMACR_RDL_SHIFT)                           /* 0x0000001F */
#define SPDIFRX_DMACR_RDE_SHIFT                            (5U)
#define SPDIFRX_DMACR_RDE_MASK                             (0x1U << SPDIFRX_DMACR_RDE_SHIFT)                            /* 0x00000020 */
/* FIFOCTRL */
#define SPDIFRX_FIFOCTRL_OFFSET                            (0x18U)
#define SPDIFRX_FIFOCTRL_RFT_SHIFT                         (0U)
#define SPDIFRX_FIFOCTRL_RFT_MASK                          (0x1FU << SPDIFRX_FIFOCTRL_RFT_SHIFT)                        /* 0x0000001F */
#define SPDIFRX_FIFOCTRL_RFL_SHIFT                         (8U)
#define SPDIFRX_FIFOCTRL_RFL_MASK                          (0x3FU << SPDIFRX_FIFOCTRL_RFL_SHIFT)                        /* 0x00003F00 */
/* INTEN */
#define SPDIFRX_INTEN_OFFSET                               (0x1CU)
#define SPDIFRX_INTEN_PEIE_SHIFT                           (0U)
#define SPDIFRX_INTEN_PEIE_MASK                            (0x1U << SPDIFRX_INTEN_PEIE_SHIFT)                           /* 0x00000001 */
#define SPDIFRX_INTEN_CSCIE_SHIFT                          (1U)
#define SPDIFRX_INTEN_CSCIE_MASK                           (0x1U << SPDIFRX_INTEN_CSCIE_SHIFT)                          /* 0x00000002 */
#define SPDIFRX_INTEN_NVLDIE_SHIFT                         (2U)
#define SPDIFRX_INTEN_NVLDIE_MASK                          (0x1U << SPDIFRX_INTEN_NVLDIE_SHIFT)                         /* 0x00000004 */
#define SPDIFRX_INTEN_NPSPIE_SHIFT                         (3U)
#define SPDIFRX_INTEN_NPSPIE_MASK                          (0x1U << SPDIFRX_INTEN_NPSPIE_SHIFT)                         /* 0x00000008 */
#define SPDIFRX_INTEN_RXFIE_SHIFT                          (4U)
#define SPDIFRX_INTEN_RXFIE_MASK                           (0x1U << SPDIFRX_INTEN_RXFIE_SHIFT)                          /* 0x00000010 */
#define SPDIFRX_INTEN_RXOIE_SHIFT                          (5U)
#define SPDIFRX_INTEN_RXOIE_MASK                           (0x1U << SPDIFRX_INTEN_RXOIE_SHIFT)                          /* 0x00000020 */
#define SPDIFRX_INTEN_BMDEIE_SHIFT                         (6U)
#define SPDIFRX_INTEN_BMDEIE_MASK                          (0x1U << SPDIFRX_INTEN_BMDEIE_SHIFT)                         /* 0x00000040 */
#define SPDIFRX_INTEN_NSYNCIE_SHIFT                        (7U)
#define SPDIFRX_INTEN_NSYNCIE_MASK                         (0x1U << SPDIFRX_INTEN_NSYNCIE_SHIFT)                        /* 0x00000080 */
#define SPDIFRX_INTEN_BTEIE_SHIFT                          (8U)
#define SPDIFRX_INTEN_BTEIE_MASK                           (0x1U << SPDIFRX_INTEN_BTEIE_SHIFT)                          /* 0x00000100 */
#define SPDIFRX_INTEN_SYNCIE_SHIFT                         (9U)
#define SPDIFRX_INTEN_SYNCIE_MASK                          (0x1U << SPDIFRX_INTEN_SYNCIE_SHIFT)                         /* 0x00000200 */
#define SPDIFRX_INTEN_UBCIE_SHIFT                          (10U)
#define SPDIFRX_INTEN_UBCIE_MASK                           (0x1U << SPDIFRX_INTEN_UBCIE_SHIFT)                          /* 0x00000400 */
#define SPDIFRX_INTEN_VCGIE_SHIFT                          (11U)
#define SPDIFRX_INTEN_VCGIE_MASK                           (0x1U << SPDIFRX_INTEN_VCGIE_SHIFT)                          /* 0x00000800 */
#define SPDIFRX_INTEN_TYPEIE_SHIFT                         (12U)
#define SPDIFRX_INTEN_TYPEIE_MASK                          (0x1U << SPDIFRX_INTEN_TYPEIE_SHIFT)                         /* 0x00001000 */
/* INTMASK */
#define SPDIFRX_INTMASK_OFFSET                             (0x20U)
#define SPDIFRX_INTMASK_PEIMSK_SHIFT                       (0U)
#define SPDIFRX_INTMASK_PEIMSK_MASK                        (0x1U << SPDIFRX_INTMASK_PEIMSK_SHIFT)                       /* 0x00000001 */
#define SPDIFRX_INTMASK_CSCIMSK_SHIFT                      (1U)
#define SPDIFRX_INTMASK_CSCIMSK_MASK                       (0x1U << SPDIFRX_INTMASK_CSCIMSK_SHIFT)                      /* 0x00000002 */
#define SPDIFRX_INTMASK_NVLDIMSK_SHIFT                     (2U)
#define SPDIFRX_INTMASK_NVLDIMSK_MASK                      (0x1U << SPDIFRX_INTMASK_NVLDIMSK_SHIFT)                     /* 0x00000004 */
#define SPDIFRX_INTMASK_NPSPIMSK_SHIFT                     (3U)
#define SPDIFRX_INTMASK_NPSPIMSK_MASK                      (0x1U << SPDIFRX_INTMASK_NPSPIMSK_SHIFT)                     /* 0x00000008 */
#define SPDIFRX_INTMASK_RXFIMSK_SHIFT                      (4U)
#define SPDIFRX_INTMASK_RXFIMSK_MASK                       (0x1U << SPDIFRX_INTMASK_RXFIMSK_SHIFT)                      /* 0x00000010 */
#define SPDIFRX_INTMASK_RXOIMSK_SHIFT                      (5U)
#define SPDIFRX_INTMASK_RXOIMSK_MASK                       (0x1U << SPDIFRX_INTMASK_RXOIMSK_SHIFT)                      /* 0x00000020 */
#define SPDIFRX_INTMASK_BMDEIMSK_SHIFT                     (6U)
#define SPDIFRX_INTMASK_BMDEIMSK_MASK                      (0x1U << SPDIFRX_INTMASK_BMDEIMSK_SHIFT)                     /* 0x00000040 */
#define SPDIFRX_INTMASK_NSYNCIMSK_SHIFT                    (7U)
#define SPDIFRX_INTMASK_NSYNCIMSK_MASK                     (0x1U << SPDIFRX_INTMASK_NSYNCIMSK_SHIFT)                    /* 0x00000080 */
#define SPDIFRX_INTMASK_BTEIMSK_SHIFT                      (8U)
#define SPDIFRX_INTMASK_BTEIMSK_MASK                       (0x1U << SPDIFRX_INTMASK_BTEIMSK_SHIFT)                      /* 0x00000100 */
#define SPDIFRX_INTMASK_SYNCIMSK_SHIFT                     (9U)
#define SPDIFRX_INTMASK_SYNCIMSK_MASK                      (0x1U << SPDIFRX_INTMASK_SYNCIMSK_SHIFT)                     /* 0x00000200 */
#define SPDIFRX_INTMASK_UBCIMSK_SHIFT                      (10U)
#define SPDIFRX_INTMASK_UBCIMSK_MASK                       (0x1U << SPDIFRX_INTMASK_UBCIMSK_SHIFT)                      /* 0x00000400 */
#define SPDIFRX_INTMASK_VCGIMSK_SHIFT                      (11U)
#define SPDIFRX_INTMASK_VCGIMSK_MASK                       (0x1U << SPDIFRX_INTMASK_VCGIMSK_SHIFT)                      /* 0x00000800 */
#define SPDIFRX_INTMASK_TYPEIMSK_SHIFT                     (12U)
#define SPDIFRX_INTMASK_TYPEIMSK_MASK                      (0x1U << SPDIFRX_INTMASK_TYPEIMSK_SHIFT)                     /* 0x00001000 */
/* INTSR */
#define SPDIFRX_INTSR_OFFSET                               (0x24U)
#define SPDIFRX_INTSR                                      (0x0U)
#define SPDIFRX_INTSR_PEISR_SHIFT                          (0U)
#define SPDIFRX_INTSR_PEISR_MASK                           (0x1U << SPDIFRX_INTSR_PEISR_SHIFT)                          /* 0x00000001 */
#define SPDIFRX_INTSR_CSCISR_SHIFT                         (1U)
#define SPDIFRX_INTSR_CSCISR_MASK                          (0x1U << SPDIFRX_INTSR_CSCISR_SHIFT)                         /* 0x00000002 */
#define SPDIFRX_INTSR_NVLDISR_SHIFT                        (2U)
#define SPDIFRX_INTSR_NVLDISR_MASK                         (0x1U << SPDIFRX_INTSR_NVLDISR_SHIFT)                        /* 0x00000004 */
#define SPDIFRX_INTSR_NPSPISR_SHIFT                        (3U)
#define SPDIFRX_INTSR_NPSPISR_MASK                         (0x1U << SPDIFRX_INTSR_NPSPISR_SHIFT)                        /* 0x00000008 */
#define SPDIFRX_INTSR_RXFISR_SHIFT                         (4U)
#define SPDIFRX_INTSR_RXFISR_MASK                          (0x1U << SPDIFRX_INTSR_RXFISR_SHIFT)                         /* 0x00000010 */
#define SPDIFRX_INTSR_RXOISR_SHIFT                         (5U)
#define SPDIFRX_INTSR_RXOISR_MASK                          (0x1U << SPDIFRX_INTSR_RXOISR_SHIFT)                         /* 0x00000020 */
#define SPDIFRX_INTSR_BMDEISR_SHIFT                        (6U)
#define SPDIFRX_INTSR_BMDEISR_MASK                         (0x1U << SPDIFRX_INTSR_BMDEISR_SHIFT)                        /* 0x00000040 */
#define SPDIFRX_INTSR_NSYNCISR_SHIFT                       (7U)
#define SPDIFRX_INTSR_NSYNCISR_MASK                        (0x1U << SPDIFRX_INTSR_NSYNCISR_SHIFT)                       /* 0x00000080 */
#define SPDIFRX_INTSR_BTEISR_SHIFT                         (8U)
#define SPDIFRX_INTSR_BTEISR_MASK                          (0x1U << SPDIFRX_INTSR_BTEISR_SHIFT)                         /* 0x00000100 */
#define SPDIFRX_INTSR_SYNCISR_SHIFT                        (9U)
#define SPDIFRX_INTSR_SYNCISR_MASK                         (0x1U << SPDIFRX_INTSR_SYNCISR_SHIFT)                        /* 0x00000200 */
#define SPDIFRX_INTSR_UBCISR_SHIFT                         (10U)
#define SPDIFRX_INTSR_UBCISR_MASK                          (0x1U << SPDIFRX_INTSR_UBCISR_SHIFT)                         /* 0x00000400 */
#define SPDIFRX_INTSR_VCGISR_SHIFT                         (11U)
#define SPDIFRX_INTSR_VCGISR_MASK                          (0x1U << SPDIFRX_INTSR_VCGISR_SHIFT)                         /* 0x00000800 */
#define SPDIFRX_INTSR_TYPEISR_SHIFT                        (12U)
#define SPDIFRX_INTSR_TYPEISR_MASK                         (0x1U << SPDIFRX_INTSR_TYPEISR_SHIFT)                        /* 0x00001000 */
/* INTCLR */
#define SPDIFRX_INTCLR_OFFSET                              (0x28U)
#define SPDIFRX_INTCLR_PEICLR_SHIFT                        (0U)
#define SPDIFRX_INTCLR_PEICLR_MASK                         (0x1U << SPDIFRX_INTCLR_PEICLR_SHIFT)                        /* 0x00000001 */
#define SPDIFRX_INTCLR_CSCICLR_SHIFT                       (1U)
#define SPDIFRX_INTCLR_CSCICLR_MASK                        (0x1U << SPDIFRX_INTCLR_CSCICLR_SHIFT)                       /* 0x00000002 */
#define SPDIFRX_INTCLR_NVLDICLR_SHIFT                      (2U)
#define SPDIFRX_INTCLR_NVLDICLR_MASK                       (0x1U << SPDIFRX_INTCLR_NVLDICLR_SHIFT)                      /* 0x00000004 */
#define SPDIFRX_INTCLR_NPSPICLR_SHIFT                      (3U)
#define SPDIFRX_INTCLR_NPSPICLR_MASK                       (0x1U << SPDIFRX_INTCLR_NPSPICLR_SHIFT)                      /* 0x00000008 */
#define SPDIFRX_INTCLR_RXFICLR_SHIFT                       (4U)
#define SPDIFRX_INTCLR_RXFICLR_MASK                        (0x1U << SPDIFRX_INTCLR_RXFICLR_SHIFT)                       /* 0x00000010 */
#define SPDIFRX_INTCLR_RXOICLR_SHIFT                       (5U)
#define SPDIFRX_INTCLR_RXOICLR_MASK                        (0x1U << SPDIFRX_INTCLR_RXOICLR_SHIFT)                       /* 0x00000020 */
#define SPDIFRX_INTCLR_BMDEICLR_SHIFT                      (6U)
#define SPDIFRX_INTCLR_BMDEICLR_MASK                       (0x1U << SPDIFRX_INTCLR_BMDEICLR_SHIFT)                      /* 0x00000040 */
#define SPDIFRX_INTCLR_NSYNCICLR_SHIFT                     (7U)
#define SPDIFRX_INTCLR_NSYNCICLR_MASK                      (0x1U << SPDIFRX_INTCLR_NSYNCICLR_SHIFT)                     /* 0x00000080 */
#define SPDIFRX_INTCLR_BTEICLR_SHIFT                       (8U)
#define SPDIFRX_INTCLR_BTEICLR_MASK                        (0x1U << SPDIFRX_INTCLR_BTEICLR_SHIFT)                       /* 0x00000100 */
#define SPDIFRX_INTCLR_SYNCICLR_SHIFT                      (9U)
#define SPDIFRX_INTCLR_SYNCICLR_MASK                       (0x1U << SPDIFRX_INTCLR_SYNCICLR_SHIFT)                      /* 0x00000200 */
#define SPDIFRX_INTCLR_UBCICLR_SHIFT                       (10U)
#define SPDIFRX_INTCLR_UBCICLR_MASK                        (0x1U << SPDIFRX_INTCLR_UBCICLR_SHIFT)                       /* 0x00000400 */
#define SPDIFRX_INTCLR_VCGICLR_SHIFT                       (11U)
#define SPDIFRX_INTCLR_VCGICLR_MASK                        (0x1U << SPDIFRX_INTCLR_VCGICLR_SHIFT)                       /* 0x00000800 */
#define SPDIFRX_INTCLR_TYPEICLR_SHIFT                      (12U)
#define SPDIFRX_INTCLR_TYPEICLR_MASK                       (0x1U << SPDIFRX_INTCLR_TYPEICLR_SHIFT)                      /* 0x00001000 */
/* SMPDR */
#define SPDIFRX_SMPDR_OFFSET                               (0x2CU)
#define SPDIFRX_SMPDR                                      (0x0U)
#define SPDIFRX_SMPDR_SMPDR_SHIFT                          (0U)
#define SPDIFRX_SMPDR_SMPDR_MASK                           (0xFFFFFFFFU << SPDIFRX_SMPDR_SMPDR_SHIFT)                   /* 0xFFFFFFFF */
/* USRDRN */
#define SPDIFRX_USRDRN_OFFSET                              (0x30U)
#define SPDIFRX_USRDRN                                     (0x0U)
#define SPDIFRX_USRDRN_USR_SUB_0_SHIFT                     (0U)
#define SPDIFRX_USRDRN_USR_SUB_0_MASK                      (0xFFFFU << SPDIFRX_USRDRN_USR_SUB_0_SHIFT)                  /* 0x0000FFFF */
#define SPDIFRX_USRDRN_USR_SUB_1_SHIFT                     (16U)
#define SPDIFRX_USRDRN_USR_SUB_1_MASK                      (0xFFFFU << SPDIFRX_USRDRN_USR_SUB_1_SHIFT)                  /* 0xFFFF0000 */
/* CHNSRN */
#define SPDIFRX_CHNSRN_OFFSET                              (0x60U)
#define SPDIFRX_CHNSRN                                     (0x0U)
#define SPDIFRX_CHNSRN_CHNSR_SUB_0_SHIFT                   (0U)
#define SPDIFRX_CHNSRN_CHNSR_SUB_0_MASK                    (0xFFFFU << SPDIFRX_CHNSRN_CHNSR_SUB_0_SHIFT)                /* 0x0000FFFF */
#define SPDIFRX_CHNSRN_CHNSR_SUB_1_SHIFT                   (16U)
#define SPDIFRX_CHNSRN_CHNSR_SUB_1_MASK                    (0xFFFFU << SPDIFRX_CHNSRN_CHNSR_SUB_1_SHIFT)                /* 0xFFFF0000 */
/* CDR_TIME */
#define SPDIFRX_CDR_TIME_OFFSET                            (0x90U)
#define SPDIFRX_CDR_TIME_CDR_WAIT_TIME_SHIFT               (0U)
#define SPDIFRX_CDR_TIME_CDR_WAIT_TIME_MASK                (0xFFFFU << SPDIFRX_CDR_TIME_CDR_WAIT_TIME_SHIFT)            /* 0x0000FFFF */
#define SPDIFRX_CDR_TIME_CDR_COUNT_TIME_SHIFT              (16U)
#define SPDIFRX_CDR_TIME_CDR_COUNT_TIME_MASK               (0xFFFFU << SPDIFRX_CDR_TIME_CDR_COUNT_TIME_SHIFT)           /* 0xFFFF0000 */
/* STATUS */
#define SPDIFRX_STATUS_OFFSET                              (0x94U)
#define SPDIFRX_STATUS                                     (0x0U)
#define SPDIFRX_STATUS_AUDIO_TYPE_SHIFT                    (0U)
#define SPDIFRX_STATUS_AUDIO_TYPE_MASK                     (0x1U << SPDIFRX_STATUS_AUDIO_TYPE_SHIFT)                    /* 0x00000001 */
#define SPDIFRX_STATUS_CH0_DATA_VLD_SHIFT                  (1U)
#define SPDIFRX_STATUS_CH0_DATA_VLD_MASK                   (0xFU << SPDIFRX_STATUS_CH0_DATA_VLD_SHIFT)                  /* 0x0000001E */
#define SPDIFRX_STATUS_CH1_DATA_VLD_SHIFT                  (5U)
#define SPDIFRX_STATUS_CH1_DATA_VLD_MASK                   (0xFU << SPDIFRX_STATUS_CH1_DATA_VLD_SHIFT)                  /* 0x000001E0 */
/* BURSTINFO */
#define SPDIFRX_BURSTINFO_OFFSET                           (0x100U)
#define SPDIFRX_BURSTINFO                                  (0x0U)
#define SPDIFRX_BURSTINFO_DATATYPE_SHIFT                   (0U)
#define SPDIFRX_BURSTINFO_DATATYPE_MASK                    (0x7FU << SPDIFRX_BURSTINFO_DATATYPE_SHIFT)                  /* 0x0000007F */
#define SPDIFRX_BURSTINFO_ERRFLAG_SHIFT                    (7U)
#define SPDIFRX_BURSTINFO_ERRFLAG_MASK                     (0x1U << SPDIFRX_BURSTINFO_ERRFLAG_SHIFT)                    /* 0x00000080 */
#define SPDIFRX_BURSTINFO_DATAINFO_SHIFT                   (8U)
#define SPDIFRX_BURSTINFO_DATAINFO_MASK                    (0x1FU << SPDIFRX_BURSTINFO_DATAINFO_SHIFT)                  /* 0x00001F00 */
#define SPDIFRX_BURSTINFO_BSNUM_SHIFT                      (13U)
#define SPDIFRX_BURSTINFO_BSNUM_MASK                       (0x7U << SPDIFRX_BURSTINFO_BSNUM_SHIFT)                      /* 0x0000E000 */
#define SPDIFRX_BURSTINFO_PD_SHIFT                         (16U)
#define SPDIFRX_BURSTINFO_PD_MASK                          (0xFFFFU << SPDIFRX_BURSTINFO_PD_SHIFT)                      /* 0xFFFF0000 */
/******************************************MMC*******************************************/
/* CTRL */
#define MMC_CTRL_OFFSET                                    (0x0U)
#define MMC_CTRL_CONTROLLER_RESET_SHIFT                    (0U)
#define MMC_CTRL_CONTROLLER_RESET_MASK                     (0x1U << MMC_CTRL_CONTROLLER_RESET_SHIFT)                    /* 0x00000001 */
#define MMC_CTRL_FIFO_RESET_SHIFT                          (1U)
#define MMC_CTRL_FIFO_RESET_MASK                           (0x1U << MMC_CTRL_FIFO_RESET_SHIFT)                          /* 0x00000002 */
#define MMC_CTRL_DMA_RESET_SHIFT                           (2U)
#define MMC_CTRL_DMA_RESET_MASK                            (0x1U << MMC_CTRL_DMA_RESET_SHIFT)                           /* 0x00000004 */
#define MMC_CTRL_INT_ENABLE_SHIFT                          (4U)
#define MMC_CTRL_INT_ENABLE_MASK                           (0x1U << MMC_CTRL_INT_ENABLE_SHIFT)                          /* 0x00000010 */
#define MMC_CTRL_DMA_ENABLE_SHIFT                          (5U)
#define MMC_CTRL_DMA_ENABLE_MASK                           (0x1U << MMC_CTRL_DMA_ENABLE_SHIFT)                          /* 0x00000020 */
#define MMC_CTRL_READ_WAIT_SHIFT                           (6U)
#define MMC_CTRL_READ_WAIT_MASK                            (0x1U << MMC_CTRL_READ_WAIT_SHIFT)                           /* 0x00000040 */
#define MMC_CTRL_SEND_IRQ_RESPONSE_SHIFT                   (7U)
#define MMC_CTRL_SEND_IRQ_RESPONSE_MASK                    (0x1U << MMC_CTRL_SEND_IRQ_RESPONSE_SHIFT)                   /* 0x00000080 */
#define MMC_CTRL_ABORT_READ_DATA_SHIFT                     (8U)
#define MMC_CTRL_ABORT_READ_DATA_MASK                      (0x1U << MMC_CTRL_ABORT_READ_DATA_SHIFT)                     /* 0x00000100 */
#define MMC_CTRL_SEND_CCSD_SHIFT                           (9U)
#define MMC_CTRL_SEND_CCSD_MASK                            (0x1U << MMC_CTRL_SEND_CCSD_SHIFT)                           /* 0x00000200 */
#define MMC_CTRL_SEND_AUTO_STOP_CCSD_SHIFT                 (10U)
#define MMC_CTRL_SEND_AUTO_STOP_CCSD_MASK                  (0x1U << MMC_CTRL_SEND_AUTO_STOP_CCSD_SHIFT)                 /* 0x00000400 */
#define MMC_CTRL_CEATA_DEVICE_INTERRUPT_STATUS_SHIFT       (11U)
#define MMC_CTRL_CEATA_DEVICE_INTERRUPT_STATUS_MASK        (0x1U << MMC_CTRL_CEATA_DEVICE_INTERRUPT_STATUS_SHIFT)       /* 0x00000800 */
#define MMC_CTRL_USE_INTERNAL_DMAC_SHIFT                   (25U)
#define MMC_CTRL_USE_INTERNAL_DMAC_MASK                    (0x1U << MMC_CTRL_USE_INTERNAL_DMAC_SHIFT)                   /* 0x02000000 */
/* PWREN */
#define MMC_PWREN_OFFSET                                   (0x4U)
#define MMC_PWREN_POWER_ENABLE_SHIFT                       (0U)
#define MMC_PWREN_POWER_ENABLE_MASK                        (0x1U << MMC_PWREN_POWER_ENABLE_SHIFT)                       /* 0x00000001 */
/* CLKDIV */
#define MMC_CLKDIV_OFFSET                                  (0x8U)
#define MMC_CLKDIV_CLK_DIVIDER0_SHIFT                      (0U)
#define MMC_CLKDIV_CLK_DIVIDER0_MASK                       (0xFFU << MMC_CLKDIV_CLK_DIVIDER0_SHIFT)                     /* 0x000000FF */
/* CLKSRC */
#define MMC_CLKSRC_OFFSET                                  (0xCU)
#define MMC_CLKSRC_CLK_SOURCE_SHIFT                        (0U)
#define MMC_CLKSRC_CLK_SOURCE_MASK                         (0x3U << MMC_CLKSRC_CLK_SOURCE_SHIFT)                        /* 0x00000003 */
/* CLKENA */
#define MMC_CLKENA_OFFSET                                  (0x10U)
#define MMC_CLKENA_CCLK_ENABLE_SHIFT                       (0U)
#define MMC_CLKENA_CCLK_ENABLE_MASK                        (0x1U << MMC_CLKENA_CCLK_ENABLE_SHIFT)                       /* 0x00000001 */
#define MMC_CLKENA_CCLK_LOW_POWER_SHIFT                    (16U)
#define MMC_CLKENA_CCLK_LOW_POWER_MASK                     (0x1U << MMC_CLKENA_CCLK_LOW_POWER_SHIFT)                    /* 0x00010000 */
/* TMOUT */
#define MMC_TMOUT_OFFSET                                   (0x14U)
#define MMC_TMOUT_RESPONSE_TIMEOUT_SHIFT                   (0U)
#define MMC_TMOUT_RESPONSE_TIMEOUT_MASK                    (0xFFU << MMC_TMOUT_RESPONSE_TIMEOUT_SHIFT)                  /* 0x000000FF */
#define MMC_TMOUT_DATA_TIMEOUT_SHIFT                       (8U)
#define MMC_TMOUT_DATA_TIMEOUT_MASK                        (0xFFFFFFU << MMC_TMOUT_DATA_TIMEOUT_SHIFT)                  /* 0xFFFFFF00 */
/* CTYPE */
#define MMC_CTYPE_OFFSET                                   (0x18U)
#define MMC_CTYPE_CARD_WIDTH_SHIFT                         (0U)
#define MMC_CTYPE_CARD_WIDTH_MASK                          (0x1U << MMC_CTYPE_CARD_WIDTH_SHIFT)                         /* 0x00000001 */
#define MMC_CTYPE_CARD_WIDTH_8_SHIFT                       (16U)
#define MMC_CTYPE_CARD_WIDTH_8_MASK                        (0x1U << MMC_CTYPE_CARD_WIDTH_8_SHIFT)                       /* 0x00010000 */
/* BLKSIZ */
#define MMC_BLKSIZ_OFFSET                                  (0x1CU)
#define MMC_BLKSIZ_BLOCK_SIZE_SHIFT                        (0U)
#define MMC_BLKSIZ_BLOCK_SIZE_MASK                         (0xFFFFU << MMC_BLKSIZ_BLOCK_SIZE_SHIFT)                     /* 0x0000FFFF */
/* BYTCNT */
#define MMC_BYTCNT_OFFSET                                  (0x20U)
#define MMC_BYTCNT_BYTE_COUNT_SHIFT                        (0U)
#define MMC_BYTCNT_BYTE_COUNT_MASK                         (0xFFFFFFFFU << MMC_BYTCNT_BYTE_COUNT_SHIFT)                 /* 0xFFFFFFFF */
/* INTMASK */
#define MMC_INTMASK_OFFSET                                 (0x24U)
#define MMC_INTMASK_INT_MASK_SHIFT                         (0U)
#define MMC_INTMASK_INT_MASK_MASK                          (0xFFFFU << MMC_INTMASK_INT_MASK_SHIFT)                      /* 0x0000FFFF */
#define MMC_INTMASK_DATA_NOBUSY_INT_MASK_SHIFT             (16U)
#define MMC_INTMASK_DATA_NOBUSY_INT_MASK_MASK              (0x1U << MMC_INTMASK_DATA_NOBUSY_INT_MASK_SHIFT)             /* 0x00010000 */
#define MMC_INTMASK_SDIO_INT_MASK_SHIFT                    (24U)
#define MMC_INTMASK_SDIO_INT_MASK_MASK                     (0x1U << MMC_INTMASK_SDIO_INT_MASK_SHIFT)                    /* 0x01000000 */
/* CMDARG */
#define MMC_CMDARG_OFFSET                                  (0x28U)
#define MMC_CMDARG_CMD_ARG_SHIFT                           (0U)
#define MMC_CMDARG_CMD_ARG_MASK                            (0xFFFFFFFFU << MMC_CMDARG_CMD_ARG_SHIFT)                    /* 0xFFFFFFFF */
/* CMD */
#define MMC_CMD_OFFSET                                     (0x2CU)
#define MMC_CMD_CMD_INDEX_SHIFT                            (0U)
#define MMC_CMD_CMD_INDEX_MASK                             (0x3FU << MMC_CMD_CMD_INDEX_SHIFT)                           /* 0x0000003F */
#define MMC_CMD_RESPONSE_EXPECT_SHIFT                      (6U)
#define MMC_CMD_RESPONSE_EXPECT_MASK                       (0x1U << MMC_CMD_RESPONSE_EXPECT_SHIFT)                      /* 0x00000040 */
#define MMC_CMD_RESPONSE_LENGTH_SHIFT                      (7U)
#define MMC_CMD_RESPONSE_LENGTH_MASK                       (0x1U << MMC_CMD_RESPONSE_LENGTH_SHIFT)                      /* 0x00000080 */
#define MMC_CMD_CHECK_RESPONSE_CRC_SHIFT                   (8U)
#define MMC_CMD_CHECK_RESPONSE_CRC_MASK                    (0x1U << MMC_CMD_CHECK_RESPONSE_CRC_SHIFT)                   /* 0x00000100 */
#define MMC_CMD_DATA_EXPECTED_SHIFT                        (9U)
#define MMC_CMD_DATA_EXPECTED_MASK                         (0x1U << MMC_CMD_DATA_EXPECTED_SHIFT)                        /* 0x00000200 */
#define MMC_CMD_WR_SHIFT                                   (10U)
#define MMC_CMD_WR_MASK                                    (0x1U << MMC_CMD_WR_SHIFT)                                   /* 0x00000400 */
#define MMC_CMD_TRANSFER_MODE_SHIFT                        (11U)
#define MMC_CMD_TRANSFER_MODE_MASK                         (0x1U << MMC_CMD_TRANSFER_MODE_SHIFT)                        /* 0x00000800 */
#define MMC_CMD_SEND_AUTO_STOP_SHIFT                       (12U)
#define MMC_CMD_SEND_AUTO_STOP_MASK                        (0x1U << MMC_CMD_SEND_AUTO_STOP_SHIFT)                       /* 0x00001000 */
#define MMC_CMD_WAIT_PRVDATA_COMPLETE_SHIFT                (13U)
#define MMC_CMD_WAIT_PRVDATA_COMPLETE_MASK                 (0x1U << MMC_CMD_WAIT_PRVDATA_COMPLETE_SHIFT)                /* 0x00002000 */
#define MMC_CMD_STOP_ABORT_CMD_SHIFT                       (14U)
#define MMC_CMD_STOP_ABORT_CMD_MASK                        (0x1U << MMC_CMD_STOP_ABORT_CMD_SHIFT)                       /* 0x00004000 */
#define MMC_CMD_SEND_INITIALIZATION_SHIFT                  (15U)
#define MMC_CMD_SEND_INITIALIZATION_MASK                   (0x1U << MMC_CMD_SEND_INITIALIZATION_SHIFT)                  /* 0x00008000 */
#define MMC_CMD_UPDATE_CLOCK_REGS_ONLY_SHIFT               (21U)
#define MMC_CMD_UPDATE_CLOCK_REGS_ONLY_MASK                (0x1U << MMC_CMD_UPDATE_CLOCK_REGS_ONLY_SHIFT)               /* 0x00200000 */
#define MMC_CMD_READ_CEATA_DEVICE_SHIFT                    (22U)
#define MMC_CMD_READ_CEATA_DEVICE_MASK                     (0x1U << MMC_CMD_READ_CEATA_DEVICE_SHIFT)                    /* 0x00400000 */
#define MMC_CMD_CCS_EXPECTED_SHIFT                         (23U)
#define MMC_CMD_CCS_EXPECTED_MASK                          (0x1U << MMC_CMD_CCS_EXPECTED_SHIFT)                         /* 0x00800000 */
#define MMC_CMD_ENABLE_BOOT_SHIFT                          (24U)
#define MMC_CMD_ENABLE_BOOT_MASK                           (0x1U << MMC_CMD_ENABLE_BOOT_SHIFT)                          /* 0x01000000 */
#define MMC_CMD_EXPECT_BOOT_ACK_SHIFT                      (25U)
#define MMC_CMD_EXPECT_BOOT_ACK_MASK                       (0x1U << MMC_CMD_EXPECT_BOOT_ACK_SHIFT)                      /* 0x02000000 */
#define MMC_CMD_DISABLE_BOOT_SHIFT                         (26U)
#define MMC_CMD_DISABLE_BOOT_MASK                          (0x1U << MMC_CMD_DISABLE_BOOT_SHIFT)                         /* 0x04000000 */
#define MMC_CMD_BOOT_MODE_SHIFT                            (27U)
#define MMC_CMD_BOOT_MODE_MASK                             (0x1U << MMC_CMD_BOOT_MODE_SHIFT)                            /* 0x08000000 */
#define MMC_CMD_VOLT_SWITCH_SHIFT                          (28U)
#define MMC_CMD_VOLT_SWITCH_MASK                           (0x1U << MMC_CMD_VOLT_SWITCH_SHIFT)                          /* 0x10000000 */
#define MMC_CMD_USE_HOLD_REG_SHIFT                         (29U)
#define MMC_CMD_USE_HOLD_REG_MASK                          (0x1U << MMC_CMD_USE_HOLD_REG_SHIFT)                         /* 0x20000000 */
#define MMC_CMD_START_CMD_SHIFT                            (31U)
#define MMC_CMD_START_CMD_MASK                             (0x1U << MMC_CMD_START_CMD_SHIFT)                            /* 0x80000000 */
/* RESP0 */
#define MMC_RESP0_OFFSET                                   (0x30U)
#define MMC_RESP0                                          (0x0U)
#define MMC_RESP0_RESPONSE0_SHIFT                          (0U)
#define MMC_RESP0_RESPONSE0_MASK                           (0xFFFFFFFFU << MMC_RESP0_RESPONSE0_SHIFT)                   /* 0xFFFFFFFF */
/* RESP1 */
#define MMC_RESP1_OFFSET                                   (0x34U)
#define MMC_RESP1                                          (0x0U)
#define MMC_RESP1_RESPONSE1_SHIFT                          (0U)
#define MMC_RESP1_RESPONSE1_MASK                           (0xFFFFFFFFU << MMC_RESP1_RESPONSE1_SHIFT)                   /* 0xFFFFFFFF */
/* RESP2 */
#define MMC_RESP2_OFFSET                                   (0x38U)
#define MMC_RESP2                                          (0x0U)
#define MMC_RESP2_RESPONSE2_SHIFT                          (0U)
#define MMC_RESP2_RESPONSE2_MASK                           (0xFFFFFFFFU << MMC_RESP2_RESPONSE2_SHIFT)                   /* 0xFFFFFFFF */
/* RESP3 */
#define MMC_RESP3_OFFSET                                   (0x3CU)
#define MMC_RESP3                                          (0x0U)
#define MMC_RESP3_RESPONSE3_SHIFT                          (0U)
#define MMC_RESP3_RESPONSE3_MASK                           (0xFFFFFFFFU << MMC_RESP3_RESPONSE3_SHIFT)                   /* 0xFFFFFFFF */
/* MINTSTS */
#define MMC_MINTSTS_OFFSET                                 (0x40U)
#define MMC_MINTSTS_INT_STATUS_SHIFT                       (0U)
#define MMC_MINTSTS_INT_STATUS_MASK                        (0xFFFFU << MMC_MINTSTS_INT_STATUS_SHIFT)                    /* 0x0000FFFF */
#define MMC_MINTSTS_DATA_NOBUSY_INT_STATUS_SHIFT           (16U)
#define MMC_MINTSTS_DATA_NOBUSY_INT_STATUS_MASK            (0x1U << MMC_MINTSTS_DATA_NOBUSY_INT_STATUS_SHIFT)           /* 0x00010000 */
#define MMC_MINTSTS_SDIO_INTERRUPT_SHIFT                   (24U)
#define MMC_MINTSTS_SDIO_INTERRUPT_MASK                    (0x1U << MMC_MINTSTS_SDIO_INTERRUPT_SHIFT)                   /* 0x01000000 */
/* RINTSTS */
#define MMC_RINTSTS_OFFSET                                 (0x44U)
#define MMC_RINTSTS_INT_STATUS_SHIFT                       (0U)
#define MMC_RINTSTS_INT_STATUS_MASK                        (0xFFFFU << MMC_RINTSTS_INT_STATUS_SHIFT)                    /* 0x0000FFFF */
#define MMC_RINTSTS_DATA_NOBUSY_INT_STATUS_SHIFT           (16U)
#define MMC_RINTSTS_DATA_NOBUSY_INT_STATUS_MASK            (0x1U << MMC_RINTSTS_DATA_NOBUSY_INT_STATUS_SHIFT)           /* 0x00010000 */
#define MMC_RINTSTS_SDIO_INTERRUPT_SHIFT                   (24U)
#define MMC_RINTSTS_SDIO_INTERRUPT_MASK                    (0x1U << MMC_RINTSTS_SDIO_INTERRUPT_SHIFT)                   /* 0x01000000 */
/* STATUS */
#define MMC_STATUS_OFFSET                                  (0x48U)
#define MMC_STATUS                                         (0x106U)
#define MMC_STATUS_FIFO_RX_WATERMARK_SHIFT                 (0U)
#define MMC_STATUS_FIFO_RX_WATERMARK_MASK                  (0x1U << MMC_STATUS_FIFO_RX_WATERMARK_SHIFT)                 /* 0x00000001 */
#define MMC_STATUS_FIFO_TX_WATERMARK_SHIFT                 (1U)
#define MMC_STATUS_FIFO_TX_WATERMARK_MASK                  (0x1U << MMC_STATUS_FIFO_TX_WATERMARK_SHIFT)                 /* 0x00000002 */
#define MMC_STATUS_FIFO_EMPTY_SHIFT                        (2U)
#define MMC_STATUS_FIFO_EMPTY_MASK                         (0x1U << MMC_STATUS_FIFO_EMPTY_SHIFT)                        /* 0x00000004 */
#define MMC_STATUS_FIFO_FULL_SHIFT                         (3U)
#define MMC_STATUS_FIFO_FULL_MASK                          (0x1U << MMC_STATUS_FIFO_FULL_SHIFT)                         /* 0x00000008 */
#define MMC_STATUS_COMMAND_FSM_STATES_SHIFT                (4U)
#define MMC_STATUS_COMMAND_FSM_STATES_MASK                 (0xFU << MMC_STATUS_COMMAND_FSM_STATES_SHIFT)                /* 0x000000F0 */
#define MMC_STATUS_DATA_3_STATUS_SHIFT                     (8U)
#define MMC_STATUS_DATA_3_STATUS_MASK                      (0x1U << MMC_STATUS_DATA_3_STATUS_SHIFT)                     /* 0x00000100 */
#define MMC_STATUS_DATA_BUSY_SHIFT                         (9U)
#define MMC_STATUS_DATA_BUSY_MASK                          (0x1U << MMC_STATUS_DATA_BUSY_SHIFT)                         /* 0x00000200 */
#define MMC_STATUS_DATA_STATE_MC_BUSY_SHIFT                (10U)
#define MMC_STATUS_DATA_STATE_MC_BUSY_MASK                 (0x1U << MMC_STATUS_DATA_STATE_MC_BUSY_SHIFT)                /* 0x00000400 */
#define MMC_STATUS_RESPONSE_INDEX_SHIFT                    (11U)
#define MMC_STATUS_RESPONSE_INDEX_MASK                     (0x3FU << MMC_STATUS_RESPONSE_INDEX_SHIFT)                   /* 0x0001F800 */
#define MMC_STATUS_FIFO_COUNT_SHIFT                        (17U)
#define MMC_STATUS_FIFO_COUNT_MASK                         (0x1FFFU << MMC_STATUS_FIFO_COUNT_SHIFT)                     /* 0x3FFE0000 */
#define MMC_STATUS_DMA_ACK_SHIFT                           (30U)
#define MMC_STATUS_DMA_ACK_MASK                            (0x1U << MMC_STATUS_DMA_ACK_SHIFT)                           /* 0x40000000 */
#define MMC_STATUS_DMA_REQ_SHIFT                           (31U)
#define MMC_STATUS_DMA_REQ_MASK                            (0x1U << MMC_STATUS_DMA_REQ_SHIFT)                           /* 0x80000000 */
/* FIFOTH */
#define MMC_FIFOTH_OFFSET                                  (0x4CU)
#define MMC_FIFOTH_TX_WMARK_SHIFT                          (0U)
#define MMC_FIFOTH_TX_WMARK_MASK                           (0xFFFU << MMC_FIFOTH_TX_WMARK_SHIFT)                        /* 0x00000FFF */
#define MMC_FIFOTH_RX_WMARK_SHIFT                          (16U)
#define MMC_FIFOTH_RX_WMARK_MASK                           (0xFFFU << MMC_FIFOTH_RX_WMARK_SHIFT)                        /* 0x0FFF0000 */
#define MMC_FIFOTH_DMA_MUTIPLE_TRANSACTION_SIZE_SHIFT      (28U)
#define MMC_FIFOTH_DMA_MUTIPLE_TRANSACTION_SIZE_MASK       (0x7U << MMC_FIFOTH_DMA_MUTIPLE_TRANSACTION_SIZE_SHIFT)      /* 0x70000000 */
/* CDETECT */
#define MMC_CDETECT_OFFSET                                 (0x50U)
#define MMC_CDETECT                                        (0x1U)
#define MMC_CDETECT_CARD_DETECT_N_SHIFT                    (0U)
#define MMC_CDETECT_CARD_DETECT_N_MASK                     (0x1U << MMC_CDETECT_CARD_DETECT_N_SHIFT)                    /* 0x00000001 */
/* WRTPRT */
#define MMC_WRTPRT_OFFSET                                  (0x54U)
#define MMC_WRTPRT_WRITE_PROTECT_SHIFT                     (0U)
#define MMC_WRTPRT_WRITE_PROTECT_MASK                      (0x1U << MMC_WRTPRT_WRITE_PROTECT_SHIFT)                     /* 0x00000001 */
/* TCBCNT */
#define MMC_TCBCNT_OFFSET                                  (0x5CU)
#define MMC_TCBCNT                                         (0x0U)
#define MMC_TCBCNT_TRANS_CARD_BYTE_COUNT_SHIFT             (0U)
#define MMC_TCBCNT_TRANS_CARD_BYTE_COUNT_MASK              (0xFFFFFFFFU << MMC_TCBCNT_TRANS_CARD_BYTE_COUNT_SHIFT)      /* 0xFFFFFFFF */
/* TBBCNT */
#define MMC_TBBCNT_OFFSET                                  (0x60U)
#define MMC_TBBCNT                                         (0x0U)
#define MMC_TBBCNT_TRANS_FIFO_BYTE_COUNT_SHIFT             (0U)
#define MMC_TBBCNT_TRANS_FIFO_BYTE_COUNT_MASK              (0xFFFFFFFFU << MMC_TBBCNT_TRANS_FIFO_BYTE_COUNT_SHIFT)      /* 0xFFFFFFFF */
/* DEBNCE */
#define MMC_DEBNCE_OFFSET                                  (0x64U)
#define MMC_DEBNCE_DEBOUNCE_COUNT_SHIFT                    (0U)
#define MMC_DEBNCE_DEBOUNCE_COUNT_MASK                     (0xFFFFFFU << MMC_DEBNCE_DEBOUNCE_COUNT_SHIFT)               /* 0x00FFFFFF */
/* USRID */
#define MMC_USRID_OFFSET                                   (0x68U)
#define MMC_USRID_USRID_SHIFT                              (0U)
#define MMC_USRID_USRID_MASK                               (0xFFFFFFFFU << MMC_USRID_USRID_SHIFT)                       /* 0xFFFFFFFF */
/* VERID */
#define MMC_VERID_OFFSET                                   (0x6CU)
#define MMC_VERID                                          (0x5342270AU)
#define MMC_VERID_VERID_SHIFT                              (0U)
#define MMC_VERID_VERID_MASK                               (0xFFFFFFFFU << MMC_VERID_VERID_SHIFT)                       /* 0xFFFFFFFF */
/* HCON */
#define MMC_HCON_OFFSET                                    (0x70U)
#define MMC_HCON                                           (0x4C434C1U)
#define MMC_HCON_CARD_TYPE_SHIFT                           (0U)
#define MMC_HCON_CARD_TYPE_MASK                            (0x1U << MMC_HCON_CARD_TYPE_SHIFT)                           /* 0x00000001 */
#define MMC_HCON_CARD_NUM_SHIFT                            (1U)
#define MMC_HCON_CARD_NUM_MASK                             (0x1FU << MMC_HCON_CARD_NUM_SHIFT)                           /* 0x0000003E */
#define MMC_HCON_H_BUS_TYPE_SHIFT                          (6U)
#define MMC_HCON_H_BUS_TYPE_MASK                           (0x1U << MMC_HCON_H_BUS_TYPE_SHIFT)                          /* 0x00000040 */
#define MMC_HCON_H_DATA_WIDTH_SHIFT                        (7U)
#define MMC_HCON_H_DATA_WIDTH_MASK                         (0x7U << MMC_HCON_H_DATA_WIDTH_SHIFT)                        /* 0x00000380 */
#define MMC_HCON_H_ADDR_WIDTH_SHIFT                        (10U)
#define MMC_HCON_H_ADDR_WIDTH_MASK                         (0x3FU << MMC_HCON_H_ADDR_WIDTH_SHIFT)                       /* 0x0000FC00 */
#define MMC_HCON_DMA_INTERFACE_SHIFT                       (16U)
#define MMC_HCON_DMA_INTERFACE_MASK                        (0x3U << MMC_HCON_DMA_INTERFACE_SHIFT)                       /* 0x00030000 */
#define MMC_HCON_GE_DMA_DATA_WIDTH_SHIFT                   (18U)
#define MMC_HCON_GE_DMA_DATA_WIDTH_MASK                    (0x7U << MMC_HCON_GE_DMA_DATA_WIDTH_SHIFT)                   /* 0x001C0000 */
#define MMC_HCON_FIFO_RAM_INSIDE_SHIFT                     (21U)
#define MMC_HCON_FIFO_RAM_INSIDE_MASK                      (0x1U << MMC_HCON_FIFO_RAM_INSIDE_SHIFT)                     /* 0x00200000 */
#define MMC_HCON_IMPL_HOLD_REG_SHIFT                       (22U)
#define MMC_HCON_IMPL_HOLD_REG_MASK                        (0x1U << MMC_HCON_IMPL_HOLD_REG_SHIFT)                       /* 0x00400000 */
#define MMC_HCON_SET_CLK_FALSE_PATH_SHIFT                  (23U)
#define MMC_HCON_SET_CLK_FALSE_PATH_MASK                   (0x1U << MMC_HCON_SET_CLK_FALSE_PATH_SHIFT)                  /* 0x00800000 */
#define MMC_HCON_NUM_CLK_DIV_SHIFT                         (24U)
#define MMC_HCON_NUM_CLK_DIV_MASK                          (0x3U << MMC_HCON_NUM_CLK_DIV_SHIFT)                         /* 0x03000000 */
#define MMC_HCON_AREA_OPTIMIZED_SHIFT                      (26U)
#define MMC_HCON_AREA_OPTIMIZED_MASK                       (0x1U << MMC_HCON_AREA_OPTIMIZED_SHIFT)                      /* 0x04000000 */
/* UHSREG */
#define MMC_UHSREG_OFFSET                                  (0x74U)
#define MMC_UHSREG_DDR_REG_SHIFT                           (16U)
#define MMC_UHSREG_DDR_REG_MASK                            (0x1U << MMC_UHSREG_DDR_REG_SHIFT)                           /* 0x00010000 */
/* RSTN */
#define MMC_RSTN_OFFSET                                    (0x78U)
#define MMC_RSTN_CARD_RESET_SHIFT                          (0U)
#define MMC_RSTN_CARD_RESET_MASK                           (0x1U << MMC_RSTN_CARD_RESET_SHIFT)                          /* 0x00000001 */
/* BMOD */
#define MMC_BMOD_OFFSET                                    (0x80U)
#define MMC_BMOD_SWR_SHIFT                                 (0U)
#define MMC_BMOD_SWR_MASK                                  (0x1U << MMC_BMOD_SWR_SHIFT)                                 /* 0x00000001 */
#define MMC_BMOD_FB_SHIFT                                  (1U)
#define MMC_BMOD_FB_MASK                                   (0x1U << MMC_BMOD_FB_SHIFT)                                  /* 0x00000002 */
#define MMC_BMOD_DSL_SHIFT                                 (2U)
#define MMC_BMOD_DSL_MASK                                  (0x1FU << MMC_BMOD_DSL_SHIFT)                                /* 0x0000007C */
#define MMC_BMOD_DE_SHIFT                                  (7U)
#define MMC_BMOD_DE_MASK                                   (0x1U << MMC_BMOD_DE_SHIFT)                                  /* 0x00000080 */
#define MMC_BMOD_PBL_SHIFT                                 (8U)
#define MMC_BMOD_PBL_MASK                                  (0x7U << MMC_BMOD_PBL_SHIFT)                                 /* 0x00000700 */
/* PLDMND */
#define MMC_PLDMND_OFFSET                                  (0x84U)
#define MMC_PLDMND_PD_SHIFT                                (0U)
#define MMC_PLDMND_PD_MASK                                 (0xFFFFFFFFU << MMC_PLDMND_PD_SHIFT)                         /* 0xFFFFFFFF */
/* DBADDR */
#define MMC_DBADDR_OFFSET                                  (0x88U)
#define MMC_DBADDR_SBL_SHIFT                               (0U)
#define MMC_DBADDR_SBL_MASK                                (0xFFFFFFFFU << MMC_DBADDR_SBL_SHIFT)                        /* 0xFFFFFFFF */
/* IDSTS */
#define MMC_IDSTS_OFFSET                                   (0x8CU)
#define MMC_IDSTS_TI_SHIFT                                 (0U)
#define MMC_IDSTS_TI_MASK                                  (0x1U << MMC_IDSTS_TI_SHIFT)                                 /* 0x00000001 */
#define MMC_IDSTS_RI_SHIFT                                 (1U)
#define MMC_IDSTS_RI_MASK                                  (0x1U << MMC_IDSTS_RI_SHIFT)                                 /* 0x00000002 */
#define MMC_IDSTS_FBE_SHIFT                                (2U)
#define MMC_IDSTS_FBE_MASK                                 (0x1U << MMC_IDSTS_FBE_SHIFT)                                /* 0x00000004 */
#define MMC_IDSTS_DUI_SHIFT                                (4U)
#define MMC_IDSTS_DUI_MASK                                 (0x1U << MMC_IDSTS_DUI_SHIFT)                                /* 0x00000010 */
#define MMC_IDSTS_CES_SHIFT                                (5U)
#define MMC_IDSTS_CES_MASK                                 (0x1U << MMC_IDSTS_CES_SHIFT)                                /* 0x00000020 */
#define MMC_IDSTS_NIS_SHIFT                                (8U)
#define MMC_IDSTS_NIS_MASK                                 (0x1U << MMC_IDSTS_NIS_SHIFT)                                /* 0x00000100 */
#define MMC_IDSTS_AIS_SHIFT                                (9U)
#define MMC_IDSTS_AIS_MASK                                 (0x1U << MMC_IDSTS_AIS_SHIFT)                                /* 0x00000200 */
#define MMC_IDSTS_EB_SHIFT                                 (10U)
#define MMC_IDSTS_EB_MASK                                  (0x7U << MMC_IDSTS_EB_SHIFT)                                 /* 0x00001C00 */
#define MMC_IDSTS_FSM_SHIFT                                (13U)
#define MMC_IDSTS_FSM_MASK                                 (0xFU << MMC_IDSTS_FSM_SHIFT)                                /* 0x0001E000 */
/* IDINTEN */
#define MMC_IDINTEN_OFFSET                                 (0x90U)
#define MMC_IDINTEN_TI_SHIFT                               (0U)
#define MMC_IDINTEN_TI_MASK                                (0x1U << MMC_IDINTEN_TI_SHIFT)                               /* 0x00000001 */
#define MMC_IDINTEN_RI_SHIFT                               (1U)
#define MMC_IDINTEN_RI_MASK                                (0x1U << MMC_IDINTEN_RI_SHIFT)                               /* 0x00000002 */
#define MMC_IDINTEN_FBE_SHIFT                              (2U)
#define MMC_IDINTEN_FBE_MASK                               (0x1U << MMC_IDINTEN_FBE_SHIFT)                              /* 0x00000004 */
#define MMC_IDINTEN_DU_SHIFT                               (4U)
#define MMC_IDINTEN_DU_MASK                                (0x1U << MMC_IDINTEN_DU_SHIFT)                               /* 0x00000010 */
#define MMC_IDINTEN_CES_SHIFT                              (5U)
#define MMC_IDINTEN_CES_MASK                               (0x1U << MMC_IDINTEN_CES_SHIFT)                              /* 0x00000020 */
#define MMC_IDINTEN_NI_SHIFT                               (8U)
#define MMC_IDINTEN_NI_MASK                                (0x1U << MMC_IDINTEN_NI_SHIFT)                               /* 0x00000100 */
#define MMC_IDINTEN_AI_SHIFT                               (9U)
#define MMC_IDINTEN_AI_MASK                                (0x1U << MMC_IDINTEN_AI_SHIFT)                               /* 0x00000200 */
/* DSCADDR */
#define MMC_DSCADDR_OFFSET                                 (0x94U)
#define MMC_DSCADDR_HDA_SHIFT                              (0U)
#define MMC_DSCADDR_HDA_MASK                               (0xFFFFFFFFU << MMC_DSCADDR_HDA_SHIFT)                       /* 0xFFFFFFFF */
/* BUFADDR */
#define MMC_BUFADDR_OFFSET                                 (0x98U)
#define MMC_BUFADDR_HBA_SHIFT                              (0U)
#define MMC_BUFADDR_HBA_MASK                               (0xFFFFFFFFU << MMC_BUFADDR_HBA_SHIFT)                       /* 0xFFFFFFFF */
/* CARDTHRCTL */
#define MMC_CARDTHRCTL_OFFSET                              (0x100U)
#define MMC_CARDTHRCTL_CARD_RD_THRES_EN_SHIFT              (0U)
#define MMC_CARDTHRCTL_CARD_RD_THRES_EN_MASK               (0x1U << MMC_CARDTHRCTL_CARD_RD_THRES_EN_SHIFT)              /* 0x00000001 */
#define MMC_CARDTHRCTL_BUSY_CLR_INT_EN_SHIFT               (1U)
#define MMC_CARDTHRCTL_BUSY_CLR_INT_EN_MASK                (0x1U << MMC_CARDTHRCTL_BUSY_CLR_INT_EN_SHIFT)               /* 0x00000002 */
#define MMC_CARDTHRCTL_CARD_RD_THRES_SHIFT                 (16U)
#define MMC_CARDTHRCTL_CARD_RD_THRES_MASK                  (0xFFFU << MMC_CARDTHRCTL_CARD_RD_THRES_SHIFT)               /* 0x0FFF0000 */
/* BACKEND_POWER */
#define MMC_BACKEND_POWER_OFFSET                           (0x104U)
#define MMC_BACKEND_POWER_BACK_END_POWER_SHIFT             (0U)
#define MMC_BACKEND_POWER_BACK_END_POWER_MASK              (0x1U << MMC_BACKEND_POWER_BACK_END_POWER_SHIFT)             /* 0x00000001 */
/* EMMCDDR_REG */
#define MMC_EMMCDDR_REG_OFFSET                             (0x10CU)
#define MMC_EMMCDDR_REG_HALF_START_BIT_SHIFT               (0U)
#define MMC_EMMCDDR_REG_HALF_START_BIT_MASK                (0x1U << MMC_EMMCDDR_REG_HALF_START_BIT_SHIFT)               /* 0x00000001 */
/* RDYINT_GEN */
#define MMC_RDYINT_GEN_OFFSET                              (0x120U)
#define MMC_RDYINT_GEN_RDYINT_GEN_MAXVAL_SHIFT             (0U)
#define MMC_RDYINT_GEN_RDYINT_GEN_MAXVAL_MASK              (0xFFU << MMC_RDYINT_GEN_RDYINT_GEN_MAXVAL_SHIFT)            /* 0x000000FF */
#define MMC_RDYINT_GEN_RDYINT_GEN_WORKING_SHIFT            (8U)
#define MMC_RDYINT_GEN_RDYINT_GEN_WORKING_MASK             (0x1U << MMC_RDYINT_GEN_RDYINT_GEN_WORKING_SHIFT)            /* 0x00000100 */
#define MMC_RDYINT_GEN_RDYINT_CNT_STATUS_SHIFT             (16U)
#define MMC_RDYINT_GEN_RDYINT_CNT_STATUS_MASK              (0xFFU << MMC_RDYINT_GEN_RDYINT_CNT_STATUS_SHIFT)            /* 0x00FF0000 */
#define MMC_RDYINT_GEN_RDYINT_CNT_FINISH_SHIFT             (24U)
#define MMC_RDYINT_GEN_RDYINT_CNT_FINISH_MASK              (0x1U << MMC_RDYINT_GEN_RDYINT_CNT_FINISH_SHIFT)             /* 0x01000000 */
/* FIFO_BASE */
#define MMC_FIFO_BASE_OFFSET                               (0x200U)
#define MMC_FIFO_BASE_FIFO_BASE_ADDR_SHIFT                 (0U)
#define MMC_FIFO_BASE_FIFO_BASE_ADDR_MASK                  (0xFFFFFFFFU << MMC_FIFO_BASE_FIFO_BASE_ADDR_SHIFT)          /* 0xFFFFFFFF */
/******************************************FSPI******************************************/
/* CTRL0 */
#define FSPI_CTRL0_OFFSET                                  (0x0U)
#define FSPI_CTRL0_SPIM_SHIFT                              (0U)
#define FSPI_CTRL0_SPIM_MASK                               (0x1U << FSPI_CTRL0_SPIM_SHIFT)                              /* 0x00000001 */
#define FSPI_CTRL0_SHIFTPHASE_SHIFT                        (1U)
#define FSPI_CTRL0_SHIFTPHASE_MASK                         (0x1U << FSPI_CTRL0_SHIFTPHASE_SHIFT)                        /* 0x00000002 */
#define FSPI_CTRL0_IDLE_CYCLE_SHIFT                        (4U)
#define FSPI_CTRL0_IDLE_CYCLE_MASK                         (0xFU << FSPI_CTRL0_IDLE_CYCLE_SHIFT)                        /* 0x000000F0 */
#define FSPI_CTRL0_CMDB_SHIFT                              (8U)
#define FSPI_CTRL0_CMDB_MASK                               (0x3U << FSPI_CTRL0_CMDB_SHIFT)                              /* 0x00000300 */
#define FSPI_CTRL0_ADRB_SHIFT                              (10U)
#define FSPI_CTRL0_ADRB_MASK                               (0x3U << FSPI_CTRL0_ADRB_SHIFT)                              /* 0x00000C00 */
#define FSPI_CTRL0_DATB_SHIFT                              (12U)
#define FSPI_CTRL0_DATB_MASK                               (0x3U << FSPI_CTRL0_DATB_SHIFT)                              /* 0x00003000 */
#define FSPI_CTRL0_WP_EN_SHIFT                             (29U)
#define FSPI_CTRL0_WP_EN_MASK                              (0x1U << FSPI_CTRL0_WP_EN_SHIFT)                             /* 0x20000000 */
/* IMR */
#define FSPI_IMR_OFFSET                                    (0x4U)
#define FSPI_IMR_RXFM_SHIFT                                (0U)
#define FSPI_IMR_RXFM_MASK                                 (0x1U << FSPI_IMR_RXFM_SHIFT)                                /* 0x00000001 */
#define FSPI_IMR_RXUM_SHIFT                                (1U)
#define FSPI_IMR_RXUM_MASK                                 (0x1U << FSPI_IMR_RXUM_SHIFT)                                /* 0x00000002 */
#define FSPI_IMR_TXOM_SHIFT                                (2U)
#define FSPI_IMR_TXOM_MASK                                 (0x1U << FSPI_IMR_TXOM_SHIFT)                                /* 0x00000004 */
#define FSPI_IMR_TXEM_SHIFT                                (3U)
#define FSPI_IMR_TXEM_MASK                                 (0x1U << FSPI_IMR_TXEM_SHIFT)                                /* 0x00000008 */
#define FSPI_IMR_TRANSM_SHIFT                              (4U)
#define FSPI_IMR_TRANSM_MASK                               (0x1U << FSPI_IMR_TRANSM_SHIFT)                              /* 0x00000010 */
#define FSPI_IMR_AHBM_SHIFT                                (5U)
#define FSPI_IMR_AHBM_MASK                                 (0x1U << FSPI_IMR_AHBM_SHIFT)                                /* 0x00000020 */
#define FSPI_IMR_NSPIM_SHIFT                               (6U)
#define FSPI_IMR_NSPIM_MASK                                (0x1U << FSPI_IMR_NSPIM_SHIFT)                               /* 0x00000040 */
#define FSPI_IMR_DMAM_SHIFT                                (7U)
#define FSPI_IMR_DMAM_MASK                                 (0x1U << FSPI_IMR_DMAM_SHIFT)                                /* 0x00000080 */
/* ICLR */
#define FSPI_ICLR_OFFSET                                   (0x8U)
#define FSPI_ICLR_RXFC_SHIFT                               (0U)
#define FSPI_ICLR_RXFC_MASK                                (0x1U << FSPI_ICLR_RXFC_SHIFT)                               /* 0x00000001 */
#define FSPI_ICLR_RXUC_SHIFT                               (1U)
#define FSPI_ICLR_RXUC_MASK                                (0x1U << FSPI_ICLR_RXUC_SHIFT)                               /* 0x00000002 */
#define FSPI_ICLR_TXOC_SHIFT                               (2U)
#define FSPI_ICLR_TXOC_MASK                                (0x1U << FSPI_ICLR_TXOC_SHIFT)                               /* 0x00000004 */
#define FSPI_ICLR_TXEC_SHIFT                               (3U)
#define FSPI_ICLR_TXEC_MASK                                (0x1U << FSPI_ICLR_TXEC_SHIFT)                               /* 0x00000008 */
#define FSPI_ICLR_TRANSC_SHIFT                             (4U)
#define FSPI_ICLR_TRANSC_MASK                              (0x1U << FSPI_ICLR_TRANSC_SHIFT)                             /* 0x00000010 */
#define FSPI_ICLR_AHBC_SHIFT                               (5U)
#define FSPI_ICLR_AHBC_MASK                                (0x1U << FSPI_ICLR_AHBC_SHIFT)                               /* 0x00000020 */
#define FSPI_ICLR_NSPIC_SHIFT                              (6U)
#define FSPI_ICLR_NSPIC_MASK                               (0x1U << FSPI_ICLR_NSPIC_SHIFT)                              /* 0x00000040 */
#define FSPI_ICLR_DMAC_SHIFT                               (7U)
#define FSPI_ICLR_DMAC_MASK                                (0x1U << FSPI_ICLR_DMAC_SHIFT)                               /* 0x00000080 */
/* FTLR */
#define FSPI_FTLR_OFFSET                                   (0xCU)
#define FSPI_FTLR_TXFTLR_SHIFT                             (0U)
#define FSPI_FTLR_TXFTLR_MASK                              (0xFFU << FSPI_FTLR_TXFTLR_SHIFT)                            /* 0x000000FF */
#define FSPI_FTLR_RXFTLR_SHIFT                             (8U)
#define FSPI_FTLR_RXFTLR_MASK                              (0xFFU << FSPI_FTLR_RXFTLR_SHIFT)                            /* 0x0000FF00 */
/* RCVR */
#define FSPI_RCVR_OFFSET                                   (0x10U)
#define FSPI_RCVR_RCVR_SHIFT                               (0U)
#define FSPI_RCVR_RCVR_MASK                                (0x1U << FSPI_RCVR_RCVR_SHIFT)                               /* 0x00000001 */
/* AX0 */
#define FSPI_AX0_OFFSET                                    (0x14U)
#define FSPI_AX0_AX_SHIFT                                  (0U)
#define FSPI_AX0_AX_MASK                                   (0xFFU << FSPI_AX0_AX_SHIFT)                                 /* 0x000000FF */
/* ABIT0 */
#define FSPI_ABIT0_OFFSET                                  (0x18U)
#define FSPI_ABIT0_ABIT_SHIFT                              (0U)
#define FSPI_ABIT0_ABIT_MASK                               (0x1FU << FSPI_ABIT0_ABIT_SHIFT)                             /* 0x0000001F */
/* ISR */
#define FSPI_ISR_OFFSET                                    (0x1CU)
#define FSPI_ISR_RXFS_SHIFT                                (0U)
#define FSPI_ISR_RXFS_MASK                                 (0x1U << FSPI_ISR_RXFS_SHIFT)                                /* 0x00000001 */
#define FSPI_ISR_RXUS_SHIFT                                (1U)
#define FSPI_ISR_RXUS_MASK                                 (0x1U << FSPI_ISR_RXUS_SHIFT)                                /* 0x00000002 */
#define FSPI_ISR_TXOS_SHIFT                                (2U)
#define FSPI_ISR_TXOS_MASK                                 (0x1U << FSPI_ISR_TXOS_SHIFT)                                /* 0x00000004 */
#define FSPI_ISR_TXES_SHIFT                                (3U)
#define FSPI_ISR_TXES_MASK                                 (0x1U << FSPI_ISR_TXES_SHIFT)                                /* 0x00000008 */
#define FSPI_ISR_TRANSS_SHIFT                              (4U)
#define FSPI_ISR_TRANSS_MASK                               (0x1U << FSPI_ISR_TRANSS_SHIFT)                              /* 0x00000010 */
#define FSPI_ISR_AHBS_SHIFT                                (5U)
#define FSPI_ISR_AHBS_MASK                                 (0x1U << FSPI_ISR_AHBS_SHIFT)                                /* 0x00000020 */
#define FSPI_ISR_NSPIS_SHIFT                               (6U)
#define FSPI_ISR_NSPIS_MASK                                (0x1U << FSPI_ISR_NSPIS_SHIFT)                               /* 0x00000040 */
#define FSPI_ISR_DMAS_SHIFT                                (7U)
#define FSPI_ISR_DMAS_MASK                                 (0x1U << FSPI_ISR_DMAS_SHIFT)                                /* 0x00000080 */
/* FSR */
#define FSPI_FSR_OFFSET                                    (0x20U)
#define FSPI_FSR_TXFS_SHIFT                                (0U)
#define FSPI_FSR_TXFS_MASK                                 (0x1U << FSPI_FSR_TXFS_SHIFT)                                /* 0x00000001 */
#define FSPI_FSR_TXES_SHIFT                                (1U)
#define FSPI_FSR_TXES_MASK                                 (0x1U << FSPI_FSR_TXES_SHIFT)                                /* 0x00000002 */
#define FSPI_FSR_RXES_SHIFT                                (2U)
#define FSPI_FSR_RXES_MASK                                 (0x1U << FSPI_FSR_RXES_SHIFT)                                /* 0x00000004 */
#define FSPI_FSR_RXFS_SHIFT                                (3U)
#define FSPI_FSR_RXFS_MASK                                 (0x1U << FSPI_FSR_RXFS_SHIFT)                                /* 0x00000008 */
#define FSPI_FSR_TXWLVL_SHIFT                              (8U)
#define FSPI_FSR_TXWLVL_MASK                               (0x1FU << FSPI_FSR_TXWLVL_SHIFT)                             /* 0x00001F00 */
#define FSPI_FSR_RXWLVL_SHIFT                              (16U)
#define FSPI_FSR_RXWLVL_MASK                               (0x1FU << FSPI_FSR_RXWLVL_SHIFT)                             /* 0x001F0000 */
/* SR */
#define FSPI_SR_OFFSET                                     (0x24U)
#define FSPI_SR                                            (0x0U)
#define FSPI_SR_SR_SHIFT                                   (0U)
#define FSPI_SR_SR_MASK                                    (0x1U << FSPI_SR_SR_SHIFT)                                   /* 0x00000001 */
/* RISR */
#define FSPI_RISR_OFFSET                                   (0x28U)
#define FSPI_RISR                                          (0x0U)
#define FSPI_RISR_RXFS_SHIFT                               (0U)
#define FSPI_RISR_RXFS_MASK                                (0x1U << FSPI_RISR_RXFS_SHIFT)                               /* 0x00000001 */
#define FSPI_RISR_RXUS_SHIFT                               (1U)
#define FSPI_RISR_RXUS_MASK                                (0x1U << FSPI_RISR_RXUS_SHIFT)                               /* 0x00000002 */
#define FSPI_RISR_TXOS_SHIFT                               (2U)
#define FSPI_RISR_TXOS_MASK                                (0x1U << FSPI_RISR_TXOS_SHIFT)                               /* 0x00000004 */
#define FSPI_RISR_TXES_SHIFT                               (3U)
#define FSPI_RISR_TXES_MASK                                (0x1U << FSPI_RISR_TXES_SHIFT)                               /* 0x00000008 */
#define FSPI_RISR_TRANSS_SHIFT                             (4U)
#define FSPI_RISR_TRANSS_MASK                              (0x1U << FSPI_RISR_TRANSS_SHIFT)                             /* 0x00000010 */
#define FSPI_RISR_AHBS_SHIFT                               (5U)
#define FSPI_RISR_AHBS_MASK                                (0x1U << FSPI_RISR_AHBS_SHIFT)                               /* 0x00000020 */
#define FSPI_RISR_NSPIS_SHIFT                              (6U)
#define FSPI_RISR_NSPIS_MASK                               (0x1U << FSPI_RISR_NSPIS_SHIFT)                              /* 0x00000040 */
#define FSPI_RISR_DMAS_SHIFT                               (7U)
#define FSPI_RISR_DMAS_MASK                                (0x1U << FSPI_RISR_DMAS_SHIFT)                               /* 0x00000080 */
/* VER */
#define FSPI_VER_OFFSET                                    (0x2CU)
#define FSPI_VER                                           (0x8U)
#define FSPI_VER_VER_SHIFT                                 (0U)
#define FSPI_VER_VER_MASK                                  (0xFFFFU << FSPI_VER_VER_SHIFT)                              /* 0x0000FFFF */
/* QOP */
#define FSPI_QOP_OFFSET                                    (0x30U)
#define FSPI_QOP_SO123_SHIFT                               (0U)
#define FSPI_QOP_SO123_MASK                                (0x1U << FSPI_QOP_SO123_SHIFT)                               /* 0x00000001 */
#define FSPI_QOP_SO123BP_SHIFT                             (1U)
#define FSPI_QOP_SO123BP_MASK                              (0x1U << FSPI_QOP_SO123BP_SHIFT)                             /* 0x00000002 */
/* EXT_CTRL */
#define FSPI_EXT_CTRL_OFFSET                               (0x34U)
#define FSPI_EXT_CTRL_CS_DESEL_CTRL_SHIFT                  (0U)
#define FSPI_EXT_CTRL_CS_DESEL_CTRL_MASK                   (0xFU << FSPI_EXT_CTRL_CS_DESEL_CTRL_SHIFT)                  /* 0x0000000F */
#define FSPI_EXT_CTRL_SWITCH_IO_DUMM_CNT_SHIFT             (4U)
#define FSPI_EXT_CTRL_SWITCH_IO_DUMM_CNT_MASK              (0xFU << FSPI_EXT_CTRL_SWITCH_IO_DUMM_CNT_SHIFT)             /* 0x000000F0 */
#define FSPI_EXT_CTRL_SWITCH_IO_O2I_CNT_SHIFT              (8U)
#define FSPI_EXT_CTRL_SWITCH_IO_O2I_CNT_MASK               (0xFU << FSPI_EXT_CTRL_SWITCH_IO_O2I_CNT_SHIFT)              /* 0x00000F00 */
#define FSPI_EXT_CTRL_TRANS_INT_MODE_SHIFT                 (13U)
#define FSPI_EXT_CTRL_TRANS_INT_MODE_MASK                  (0x1U << FSPI_EXT_CTRL_TRANS_INT_MODE_SHIFT)                 /* 0x00002000 */
#define FSPI_EXT_CTRL_SR_GEN_MODE_SHIFT                    (14U)
#define FSPI_EXT_CTRL_SR_GEN_MODE_MASK                     (0x1U << FSPI_EXT_CTRL_SR_GEN_MODE_SHIFT)                    /* 0x00004000 */
/* DLL_CTRL0 */
#define FSPI_DLL_CTRL0_OFFSET                              (0x3CU)
#define FSPI_DLL_CTRL0_SMP_DLL_CFG_SHIFT                   (0U)
#define FSPI_DLL_CTRL0_SMP_DLL_CFG_MASK                    (0x1FFU << FSPI_DLL_CTRL0_SMP_DLL_CFG_SHIFT)                 /* 0x000001FF */
#define FSPI_DLL_CTRL0_SCLK_SMP_SEL_SHIFT                  (15U)
#define FSPI_DLL_CTRL0_SCLK_SMP_SEL_MASK                   (0x1U << FSPI_DLL_CTRL0_SCLK_SMP_SEL_SHIFT)                  /* 0x00008000 */
/* EXT_AX */
#define FSPI_EXT_AX_OFFSET                                 (0x44U)
#define FSPI_EXT_AX_AX_CANCEL_PAT_SHIFT                    (0U)
#define FSPI_EXT_AX_AX_CANCEL_PAT_MASK                     (0xFFU << FSPI_EXT_AX_AX_CANCEL_PAT_SHIFT)                   /* 0x000000FF */
#define FSPI_EXT_AX_AX_SETUP_PAT_SHIFT                     (8U)
#define FSPI_EXT_AX_AX_SETUP_PAT_MASK                      (0xFFU << FSPI_EXT_AX_AX_SETUP_PAT_SHIFT)                    /* 0x0000FF00 */
/* SCLK_INATM_CNT */
#define FSPI_SCLK_INATM_CNT_OFFSET                         (0x48U)
#define FSPI_SCLK_INATM_CNT_SCLK_INATM_CNT_SHIFT           (0U)
#define FSPI_SCLK_INATM_CNT_SCLK_INATM_CNT_MASK            (0xFFFFFFFFU << FSPI_SCLK_INATM_CNT_SCLK_INATM_CNT_SHIFT)    /* 0xFFFFFFFF */
/* XMMC_WCMD0 */
#define FSPI_XMMC_WCMD0_OFFSET                             (0x50U)
#define FSPI_XMMC_WCMD0_CMD_SHIFT                          (0U)
#define FSPI_XMMC_WCMD0_CMD_MASK                           (0xFFU << FSPI_XMMC_WCMD0_CMD_SHIFT)                         /* 0x000000FF */
#define FSPI_XMMC_WCMD0_DUMM_SHIFT                         (8U)
#define FSPI_XMMC_WCMD0_DUMM_MASK                          (0xFU << FSPI_XMMC_WCMD0_DUMM_SHIFT)                         /* 0x00000F00 */
#define FSPI_XMMC_WCMD0_CONT_SHIFT                         (13U)
#define FSPI_XMMC_WCMD0_CONT_MASK                          (0x1U << FSPI_XMMC_WCMD0_CONT_SHIFT)                         /* 0x00002000 */
#define FSPI_XMMC_WCMD0_ADDRB_SHIFT                        (14U)
#define FSPI_XMMC_WCMD0_ADDRB_MASK                         (0x3U << FSPI_XMMC_WCMD0_ADDRB_SHIFT)                        /* 0x0000C000 */
/* XMMC_RCMD0 */
#define FSPI_XMMC_RCMD0_OFFSET                             (0x54U)
#define FSPI_XMMC_RCMD0_CMD_SHIFT                          (0U)
#define FSPI_XMMC_RCMD0_CMD_MASK                           (0xFFU << FSPI_XMMC_RCMD0_CMD_SHIFT)                         /* 0x000000FF */
#define FSPI_XMMC_RCMD0_DUMM_SHIFT                         (8U)
#define FSPI_XMMC_RCMD0_DUMM_MASK                          (0xFU << FSPI_XMMC_RCMD0_DUMM_SHIFT)                         /* 0x00000F00 */
#define FSPI_XMMC_RCMD0_CONT_SHIFT                         (13U)
#define FSPI_XMMC_RCMD0_CONT_MASK                          (0x1U << FSPI_XMMC_RCMD0_CONT_SHIFT)                         /* 0x00002000 */
#define FSPI_XMMC_RCMD0_ADDRB_SHIFT                        (14U)
#define FSPI_XMMC_RCMD0_ADDRB_MASK                         (0x3U << FSPI_XMMC_RCMD0_ADDRB_SHIFT)                        /* 0x0000C000 */
/* XMMC_CTRL */
#define FSPI_XMMC_CTRL_OFFSET                              (0x58U)
#define FSPI_XMMC_CTRL_DEV_HWEN_SHIFT                      (5U)
#define FSPI_XMMC_CTRL_DEV_HWEN_MASK                       (0x1U << FSPI_XMMC_CTRL_DEV_HWEN_SHIFT)                      /* 0x00000020 */
#define FSPI_XMMC_CTRL_PFT_EN_SHIFT                        (6U)
#define FSPI_XMMC_CTRL_PFT_EN_MASK                         (0x1U << FSPI_XMMC_CTRL_PFT_EN_SHIFT)                        /* 0x00000040 */
/* MODE */
#define FSPI_MODE_OFFSET                                   (0x5CU)
#define FSPI_MODE_XMMC_MODE_EN_SHIFT                       (0U)
#define FSPI_MODE_XMMC_MODE_EN_MASK                        (0x1U << FSPI_MODE_XMMC_MODE_EN_SHIFT)                       /* 0x00000001 */
/* DEVRGN */
#define FSPI_DEVRGN_OFFSET                                 (0x60U)
#define FSPI_DEVRGN_RSIZE_SHIFT                            (0U)
#define FSPI_DEVRGN_RSIZE_MASK                             (0x1FU << FSPI_DEVRGN_RSIZE_SHIFT)                           /* 0x0000001F */
#define FSPI_DEVRGN_DEC_CTRL_SHIFT                         (8U)
#define FSPI_DEVRGN_DEC_CTRL_MASK                          (0x3U << FSPI_DEVRGN_DEC_CTRL_SHIFT)                         /* 0x00000300 */
/* DEVSIZE0 */
#define FSPI_DEVSIZE0_OFFSET                               (0x64U)
#define FSPI_DEVSIZE0_DSIZE_SHIFT                          (0U)
#define FSPI_DEVSIZE0_DSIZE_MASK                           (0x1FU << FSPI_DEVSIZE0_DSIZE_SHIFT)                         /* 0x0000001F */
/* TME0 */
#define FSPI_TME0_OFFSET                                   (0x68U)
#define FSPI_TME0_SCLK_INATM_EN_SHIFT                      (1U)
#define FSPI_TME0_SCLK_INATM_EN_MASK                       (0x1U << FSPI_TME0_SCLK_INATM_EN_SHIFT)                      /* 0x00000002 */
/* XMMC_RX_WTMRK */
#define FSPI_XMMC_RX_WTMRK_OFFSET                          (0x70U)
#define FSPI_XMMC_RX_WTMRK_RX_FULL_WTMRK_SHIFT             (0U)
#define FSPI_XMMC_RX_WTMRK_RX_FULL_WTMRK_MASK              (0xFFU << FSPI_XMMC_RX_WTMRK_RX_FULL_WTMRK_SHIFT)            /* 0x000000FF */
/* DMATR */
#define FSPI_DMATR_OFFSET                                  (0x80U)
#define FSPI_DMATR_DMATR_SHIFT                             (0U)
#define FSPI_DMATR_DMATR_MASK                              (0x1U << FSPI_DMATR_DMATR_SHIFT)                             /* 0x00000001 */
/* DMAADDR */
#define FSPI_DMAADDR_OFFSET                                (0x84U)
#define FSPI_DMAADDR_DMAADDR_SHIFT                         (0U)
#define FSPI_DMAADDR_DMAADDR_MASK                          (0xFFFFFFFFU << FSPI_DMAADDR_DMAADDR_SHIFT)                  /* 0xFFFFFFFF */
/* LEN_CTRL */
#define FSPI_LEN_CTRL_OFFSET                               (0x88U)
#define FSPI_LEN_CTRL_TRB_SEL_SHIFT                        (0U)
#define FSPI_LEN_CTRL_TRB_SEL_MASK                         (0x1U << FSPI_LEN_CTRL_TRB_SEL_SHIFT)                        /* 0x00000001 */
/* LEN_EXT */
#define FSPI_LEN_EXT_OFFSET                                (0x8CU)
#define FSPI_LEN_EXT_TRB_EXT_SHIFT                         (0U)
#define FSPI_LEN_EXT_TRB_EXT_MASK                          (0xFFFFFFFFU << FSPI_LEN_EXT_TRB_EXT_SHIFT)                  /* 0xFFFFFFFF */
/* XMMCSR */
#define FSPI_XMMCSR_OFFSET                                 (0x94U)
#define FSPI_XMMCSR_SLOPOVER0_SHIFT                        (0U)
#define FSPI_XMMCSR_SLOPOVER0_MASK                         (0x1U << FSPI_XMMCSR_SLOPOVER0_SHIFT)                        /* 0x00000001 */
#define FSPI_XMMCSR_SLOPOVER1_SHIFT                        (1U)
#define FSPI_XMMCSR_SLOPOVER1_MASK                         (0x1U << FSPI_XMMCSR_SLOPOVER1_SHIFT)                        /* 0x00000002 */
/* CMD */
#define FSPI_CMD_OFFSET                                    (0x100U)
#define FSPI_CMD_CMD_SHIFT                                 (0U)
#define FSPI_CMD_CMD_MASK                                  (0xFFU << FSPI_CMD_CMD_SHIFT)                                /* 0x000000FF */
#define FSPI_CMD_DUMM_SHIFT                                (8U)
#define FSPI_CMD_DUMM_MASK                                 (0xFU << FSPI_CMD_DUMM_SHIFT)                                /* 0x00000F00 */
#define FSPI_CMD_WR_SHIFT                                  (12U)
#define FSPI_CMD_WR_MASK                                   (0x1U << FSPI_CMD_WR_SHIFT)                                  /* 0x00001000 */
#define FSPI_CMD_CONT_SHIFT                                (13U)
#define FSPI_CMD_CONT_MASK                                 (0x1U << FSPI_CMD_CONT_SHIFT)                                /* 0x00002000 */
#define FSPI_CMD_ADDRB_SHIFT                               (14U)
#define FSPI_CMD_ADDRB_MASK                                (0x3U << FSPI_CMD_ADDRB_SHIFT)                               /* 0x0000C000 */
#define FSPI_CMD_TRB_SHIFT                                 (16U)
#define FSPI_CMD_TRB_MASK                                  (0x3FFFU << FSPI_CMD_TRB_SHIFT)                              /* 0x3FFF0000 */
#define FSPI_CMD_CS_SHIFT                                  (30U)
#define FSPI_CMD_CS_MASK                                   (0x3U << FSPI_CMD_CS_SHIFT)                                  /* 0xC0000000 */
/* ADDR */
#define FSPI_ADDR_OFFSET                                   (0x104U)
#define FSPI_ADDR_ADDR_SHIFT                               (0U)
#define FSPI_ADDR_ADDR_MASK                                (0xFFFFFFFFU << FSPI_ADDR_ADDR_SHIFT)                        /* 0xFFFFFFFF */
/* DATA */
#define FSPI_DATA_OFFSET                                   (0x108U)
#define FSPI_DATA_DATA_SHIFT                               (0U)
#define FSPI_DATA_DATA_MASK                                (0xFFFFFFFFU << FSPI_DATA_DATA_SHIFT)                        /* 0xFFFFFFFF */
/* CTRL1 */
#define FSPI_CTRL1_OFFSET                                  (0x200U)
#define FSPI_CTRL1_SPIM_SHIFT                              (0U)
#define FSPI_CTRL1_SPIM_MASK                               (0x1U << FSPI_CTRL1_SPIM_SHIFT)                              /* 0x00000001 */
#define FSPI_CTRL1_SHIFTPHASE_SHIFT                        (1U)
#define FSPI_CTRL1_SHIFTPHASE_MASK                         (0x1U << FSPI_CTRL1_SHIFTPHASE_SHIFT)                        /* 0x00000002 */
#define FSPI_CTRL1_IDLE_CYCLE_SHIFT                        (4U)
#define FSPI_CTRL1_IDLE_CYCLE_MASK                         (0xFU << FSPI_CTRL1_IDLE_CYCLE_SHIFT)                        /* 0x000000F0 */
#define FSPI_CTRL1_CMDB_SHIFT                              (8U)
#define FSPI_CTRL1_CMDB_MASK                               (0x3U << FSPI_CTRL1_CMDB_SHIFT)                              /* 0x00000300 */
#define FSPI_CTRL1_ADRB_SHIFT                              (10U)
#define FSPI_CTRL1_ADRB_MASK                               (0x3U << FSPI_CTRL1_ADRB_SHIFT)                              /* 0x00000C00 */
#define FSPI_CTRL1_DATB_SHIFT                              (12U)
#define FSPI_CTRL1_DATB_MASK                               (0x3U << FSPI_CTRL1_DATB_SHIFT)                              /* 0x00003000 */
#define FSPI_CTRL1_WP_EN_SHIFT                             (29U)
#define FSPI_CTRL1_WP_EN_MASK                              (0x1U << FSPI_CTRL1_WP_EN_SHIFT)                             /* 0x20000000 */
/* AX1 */
#define FSPI_AX1_OFFSET                                    (0x214U)
#define FSPI_AX1_AX_SHIFT                                  (0U)
#define FSPI_AX1_AX_MASK                                   (0xFFU << FSPI_AX1_AX_SHIFT)                                 /* 0x000000FF */
/* ABIT1 */
#define FSPI_ABIT1_OFFSET                                  (0x218U)
#define FSPI_ABIT1_ABIT_SHIFT                              (0U)
#define FSPI_ABIT1_ABIT_MASK                               (0x1FU << FSPI_ABIT1_ABIT_SHIFT)                             /* 0x0000001F */
/* DBG_IO_CTRL */
#define FSPI_DBG_IO_CTRL_OFFSET                            (0x22CU)
#define FSPI_DBG_IO_CTRL_DBG_OUT0_MUX_SHIFT                (0U)
#define FSPI_DBG_IO_CTRL_DBG_OUT0_MUX_MASK                 (0x3U << FSPI_DBG_IO_CTRL_DBG_OUT0_MUX_SHIFT)                /* 0x00000003 */
#define FSPI_DBG_IO_CTRL_DBG_OUT1_MUX_SHIFT                (2U)
#define FSPI_DBG_IO_CTRL_DBG_OUT1_MUX_MASK                 (0x3U << FSPI_DBG_IO_CTRL_DBG_OUT1_MUX_SHIFT)                /* 0x0000000C */
#define FSPI_DBG_IO_CTRL_DLL_DBG_EN_SHIFT                  (16U)
#define FSPI_DBG_IO_CTRL_DLL_DBG_EN_MASK                   (0x1U << FSPI_DBG_IO_CTRL_DLL_DBG_EN_SHIFT)                  /* 0x00010000 */
/* DLL_CTRL1 */
#define FSPI_DLL_CTRL1_OFFSET                              (0x23CU)
#define FSPI_DLL_CTRL1_SMP_DLL_CFG_SHIFT                   (0U)
#define FSPI_DLL_CTRL1_SMP_DLL_CFG_MASK                    (0x1FFU << FSPI_DLL_CTRL1_SMP_DLL_CFG_SHIFT)                 /* 0x000001FF */
#define FSPI_DLL_CTRL1_SCLK_SMP_SEL_SHIFT                  (15U)
#define FSPI_DLL_CTRL1_SCLK_SMP_SEL_MASK                   (0x1U << FSPI_DLL_CTRL1_SCLK_SMP_SEL_SHIFT)                  /* 0x00008000 */
/* XMMC_WCMD1 */
#define FSPI_XMMC_WCMD1_OFFSET                             (0x250U)
#define FSPI_XMMC_WCMD1_CMD_SHIFT                          (0U)
#define FSPI_XMMC_WCMD1_CMD_MASK                           (0xFFU << FSPI_XMMC_WCMD1_CMD_SHIFT)                         /* 0x000000FF */
#define FSPI_XMMC_WCMD1_DUMM_SHIFT                         (8U)
#define FSPI_XMMC_WCMD1_DUMM_MASK                          (0xFU << FSPI_XMMC_WCMD1_DUMM_SHIFT)                         /* 0x00000F00 */
#define FSPI_XMMC_WCMD1_CONT_SHIFT                         (13U)
#define FSPI_XMMC_WCMD1_CONT_MASK                          (0x1U << FSPI_XMMC_WCMD1_CONT_SHIFT)                         /* 0x00002000 */
#define FSPI_XMMC_WCMD1_ADDRB_SHIFT                        (14U)
#define FSPI_XMMC_WCMD1_ADDRB_MASK                         (0x3U << FSPI_XMMC_WCMD1_ADDRB_SHIFT)                        /* 0x0000C000 */
/* XMMC_RCMD1 */
#define FSPI_XMMC_RCMD1_OFFSET                             (0x254U)
#define FSPI_XMMC_RCMD1_CMD_SHIFT                          (0U)
#define FSPI_XMMC_RCMD1_CMD_MASK                           (0xFFU << FSPI_XMMC_RCMD1_CMD_SHIFT)                         /* 0x000000FF */
#define FSPI_XMMC_RCMD1_DUMM_SHIFT                         (8U)
#define FSPI_XMMC_RCMD1_DUMM_MASK                          (0xFU << FSPI_XMMC_RCMD1_DUMM_SHIFT)                         /* 0x00000F00 */
#define FSPI_XMMC_RCMD1_CONT_SHIFT                         (13U)
#define FSPI_XMMC_RCMD1_CONT_MASK                          (0x1U << FSPI_XMMC_RCMD1_CONT_SHIFT)                         /* 0x00002000 */
#define FSPI_XMMC_RCMD1_ADDRB_SHIFT                        (14U)
#define FSPI_XMMC_RCMD1_ADDRB_MASK                         (0x3U << FSPI_XMMC_RCMD1_ADDRB_SHIFT)                        /* 0x0000C000 */
/* DEVSIZE1 */
#define FSPI_DEVSIZE1_OFFSET                               (0x264U)
#define FSPI_DEVSIZE1_DSIZE_SHIFT                          (0U)
#define FSPI_DEVSIZE1_DSIZE_MASK                           (0x1FU << FSPI_DEVSIZE1_DSIZE_SHIFT)                         /* 0x0000001F */
/* TME1 */
#define FSPI_TME1_OFFSET                                   (0x268U)
#define FSPI_TME1_SCLK_INATM_EN_SHIFT                      (1U)
#define FSPI_TME1_SCLK_INATM_EN_MASK                       (0x1U << FSPI_TME1_SCLK_INATM_EN_SHIFT)                      /* 0x00000002 */
/**************************************ACDCDIG_DSM***************************************/
/* VUCTL */
#define ACDCDIG_DSM_VUCTL_OFFSET                           (0x0U)
#define ACDCDIG_DSM_VUCTL_DACZDT_SHIFT                     (0U)
#define ACDCDIG_DSM_VUCTL_DACZDT_MASK                      (0x1U << ACDCDIG_DSM_VUCTL_DACZDT_SHIFT)                     /* 0x00000001 */
#define ACDCDIG_DSM_VUCTL_DACFADE_SHIFT                    (1U)
#define ACDCDIG_DSM_VUCTL_DACFADE_MASK                     (0x1U << ACDCDIG_DSM_VUCTL_DACFADE_SHIFT)                    /* 0x00000002 */
#define ACDCDIG_DSM_VUCTL_DAC_BYPS_SHIFT                   (2U)
#define ACDCDIG_DSM_VUCTL_DAC_BYPS_MASK                    (0x1U << ACDCDIG_DSM_VUCTL_DAC_BYPS_SHIFT)                   /* 0x00000004 */
/* VUCTIME */
#define ACDCDIG_DSM_VUCTIME_OFFSET                         (0x4U)
#define ACDCDIG_DSM_VUCTIME_DACVUCT_SHIFT                  (0U)
#define ACDCDIG_DSM_VUCTIME_DACVUCT_MASK                   (0xFFU << ACDCDIG_DSM_VUCTIME_DACVUCT_SHIFT)                 /* 0x000000FF */
/* DIGEN */
#define ACDCDIG_DSM_DIGEN_OFFSET                           (0x8U)
#define ACDCDIG_DSM_DIGEN_DACEN_L0R1_SHIFT                 (0U)
#define ACDCDIG_DSM_DIGEN_DACEN_L0R1_MASK                  (0x1U << ACDCDIG_DSM_DIGEN_DACEN_L0R1_SHIFT)                 /* 0x00000001 */
#define ACDCDIG_DSM_DIGEN_DACGLBEN_SHIFT                   (4U)
#define ACDCDIG_DSM_DIGEN_DACGLBEN_MASK                    (0x1U << ACDCDIG_DSM_DIGEN_DACGLBEN_SHIFT)                   /* 0x00000010 */
/* CLKCTRL */
#define ACDCDIG_DSM_CLKCTRL_OFFSET                         (0xCU)
#define ACDCDIG_DSM_CLKCTRL_DAC_MOD_ATTENU_EN_SHIFT        (0U)
#define ACDCDIG_DSM_CLKCTRL_DAC_MOD_ATTENU_EN_MASK         (0x1U << ACDCDIG_DSM_CLKCTRL_DAC_MOD_ATTENU_EN_SHIFT)        /* 0x00000001 */
#define ACDCDIG_DSM_CLKCTRL_DAC_SYNC_STATUS_SHIFT          (1U)
#define ACDCDIG_DSM_CLKCTRL_DAC_SYNC_STATUS_MASK           (0x1U << ACDCDIG_DSM_CLKCTRL_DAC_SYNC_STATUS_SHIFT)          /* 0x00000002 */
#define ACDCDIG_DSM_CLKCTRL_DAC_SYNC_ENA_SHIFT             (2U)
#define ACDCDIG_DSM_CLKCTRL_DAC_SYNC_ENA_MASK              (0x1U << ACDCDIG_DSM_CLKCTRL_DAC_SYNC_ENA_SHIFT)             /* 0x00000004 */
#define ACDCDIG_DSM_CLKCTRL_CKE_BCLKRX_SHIFT               (3U)
#define ACDCDIG_DSM_CLKCTRL_CKE_BCLKRX_MASK                (0x1U << ACDCDIG_DSM_CLKCTRL_CKE_BCLKRX_SHIFT)               /* 0x00000008 */
#define ACDCDIG_DSM_CLKCTRL_I2SRX_CKE_SHIFT                (4U)
#define ACDCDIG_DSM_CLKCTRL_I2SRX_CKE_MASK                 (0x1U << ACDCDIG_DSM_CLKCTRL_I2SRX_CKE_SHIFT)                /* 0x00000010 */
#define ACDCDIG_DSM_CLKCTRL_DAC_CKE_SHIFT                  (5U)
#define ACDCDIG_DSM_CLKCTRL_DAC_CKE_MASK                   (0x1U << ACDCDIG_DSM_CLKCTRL_DAC_CKE_SHIFT)                  /* 0x00000020 */
/* INTMOD_DIV */
#define ACDCDIG_DSM_INTMOD_DIV_OFFSET                      (0x14U)
#define ACDCDIG_DSM_INTMOD_DIV_INT_DIV_CON_SHIFT           (0U)
#define ACDCDIG_DSM_INTMOD_DIV_INT_DIV_CON_MASK            (0xFFU << ACDCDIG_DSM_INTMOD_DIV_INT_DIV_CON_SHIFT)          /* 0x000000FF */
/* INTSCLK_DIV */
#define ACDCDIG_DSM_INTSCLK_DIV_OFFSET                     (0x20U)
#define ACDCDIG_DSM_INTSCLK_DIV_SCKRXDIV_SHIFT             (0U)
#define ACDCDIG_DSM_INTSCLK_DIV_SCKRXDIV_MASK              (0xFFU << ACDCDIG_DSM_INTSCLK_DIV_SCKRXDIV_SHIFT)            /* 0x000000FF */
/* DIV */
#define ACDCDIG_DSM_DIV_OFFSET                             (0x24U)
#define ACDCDIG_DSM_DIV_AUDIO_DSM_DIV_SHIFT                (0U)
#define ACDCDIG_DSM_DIV_AUDIO_DSM_DIV_MASK                 (0xFFU << ACDCDIG_DSM_DIV_AUDIO_DSM_DIV_SHIFT)               /* 0x000000FF */
/* CTRL */
#define ACDCDIG_DSM_CTRL_OFFSET                            (0x28U)
#define ACDCDIG_DSM_CTRL_DITH_SEL_SHIFT                    (0U)
#define ACDCDIG_DSM_CTRL_DITH_SEL_MASK                     (0x7U << ACDCDIG_DSM_CTRL_DITH_SEL_SHIFT)                    /* 0x00000007 */
#define ACDCDIG_DSM_CTRL_DSM_EN_SHIFT                      (3U)
#define ACDCDIG_DSM_CTRL_DSM_EN_MASK                       (0x1U << ACDCDIG_DSM_CTRL_DSM_EN_SHIFT)                      /* 0x00000008 */
#define ACDCDIG_DSM_CTRL_DSM_MODE_SHIFT                    (4U)
#define ACDCDIG_DSM_CTRL_DSM_MODE_MASK                     (0x3U << ACDCDIG_DSM_CTRL_DSM_MODE_SHIFT)                    /* 0x00000030 */
#define ACDCDIG_DSM_CTRL_DSM_MODE_CKE_SHIFT                (6U)
#define ACDCDIG_DSM_CTRL_DSM_MODE_CKE_MASK                 (0x1U << ACDCDIG_DSM_CTRL_DSM_MODE_CKE_SHIFT)                /* 0x00000040 */
/* CFG1 */
#define ACDCDIG_DSM_CFG1_OFFSET                            (0x44U)
#define ACDCDIG_DSM_CFG1_DACSRT_SHIFT                      (2U)
#define ACDCDIG_DSM_CFG1_DACSRT_MASK                       (0x7U << ACDCDIG_DSM_CFG1_DACSRT_SHIFT)                      /* 0x0000001C */
/* MUTE */
#define ACDCDIG_DSM_MUTE_OFFSET                            (0x48U)
#define ACDCDIG_DSM_MUTE_DACMT_SHIFT                       (0U)
#define ACDCDIG_DSM_MUTE_DACMT_MASK                        (0x1U << ACDCDIG_DSM_MUTE_DACMT_SHIFT)                       /* 0x00000001 */
#define ACDCDIG_DSM_MUTE_DACUNMT_SHIFT                     (1U)
#define ACDCDIG_DSM_MUTE_DACUNMT_MASK                      (0x1U << ACDCDIG_DSM_MUTE_DACUNMT_SHIFT)                     /* 0x00000002 */
/* MUTEST */
#define ACDCDIG_DSM_MUTEST_OFFSET                          (0x4CU)
#define ACDCDIG_DSM_MUTEST                                 (0x0U)
#define ACDCDIG_DSM_MUTEST_MUTEST_L0R1_SHIFT               (0U)
#define ACDCDIG_DSM_MUTEST_MUTEST_L0R1_MASK                (0x1U << ACDCDIG_DSM_MUTEST_MUTEST_L0R1_SHIFT)               /* 0x00000001 */
#define ACDCDIG_DSM_MUTEST_UNMUTEST_L0R1_SHIFT             (4U)
#define ACDCDIG_DSM_MUTEST_UNMUTEST_L0R1_MASK              (0x1U << ACDCDIG_DSM_MUTEST_UNMUTEST_L0R1_SHIFT)             /* 0x00000010 */
/* VOLL0 */
#define ACDCDIG_DSM_VOLL0_OFFSET                           (0x50U)
#define ACDCDIG_DSM_VOLL0_DACLV0_SHIFT                     (0U)
#define ACDCDIG_DSM_VOLL0_DACLV0_MASK                      (0xFFU << ACDCDIG_DSM_VOLL0_DACLV0_SHIFT)                    /* 0x000000FF */
/* VOLL1 */
#define ACDCDIG_DSM_VOLL1_OFFSET                           (0x54U)
#define ACDCDIG_DSM_VOLL1_DACLV1_SHIFT                     (0U)
#define ACDCDIG_DSM_VOLL1_DACLV1_MASK                      (0xFFU << ACDCDIG_DSM_VOLL1_DACLV1_SHIFT)                    /* 0x000000FF */
/* VOLL2 */
#define ACDCDIG_DSM_VOLL2_OFFSET                           (0x58U)
#define ACDCDIG_DSM_VOLL2_DACLV2_SHIFT                     (0U)
#define ACDCDIG_DSM_VOLL2_DACLV2_MASK                      (0x1U << ACDCDIG_DSM_VOLL2_DACLV2_SHIFT)                     /* 0x00000001 */
/* VOLL3 */
#define ACDCDIG_DSM_VOLL3_OFFSET                           (0x5CU)
#define ACDCDIG_DSM_VOLL3_DACLV3_SHIFT                     (0U)
#define ACDCDIG_DSM_VOLL3_DACLV3_MASK                      (0x1U << ACDCDIG_DSM_VOLL3_DACLV3_SHIFT)                     /* 0x00000001 */
/* VOLR0 */
#define ACDCDIG_DSM_VOLR0_OFFSET                           (0x60U)
#define ACDCDIG_DSM_VOLR0_DACRV0_SHIFT                     (0U)
#define ACDCDIG_DSM_VOLR0_DACRV0_MASK                      (0xFFU << ACDCDIG_DSM_VOLR0_DACRV0_SHIFT)                    /* 0x000000FF */
/* VOLR1 */
#define ACDCDIG_DSM_VOLR1_OFFSET                           (0x64U)
#define ACDCDIG_DSM_VOLR1_DACRV1_SHIFT                     (0U)
#define ACDCDIG_DSM_VOLR1_DACRV1_MASK                      (0x1U << ACDCDIG_DSM_VOLR1_DACRV1_SHIFT)                     /* 0x00000001 */
/* VOLR2 */
#define ACDCDIG_DSM_VOLR2_OFFSET                           (0x68U)
#define ACDCDIG_DSM_VOLR2_DACRV2_SHIFT                     (0U)
#define ACDCDIG_DSM_VOLR2_DACRV2_MASK                      (0x1U << ACDCDIG_DSM_VOLR2_DACRV2_SHIFT)                     /* 0x00000001 */
/* VOLR3 */
#define ACDCDIG_DSM_VOLR3_OFFSET                           (0x6CU)
#define ACDCDIG_DSM_VOLR3_DACRV3_SHIFT                     (0U)
#define ACDCDIG_DSM_VOLR3_DACRV3_MASK                      (0x1U << ACDCDIG_DSM_VOLR3_DACRV3_SHIFT)                     /* 0x00000001 */
/* VOGP */
#define ACDCDIG_DSM_VOGP_OFFSET                            (0x70U)
#define ACDCDIG_DSM_VOGP_VOLGPL0_SHIFT                     (0U)
#define ACDCDIG_DSM_VOGP_VOLGPL0_MASK                      (0x1U << ACDCDIG_DSM_VOGP_VOLGPL0_SHIFT)                     /* 0x00000001 */
#define ACDCDIG_DSM_VOGP_VOLGPR1_SHIFT                     (1U)
#define ACDCDIG_DSM_VOGP_VOLGPR1_MASK                      (0x1U << ACDCDIG_DSM_VOGP_VOLGPR1_SHIFT)                     /* 0x00000002 */
/* RVOLL0 */
#define ACDCDIG_DSM_RVOLL0_OFFSET                          (0x74U)
#define ACDCDIG_DSM_RVOLL0                                 (0xFFU)
#define ACDCDIG_DSM_RVOLL0_RVOLL0_SHIFT                    (0U)
#define ACDCDIG_DSM_RVOLL0_RVOLL0_MASK                     (0xFFU << ACDCDIG_DSM_RVOLL0_RVOLL0_SHIFT)                   /* 0x000000FF */
/* RVOLL1 */
#define ACDCDIG_DSM_RVOLL1_OFFSET                          (0x78U)
#define ACDCDIG_DSM_RVOLL1_RVOLL1_SHIFT                    (0U)
#define ACDCDIG_DSM_RVOLL1_RVOLL1_MASK                     (0x1U << ACDCDIG_DSM_RVOLL1_RVOLL1_SHIFT)                    /* 0x00000001 */
/* RVOLL2 */
#define ACDCDIG_DSM_RVOLL2_OFFSET                          (0x7CU)
#define ACDCDIG_DSM_RVOLL2_RVOLL2_SHIFT                    (0U)
#define ACDCDIG_DSM_RVOLL2_RVOLL2_MASK                     (0x1U << ACDCDIG_DSM_RVOLL2_RVOLL2_SHIFT)                    /* 0x00000001 */
/* RVOLL3 */
#define ACDCDIG_DSM_RVOLL3_OFFSET                          (0x80U)
#define ACDCDIG_DSM_RVOLL3_RVOLL3_SHIFT                    (0U)
#define ACDCDIG_DSM_RVOLL3_RVOLL3_MASK                     (0x1U << ACDCDIG_DSM_RVOLL3_RVOLL3_SHIFT)                    /* 0x00000001 */
/* RVOLR0 */
#define ACDCDIG_DSM_RVOLR0_OFFSET                          (0x84U)
#define ACDCDIG_DSM_RVOLR0                                 (0xFFU)
#define ACDCDIG_DSM_RVOLR0_RVOLR0_SHIFT                    (0U)
#define ACDCDIG_DSM_RVOLR0_RVOLR0_MASK                     (0xFFU << ACDCDIG_DSM_RVOLR0_RVOLR0_SHIFT)                   /* 0x000000FF */
/* RVOLR1 */
#define ACDCDIG_DSM_RVOLR1_OFFSET                          (0x88U)
#define ACDCDIG_DSM_RVOLR1_RVOLR1_SHIFT                    (0U)
#define ACDCDIG_DSM_RVOLR1_RVOLR1_MASK                     (0x1U << ACDCDIG_DSM_RVOLR1_RVOLR1_SHIFT)                    /* 0x00000001 */
/* RVOLR2 */
#define ACDCDIG_DSM_RVOLR2_OFFSET                          (0x8CU)
#define ACDCDIG_DSM_RVOLR2_RVOLR2_SHIFT                    (0U)
#define ACDCDIG_DSM_RVOLR2_RVOLR2_MASK                     (0x1U << ACDCDIG_DSM_RVOLR2_RVOLR2_SHIFT)                    /* 0x00000001 */
/* RVOLR3 */
#define ACDCDIG_DSM_RVOLR3_OFFSET                          (0x90U)
#define ACDCDIG_DSM_RVOLR3_RVOLR3_SHIFT                    (0U)
#define ACDCDIG_DSM_RVOLR3_RVOLR3_MASK                     (0x1U << ACDCDIG_DSM_RVOLR3_RVOLR3_SHIFT)                    /* 0x00000001 */
/* LMT0 */
#define ACDCDIG_DSM_LMT0_OFFSET                            (0x94U)
#define ACDCDIG_DSM_LMT0_LIMDCT_SHIFT                      (0U)
#define ACDCDIG_DSM_LMT0_LIMDCT_MASK                       (0x1U << ACDCDIG_DSM_LMT0_LIMDCT_SHIFT)                      /* 0x00000001 */
#define ACDCDIG_DSM_LMT0_LIMEN_SHIFT                       (1U)
#define ACDCDIG_DSM_LMT0_LIMEN_MASK                        (0x1U << ACDCDIG_DSM_LMT0_LIMEN_SHIFT)                       /* 0x00000002 */
/* LMT1 */
#define ACDCDIG_DSM_LMT1_OFFSET                            (0x98U)
#define ACDCDIG_DSM_LMT1_RLS_RATE_SHIFT                    (0U)
#define ACDCDIG_DSM_LMT1_RLS_RATE_MASK                     (0xFU << ACDCDIG_DSM_LMT1_RLS_RATE_SHIFT)                    /* 0x0000000F */
#define ACDCDIG_DSM_LMT1_ATK_RATE_SHIFT                    (4U)
#define ACDCDIG_DSM_LMT1_ATK_RATE_MASK                     (0xFU << ACDCDIG_DSM_LMT1_ATK_RATE_SHIFT)                    /* 0x000000F0 */
/* LMT2 */
#define ACDCDIG_DSM_LMT2_OFFSET                            (0x9CU)
#define ACDCDIG_DSM_LMT2_MIN_LILMT_SHIFT                   (0U)
#define ACDCDIG_DSM_LMT2_MIN_LILMT_MASK                    (0x7U << ACDCDIG_DSM_LMT2_MIN_LILMT_SHIFT)                   /* 0x00000007 */
#define ACDCDIG_DSM_LMT2_MAX_LILMT_SHIFT                   (4U)
#define ACDCDIG_DSM_LMT2_MAX_LILMT_MASK                    (0x7U << ACDCDIG_DSM_LMT2_MAX_LILMT_SHIFT)                   /* 0x00000070 */
/* MIXCTRLL */
#define ACDCDIG_DSM_MIXCTRLL_OFFSET                        (0xA0U)
#define ACDCDIG_DSM_MIXCTRLL_MIXMODE_L0_SHIFT              (0U)
#define ACDCDIG_DSM_MIXCTRLL_MIXMODE_L0_MASK               (0x3U << ACDCDIG_DSM_MIXCTRLL_MIXMODE_L0_SHIFT)              /* 0x00000003 */
/* MIXCTRLR */
#define ACDCDIG_DSM_MIXCTRLR_OFFSET                        (0xA4U)
#define ACDCDIG_DSM_MIXCTRLR_MIXMODE_R0_SHIFT              (0U)
#define ACDCDIG_DSM_MIXCTRLR_MIXMODE_R0_MASK               (0x3U << ACDCDIG_DSM_MIXCTRLR_MIXMODE_R0_SHIFT)              /* 0x00000003 */
/* HPF */
#define ACDCDIG_DSM_HPF_OFFSET                             (0xA8U)
#define ACDCDIG_DSM_HPF_HPFEN_L0R1_SHIFT                   (0U)
#define ACDCDIG_DSM_HPF_HPFEN_L0R1_MASK                    (0x1U << ACDCDIG_DSM_HPF_HPFEN_L0R1_SHIFT)                   /* 0x00000001 */
#define ACDCDIG_DSM_HPF_HPFCF_SHIFT                        (4U)
#define ACDCDIG_DSM_HPF_HPFCF_MASK                         (0x3U << ACDCDIG_DSM_HPF_HPFCF_SHIFT)                        /* 0x00000030 */
/* I2S_RXCR0 */
#define ACDCDIG_DSM_I2S_RXCR0_OFFSET                       (0x10CU)
#define ACDCDIG_DSM_I2S_RXCR0_VDW_SHIFT                    (0U)
#define ACDCDIG_DSM_I2S_RXCR0_VDW_MASK                     (0x1FU << ACDCDIG_DSM_I2S_RXCR0_VDW_SHIFT)                   /* 0x0000001F */
#define ACDCDIG_DSM_I2S_RXCR0_TFS_SHIFT                    (5U)
#define ACDCDIG_DSM_I2S_RXCR0_TFS_MASK                     (0x1U << ACDCDIG_DSM_I2S_RXCR0_TFS_SHIFT)                    /* 0x00000020 */
#define ACDCDIG_DSM_I2S_RXCR0_PBM_SHIFT                    (6U)
#define ACDCDIG_DSM_I2S_RXCR0_PBM_MASK                     (0x3U << ACDCDIG_DSM_I2S_RXCR0_PBM_SHIFT)                    /* 0x000000C0 */
/* I2S_RXCR1 */
#define ACDCDIG_DSM_I2S_RXCR1_OFFSET                       (0x110U)
#define ACDCDIG_DSM_I2S_RXCR1_IBM_SHIFT                    (0U)
#define ACDCDIG_DSM_I2S_RXCR1_IBM_MASK                     (0x3U << ACDCDIG_DSM_I2S_RXCR1_IBM_SHIFT)                    /* 0x00000003 */
#define ACDCDIG_DSM_I2S_RXCR1_FBM_SHIFT                    (2U)
#define ACDCDIG_DSM_I2S_RXCR1_FBM_MASK                     (0x1U << ACDCDIG_DSM_I2S_RXCR1_FBM_SHIFT)                    /* 0x00000004 */
#define ACDCDIG_DSM_I2S_RXCR1_CEX_SHIFT                    (4U)
#define ACDCDIG_DSM_I2S_RXCR1_CEX_MASK                     (0x1U << ACDCDIG_DSM_I2S_RXCR1_CEX_SHIFT)                    /* 0x00000010 */
#define ACDCDIG_DSM_I2S_RXCR1_RCSR_SHIFT                   (6U)
#define ACDCDIG_DSM_I2S_RXCR1_RCSR_MASK                    (0x3U << ACDCDIG_DSM_I2S_RXCR1_RCSR_SHIFT)                   /* 0x000000C0 */
/* I2S_CKR0 */
#define ACDCDIG_DSM_I2S_CKR0_OFFSET                        (0x114U)
#define ACDCDIG_DSM_I2S_CKR0_RSD_SHIFT                     (2U)
#define ACDCDIG_DSM_I2S_CKR0_RSD_MASK                      (0x3U << ACDCDIG_DSM_I2S_CKR0_RSD_SHIFT)                     /* 0x0000000C */
/* I2S_CKR1 */
#define ACDCDIG_DSM_I2S_CKR1_OFFSET                        (0x118U)
#define ACDCDIG_DSM_I2S_CKR1_RLP_SHIFT                     (1U)
#define ACDCDIG_DSM_I2S_CKR1_RLP_MASK                      (0x1U << ACDCDIG_DSM_I2S_CKR1_RLP_SHIFT)                     /* 0x00000002 */
#define ACDCDIG_DSM_I2S_CKR1_CKP_SHIFT                     (2U)
#define ACDCDIG_DSM_I2S_CKR1_CKP_MASK                      (0x1U << ACDCDIG_DSM_I2S_CKR1_CKP_SHIFT)                     /* 0x00000004 */
#define ACDCDIG_DSM_I2S_CKR1_MSS_SHIFT                     (3U)
#define ACDCDIG_DSM_I2S_CKR1_MSS_MASK                      (0x1U << ACDCDIG_DSM_I2S_CKR1_MSS_SHIFT)                     /* 0x00000008 */
/* I2S_XFER */
#define ACDCDIG_DSM_I2S_XFER_OFFSET                        (0x11CU)
#define ACDCDIG_DSM_I2S_XFER_RXS_SHIFT                     (1U)
#define ACDCDIG_DSM_I2S_XFER_RXS_MASK                      (0x1U << ACDCDIG_DSM_I2S_XFER_RXS_SHIFT)                     /* 0x00000002 */
/* I2S_CLR */
#define ACDCDIG_DSM_I2S_CLR_OFFSET                         (0x120U)
#define ACDCDIG_DSM_I2S_CLR_RXC_SHIFT                      (1U)
#define ACDCDIG_DSM_I2S_CLR_RXC_MASK                       (0x1U << ACDCDIG_DSM_I2S_CLR_RXC_SHIFT)                      /* 0x00000002 */
/* VERSION */
#define ACDCDIG_DSM_VERSION_OFFSET                         (0x140U)
#define ACDCDIG_DSM_VERSION                                (0x10U)
#define ACDCDIG_DSM_VERSION_VER_SHIFT                      (0U)
#define ACDCDIG_DSM_VERSION_VER_MASK                       (0xFFU << ACDCDIG_DSM_VERSION_VER_SHIFT)                     /* 0x000000FF */
/****************************************SPI2APB*****************************************/
/* CTRL0 */
#define SPI2APB_CTRL0_OFFSET                               (0x0U)
#define SPI2APB_CTRL0_FBM_SHIFT                            (0U)
#define SPI2APB_CTRL0_FBM_MASK                             (0x1U << SPI2APB_CTRL0_FBM_SHIFT)                            /* 0x00000001 */
#define SPI2APB_CTRL0_EM_SHIFT                             (1U)
#define SPI2APB_CTRL0_EM_MASK                              (0x1U << SPI2APB_CTRL0_EM_SHIFT)                             /* 0x00000002 */
#define SPI2APB_CTRL0_RXCP_SHIFT                           (2U)
#define SPI2APB_CTRL0_RXCP_MASK                            (0x1U << SPI2APB_CTRL0_RXCP_SHIFT)                           /* 0x00000004 */
#define SPI2APB_CTRL0_TXCP_SHIFT                           (3U)
#define SPI2APB_CTRL0_TXCP_MASK                            (0x1U << SPI2APB_CTRL0_TXCP_SHIFT)                           /* 0x00000008 */
/* SR */
#define SPI2APB_SR_OFFSET                                  (0x24U)
#define SPI2APB_SR                                         (0x14U)
#define SPI2APB_SR_BSF_SHIFT                               (0U)
#define SPI2APB_SR_BSF_MASK                                (0x1U << SPI2APB_SR_BSF_SHIFT)                               /* 0x00000001 */
#define SPI2APB_SR_TFF_SHIFT                               (1U)
#define SPI2APB_SR_TFF_MASK                                (0x1U << SPI2APB_SR_TFF_SHIFT)                               /* 0x00000002 */
#define SPI2APB_SR_TFE_SHIFT                               (2U)
#define SPI2APB_SR_TFE_MASK                                (0x1U << SPI2APB_SR_TFE_SHIFT)                               /* 0x00000004 */
#define SPI2APB_SR_RFF_SHIFT                               (3U)
#define SPI2APB_SR_RFF_MASK                                (0x1U << SPI2APB_SR_RFF_SHIFT)                               /* 0x00000008 */
#define SPI2APB_SR_RFE_SHIFT                               (4U)
#define SPI2APB_SR_RFE_MASK                                (0x1U << SPI2APB_SR_RFE_SHIFT)                               /* 0x00000010 */
/* IMR */
#define SPI2APB_IMR_OFFSET                                 (0x2CU)
#define SPI2APB_IMR_QWIM_SHIFT                             (0U)
#define SPI2APB_IMR_QWIM_MASK                              (0x1U << SPI2APB_IMR_QWIM_SHIFT)                             /* 0x00000001 */
/* RISR */
#define SPI2APB_RISR_OFFSET                                (0x34U)
#define SPI2APB_RISR                                       (0x0U)
#define SPI2APB_RISR_QWRIS_SHIFT                           (0U)
#define SPI2APB_RISR_QWRIS_MASK                            (0x1U << SPI2APB_RISR_QWRIS_SHIFT)                           /* 0x00000001 */
/* ICR */
#define SPI2APB_ICR_OFFSET                                 (0x38U)
#define SPI2APB_ICR_CQWI_SHIFT                             (0U)
#define SPI2APB_ICR_CQWI_MASK                              (0x1U << SPI2APB_ICR_CQWI_SHIFT)                             /* 0x00000001 */
/* VERSION */
#define SPI2APB_VERSION_OFFSET                             (0x48U)
#define SPI2APB_VERSION                                    (0x63B0002U)
#define SPI2APB_VERSION_VER_SHIFT                          (0U)
#define SPI2APB_VERSION_VER_MASK                           (0xFFFFFFFFU << SPI2APB_VERSION_VER_SHIFT)                   /* 0xFFFFFFFF */
/* QUICK_REG0 */
#define SPI2APB_QUICK_REG0_OFFSET                          (0x50U)
#define SPI2APB_QUICK_REG0_QWV0_SHIFT                      (0U)
#define SPI2APB_QUICK_REG0_QWV0_MASK                       (0xFFFFFFFFU << SPI2APB_QUICK_REG0_QWV0_SHIFT)               /* 0xFFFFFFFF */
/* QUICK_REG1 */
#define SPI2APB_QUICK_REG1_OFFSET                          (0x54U)
#define SPI2APB_QUICK_REG1_QWV1_SHIFT                      (0U)
#define SPI2APB_QUICK_REG1_QWV1_MASK                       (0xFFFFFFFFU << SPI2APB_QUICK_REG1_QWV1_SHIFT)               /* 0xFFFFFFFF */
/* QUICK_REG2 */
#define SPI2APB_QUICK_REG2_OFFSET                          (0x58U)
#define SPI2APB_QUICK_REG2_QRV_SHIFT                       (0U)
#define SPI2APB_QUICK_REG2_QRV_MASK                        (0xFFFFFFFFU << SPI2APB_QUICK_REG2_QRV_SHIFT)                /* 0xFFFFFFFF */
/******************************************GMAC******************************************/
/* MAC_CONFIGURATION */
#define GMAC_MAC_CONFIGURATION_OFFSET                      (0x0U)
#define GMAC_MAC_CONFIGURATION_RE_SHIFT                    (0U)
#define GMAC_MAC_CONFIGURATION_RE_MASK                     (0x1U << GMAC_MAC_CONFIGURATION_RE_SHIFT)                    /* 0x00000001 */
#define GMAC_MAC_CONFIGURATION_TE_SHIFT                    (1U)
#define GMAC_MAC_CONFIGURATION_TE_MASK                     (0x1U << GMAC_MAC_CONFIGURATION_TE_SHIFT)                    /* 0x00000002 */
#define GMAC_MAC_CONFIGURATION_PRELEN_SHIFT                (2U)
#define GMAC_MAC_CONFIGURATION_PRELEN_MASK                 (0x3U << GMAC_MAC_CONFIGURATION_PRELEN_SHIFT)                /* 0x0000000C */
#define GMAC_MAC_CONFIGURATION_DC_SHIFT                    (4U)
#define GMAC_MAC_CONFIGURATION_DC_MASK                     (0x1U << GMAC_MAC_CONFIGURATION_DC_SHIFT)                    /* 0x00000010 */
#define GMAC_MAC_CONFIGURATION_BL_SHIFT                    (5U)
#define GMAC_MAC_CONFIGURATION_BL_MASK                     (0x3U << GMAC_MAC_CONFIGURATION_BL_SHIFT)                    /* 0x00000060 */
#define GMAC_MAC_CONFIGURATION_DR_SHIFT                    (8U)
#define GMAC_MAC_CONFIGURATION_DR_MASK                     (0x1U << GMAC_MAC_CONFIGURATION_DR_SHIFT)                    /* 0x00000100 */
#define GMAC_MAC_CONFIGURATION_DCRS_SHIFT                  (9U)
#define GMAC_MAC_CONFIGURATION_DCRS_MASK                   (0x1U << GMAC_MAC_CONFIGURATION_DCRS_SHIFT)                  /* 0x00000200 */
#define GMAC_MAC_CONFIGURATION_LM_SHIFT                    (12U)
#define GMAC_MAC_CONFIGURATION_LM_MASK                     (0x1U << GMAC_MAC_CONFIGURATION_LM_SHIFT)                    /* 0x00001000 */
#define GMAC_MAC_CONFIGURATION_DM_SHIFT                    (13U)
#define GMAC_MAC_CONFIGURATION_DM_MASK                     (0x1U << GMAC_MAC_CONFIGURATION_DM_SHIFT)                    /* 0x00002000 */
#define GMAC_MAC_CONFIGURATION_FES_SHIFT                   (14U)
#define GMAC_MAC_CONFIGURATION_FES_MASK                    (0x1U << GMAC_MAC_CONFIGURATION_FES_SHIFT)                   /* 0x00004000 */
#define GMAC_MAC_CONFIGURATION_PS_SHIFT                    (15U)
#define GMAC_MAC_CONFIGURATION_PS_MASK                     (0x1U << GMAC_MAC_CONFIGURATION_PS_SHIFT)                    /* 0x00008000 */
#define GMAC_MAC_CONFIGURATION_JE_SHIFT                    (16U)
#define GMAC_MAC_CONFIGURATION_JE_MASK                     (0x1U << GMAC_MAC_CONFIGURATION_JE_SHIFT)                    /* 0x00010000 */
#define GMAC_MAC_CONFIGURATION_JD_SHIFT                    (17U)
#define GMAC_MAC_CONFIGURATION_JD_MASK                     (0x1U << GMAC_MAC_CONFIGURATION_JD_SHIFT)                    /* 0x00020000 */
#define GMAC_MAC_CONFIGURATION_BE_SHIFT                    (18U)
#define GMAC_MAC_CONFIGURATION_BE_MASK                     (0x1U << GMAC_MAC_CONFIGURATION_BE_SHIFT)                    /* 0x00040000 */
#define GMAC_MAC_CONFIGURATION_WD_SHIFT                    (19U)
#define GMAC_MAC_CONFIGURATION_WD_MASK                     (0x1U << GMAC_MAC_CONFIGURATION_WD_SHIFT)                    /* 0x00080000 */
#define GMAC_MAC_CONFIGURATION_ACS_SHIFT                   (20U)
#define GMAC_MAC_CONFIGURATION_ACS_MASK                    (0x1U << GMAC_MAC_CONFIGURATION_ACS_SHIFT)                   /* 0x00100000 */
#define GMAC_MAC_CONFIGURATION_CST_SHIFT                   (21U)
#define GMAC_MAC_CONFIGURATION_CST_MASK                    (0x1U << GMAC_MAC_CONFIGURATION_CST_SHIFT)                   /* 0x00200000 */
#define GMAC_MAC_CONFIGURATION_S2KP_SHIFT                  (22U)
#define GMAC_MAC_CONFIGURATION_S2KP_MASK                   (0x1U << GMAC_MAC_CONFIGURATION_S2KP_SHIFT)                  /* 0x00400000 */
#define GMAC_MAC_CONFIGURATION_GPSLCE_SHIFT                (23U)
#define GMAC_MAC_CONFIGURATION_GPSLCE_MASK                 (0x1U << GMAC_MAC_CONFIGURATION_GPSLCE_SHIFT)                /* 0x00800000 */
#define GMAC_MAC_CONFIGURATION_IPG_SHIFT                   (24U)
#define GMAC_MAC_CONFIGURATION_IPG_MASK                    (0x7U << GMAC_MAC_CONFIGURATION_IPG_SHIFT)                   /* 0x07000000 */
#define GMAC_MAC_CONFIGURATION_IPC_SHIFT                   (27U)
#define GMAC_MAC_CONFIGURATION_IPC_MASK                    (0x1U << GMAC_MAC_CONFIGURATION_IPC_SHIFT)                   /* 0x08000000 */
#define GMAC_MAC_CONFIGURATION_ARPEN_SHIFT                 (31U)
#define GMAC_MAC_CONFIGURATION_ARPEN_MASK                  (0x1U << GMAC_MAC_CONFIGURATION_ARPEN_SHIFT)                 /* 0x80000000 */
/* MAC_EXT_CONFIGURATION */
#define GMAC_MAC_EXT_CONFIGURATION_OFFSET                  (0x4U)
#define GMAC_MAC_EXT_CONFIGURATION_GPSL_SHIFT              (0U)
#define GMAC_MAC_EXT_CONFIGURATION_GPSL_MASK               (0x3FFFU << GMAC_MAC_EXT_CONFIGURATION_GPSL_SHIFT)           /* 0x00003FFF */
#define GMAC_MAC_EXT_CONFIGURATION_DCRCC_SHIFT             (16U)
#define GMAC_MAC_EXT_CONFIGURATION_DCRCC_MASK              (0x1U << GMAC_MAC_EXT_CONFIGURATION_DCRCC_SHIFT)             /* 0x00010000 */
#define GMAC_MAC_EXT_CONFIGURATION_SPEN_SHIFT              (17U)
#define GMAC_MAC_EXT_CONFIGURATION_SPEN_MASK               (0x1U << GMAC_MAC_EXT_CONFIGURATION_SPEN_SHIFT)              /* 0x00020000 */
#define GMAC_MAC_EXT_CONFIGURATION_USP_SHIFT               (18U)
#define GMAC_MAC_EXT_CONFIGURATION_USP_MASK                (0x1U << GMAC_MAC_EXT_CONFIGURATION_USP_SHIFT)               /* 0x00040000 */
#define GMAC_MAC_EXT_CONFIGURATION_HDSMS_SHIFT             (20U)
#define GMAC_MAC_EXT_CONFIGURATION_HDSMS_MASK              (0x7U << GMAC_MAC_EXT_CONFIGURATION_HDSMS_SHIFT)             /* 0x00700000 */
#define GMAC_MAC_EXT_CONFIGURATION_EIPGEN_SHIFT            (24U)
#define GMAC_MAC_EXT_CONFIGURATION_EIPGEN_MASK             (0x1U << GMAC_MAC_EXT_CONFIGURATION_EIPGEN_SHIFT)            /* 0x01000000 */
#define GMAC_MAC_EXT_CONFIGURATION_EIPG_SHIFT              (25U)
#define GMAC_MAC_EXT_CONFIGURATION_EIPG_MASK               (0x1FU << GMAC_MAC_EXT_CONFIGURATION_EIPG_SHIFT)             /* 0x3E000000 */
/* MAC_PACKET_FILTER */
#define GMAC_MAC_PACKET_FILTER_OFFSET                      (0x8U)
#define GMAC_MAC_PACKET_FILTER_HMC_SHIFT                   (2U)
#define GMAC_MAC_PACKET_FILTER_HMC_MASK                    (0x1U << GMAC_MAC_PACKET_FILTER_HMC_SHIFT)                   /* 0x00000004 */
#define GMAC_MAC_PACKET_FILTER_DAIF_SHIFT                  (3U)
#define GMAC_MAC_PACKET_FILTER_DAIF_MASK                   (0x1U << GMAC_MAC_PACKET_FILTER_DAIF_SHIFT)                  /* 0x00000008 */
#define GMAC_MAC_PACKET_FILTER_PM_SHIFT                    (4U)
#define GMAC_MAC_PACKET_FILTER_PM_MASK                     (0x1U << GMAC_MAC_PACKET_FILTER_PM_SHIFT)                    /* 0x00000010 */
#define GMAC_MAC_PACKET_FILTER_DBF_SHIFT                   (5U)
#define GMAC_MAC_PACKET_FILTER_DBF_MASK                    (0x1U << GMAC_MAC_PACKET_FILTER_DBF_SHIFT)                   /* 0x00000020 */
#define GMAC_MAC_PACKET_FILTER_PCF_SHIFT                   (6U)
#define GMAC_MAC_PACKET_FILTER_PCF_MASK                    (0x3U << GMAC_MAC_PACKET_FILTER_PCF_SHIFT)                   /* 0x000000C0 */
#define GMAC_MAC_PACKET_FILTER_HPF_SHIFT                   (10U)
#define GMAC_MAC_PACKET_FILTER_HPF_MASK                    (0x1U << GMAC_MAC_PACKET_FILTER_HPF_SHIFT)                   /* 0x00000400 */
#define GMAC_MAC_PACKET_FILTER_VTFE_SHIFT                  (16U)
#define GMAC_MAC_PACKET_FILTER_VTFE_MASK                   (0x1U << GMAC_MAC_PACKET_FILTER_VTFE_SHIFT)                  /* 0x00010000 */
#define GMAC_MAC_PACKET_FILTER_RA_SHIFT                    (31U)
#define GMAC_MAC_PACKET_FILTER_RA_MASK                     (0x1U << GMAC_MAC_PACKET_FILTER_RA_SHIFT)                    /* 0x80000000 */
/* MAC_WATCHDOG_TIMEOUT */
#define GMAC_MAC_WATCHDOG_TIMEOUT_OFFSET                   (0xCU)
#define GMAC_MAC_WATCHDOG_TIMEOUT_WTO_SHIFT                (0U)
#define GMAC_MAC_WATCHDOG_TIMEOUT_WTO_MASK                 (0xFU << GMAC_MAC_WATCHDOG_TIMEOUT_WTO_SHIFT)                /* 0x0000000F */
#define GMAC_MAC_WATCHDOG_TIMEOUT_PWE_SHIFT                (8U)
#define GMAC_MAC_WATCHDOG_TIMEOUT_PWE_MASK                 (0x1U << GMAC_MAC_WATCHDOG_TIMEOUT_PWE_SHIFT)                /* 0x00000100 */
/* MAC_HASH_TABLE_REG0 */
#define GMAC_MAC_HASH_TABLE_REG0_OFFSET                    (0x10U)
#define GMAC_MAC_HASH_TABLE_REG0_HT31T0_SHIFT              (0U)
#define GMAC_MAC_HASH_TABLE_REG0_HT31T0_MASK               (0xFFFFFFFFU << GMAC_MAC_HASH_TABLE_REG0_HT31T0_SHIFT)       /* 0xFFFFFFFF */
/* MAC_HASH_TABLE_REG1 */
#define GMAC_MAC_HASH_TABLE_REG1_OFFSET                    (0x14U)
#define GMAC_MAC_HASH_TABLE_REG1_HT63T32_SHIFT             (0U)
#define GMAC_MAC_HASH_TABLE_REG1_HT63T32_MASK              (0xFFFFFFFFU << GMAC_MAC_HASH_TABLE_REG1_HT63T32_SHIFT)      /* 0xFFFFFFFF */
/* MAC_VLAN_TAG */
#define GMAC_MAC_VLAN_TAG_OFFSET                           (0x50U)
#define GMAC_MAC_VLAN_TAG_VL_SHIFT                         (0U)
#define GMAC_MAC_VLAN_TAG_VL_MASK                          (0xFFFFU << GMAC_MAC_VLAN_TAG_VL_SHIFT)                      /* 0x0000FFFF */
#define GMAC_MAC_VLAN_TAG_ETV_SHIFT                        (16U)
#define GMAC_MAC_VLAN_TAG_ETV_MASK                         (0x1U << GMAC_MAC_VLAN_TAG_ETV_SHIFT)                        /* 0x00010000 */
#define GMAC_MAC_VLAN_TAG_VTIM_SHIFT                       (17U)
#define GMAC_MAC_VLAN_TAG_VTIM_MASK                        (0x1U << GMAC_MAC_VLAN_TAG_VTIM_SHIFT)                       /* 0x00020000 */
#define GMAC_MAC_VLAN_TAG_ESVL_SHIFT                       (18U)
#define GMAC_MAC_VLAN_TAG_ESVL_MASK                        (0x1U << GMAC_MAC_VLAN_TAG_ESVL_SHIFT)                       /* 0x00040000 */
#define GMAC_MAC_VLAN_TAG_ERSVLM_SHIFT                     (19U)
#define GMAC_MAC_VLAN_TAG_ERSVLM_MASK                      (0x1U << GMAC_MAC_VLAN_TAG_ERSVLM_SHIFT)                     /* 0x00080000 */
#define GMAC_MAC_VLAN_TAG_DOVLTC_SHIFT                     (20U)
#define GMAC_MAC_VLAN_TAG_DOVLTC_MASK                      (0x1U << GMAC_MAC_VLAN_TAG_DOVLTC_SHIFT)                     /* 0x00100000 */
#define GMAC_MAC_VLAN_TAG_EVLS_SHIFT                       (21U)
#define GMAC_MAC_VLAN_TAG_EVLS_MASK                        (0x3U << GMAC_MAC_VLAN_TAG_EVLS_SHIFT)                       /* 0x00600000 */
#define GMAC_MAC_VLAN_TAG_EVLRXS_SHIFT                     (24U)
#define GMAC_MAC_VLAN_TAG_EVLRXS_MASK                      (0x1U << GMAC_MAC_VLAN_TAG_EVLRXS_SHIFT)                     /* 0x01000000 */
/* MAC_VLAN_HASH_TABLE */
#define GMAC_MAC_VLAN_HASH_TABLE_OFFSET                    (0x58U)
#define GMAC_MAC_VLAN_HASH_TABLE_VLHT_SHIFT                (0U)
#define GMAC_MAC_VLAN_HASH_TABLE_VLHT_MASK                 (0xFFFFU << GMAC_MAC_VLAN_HASH_TABLE_VLHT_SHIFT)             /* 0x0000FFFF */
/* MAC_Q0_TX_FLOW_CTRL */
#define GMAC_MAC_Q0_TX_FLOW_CTRL_OFFSET                    (0x70U)
#define GMAC_MAC_Q0_TX_FLOW_CTRL_FCB_BPA_SHIFT             (0U)
#define GMAC_MAC_Q0_TX_FLOW_CTRL_FCB_BPA_MASK              (0x1U << GMAC_MAC_Q0_TX_FLOW_CTRL_FCB_BPA_SHIFT)             /* 0x00000001 */
#define GMAC_MAC_Q0_TX_FLOW_CTRL_TFE_SHIFT                 (1U)
#define GMAC_MAC_Q0_TX_FLOW_CTRL_TFE_MASK                  (0x1U << GMAC_MAC_Q0_TX_FLOW_CTRL_TFE_SHIFT)                 /* 0x00000002 */
#define GMAC_MAC_Q0_TX_FLOW_CTRL_DZPQ_SHIFT                (7U)
#define GMAC_MAC_Q0_TX_FLOW_CTRL_DZPQ_MASK                 (0x1U << GMAC_MAC_Q0_TX_FLOW_CTRL_DZPQ_SHIFT)                /* 0x00000080 */
#define GMAC_MAC_Q0_TX_FLOW_CTRL_PT_SHIFT                  (16U)
#define GMAC_MAC_Q0_TX_FLOW_CTRL_PT_MASK                   (0xFFFFU << GMAC_MAC_Q0_TX_FLOW_CTRL_PT_SHIFT)               /* 0xFFFF0000 */
/* MAC_RX_FLOW_CTRL */
#define GMAC_MAC_RX_FLOW_CTRL_OFFSET                       (0x90U)
#define GMAC_MAC_RX_FLOW_CTRL_RFE_SHIFT                    (0U)
#define GMAC_MAC_RX_FLOW_CTRL_RFE_MASK                     (0x1U << GMAC_MAC_RX_FLOW_CTRL_RFE_SHIFT)                    /* 0x00000001 */
#define GMAC_MAC_RX_FLOW_CTRL_UP_SHIFT                     (1U)
#define GMAC_MAC_RX_FLOW_CTRL_UP_MASK                      (0x1U << GMAC_MAC_RX_FLOW_CTRL_UP_SHIFT)                     /* 0x00000002 */
/* MAC_INTERRUPT_STATUS */
#define GMAC_MAC_INTERRUPT_STATUS_OFFSET                   (0xB0U)
#define GMAC_MAC_INTERRUPT_STATUS                          (0x0U)
#define GMAC_MAC_INTERRUPT_STATUS_PHYIS_SHIFT              (3U)
#define GMAC_MAC_INTERRUPT_STATUS_PHYIS_MASK               (0x1U << GMAC_MAC_INTERRUPT_STATUS_PHYIS_SHIFT)              /* 0x00000008 */
#define GMAC_MAC_INTERRUPT_STATUS_PMTIS_SHIFT              (4U)
#define GMAC_MAC_INTERRUPT_STATUS_PMTIS_MASK               (0x1U << GMAC_MAC_INTERRUPT_STATUS_PMTIS_SHIFT)              /* 0x00000010 */
#define GMAC_MAC_INTERRUPT_STATUS_MMCIS_SHIFT              (8U)
#define GMAC_MAC_INTERRUPT_STATUS_MMCIS_MASK               (0x1U << GMAC_MAC_INTERRUPT_STATUS_MMCIS_SHIFT)              /* 0x00000100 */
#define GMAC_MAC_INTERRUPT_STATUS_MMCRXIS_SHIFT            (9U)
#define GMAC_MAC_INTERRUPT_STATUS_MMCRXIS_MASK             (0x1U << GMAC_MAC_INTERRUPT_STATUS_MMCRXIS_SHIFT)            /* 0x00000200 */
#define GMAC_MAC_INTERRUPT_STATUS_MMCTXIS_SHIFT            (10U)
#define GMAC_MAC_INTERRUPT_STATUS_MMCTXIS_MASK             (0x1U << GMAC_MAC_INTERRUPT_STATUS_MMCTXIS_SHIFT)            /* 0x00000400 */
#define GMAC_MAC_INTERRUPT_STATUS_MMCRXIPIS_SHIFT          (11U)
#define GMAC_MAC_INTERRUPT_STATUS_MMCRXIPIS_MASK           (0x1U << GMAC_MAC_INTERRUPT_STATUS_MMCRXIPIS_SHIFT)          /* 0x00000800 */
#define GMAC_MAC_INTERRUPT_STATUS_TXSTSIS_SHIFT            (13U)
#define GMAC_MAC_INTERRUPT_STATUS_TXSTSIS_MASK             (0x1U << GMAC_MAC_INTERRUPT_STATUS_TXSTSIS_SHIFT)            /* 0x00002000 */
#define GMAC_MAC_INTERRUPT_STATUS_RXSTSIS_SHIFT            (14U)
#define GMAC_MAC_INTERRUPT_STATUS_RXSTSIS_MASK             (0x1U << GMAC_MAC_INTERRUPT_STATUS_RXSTSIS_SHIFT)            /* 0x00004000 */
#define GMAC_MAC_INTERRUPT_STATUS_MDIOIS_SHIFT             (18U)
#define GMAC_MAC_INTERRUPT_STATUS_MDIOIS_MASK              (0x1U << GMAC_MAC_INTERRUPT_STATUS_MDIOIS_SHIFT)             /* 0x00040000 */
/* MAC_INTERRUPT_ENABLE */
#define GMAC_MAC_INTERRUPT_ENABLE_OFFSET                   (0xB4U)
#define GMAC_MAC_INTERRUPT_ENABLE_PHYIE_SHIFT              (3U)
#define GMAC_MAC_INTERRUPT_ENABLE_PHYIE_MASK               (0x1U << GMAC_MAC_INTERRUPT_ENABLE_PHYIE_SHIFT)              /* 0x00000008 */
#define GMAC_MAC_INTERRUPT_ENABLE_PMTIE_SHIFT              (4U)
#define GMAC_MAC_INTERRUPT_ENABLE_PMTIE_MASK               (0x1U << GMAC_MAC_INTERRUPT_ENABLE_PMTIE_SHIFT)              /* 0x00000010 */
#define GMAC_MAC_INTERRUPT_ENABLE_TXSTSIE_SHIFT            (13U)
#define GMAC_MAC_INTERRUPT_ENABLE_TXSTSIE_MASK             (0x1U << GMAC_MAC_INTERRUPT_ENABLE_TXSTSIE_SHIFT)            /* 0x00002000 */
#define GMAC_MAC_INTERRUPT_ENABLE_RXSTSIE_SHIFT            (14U)
#define GMAC_MAC_INTERRUPT_ENABLE_RXSTSIE_MASK             (0x1U << GMAC_MAC_INTERRUPT_ENABLE_RXSTSIE_SHIFT)            /* 0x00004000 */
#define GMAC_MAC_INTERRUPT_ENABLE_MDIOIE_SHIFT             (18U)
#define GMAC_MAC_INTERRUPT_ENABLE_MDIOIE_MASK              (0x1U << GMAC_MAC_INTERRUPT_ENABLE_MDIOIE_SHIFT)             /* 0x00040000 */
/* MAC_RX_TX_STATUS */
#define GMAC_MAC_RX_TX_STATUS_OFFSET                       (0xB8U)
#define GMAC_MAC_RX_TX_STATUS                              (0x0U)
#define GMAC_MAC_RX_TX_STATUS_TJT_SHIFT                    (0U)
#define GMAC_MAC_RX_TX_STATUS_TJT_MASK                     (0x1U << GMAC_MAC_RX_TX_STATUS_TJT_SHIFT)                    /* 0x00000001 */
#define GMAC_MAC_RX_TX_STATUS_NCARR_SHIFT                  (1U)
#define GMAC_MAC_RX_TX_STATUS_NCARR_MASK                   (0x1U << GMAC_MAC_RX_TX_STATUS_NCARR_SHIFT)                  /* 0x00000002 */
#define GMAC_MAC_RX_TX_STATUS_LCARR_SHIFT                  (2U)
#define GMAC_MAC_RX_TX_STATUS_LCARR_MASK                   (0x1U << GMAC_MAC_RX_TX_STATUS_LCARR_SHIFT)                  /* 0x00000004 */
#define GMAC_MAC_RX_TX_STATUS_EXDEF_SHIFT                  (3U)
#define GMAC_MAC_RX_TX_STATUS_EXDEF_MASK                   (0x1U << GMAC_MAC_RX_TX_STATUS_EXDEF_SHIFT)                  /* 0x00000008 */
#define GMAC_MAC_RX_TX_STATUS_LCOL_SHIFT                   (4U)
#define GMAC_MAC_RX_TX_STATUS_LCOL_MASK                    (0x1U << GMAC_MAC_RX_TX_STATUS_LCOL_SHIFT)                   /* 0x00000010 */
#define GMAC_MAC_RX_TX_STATUS_RWT_SHIFT                    (8U)
#define GMAC_MAC_RX_TX_STATUS_RWT_MASK                     (0x1U << GMAC_MAC_RX_TX_STATUS_RWT_SHIFT)                    /* 0x00000100 */
/* MAC_PMT_CONTROL_STATUS */
#define GMAC_MAC_PMT_CONTROL_STATUS_OFFSET                 (0xC0U)
#define GMAC_MAC_PMT_CONTROL_STATUS_PWRDWN_SHIFT           (0U)
#define GMAC_MAC_PMT_CONTROL_STATUS_PWRDWN_MASK            (0x1U << GMAC_MAC_PMT_CONTROL_STATUS_PWRDWN_SHIFT)           /* 0x00000001 */
#define GMAC_MAC_PMT_CONTROL_STATUS_MGKPKTEN_SHIFT         (1U)
#define GMAC_MAC_PMT_CONTROL_STATUS_MGKPKTEN_MASK          (0x1U << GMAC_MAC_PMT_CONTROL_STATUS_MGKPKTEN_SHIFT)         /* 0x00000002 */
#define GMAC_MAC_PMT_CONTROL_STATUS_RWKPKTEN_SHIFT         (2U)
#define GMAC_MAC_PMT_CONTROL_STATUS_RWKPKTEN_MASK          (0x1U << GMAC_MAC_PMT_CONTROL_STATUS_RWKPKTEN_SHIFT)         /* 0x00000004 */
#define GMAC_MAC_PMT_CONTROL_STATUS_MGKPRCVD_SHIFT         (5U)
#define GMAC_MAC_PMT_CONTROL_STATUS_MGKPRCVD_MASK          (0x1U << GMAC_MAC_PMT_CONTROL_STATUS_MGKPRCVD_SHIFT)         /* 0x00000020 */
#define GMAC_MAC_PMT_CONTROL_STATUS_RWKPRCVD_SHIFT         (6U)
#define GMAC_MAC_PMT_CONTROL_STATUS_RWKPRCVD_MASK          (0x1U << GMAC_MAC_PMT_CONTROL_STATUS_RWKPRCVD_SHIFT)         /* 0x00000040 */
#define GMAC_MAC_PMT_CONTROL_STATUS_GLBLUCAST_SHIFT        (9U)
#define GMAC_MAC_PMT_CONTROL_STATUS_GLBLUCAST_MASK         (0x1U << GMAC_MAC_PMT_CONTROL_STATUS_GLBLUCAST_SHIFT)        /* 0x00000200 */
#define GMAC_MAC_PMT_CONTROL_STATUS_RWKPFE_SHIFT           (10U)
#define GMAC_MAC_PMT_CONTROL_STATUS_RWKPFE_MASK            (0x1U << GMAC_MAC_PMT_CONTROL_STATUS_RWKPFE_SHIFT)           /* 0x00000400 */
#define GMAC_MAC_PMT_CONTROL_STATUS_RWKPTR_SHIFT           (24U)
#define GMAC_MAC_PMT_CONTROL_STATUS_RWKPTR_MASK            (0x1FU << GMAC_MAC_PMT_CONTROL_STATUS_RWKPTR_SHIFT)          /* 0x1F000000 */
#define GMAC_MAC_PMT_CONTROL_STATUS_RWKFILTRST_SHIFT       (31U)
#define GMAC_MAC_PMT_CONTROL_STATUS_RWKFILTRST_MASK        (0x1U << GMAC_MAC_PMT_CONTROL_STATUS_RWKFILTRST_SHIFT)       /* 0x80000000 */
/* MAC_RWK_PACKET_FILTER */
#define GMAC_MAC_RWK_PACKET_FILTER_OFFSET                  (0xC4U)
#define GMAC_MAC_RWK_PACKET_FILTER_WKUPFRMFTR_SHIFT        (0U)
#define GMAC_MAC_RWK_PACKET_FILTER_WKUPFRMFTR_MASK         (0xFFFFFFFFU << GMAC_MAC_RWK_PACKET_FILTER_WKUPFRMFTR_SHIFT) /* 0xFFFFFFFF */
/* RWK_FILTER0_BYTE_MASK */
#define GMAC_RWK_FILTER0_BYTE_MASK_OFFSET                  (0xC4U)
#define GMAC_RWK_FILTER0_BYTE_MASK_FILTER0_BYTE_MASK_SHIFT (0U)
#define GMAC_RWK_FILTER0_BYTE_MASK_FILTER0_BYTE_MASK_MASK  (0xFFFFFFFFU << GMAC_RWK_FILTER0_BYTE_MASK_FILTER0_BYTE_MASK_SHIFT) /* 0xFFFFFFFF */
/* RWK_FILTER1_BYTE_MASK */
#define GMAC_RWK_FILTER1_BYTE_MASK_OFFSET                  (0xC4U)
#define GMAC_RWK_FILTER1_BYTE_MASK_FILTER1_BYTE_MASK_SHIFT (0U)
#define GMAC_RWK_FILTER1_BYTE_MASK_FILTER1_BYTE_MASK_MASK  (0xFFFFFFFFU << GMAC_RWK_FILTER1_BYTE_MASK_FILTER1_BYTE_MASK_SHIFT) /* 0xFFFFFFFF */
/* RWK_FILTER2_BYTE_MASK */
#define GMAC_RWK_FILTER2_BYTE_MASK_OFFSET                  (0xC4U)
#define GMAC_RWK_FILTER2_BYTE_MASK_FILTER2_BYTE_MASK_SHIFT (0U)
#define GMAC_RWK_FILTER2_BYTE_MASK_FILTER2_BYTE_MASK_MASK  (0xFFFFFFFFU << GMAC_RWK_FILTER2_BYTE_MASK_FILTER2_BYTE_MASK_SHIFT) /* 0xFFFFFFFF */
/* RWK_FILTER3_BYTE_MASK */
#define GMAC_RWK_FILTER3_BYTE_MASK_OFFSET                  (0xC4U)
#define GMAC_RWK_FILTER3_BYTE_MASK_FILTER3_BYTE_MASK_SHIFT (0U)
#define GMAC_RWK_FILTER3_BYTE_MASK_FILTER3_BYTE_MASK_MASK  (0xFFFFFFFFU << GMAC_RWK_FILTER3_BYTE_MASK_FILTER3_BYTE_MASK_SHIFT) /* 0xFFFFFFFF */
/* RWK_FILTER01_CRC */
#define GMAC_RWK_FILTER01_CRC_OFFSET                       (0xC4U)
#define GMAC_RWK_FILTER01_CRC_FILTER0_CRC_SHIFT            (0U)
#define GMAC_RWK_FILTER01_CRC_FILTER0_CRC_MASK             (0xFFFFU << GMAC_RWK_FILTER01_CRC_FILTER0_CRC_SHIFT)         /* 0x0000FFFF */
#define GMAC_RWK_FILTER01_CRC_FILTER1_CRC_SHIFT            (16U)
#define GMAC_RWK_FILTER01_CRC_FILTER1_CRC_MASK             (0xFFFFU << GMAC_RWK_FILTER01_CRC_FILTER1_CRC_SHIFT)         /* 0xFFFF0000 */
/* RWK_FILTER23_CRC */
#define GMAC_RWK_FILTER23_CRC_OFFSET                       (0xC4U)
#define GMAC_RWK_FILTER23_CRC_FILTER2_CRC_SHIFT            (0U)
#define GMAC_RWK_FILTER23_CRC_FILTER2_CRC_MASK             (0xFFFFU << GMAC_RWK_FILTER23_CRC_FILTER2_CRC_SHIFT)         /* 0x0000FFFF */
#define GMAC_RWK_FILTER23_CRC_FILTER3_CRC_SHIFT            (16U)
#define GMAC_RWK_FILTER23_CRC_FILTER3_CRC_MASK             (0xFFFFU << GMAC_RWK_FILTER23_CRC_FILTER3_CRC_SHIFT)         /* 0xFFFF0000 */
/* RWK_FILTER_OFFSET */
#define GMAC_RWK_FILTER_OFFSET_OFFSET                      (0xC4U)
#define GMAC_RWK_FILTER_OFFSET_FILTER0_OFFSET_SHIFT        (0U)
#define GMAC_RWK_FILTER_OFFSET_FILTER0_OFFSET_MASK         (0xFFU << GMAC_RWK_FILTER_OFFSET_FILTER0_OFFSET_SHIFT)       /* 0x000000FF */
#define GMAC_RWK_FILTER_OFFSET_FILTER1_OFFSET_SHIFT        (8U)
#define GMAC_RWK_FILTER_OFFSET_FILTER1_OFFSET_MASK         (0xFFU << GMAC_RWK_FILTER_OFFSET_FILTER1_OFFSET_SHIFT)       /* 0x0000FF00 */
#define GMAC_RWK_FILTER_OFFSET_FILTER2_OFFSET_SHIFT        (16U)
#define GMAC_RWK_FILTER_OFFSET_FILTER2_OFFSET_MASK         (0xFFU << GMAC_RWK_FILTER_OFFSET_FILTER2_OFFSET_SHIFT)       /* 0x00FF0000 */
#define GMAC_RWK_FILTER_OFFSET_FILTER3_OFFSET_SHIFT        (24U)
#define GMAC_RWK_FILTER_OFFSET_FILTER3_OFFSET_MASK         (0xFFU << GMAC_RWK_FILTER_OFFSET_FILTER3_OFFSET_SHIFT)       /* 0xFF000000 */
/* RWK_FILTER_COMMAND */
#define GMAC_RWK_FILTER_COMMAND_OFFSET                     (0xC4U)
#define GMAC_RWK_FILTER_COMMAND_FILTER0_COMMAND_SHIFT      (0U)
#define GMAC_RWK_FILTER_COMMAND_FILTER0_COMMAND_MASK       (0xFU << GMAC_RWK_FILTER_COMMAND_FILTER0_COMMAND_SHIFT)      /* 0x0000000F */
#define GMAC_RWK_FILTER_COMMAND_FILTER1_COMMAND_SHIFT      (8U)
#define GMAC_RWK_FILTER_COMMAND_FILTER1_COMMAND_MASK       (0xFU << GMAC_RWK_FILTER_COMMAND_FILTER1_COMMAND_SHIFT)      /* 0x00000F00 */
#define GMAC_RWK_FILTER_COMMAND_FILTER2_COMMAND_SHIFT      (16U)
#define GMAC_RWK_FILTER_COMMAND_FILTER2_COMMAND_MASK       (0xFU << GMAC_RWK_FILTER_COMMAND_FILTER2_COMMAND_SHIFT)      /* 0x000F0000 */
/* MAC_VERSION */
#define GMAC_MAC_VERSION_OFFSET                            (0x110U)
#define GMAC_MAC_VERSION_RKVER_SHIFT                       (0U)
#define GMAC_MAC_VERSION_RKVER_MASK                        (0xFFU << GMAC_MAC_VERSION_RKVER_SHIFT)                      /* 0x000000FF */
#define GMAC_MAC_VERSION_USERVER_SHIFT                     (8U)
#define GMAC_MAC_VERSION_USERVER_MASK                      (0xFFU << GMAC_MAC_VERSION_USERVER_SHIFT)                    /* 0x0000FF00 */
/* MAC_DEBUG */
#define GMAC_MAC_DEBUG_OFFSET                              (0x114U)
#define GMAC_MAC_DEBUG                                     (0x0U)
#define GMAC_MAC_DEBUG_RPESTS_SHIFT                        (0U)
#define GMAC_MAC_DEBUG_RPESTS_MASK                         (0x1U << GMAC_MAC_DEBUG_RPESTS_SHIFT)                        /* 0x00000001 */
#define GMAC_MAC_DEBUG_RFCFCSTS_SHIFT                      (1U)
#define GMAC_MAC_DEBUG_RFCFCSTS_MASK                       (0x3U << GMAC_MAC_DEBUG_RFCFCSTS_SHIFT)                      /* 0x00000006 */
#define GMAC_MAC_DEBUG_TPESTS_SHIFT                        (16U)
#define GMAC_MAC_DEBUG_TPESTS_MASK                         (0x1U << GMAC_MAC_DEBUG_TPESTS_SHIFT)                        /* 0x00010000 */
#define GMAC_MAC_DEBUG_TFCSTS_SHIFT                        (17U)
#define GMAC_MAC_DEBUG_TFCSTS_MASK                         (0x3U << GMAC_MAC_DEBUG_TFCSTS_SHIFT)                        /* 0x00060000 */
/* MAC_HW_FEATURE0 */
#define GMAC_MAC_HW_FEATURE0_OFFSET                        (0x11CU)
#define GMAC_MAC_HW_FEATURE0                               (0x400113E1U)
#define GMAC_MAC_HW_FEATURE0_MIISEL_SHIFT                  (0U)
#define GMAC_MAC_HW_FEATURE0_MIISEL_MASK                   (0x1U << GMAC_MAC_HW_FEATURE0_MIISEL_SHIFT)                  /* 0x00000001 */
#define GMAC_MAC_HW_FEATURE0_GMIISEL_SHIFT                 (1U)
#define GMAC_MAC_HW_FEATURE0_GMIISEL_MASK                  (0x1U << GMAC_MAC_HW_FEATURE0_GMIISEL_SHIFT)                 /* 0x00000002 */
#define GMAC_MAC_HW_FEATURE0_HDSEL_SHIFT                   (2U)
#define GMAC_MAC_HW_FEATURE0_HDSEL_MASK                    (0x1U << GMAC_MAC_HW_FEATURE0_HDSEL_SHIFT)                   /* 0x00000004 */
#define GMAC_MAC_HW_FEATURE0_PCSSEL_SHIFT                  (3U)
#define GMAC_MAC_HW_FEATURE0_PCSSEL_MASK                   (0x1U << GMAC_MAC_HW_FEATURE0_PCSSEL_SHIFT)                  /* 0x00000008 */
#define GMAC_MAC_HW_FEATURE0_VLHASH_SHIFT                  (4U)
#define GMAC_MAC_HW_FEATURE0_VLHASH_MASK                   (0x1U << GMAC_MAC_HW_FEATURE0_VLHASH_SHIFT)                  /* 0x00000010 */
#define GMAC_MAC_HW_FEATURE0_SMASEL_SHIFT                  (5U)
#define GMAC_MAC_HW_FEATURE0_SMASEL_MASK                   (0x1U << GMAC_MAC_HW_FEATURE0_SMASEL_SHIFT)                  /* 0x00000020 */
#define GMAC_MAC_HW_FEATURE0_RWKSEL_SHIFT                  (6U)
#define GMAC_MAC_HW_FEATURE0_RWKSEL_MASK                   (0x1U << GMAC_MAC_HW_FEATURE0_RWKSEL_SHIFT)                  /* 0x00000040 */
#define GMAC_MAC_HW_FEATURE0_MGKSEL_SHIFT                  (7U)
#define GMAC_MAC_HW_FEATURE0_MGKSEL_MASK                   (0x1U << GMAC_MAC_HW_FEATURE0_MGKSEL_SHIFT)                  /* 0x00000080 */
#define GMAC_MAC_HW_FEATURE0_MMCSEL_SHIFT                  (8U)
#define GMAC_MAC_HW_FEATURE0_MMCSEL_MASK                   (0x1U << GMAC_MAC_HW_FEATURE0_MMCSEL_SHIFT)                  /* 0x00000100 */
#define GMAC_MAC_HW_FEATURE0_ARPOFFSEL_SHIFT               (9U)
#define GMAC_MAC_HW_FEATURE0_ARPOFFSEL_MASK                (0x1U << GMAC_MAC_HW_FEATURE0_ARPOFFSEL_SHIFT)               /* 0x00000200 */
#define GMAC_MAC_HW_FEATURE0_TSSEL_SHIFT                   (12U)
#define GMAC_MAC_HW_FEATURE0_TSSEL_MASK                    (0x1U << GMAC_MAC_HW_FEATURE0_TSSEL_SHIFT)                   /* 0x00001000 */
#define GMAC_MAC_HW_FEATURE0_EEESEL_SHIFT                  (13U)
#define GMAC_MAC_HW_FEATURE0_EEESEL_MASK                   (0x1U << GMAC_MAC_HW_FEATURE0_EEESEL_SHIFT)                  /* 0x00002000 */
#define GMAC_MAC_HW_FEATURE0_RXCOESEL_SHIFT                (16U)
#define GMAC_MAC_HW_FEATURE0_RXCOESEL_MASK                 (0x1U << GMAC_MAC_HW_FEATURE0_RXCOESEL_SHIFT)                /* 0x00010000 */
#define GMAC_MAC_HW_FEATURE0_ADDMACADRSEL_SHIFT            (18U)
#define GMAC_MAC_HW_FEATURE0_ADDMACADRSEL_MASK             (0x1FU << GMAC_MAC_HW_FEATURE0_ADDMACADRSEL_SHIFT)           /* 0x007C0000 */
#define GMAC_MAC_HW_FEATURE0_MACADR32SEL_SHIFT             (23U)
#define GMAC_MAC_HW_FEATURE0_MACADR32SEL_MASK              (0x1U << GMAC_MAC_HW_FEATURE0_MACADR32SEL_SHIFT)             /* 0x00800000 */
#define GMAC_MAC_HW_FEATURE0_TSSTSSEL_SHIFT                (25U)
#define GMAC_MAC_HW_FEATURE0_TSSTSSEL_MASK                 (0x3U << GMAC_MAC_HW_FEATURE0_TSSTSSEL_SHIFT)                /* 0x06000000 */
#define GMAC_MAC_HW_FEATURE0_SAVLANINS_SHIFT               (27U)
#define GMAC_MAC_HW_FEATURE0_SAVLANINS_MASK                (0x1U << GMAC_MAC_HW_FEATURE0_SAVLANINS_SHIFT)               /* 0x08000000 */
#define GMAC_MAC_HW_FEATURE0_ACTPHYSEL_SHIFT               (28U)
#define GMAC_MAC_HW_FEATURE0_ACTPHYSEL_MASK                (0xFU << GMAC_MAC_HW_FEATURE0_ACTPHYSEL_SHIFT)               /* 0xF0000000 */
/* MAC_HW_FEATURE1 */
#define GMAC_MAC_HW_FEATURE1_OFFSET                        (0x120U)
#define GMAC_MAC_HW_FEATURE1                               (0x10E4166U)
#define GMAC_MAC_HW_FEATURE1_RXFIFOSIZE_SHIFT              (0U)
#define GMAC_MAC_HW_FEATURE1_RXFIFOSIZE_MASK               (0x1FU << GMAC_MAC_HW_FEATURE1_RXFIFOSIZE_SHIFT)             /* 0x0000001F */
#define GMAC_MAC_HW_FEATURE1_SPRAM_SHIFT                   (5U)
#define GMAC_MAC_HW_FEATURE1_SPRAM_MASK                    (0x1U << GMAC_MAC_HW_FEATURE1_SPRAM_SHIFT)                   /* 0x00000020 */
#define GMAC_MAC_HW_FEATURE1_TXFIFOSIZE_SHIFT              (6U)
#define GMAC_MAC_HW_FEATURE1_TXFIFOSIZE_MASK               (0x1FU << GMAC_MAC_HW_FEATURE1_TXFIFOSIZE_SHIFT)             /* 0x000007C0 */
#define GMAC_MAC_HW_FEATURE1_OSTEN_SHIFT                   (11U)
#define GMAC_MAC_HW_FEATURE1_OSTEN_MASK                    (0x1U << GMAC_MAC_HW_FEATURE1_OSTEN_SHIFT)                   /* 0x00000800 */
#define GMAC_MAC_HW_FEATURE1_PTOEN_SHIFT                   (12U)
#define GMAC_MAC_HW_FEATURE1_PTOEN_MASK                    (0x1U << GMAC_MAC_HW_FEATURE1_PTOEN_SHIFT)                   /* 0x00001000 */
#define GMAC_MAC_HW_FEATURE1_ADDR64_SHIFT                  (14U)
#define GMAC_MAC_HW_FEATURE1_ADDR64_MASK                   (0x3U << GMAC_MAC_HW_FEATURE1_ADDR64_SHIFT)                  /* 0x0000C000 */
#define GMAC_MAC_HW_FEATURE1_DCBEN_SHIFT                   (16U)
#define GMAC_MAC_HW_FEATURE1_DCBEN_MASK                    (0x1U << GMAC_MAC_HW_FEATURE1_DCBEN_SHIFT)                   /* 0x00010000 */
#define GMAC_MAC_HW_FEATURE1_SPHEN_SHIFT                   (17U)
#define GMAC_MAC_HW_FEATURE1_SPHEN_MASK                    (0x1U << GMAC_MAC_HW_FEATURE1_SPHEN_SHIFT)                   /* 0x00020000 */
#define GMAC_MAC_HW_FEATURE1_TSOEN_SHIFT                   (18U)
#define GMAC_MAC_HW_FEATURE1_TSOEN_MASK                    (0x1U << GMAC_MAC_HW_FEATURE1_TSOEN_SHIFT)                   /* 0x00040000 */
#define GMAC_MAC_HW_FEATURE1_DBGMEMA_SHIFT                 (19U)
#define GMAC_MAC_HW_FEATURE1_DBGMEMA_MASK                  (0x1U << GMAC_MAC_HW_FEATURE1_DBGMEMA_SHIFT)                 /* 0x00080000 */
#define GMAC_MAC_HW_FEATURE1_AVSEL_SHIFT                   (20U)
#define GMAC_MAC_HW_FEATURE1_AVSEL_MASK                    (0x1U << GMAC_MAC_HW_FEATURE1_AVSEL_SHIFT)                   /* 0x00100000 */
#define GMAC_MAC_HW_FEATURE1_RAVSEL_SHIFT                  (21U)
#define GMAC_MAC_HW_FEATURE1_RAVSEL_MASK                   (0x1U << GMAC_MAC_HW_FEATURE1_RAVSEL_SHIFT)                  /* 0x00200000 */
#define GMAC_MAC_HW_FEATURE1_POUOST_SHIFT                  (23U)
#define GMAC_MAC_HW_FEATURE1_POUOST_MASK                   (0x1U << GMAC_MAC_HW_FEATURE1_POUOST_SHIFT)                  /* 0x00800000 */
#define GMAC_MAC_HW_FEATURE1_HASHTBLSZ_SHIFT               (24U)
#define GMAC_MAC_HW_FEATURE1_HASHTBLSZ_MASK                (0x3U << GMAC_MAC_HW_FEATURE1_HASHTBLSZ_SHIFT)               /* 0x03000000 */
#define GMAC_MAC_HW_FEATURE1_L3L4FNUM_SHIFT                (27U)
#define GMAC_MAC_HW_FEATURE1_L3L4FNUM_MASK                 (0xFU << GMAC_MAC_HW_FEATURE1_L3L4FNUM_SHIFT)                /* 0x78000000 */
/* MAC_HW_FEATURE2 */
#define GMAC_MAC_HW_FEATURE2_OFFSET                        (0x124U)
#define GMAC_MAC_HW_FEATURE2                               (0x11000000U)
#define GMAC_MAC_HW_FEATURE2_RXQCNT_SHIFT                  (0U)
#define GMAC_MAC_HW_FEATURE2_RXQCNT_MASK                   (0xFU << GMAC_MAC_HW_FEATURE2_RXQCNT_SHIFT)                  /* 0x0000000F */
#define GMAC_MAC_HW_FEATURE2_TXQCNT_SHIFT                  (6U)
#define GMAC_MAC_HW_FEATURE2_TXQCNT_MASK                   (0xFU << GMAC_MAC_HW_FEATURE2_TXQCNT_SHIFT)                  /* 0x000003C0 */
#define GMAC_MAC_HW_FEATURE2_RXCHCNT_SHIFT                 (12U)
#define GMAC_MAC_HW_FEATURE2_RXCHCNT_MASK                  (0xFU << GMAC_MAC_HW_FEATURE2_RXCHCNT_SHIFT)                 /* 0x0000F000 */
#define GMAC_MAC_HW_FEATURE2_TXCHCNT_SHIFT                 (18U)
#define GMAC_MAC_HW_FEATURE2_TXCHCNT_MASK                  (0xFU << GMAC_MAC_HW_FEATURE2_TXCHCNT_SHIFT)                 /* 0x003C0000 */
#define GMAC_MAC_HW_FEATURE2_PPSOUTNUM_SHIFT               (24U)
#define GMAC_MAC_HW_FEATURE2_PPSOUTNUM_MASK                (0x7U << GMAC_MAC_HW_FEATURE2_PPSOUTNUM_SHIFT)               /* 0x07000000 */
#define GMAC_MAC_HW_FEATURE2_AUXSNAPNUM_SHIFT              (28U)
#define GMAC_MAC_HW_FEATURE2_AUXSNAPNUM_MASK               (0x7U << GMAC_MAC_HW_FEATURE2_AUXSNAPNUM_SHIFT)              /* 0x70000000 */
/* MAC_HW_FEATURE3 */
#define GMAC_MAC_HW_FEATURE3_OFFSET                        (0x128U)
#define GMAC_MAC_HW_FEATURE3_NRVF_SHIFT                    (0U)
#define GMAC_MAC_HW_FEATURE3_NRVF_MASK                     (0x7U << GMAC_MAC_HW_FEATURE3_NRVF_SHIFT)                    /* 0x00000007 */
#define GMAC_MAC_HW_FEATURE3_CBTISEL_SHIFT                 (4U)
#define GMAC_MAC_HW_FEATURE3_CBTISEL_MASK                  (0x1U << GMAC_MAC_HW_FEATURE3_CBTISEL_SHIFT)                 /* 0x00000010 */
#define GMAC_MAC_HW_FEATURE3_DVLAN_SHIFT                   (5U)
#define GMAC_MAC_HW_FEATURE3_DVLAN_MASK                    (0x1U << GMAC_MAC_HW_FEATURE3_DVLAN_SHIFT)                   /* 0x00000020 */
#define GMAC_MAC_HW_FEATURE3_FRPBS_SHIFT                   (11U)
#define GMAC_MAC_HW_FEATURE3_FRPBS_MASK                    (0x3U << GMAC_MAC_HW_FEATURE3_FRPBS_SHIFT)                   /* 0x00001800 */
#define GMAC_MAC_HW_FEATURE3_FRPES_SHIFT                   (13U)
#define GMAC_MAC_HW_FEATURE3_FRPES_MASK                    (0x3U << GMAC_MAC_HW_FEATURE3_FRPES_SHIFT)                   /* 0x00006000 */
#define GMAC_MAC_HW_FEATURE3_ESTSEL_SHIFT                  (16U)
#define GMAC_MAC_HW_FEATURE3_ESTSEL_MASK                   (0x1U << GMAC_MAC_HW_FEATURE3_ESTSEL_SHIFT)                  /* 0x00010000 */
#define GMAC_MAC_HW_FEATURE3_ESTDEP_SHIFT                  (17U)
#define GMAC_MAC_HW_FEATURE3_ESTDEP_MASK                   (0x7U << GMAC_MAC_HW_FEATURE3_ESTDEP_SHIFT)                  /* 0x000E0000 */
#define GMAC_MAC_HW_FEATURE3_ESTWID_SHIFT                  (20U)
#define GMAC_MAC_HW_FEATURE3_ESTWID_MASK                   (0x3U << GMAC_MAC_HW_FEATURE3_ESTWID_SHIFT)                  /* 0x00300000 */
#define GMAC_MAC_HW_FEATURE3_FPESEL_SHIFT                  (26U)
#define GMAC_MAC_HW_FEATURE3_FPESEL_MASK                   (0x1U << GMAC_MAC_HW_FEATURE3_FPESEL_SHIFT)                  /* 0x04000000 */
#define GMAC_MAC_HW_FEATURE3_TBSSEL_SHIFT                  (27U)
#define GMAC_MAC_HW_FEATURE3_TBSSEL_MASK                   (0x1U << GMAC_MAC_HW_FEATURE3_TBSSEL_SHIFT)                  /* 0x08000000 */
#define GMAC_MAC_HW_FEATURE3_ASP_SHIFT                     (28U)
#define GMAC_MAC_HW_FEATURE3_ASP_MASK                      (0x3U << GMAC_MAC_HW_FEATURE3_ASP_SHIFT)                     /* 0x30000000 */
/* MAC_MDIO_ADDRESS */
#define GMAC_MAC_MDIO_ADDRESS_OFFSET                       (0x200U)
#define GMAC_MAC_MDIO_ADDRESS_GB_SHIFT                     (0U)
#define GMAC_MAC_MDIO_ADDRESS_GB_MASK                      (0x1U << GMAC_MAC_MDIO_ADDRESS_GB_SHIFT)                     /* 0x00000001 */
#define GMAC_MAC_MDIO_ADDRESS_C45E_SHIFT                   (1U)
#define GMAC_MAC_MDIO_ADDRESS_C45E_MASK                    (0x1U << GMAC_MAC_MDIO_ADDRESS_C45E_SHIFT)                   /* 0x00000002 */
#define GMAC_MAC_MDIO_ADDRESS_GOC_0_SHIFT                  (2U)
#define GMAC_MAC_MDIO_ADDRESS_GOC_0_MASK                   (0x1U << GMAC_MAC_MDIO_ADDRESS_GOC_0_SHIFT)                  /* 0x00000004 */
#define GMAC_MAC_MDIO_ADDRESS_GOC_1_SHIFT                  (3U)
#define GMAC_MAC_MDIO_ADDRESS_GOC_1_MASK                   (0x1U << GMAC_MAC_MDIO_ADDRESS_GOC_1_SHIFT)                  /* 0x00000008 */
#define GMAC_MAC_MDIO_ADDRESS_SKAP_SHIFT                   (4U)
#define GMAC_MAC_MDIO_ADDRESS_SKAP_MASK                    (0x1U << GMAC_MAC_MDIO_ADDRESS_SKAP_SHIFT)                   /* 0x00000010 */
#define GMAC_MAC_MDIO_ADDRESS_CR_SHIFT                     (8U)
#define GMAC_MAC_MDIO_ADDRESS_CR_MASK                      (0xFU << GMAC_MAC_MDIO_ADDRESS_CR_SHIFT)                     /* 0x00000F00 */
#define GMAC_MAC_MDIO_ADDRESS_NTC_SHIFT                    (12U)
#define GMAC_MAC_MDIO_ADDRESS_NTC_MASK                     (0x7U << GMAC_MAC_MDIO_ADDRESS_NTC_SHIFT)                    /* 0x00007000 */
#define GMAC_MAC_MDIO_ADDRESS_RDA_SHIFT                    (16U)
#define GMAC_MAC_MDIO_ADDRESS_RDA_MASK                     (0x1FU << GMAC_MAC_MDIO_ADDRESS_RDA_SHIFT)                   /* 0x001F0000 */
#define GMAC_MAC_MDIO_ADDRESS_PA_SHIFT                     (21U)
#define GMAC_MAC_MDIO_ADDRESS_PA_MASK                      (0x1FU << GMAC_MAC_MDIO_ADDRESS_PA_SHIFT)                    /* 0x03E00000 */
#define GMAC_MAC_MDIO_ADDRESS_BTB_SHIFT                    (26U)
#define GMAC_MAC_MDIO_ADDRESS_BTB_MASK                     (0x1U << GMAC_MAC_MDIO_ADDRESS_BTB_SHIFT)                    /* 0x04000000 */
#define GMAC_MAC_MDIO_ADDRESS_PSE_SHIFT                    (27U)
#define GMAC_MAC_MDIO_ADDRESS_PSE_MASK                     (0x1U << GMAC_MAC_MDIO_ADDRESS_PSE_SHIFT)                    /* 0x08000000 */
/* MAC_MDIO_DATA */
#define GMAC_MAC_MDIO_DATA_OFFSET                          (0x204U)
#define GMAC_MAC_MDIO_DATA_GD_SHIFT                        (0U)
#define GMAC_MAC_MDIO_DATA_GD_MASK                         (0xFFFFU << GMAC_MAC_MDIO_DATA_GD_SHIFT)                     /* 0x0000FFFF */
#define GMAC_MAC_MDIO_DATA_RA_SHIFT                        (16U)
#define GMAC_MAC_MDIO_DATA_RA_MASK                         (0x1U << GMAC_MAC_MDIO_DATA_RA_SHIFT)                        /* 0x00010000 */
/* MAC_ARP_ADDRESS */
#define GMAC_MAC_ARP_ADDRESS_OFFSET                        (0x210U)
#define GMAC_MAC_ARP_ADDRESS_ARPPA_SHIFT                   (0U)
#define GMAC_MAC_ARP_ADDRESS_ARPPA_MASK                    (0xFFFFFFFFU << GMAC_MAC_ARP_ADDRESS_ARPPA_SHIFT)            /* 0xFFFFFFFF */
/* MAC_CSR_SW_CTRL */
#define GMAC_MAC_CSR_SW_CTRL_OFFSET                        (0x230U)
#define GMAC_MAC_CSR_SW_CTRL_RCWE_SHIFT                    (0U)
#define GMAC_MAC_CSR_SW_CTRL_RCWE_MASK                     (0x1U << GMAC_MAC_CSR_SW_CTRL_RCWE_SHIFT)                    /* 0x00000001 */
/* MAC_EXT_CFG1 */
#define GMAC_MAC_EXT_CFG1_OFFSET                           (0x238U)
#define GMAC_MAC_EXT_CFG1_SPLOFST_SHIFT                    (0U)
#define GMAC_MAC_EXT_CFG1_SPLOFST_MASK                     (0x7FU << GMAC_MAC_EXT_CFG1_SPLOFST_SHIFT)                   /* 0x0000007F */
#define GMAC_MAC_EXT_CFG1_SPLM_SHIFT                       (8U)
#define GMAC_MAC_EXT_CFG1_SPLM_MASK                        (0x3U << GMAC_MAC_EXT_CFG1_SPLM_SHIFT)                       /* 0x00000300 */
/* MAC_ADDRESS0_HIGH */
#define GMAC_MAC_ADDRESS0_HIGH_OFFSET                      (0x300U)
#define GMAC_MAC_ADDRESS0_HIGH_ADDRHI_SHIFT                (0U)
#define GMAC_MAC_ADDRESS0_HIGH_ADDRHI_MASK                 (0xFFFFU << GMAC_MAC_ADDRESS0_HIGH_ADDRHI_SHIFT)             /* 0x0000FFFF */
#define GMAC_MAC_ADDRESS0_HIGH_AE_SHIFT                    (31U)
#define GMAC_MAC_ADDRESS0_HIGH_AE_MASK                     (0x1U << GMAC_MAC_ADDRESS0_HIGH_AE_SHIFT)                    /* 0x80000000 */
/* MAC_ADDRESS0_LOW */
#define GMAC_MAC_ADDRESS0_LOW_OFFSET                       (0x304U)
#define GMAC_MAC_ADDRESS0_LOW_ADDRLO_SHIFT                 (0U)
#define GMAC_MAC_ADDRESS0_LOW_ADDRLO_MASK                  (0xFFFFFFFFU << GMAC_MAC_ADDRESS0_LOW_ADDRLO_SHIFT)          /* 0xFFFFFFFF */
/* MMC_CONTROL */
#define GMAC_MMC_CONTROL_OFFSET                            (0x700U)
#define GMAC_MMC_CONTROL_CNTRST_SHIFT                      (0U)
#define GMAC_MMC_CONTROL_CNTRST_MASK                       (0x1U << GMAC_MMC_CONTROL_CNTRST_SHIFT)                      /* 0x00000001 */
#define GMAC_MMC_CONTROL_CNTSTOPRO_SHIFT                   (1U)
#define GMAC_MMC_CONTROL_CNTSTOPRO_MASK                    (0x1U << GMAC_MMC_CONTROL_CNTSTOPRO_SHIFT)                   /* 0x00000002 */
#define GMAC_MMC_CONTROL_RSTONRD_SHIFT                     (2U)
#define GMAC_MMC_CONTROL_RSTONRD_MASK                      (0x1U << GMAC_MMC_CONTROL_RSTONRD_SHIFT)                     /* 0x00000004 */
#define GMAC_MMC_CONTROL_CNTFREEZ_SHIFT                    (3U)
#define GMAC_MMC_CONTROL_CNTFREEZ_MASK                     (0x1U << GMAC_MMC_CONTROL_CNTFREEZ_SHIFT)                    /* 0x00000008 */
#define GMAC_MMC_CONTROL_CNTPRST_SHIFT                     (4U)
#define GMAC_MMC_CONTROL_CNTPRST_MASK                      (0x1U << GMAC_MMC_CONTROL_CNTPRST_SHIFT)                     /* 0x00000010 */
#define GMAC_MMC_CONTROL_CNTPRSTLVL_SHIFT                  (5U)
#define GMAC_MMC_CONTROL_CNTPRSTLVL_MASK                   (0x1U << GMAC_MMC_CONTROL_CNTPRSTLVL_SHIFT)                  /* 0x00000020 */
#define GMAC_MMC_CONTROL_UCDBC_SHIFT                       (8U)
#define GMAC_MMC_CONTROL_UCDBC_MASK                        (0x1U << GMAC_MMC_CONTROL_UCDBC_SHIFT)                       /* 0x00000100 */
/* MMC_RX_INTERRUPT */
#define GMAC_MMC_RX_INTERRUPT_OFFSET                       (0x704U)
#define GMAC_MMC_RX_INTERRUPT                              (0x0U)
#define GMAC_MMC_RX_INTERRUPT_RXGBPKTIS_SHIFT              (0U)
#define GMAC_MMC_RX_INTERRUPT_RXGBPKTIS_MASK               (0x1U << GMAC_MMC_RX_INTERRUPT_RXGBPKTIS_SHIFT)              /* 0x00000001 */
#define GMAC_MMC_RX_INTERRUPT_RXGBOCTIS_SHIFT              (1U)
#define GMAC_MMC_RX_INTERRUPT_RXGBOCTIS_MASK               (0x1U << GMAC_MMC_RX_INTERRUPT_RXGBOCTIS_SHIFT)              /* 0x00000002 */
#define GMAC_MMC_RX_INTERRUPT_RXGOCTIS_SHIFT               (2U)
#define GMAC_MMC_RX_INTERRUPT_RXGOCTIS_MASK                (0x1U << GMAC_MMC_RX_INTERRUPT_RXGOCTIS_SHIFT)               /* 0x00000004 */
#define GMAC_MMC_RX_INTERRUPT_RXMCGPIS_SHIFT               (4U)
#define GMAC_MMC_RX_INTERRUPT_RXMCGPIS_MASK                (0x1U << GMAC_MMC_RX_INTERRUPT_RXMCGPIS_SHIFT)               /* 0x00000010 */
#define GMAC_MMC_RX_INTERRUPT_RXCRCERPIS_SHIFT             (5U)
#define GMAC_MMC_RX_INTERRUPT_RXCRCERPIS_MASK              (0x1U << GMAC_MMC_RX_INTERRUPT_RXCRCERPIS_SHIFT)             /* 0x00000020 */
#define GMAC_MMC_RX_INTERRUPT_RXLENERPIS_SHIFT             (18U)
#define GMAC_MMC_RX_INTERRUPT_RXLENERPIS_MASK              (0x1U << GMAC_MMC_RX_INTERRUPT_RXLENERPIS_SHIFT)             /* 0x00040000 */
#define GMAC_MMC_RX_INTERRUPT_RXPAUSPIS_SHIFT              (20U)
#define GMAC_MMC_RX_INTERRUPT_RXPAUSPIS_MASK               (0x1U << GMAC_MMC_RX_INTERRUPT_RXPAUSPIS_SHIFT)              /* 0x00100000 */
#define GMAC_MMC_RX_INTERRUPT_RXFOVPIS_SHIFT               (21U)
#define GMAC_MMC_RX_INTERRUPT_RXFOVPIS_MASK                (0x1U << GMAC_MMC_RX_INTERRUPT_RXFOVPIS_SHIFT)               /* 0x00200000 */
/* MMC_TX_INTERRUPT */
#define GMAC_MMC_TX_INTERRUPT_OFFSET                       (0x708U)
#define GMAC_MMC_TX_INTERRUPT                              (0x0U)
#define GMAC_MMC_TX_INTERRUPT_TXGBOCTIS_SHIFT              (0U)
#define GMAC_MMC_TX_INTERRUPT_TXGBOCTIS_MASK               (0x1U << GMAC_MMC_TX_INTERRUPT_TXGBOCTIS_SHIFT)              /* 0x00000001 */
#define GMAC_MMC_TX_INTERRUPT_TXGBPKTIS_SHIFT              (1U)
#define GMAC_MMC_TX_INTERRUPT_TXGBPKTIS_MASK               (0x1U << GMAC_MMC_TX_INTERRUPT_TXGBPKTIS_SHIFT)              /* 0x00000002 */
#define GMAC_MMC_TX_INTERRUPT_TXUFLOWERPIS_SHIFT           (13U)
#define GMAC_MMC_TX_INTERRUPT_TXUFLOWERPIS_MASK            (0x1U << GMAC_MMC_TX_INTERRUPT_TXUFLOWERPIS_SHIFT)           /* 0x00002000 */
#define GMAC_MMC_TX_INTERRUPT_TXCARERPIS_SHIFT             (19U)
#define GMAC_MMC_TX_INTERRUPT_TXCARERPIS_MASK              (0x1U << GMAC_MMC_TX_INTERRUPT_TXCARERPIS_SHIFT)             /* 0x00080000 */
#define GMAC_MMC_TX_INTERRUPT_TXGOCTIS_SHIFT               (20U)
#define GMAC_MMC_TX_INTERRUPT_TXGOCTIS_MASK                (0x1U << GMAC_MMC_TX_INTERRUPT_TXGOCTIS_SHIFT)               /* 0x00100000 */
#define GMAC_MMC_TX_INTERRUPT_TXGPKTIS_SHIFT               (21U)
#define GMAC_MMC_TX_INTERRUPT_TXGPKTIS_MASK                (0x1U << GMAC_MMC_TX_INTERRUPT_TXGPKTIS_SHIFT)               /* 0x00200000 */
#define GMAC_MMC_TX_INTERRUPT_TXPAUSPIS_SHIFT              (23U)
#define GMAC_MMC_TX_INTERRUPT_TXPAUSPIS_MASK               (0x1U << GMAC_MMC_TX_INTERRUPT_TXPAUSPIS_SHIFT)              /* 0x00800000 */
/* MMC_RX_INTERRUPT_MASK */
#define GMAC_MMC_RX_INTERRUPT_MASK_OFFSET                  (0x70CU)
#define GMAC_MMC_RX_INTERRUPT_MASK_RXGBPKTIM_SHIFT         (0U)
#define GMAC_MMC_RX_INTERRUPT_MASK_RXGBPKTIM_MASK          (0x1U << GMAC_MMC_RX_INTERRUPT_MASK_RXGBPKTIM_SHIFT)         /* 0x00000001 */
#define GMAC_MMC_RX_INTERRUPT_MASK_RXGBOCTIM_SHIFT         (1U)
#define GMAC_MMC_RX_INTERRUPT_MASK_RXGBOCTIM_MASK          (0x1U << GMAC_MMC_RX_INTERRUPT_MASK_RXGBOCTIM_SHIFT)         /* 0x00000002 */
#define GMAC_MMC_RX_INTERRUPT_MASK_RXGOCTIM_SHIFT          (2U)
#define GMAC_MMC_RX_INTERRUPT_MASK_RXGOCTIM_MASK           (0x1U << GMAC_MMC_RX_INTERRUPT_MASK_RXGOCTIM_SHIFT)          /* 0x00000004 */
#define GMAC_MMC_RX_INTERRUPT_MASK_RXMCGPIM_SHIFT          (4U)
#define GMAC_MMC_RX_INTERRUPT_MASK_RXMCGPIM_MASK           (0x1U << GMAC_MMC_RX_INTERRUPT_MASK_RXMCGPIM_SHIFT)          /* 0x00000010 */
#define GMAC_MMC_RX_INTERRUPT_MASK_RXCRCERPIM_SHIFT        (5U)
#define GMAC_MMC_RX_INTERRUPT_MASK_RXCRCERPIM_MASK         (0x1U << GMAC_MMC_RX_INTERRUPT_MASK_RXCRCERPIM_SHIFT)        /* 0x00000020 */
#define GMAC_MMC_RX_INTERRUPT_MASK_RXLENERPIM_SHIFT        (18U)
#define GMAC_MMC_RX_INTERRUPT_MASK_RXLENERPIM_MASK         (0x1U << GMAC_MMC_RX_INTERRUPT_MASK_RXLENERPIM_SHIFT)        /* 0x00040000 */
#define GMAC_MMC_RX_INTERRUPT_MASK_RXPAUSPIM_SHIFT         (10U)
#define GMAC_MMC_RX_INTERRUPT_MASK_RXPAUSPIM_MASK          (0x1U << GMAC_MMC_RX_INTERRUPT_MASK_RXPAUSPIM_SHIFT)         /* 0x00000400 */
#define GMAC_MMC_RX_INTERRUPT_MASK_RXFOVPIM_SHIFT          (21U)
#define GMAC_MMC_RX_INTERRUPT_MASK_RXFOVPIM_MASK           (0x1U << GMAC_MMC_RX_INTERRUPT_MASK_RXFOVPIM_SHIFT)          /* 0x00200000 */
/* MMC_TX_INTERRUPT_MASK */
#define GMAC_MMC_TX_INTERRUPT_MASK_OFFSET                  (0x710U)
#define GMAC_MMC_TX_INTERRUPT_MASK_TXGBOCTIM_SHIFT         (0U)
#define GMAC_MMC_TX_INTERRUPT_MASK_TXGBOCTIM_MASK          (0x1U << GMAC_MMC_TX_INTERRUPT_MASK_TXGBOCTIM_SHIFT)         /* 0x00000001 */
#define GMAC_MMC_TX_INTERRUPT_MASK_TXGBPKTIM_SHIFT         (1U)
#define GMAC_MMC_TX_INTERRUPT_MASK_TXGBPKTIM_MASK          (0x1U << GMAC_MMC_TX_INTERRUPT_MASK_TXGBPKTIM_SHIFT)         /* 0x00000002 */
#define GMAC_MMC_TX_INTERRUPT_MASK_TXUFLOWERPIM_SHIFT      (13U)
#define GMAC_MMC_TX_INTERRUPT_MASK_TXUFLOWERPIM_MASK       (0x1U << GMAC_MMC_TX_INTERRUPT_MASK_TXUFLOWERPIM_SHIFT)      /* 0x00002000 */
#define GMAC_MMC_TX_INTERRUPT_MASK_TXCARERPIM_SHIFT        (19U)
#define GMAC_MMC_TX_INTERRUPT_MASK_TXCARERPIM_MASK         (0x1U << GMAC_MMC_TX_INTERRUPT_MASK_TXCARERPIM_SHIFT)        /* 0x00080000 */
#define GMAC_MMC_TX_INTERRUPT_MASK_TXGOCTIM_SHIFT          (20U)
#define GMAC_MMC_TX_INTERRUPT_MASK_TXGOCTIM_MASK           (0x1U << GMAC_MMC_TX_INTERRUPT_MASK_TXGOCTIM_SHIFT)          /* 0x00100000 */
#define GMAC_MMC_TX_INTERRUPT_MASK_TXGPKTIM_SHIFT          (21U)
#define GMAC_MMC_TX_INTERRUPT_MASK_TXGPKTIM_MASK           (0x1U << GMAC_MMC_TX_INTERRUPT_MASK_TXGPKTIM_SHIFT)          /* 0x00200000 */
#define GMAC_MMC_TX_INTERRUPT_MASK_TXPAUSPIM_SHIFT         (23U)
#define GMAC_MMC_TX_INTERRUPT_MASK_TXPAUSPIM_MASK          (0x1U << GMAC_MMC_TX_INTERRUPT_MASK_TXPAUSPIM_SHIFT)         /* 0x00800000 */
/* TX_OCTET_COUNT_GOOD_BAD */
#define GMAC_TX_OCTET_COUNT_GOOD_BAD_OFFSET                (0x714U)
#define GMAC_TX_OCTET_COUNT_GOOD_BAD                       (0x0U)
#define GMAC_TX_OCTET_COUNT_GOOD_BAD_TXOCTGB_SHIFT         (0U)
#define GMAC_TX_OCTET_COUNT_GOOD_BAD_TXOCTGB_MASK          (0xFFFFFFFFU << GMAC_TX_OCTET_COUNT_GOOD_BAD_TXOCTGB_SHIFT)  /* 0xFFFFFFFF */
/* TX_PACKET_COUNT_GOOD_BAD */
#define GMAC_TX_PACKET_COUNT_GOOD_BAD_OFFSET               (0x718U)
#define GMAC_TX_PACKET_COUNT_GOOD_BAD                      (0x0U)
#define GMAC_TX_PACKET_COUNT_GOOD_BAD_TXPKTGB_SHIFT        (0U)
#define GMAC_TX_PACKET_COUNT_GOOD_BAD_TXPKTGB_MASK         (0xFFFFFFFFU << GMAC_TX_PACKET_COUNT_GOOD_BAD_TXPKTGB_SHIFT) /* 0xFFFFFFFF */
/* TX_UNDERFLOW_ERROR_PACKETS */
#define GMAC_TX_UNDERFLOW_ERROR_PACKETS_OFFSET             (0x748U)
#define GMAC_TX_UNDERFLOW_ERROR_PACKETS                    (0x0U)
#define GMAC_TX_UNDERFLOW_ERROR_PACKETS_TXUNDRFLW_SHIFT    (0U)
#define GMAC_TX_UNDERFLOW_ERROR_PACKETS_TXUNDRFLW_MASK     (0xFFFFFFFFU << GMAC_TX_UNDERFLOW_ERROR_PACKETS_TXUNDRFLW_SHIFT) /* 0xFFFFFFFF */
/* TX_CARRIER_ERROR_PACKETS */
#define GMAC_TX_CARRIER_ERROR_PACKETS_OFFSET               (0x760U)
#define GMAC_TX_CARRIER_ERROR_PACKETS                      (0x0U)
#define GMAC_TX_CARRIER_ERROR_PACKETS_TXCARR_SHIFT         (0U)
#define GMAC_TX_CARRIER_ERROR_PACKETS_TXCARR_MASK          (0xFFFFFFFFU << GMAC_TX_CARRIER_ERROR_PACKETS_TXCARR_SHIFT)  /* 0xFFFFFFFF */
/* TX_OCTET_COUNT_GOOD */
#define GMAC_TX_OCTET_COUNT_GOOD_OFFSET                    (0x764U)
#define GMAC_TX_OCTET_COUNT_GOOD                           (0x0U)
#define GMAC_TX_OCTET_COUNT_GOOD_TXOCTG_SHIFT              (0U)
#define GMAC_TX_OCTET_COUNT_GOOD_TXOCTG_MASK               (0xFFFFFFFFU << GMAC_TX_OCTET_COUNT_GOOD_TXOCTG_SHIFT)       /* 0xFFFFFFFF */
/* TX_PACKET_COUNT_GOOD */
#define GMAC_TX_PACKET_COUNT_GOOD_OFFSET                   (0x768U)
#define GMAC_TX_PACKET_COUNT_GOOD                          (0x0U)
#define GMAC_TX_PACKET_COUNT_GOOD_TXPKTG_SHIFT             (0U)
#define GMAC_TX_PACKET_COUNT_GOOD_TXPKTG_MASK              (0xFFFFFFFFU << GMAC_TX_PACKET_COUNT_GOOD_TXPKTG_SHIFT)      /* 0xFFFFFFFF */
/* TX_PAUSE_PACKETS */
#define GMAC_TX_PAUSE_PACKETS_OFFSET                       (0x770U)
#define GMAC_TX_PAUSE_PACKETS                              (0x0U)
#define GMAC_TX_PAUSE_PACKETS_TXPAUSE_SHIFT                (0U)
#define GMAC_TX_PAUSE_PACKETS_TXPAUSE_MASK                 (0xFFFFFFFFU << GMAC_TX_PAUSE_PACKETS_TXPAUSE_SHIFT)         /* 0xFFFFFFFF */
/* RX_PACKETS_COUNT_GOOD_BAD */
#define GMAC_RX_PACKETS_COUNT_GOOD_BAD_OFFSET              (0x780U)
#define GMAC_RX_PACKETS_COUNT_GOOD_BAD                     (0x0U)
#define GMAC_RX_PACKETS_COUNT_GOOD_BAD_RXPKTGB_SHIFT       (0U)
#define GMAC_RX_PACKETS_COUNT_GOOD_BAD_RXPKTGB_MASK        (0xFFFFFFFFU << GMAC_RX_PACKETS_COUNT_GOOD_BAD_RXPKTGB_SHIFT) /* 0xFFFFFFFF */
/* RX_OCTET_COUNT_GOOD_BAD */
#define GMAC_RX_OCTET_COUNT_GOOD_BAD_OFFSET                (0x784U)
#define GMAC_RX_OCTET_COUNT_GOOD_BAD                       (0x0U)
#define GMAC_RX_OCTET_COUNT_GOOD_BAD_RXOCTGB_SHIFT         (0U)
#define GMAC_RX_OCTET_COUNT_GOOD_BAD_RXOCTGB_MASK          (0xFFFFFFFFU << GMAC_RX_OCTET_COUNT_GOOD_BAD_RXOCTGB_SHIFT)  /* 0xFFFFFFFF */
/* RX_OCTET_COUNT_GOOD */
#define GMAC_RX_OCTET_COUNT_GOOD_OFFSET                    (0x788U)
#define GMAC_RX_OCTET_COUNT_GOOD                           (0x0U)
#define GMAC_RX_OCTET_COUNT_GOOD_RXOCTG_SHIFT              (0U)
#define GMAC_RX_OCTET_COUNT_GOOD_RXOCTG_MASK               (0xFFFFFFFFU << GMAC_RX_OCTET_COUNT_GOOD_RXOCTG_SHIFT)       /* 0xFFFFFFFF */
/* RX_MULTICAST_PACKETS_GOOD */
#define GMAC_RX_MULTICAST_PACKETS_GOOD_OFFSET              (0x790U)
#define GMAC_RX_MULTICAST_PACKETS_GOOD                     (0x0U)
#define GMAC_RX_MULTICAST_PACKETS_GOOD_RXMCASTG_SHIFT      (0U)
#define GMAC_RX_MULTICAST_PACKETS_GOOD_RXMCASTG_MASK       (0xFFFFFFFFU << GMAC_RX_MULTICAST_PACKETS_GOOD_RXMCASTG_SHIFT) /* 0xFFFFFFFF */
/* RX_CRC_ERROR_PACKETS */
#define GMAC_RX_CRC_ERROR_PACKETS_OFFSET                   (0x794U)
#define GMAC_RX_CRC_ERROR_PACKETS                          (0x0U)
#define GMAC_RX_CRC_ERROR_PACKETS_RXCRCERR_SHIFT           (0U)
#define GMAC_RX_CRC_ERROR_PACKETS_RXCRCERR_MASK            (0xFFFFFFFFU << GMAC_RX_CRC_ERROR_PACKETS_RXCRCERR_SHIFT)    /* 0xFFFFFFFF */
/* RX_LENGTH_ERROR_PACKETS */
#define GMAC_RX_LENGTH_ERROR_PACKETS_OFFSET                (0x7C8U)
#define GMAC_RX_LENGTH_ERROR_PACKETS                       (0x0U)
#define GMAC_RX_LENGTH_ERROR_PACKETS_RXLENERR_SHIFT        (0U)
#define GMAC_RX_LENGTH_ERROR_PACKETS_RXLENERR_MASK         (0xFFFFFFFFU << GMAC_RX_LENGTH_ERROR_PACKETS_RXLENERR_SHIFT) /* 0xFFFFFFFF */
/* RX_PAUSE_PACKETS */
#define GMAC_RX_PAUSE_PACKETS_OFFSET                       (0x7D0U)
#define GMAC_RX_PAUSE_PACKETS                              (0x0U)
#define GMAC_RX_PAUSE_PACKETS_RXPAUSEPKT_SHIFT             (0U)
#define GMAC_RX_PAUSE_PACKETS_RXPAUSEPKT_MASK              (0xFFFFFFFFU << GMAC_RX_PAUSE_PACKETS_RXPAUSEPKT_SHIFT)      /* 0xFFFFFFFF */
/* RX_FIFO_OVERFLOW_PACKETS */
#define GMAC_RX_FIFO_OVERFLOW_PACKETS_OFFSET               (0x7D4U)
#define GMAC_RX_FIFO_OVERFLOW_PACKETS                      (0x0U)
#define GMAC_RX_FIFO_OVERFLOW_PACKETS_RXFIFOOVFL_SHIFT     (0U)
#define GMAC_RX_FIFO_OVERFLOW_PACKETS_RXFIFOOVFL_MASK      (0xFFFFFFFFU << GMAC_RX_FIFO_OVERFLOW_PACKETS_RXFIFOOVFL_SHIFT) /* 0xFFFFFFFF */
/* MMC_IPC_RX_INTERRUPT_MASK */
#define GMAC_MMC_IPC_RX_INTERRUPT_MASK_OFFSET              (0x800U)
#define GMAC_MMC_IPC_RX_INTERRUPT_MASK_RXIPV4GPIM_SHIFT    (0U)
#define GMAC_MMC_IPC_RX_INTERRUPT_MASK_RXIPV4GPIM_MASK     (0x1U << GMAC_MMC_IPC_RX_INTERRUPT_MASK_RXIPV4GPIM_SHIFT)    /* 0x00000001 */
#define GMAC_MMC_IPC_RX_INTERRUPT_MASK_RXIPV4HERPIM_SHIFT  (1U)
#define GMAC_MMC_IPC_RX_INTERRUPT_MASK_RXIPV4HERPIM_MASK   (0x1U << GMAC_MMC_IPC_RX_INTERRUPT_MASK_RXIPV4HERPIM_SHIFT)  /* 0x00000002 */
#define GMAC_MMC_IPC_RX_INTERRUPT_MASK_RXIPV6GPIM_SHIFT    (5U)
#define GMAC_MMC_IPC_RX_INTERRUPT_MASK_RXIPV6GPIM_MASK     (0x1U << GMAC_MMC_IPC_RX_INTERRUPT_MASK_RXIPV6GPIM_SHIFT)    /* 0x00000020 */
#define GMAC_MMC_IPC_RX_INTERRUPT_MASK_RXIPV6HERPIM_SHIFT  (6U)
#define GMAC_MMC_IPC_RX_INTERRUPT_MASK_RXIPV6HERPIM_MASK   (0x1U << GMAC_MMC_IPC_RX_INTERRUPT_MASK_RXIPV6HERPIM_SHIFT)  /* 0x00000040 */
#define GMAC_MMC_IPC_RX_INTERRUPT_MASK_RXUDPERPIM_SHIFT    (9U)
#define GMAC_MMC_IPC_RX_INTERRUPT_MASK_RXUDPERPIM_MASK     (0x1U << GMAC_MMC_IPC_RX_INTERRUPT_MASK_RXUDPERPIM_SHIFT)    /* 0x00000200 */
#define GMAC_MMC_IPC_RX_INTERRUPT_MASK_RXTCPERPIM_SHIFT    (11U)
#define GMAC_MMC_IPC_RX_INTERRUPT_MASK_RXTCPERPIM_MASK     (0x1U << GMAC_MMC_IPC_RX_INTERRUPT_MASK_RXTCPERPIM_SHIFT)    /* 0x00000800 */
#define GMAC_MMC_IPC_RX_INTERRUPT_MASK_RXICMPERPIM_SHIFT   (13U)
#define GMAC_MMC_IPC_RX_INTERRUPT_MASK_RXICMPERPIM_MASK    (0x1U << GMAC_MMC_IPC_RX_INTERRUPT_MASK_RXICMPERPIM_SHIFT)   /* 0x00002000 */
#define GMAC_MMC_IPC_RX_INTERRUPT_MASK_RXIPV4HEROIM_SHIFT  (17U)
#define GMAC_MMC_IPC_RX_INTERRUPT_MASK_RXIPV4HEROIM_MASK   (0x1U << GMAC_MMC_IPC_RX_INTERRUPT_MASK_RXIPV4HEROIM_SHIFT)  /* 0x00020000 */
#define GMAC_MMC_IPC_RX_INTERRUPT_MASK_RXIPV6HEROIM_SHIFT  (22U)
#define GMAC_MMC_IPC_RX_INTERRUPT_MASK_RXIPV6HEROIM_MASK   (0x1U << GMAC_MMC_IPC_RX_INTERRUPT_MASK_RXIPV6HEROIM_SHIFT)  /* 0x00400000 */
#define GMAC_MMC_IPC_RX_INTERRUPT_MASK_RXUDPEROIM_SHIFT    (25U)
#define GMAC_MMC_IPC_RX_INTERRUPT_MASK_RXUDPEROIM_MASK     (0x1U << GMAC_MMC_IPC_RX_INTERRUPT_MASK_RXUDPEROIM_SHIFT)    /* 0x02000000 */
#define GMAC_MMC_IPC_RX_INTERRUPT_MASK_RXTCPEROIM_SHIFT    (27U)
#define GMAC_MMC_IPC_RX_INTERRUPT_MASK_RXTCPEROIM_MASK     (0x1U << GMAC_MMC_IPC_RX_INTERRUPT_MASK_RXTCPEROIM_SHIFT)    /* 0x08000000 */
#define GMAC_MMC_IPC_RX_INTERRUPT_MASK_RXICMPEROIM_SHIFT   (29U)
#define GMAC_MMC_IPC_RX_INTERRUPT_MASK_RXICMPEROIM_MASK    (0x1U << GMAC_MMC_IPC_RX_INTERRUPT_MASK_RXICMPEROIM_SHIFT)   /* 0x20000000 */
/* MMC_IPC_RX_INTERRUPT */
#define GMAC_MMC_IPC_RX_INTERRUPT_OFFSET                   (0x808U)
#define GMAC_MMC_IPC_RX_INTERRUPT                          (0x0U)
#define GMAC_MMC_IPC_RX_INTERRUPT_RXIPV4GPIS_SHIFT         (0U)
#define GMAC_MMC_IPC_RX_INTERRUPT_RXIPV4GPIS_MASK          (0x1U << GMAC_MMC_IPC_RX_INTERRUPT_RXIPV4GPIS_SHIFT)         /* 0x00000001 */
#define GMAC_MMC_IPC_RX_INTERRUPT_RXIPV4HERPIS_SHIFT       (1U)
#define GMAC_MMC_IPC_RX_INTERRUPT_RXIPV4HERPIS_MASK        (0x1U << GMAC_MMC_IPC_RX_INTERRUPT_RXIPV4HERPIS_SHIFT)       /* 0x00000002 */
#define GMAC_MMC_IPC_RX_INTERRUPT_RXIPV6GPIS_SHIFT         (5U)
#define GMAC_MMC_IPC_RX_INTERRUPT_RXIPV6GPIS_MASK          (0x1U << GMAC_MMC_IPC_RX_INTERRUPT_RXIPV6GPIS_SHIFT)         /* 0x00000020 */
#define GMAC_MMC_IPC_RX_INTERRUPT_RXIPV6HERPIS_SHIFT       (6U)
#define GMAC_MMC_IPC_RX_INTERRUPT_RXIPV6HERPIS_MASK        (0x1U << GMAC_MMC_IPC_RX_INTERRUPT_RXIPV6HERPIS_SHIFT)       /* 0x00000040 */
#define GMAC_MMC_IPC_RX_INTERRUPT_RXUDPERPIS_SHIFT         (9U)
#define GMAC_MMC_IPC_RX_INTERRUPT_RXUDPERPIS_MASK          (0x1U << GMAC_MMC_IPC_RX_INTERRUPT_RXUDPERPIS_SHIFT)         /* 0x00000200 */
#define GMAC_MMC_IPC_RX_INTERRUPT_RXTCPERPIS_SHIFT         (11U)
#define GMAC_MMC_IPC_RX_INTERRUPT_RXTCPERPIS_MASK          (0x1U << GMAC_MMC_IPC_RX_INTERRUPT_RXTCPERPIS_SHIFT)         /* 0x00000800 */
#define GMAC_MMC_IPC_RX_INTERRUPT_RXICMPERPIS_SHIFT        (13U)
#define GMAC_MMC_IPC_RX_INTERRUPT_RXICMPERPIS_MASK         (0x1U << GMAC_MMC_IPC_RX_INTERRUPT_RXICMPERPIS_SHIFT)        /* 0x00002000 */
#define GMAC_MMC_IPC_RX_INTERRUPT_RXIPV4HEROIS_SHIFT       (17U)
#define GMAC_MMC_IPC_RX_INTERRUPT_RXIPV4HEROIS_MASK        (0x1U << GMAC_MMC_IPC_RX_INTERRUPT_RXIPV4HEROIS_SHIFT)       /* 0x00020000 */
#define GMAC_MMC_IPC_RX_INTERRUPT_RXIPV6HEROIS_SHIFT       (22U)
#define GMAC_MMC_IPC_RX_INTERRUPT_RXIPV6HEROIS_MASK        (0x1U << GMAC_MMC_IPC_RX_INTERRUPT_RXIPV6HEROIS_SHIFT)       /* 0x00400000 */
#define GMAC_MMC_IPC_RX_INTERRUPT_RXUDPEROIS_SHIFT         (25U)
#define GMAC_MMC_IPC_RX_INTERRUPT_RXUDPEROIS_MASK          (0x1U << GMAC_MMC_IPC_RX_INTERRUPT_RXUDPEROIS_SHIFT)         /* 0x02000000 */
#define GMAC_MMC_IPC_RX_INTERRUPT_RXTCPEROIS_SHIFT         (27U)
#define GMAC_MMC_IPC_RX_INTERRUPT_RXTCPEROIS_MASK          (0x1U << GMAC_MMC_IPC_RX_INTERRUPT_RXTCPEROIS_SHIFT)         /* 0x08000000 */
#define GMAC_MMC_IPC_RX_INTERRUPT_RXICMPEROIS_SHIFT        (29U)
#define GMAC_MMC_IPC_RX_INTERRUPT_RXICMPEROIS_MASK         (0x1U << GMAC_MMC_IPC_RX_INTERRUPT_RXICMPEROIS_SHIFT)        /* 0x20000000 */
/* RXIPV4_GOOD_PACKETS */
#define GMAC_RXIPV4_GOOD_PACKETS_OFFSET                    (0x810U)
#define GMAC_RXIPV4_GOOD_PACKETS                           (0x0U)
#define GMAC_RXIPV4_GOOD_PACKETS_RXIPV4GDPKT_SHIFT         (0U)
#define GMAC_RXIPV4_GOOD_PACKETS_RXIPV4GDPKT_MASK          (0xFFFFFFFFU << GMAC_RXIPV4_GOOD_PACKETS_RXIPV4GDPKT_SHIFT)  /* 0xFFFFFFFF */
/* RXIPV4_HEADER_ERROR_PACKETS */
#define GMAC_RXIPV4_HEADER_ERROR_PACKETS_OFFSET            (0x814U)
#define GMAC_RXIPV4_HEADER_ERROR_PACKETS                   (0x0U)
#define GMAC_RXIPV4_HEADER_ERROR_PACKETS_RXIPV4HDRERRPKT_SHIFT (0U)
#define GMAC_RXIPV4_HEADER_ERROR_PACKETS_RXIPV4HDRERRPKT_MASK (0xFFFFFFFFU << GMAC_RXIPV4_HEADER_ERROR_PACKETS_RXIPV4HDRERRPKT_SHIFT) /* 0xFFFFFFFF */
/* RXIPV6_GOOD_PACKETS */
#define GMAC_RXIPV6_GOOD_PACKETS_OFFSET                    (0x824U)
#define GMAC_RXIPV6_GOOD_PACKETS                           (0x0U)
#define GMAC_RXIPV6_GOOD_PACKETS_RXIPV6GDPKT_SHIFT         (0U)
#define GMAC_RXIPV6_GOOD_PACKETS_RXIPV6GDPKT_MASK          (0xFFFFFFFFU << GMAC_RXIPV6_GOOD_PACKETS_RXIPV6GDPKT_SHIFT)  /* 0xFFFFFFFF */
/* RXIPV6_HEADER_ERROR_PACKETS */
#define GMAC_RXIPV6_HEADER_ERROR_PACKETS_OFFSET            (0x828U)
#define GMAC_RXIPV6_HEADER_ERROR_PACKETS                   (0x0U)
#define GMAC_RXIPV6_HEADER_ERROR_PACKETS_RXIPV6HDRERRPKT_SHIFT (0U)
#define GMAC_RXIPV6_HEADER_ERROR_PACKETS_RXIPV6HDRERRPKT_MASK (0xFFFFFFFFU << GMAC_RXIPV6_HEADER_ERROR_PACKETS_RXIPV6HDRERRPKT_SHIFT) /* 0xFFFFFFFF */
/* RXUDP_ERROR_PACKETS */
#define GMAC_RXUDP_ERROR_PACKETS_OFFSET                    (0x834U)
#define GMAC_RXUDP_ERROR_PACKETS                           (0x0U)
#define GMAC_RXUDP_ERROR_PACKETS_RXUDPERRPKT_SHIFT         (0U)
#define GMAC_RXUDP_ERROR_PACKETS_RXUDPERRPKT_MASK          (0xFFFFFFFFU << GMAC_RXUDP_ERROR_PACKETS_RXUDPERRPKT_SHIFT)  /* 0xFFFFFFFF */
/* RXTCP_ERROR_PACKETS */
#define GMAC_RXTCP_ERROR_PACKETS_OFFSET                    (0x83CU)
#define GMAC_RXTCP_ERROR_PACKETS                           (0x0U)
#define GMAC_RXTCP_ERROR_PACKETS_RXTCPERRPKT_SHIFT         (0U)
#define GMAC_RXTCP_ERROR_PACKETS_RXTCPERRPKT_MASK          (0xFFFFFFFFU << GMAC_RXTCP_ERROR_PACKETS_RXTCPERRPKT_SHIFT)  /* 0xFFFFFFFF */
/* RXICMP_ERROR_PACKETS */
#define GMAC_RXICMP_ERROR_PACKETS_OFFSET                   (0x844U)
#define GMAC_RXICMP_ERROR_PACKETS                          (0x0U)
#define GMAC_RXICMP_ERROR_PACKETS_RXICMPERRPKT_SHIFT       (0U)
#define GMAC_RXICMP_ERROR_PACKETS_RXICMPERRPKT_MASK        (0xFFFFFFFFU << GMAC_RXICMP_ERROR_PACKETS_RXICMPERRPKT_SHIFT) /* 0xFFFFFFFF */
/* RXIPV4_HEADER_ERROR_OCTETS */
#define GMAC_RXIPV4_HEADER_ERROR_OCTETS_OFFSET             (0x854U)
#define GMAC_RXIPV4_HEADER_ERROR_OCTETS                    (0x0U)
#define GMAC_RXIPV4_HEADER_ERROR_OCTETS_RXIPV4HDRERROCT_SHIFT (0U)
#define GMAC_RXIPV4_HEADER_ERROR_OCTETS_RXIPV4HDRERROCT_MASK (0xFFFFFFFFU << GMAC_RXIPV4_HEADER_ERROR_OCTETS_RXIPV4HDRERROCT_SHIFT) /* 0xFFFFFFFF */
/* RXIPV6_HEADER_ERROR_OCTETS */
#define GMAC_RXIPV6_HEADER_ERROR_OCTETS_OFFSET             (0x868U)
#define GMAC_RXIPV6_HEADER_ERROR_OCTETS                    (0x0U)
#define GMAC_RXIPV6_HEADER_ERROR_OCTETS_RXIPV6HDRERROCT_SHIFT (0U)
#define GMAC_RXIPV6_HEADER_ERROR_OCTETS_RXIPV6HDRERROCT_MASK (0xFFFFFFFFU << GMAC_RXIPV6_HEADER_ERROR_OCTETS_RXIPV6HDRERROCT_SHIFT) /* 0xFFFFFFFF */
/* RXUDP_ERROR_OCTETS */
#define GMAC_RXUDP_ERROR_OCTETS_OFFSET                     (0x874U)
#define GMAC_RXUDP_ERROR_OCTETS                            (0x0U)
#define GMAC_RXUDP_ERROR_OCTETS_RXUDPERROCT_SHIFT          (0U)
#define GMAC_RXUDP_ERROR_OCTETS_RXUDPERROCT_MASK           (0xFFFFFFFFU << GMAC_RXUDP_ERROR_OCTETS_RXUDPERROCT_SHIFT)   /* 0xFFFFFFFF */
/* RXTCP_ERROR_OCTETS */
#define GMAC_RXTCP_ERROR_OCTETS_OFFSET                     (0x87CU)
#define GMAC_RXTCP_ERROR_OCTETS                            (0x0U)
#define GMAC_RXTCP_ERROR_OCTETS_RXTCPERROCT_SHIFT          (0U)
#define GMAC_RXTCP_ERROR_OCTETS_RXTCPERROCT_MASK           (0xFFFFFFFFU << GMAC_RXTCP_ERROR_OCTETS_RXTCPERROCT_SHIFT)   /* 0xFFFFFFFF */
/* RXICMP_ERROR_OCTETS */
#define GMAC_RXICMP_ERROR_OCTETS_OFFSET                    (0x884U)
#define GMAC_RXICMP_ERROR_OCTETS                           (0x0U)
#define GMAC_RXICMP_ERROR_OCTETS_RXICMPERROCT_SHIFT        (0U)
#define GMAC_RXICMP_ERROR_OCTETS_RXICMPERROCT_MASK         (0xFFFFFFFFU << GMAC_RXICMP_ERROR_OCTETS_RXICMPERROCT_SHIFT) /* 0xFFFFFFFF */
/* MAC_TIMESTAMP_CONTROL */
#define GMAC_MAC_TIMESTAMP_CONTROL_OFFSET                  (0xB00U)
#define GMAC_MAC_TIMESTAMP_CONTROL_TSENA_SHIFT             (0U)
#define GMAC_MAC_TIMESTAMP_CONTROL_TSENA_MASK              (0x1U << GMAC_MAC_TIMESTAMP_CONTROL_TSENA_SHIFT)             /* 0x00000001 */
#define GMAC_MAC_TIMESTAMP_CONTROL_TSCFUPDT_SHIFT          (1U)
#define GMAC_MAC_TIMESTAMP_CONTROL_TSCFUPDT_MASK           (0x1U << GMAC_MAC_TIMESTAMP_CONTROL_TSCFUPDT_SHIFT)          /* 0x00000002 */
#define GMAC_MAC_TIMESTAMP_CONTROL_TSINIT_SHIFT            (2U)
#define GMAC_MAC_TIMESTAMP_CONTROL_TSINIT_MASK             (0x1U << GMAC_MAC_TIMESTAMP_CONTROL_TSINIT_SHIFT)            /* 0x00000004 */
#define GMAC_MAC_TIMESTAMP_CONTROL_TSUPDT_SHIFT            (3U)
#define GMAC_MAC_TIMESTAMP_CONTROL_TSUPDT_MASK             (0x1U << GMAC_MAC_TIMESTAMP_CONTROL_TSUPDT_SHIFT)            /* 0x00000008 */
#define GMAC_MAC_TIMESTAMP_CONTROL_TSADDREG_SHIFT          (5U)
#define GMAC_MAC_TIMESTAMP_CONTROL_TSADDREG_MASK           (0x1U << GMAC_MAC_TIMESTAMP_CONTROL_TSADDREG_SHIFT)          /* 0x00000020 */
#define GMAC_MAC_TIMESTAMP_CONTROL_PTGE_SHIFT              (6U)
#define GMAC_MAC_TIMESTAMP_CONTROL_PTGE_MASK               (0x1U << GMAC_MAC_TIMESTAMP_CONTROL_PTGE_SHIFT)              /* 0x00000040 */
#define GMAC_MAC_TIMESTAMP_CONTROL_TSENALL_SHIFT           (8U)
#define GMAC_MAC_TIMESTAMP_CONTROL_TSENALL_MASK            (0x1U << GMAC_MAC_TIMESTAMP_CONTROL_TSENALL_SHIFT)           /* 0x00000100 */
#define GMAC_MAC_TIMESTAMP_CONTROL_TSCTRLSSR_SHIFT         (9U)
#define GMAC_MAC_TIMESTAMP_CONTROL_TSCTRLSSR_MASK          (0x1U << GMAC_MAC_TIMESTAMP_CONTROL_TSCTRLSSR_SHIFT)         /* 0x00000200 */
#define GMAC_MAC_TIMESTAMP_CONTROL_TSVER2ENA_SHIFT         (10U)
#define GMAC_MAC_TIMESTAMP_CONTROL_TSVER2ENA_MASK          (0x1U << GMAC_MAC_TIMESTAMP_CONTROL_TSVER2ENA_SHIFT)         /* 0x00000400 */
#define GMAC_MAC_TIMESTAMP_CONTROL_TSIPENA_SHIFT           (11U)
#define GMAC_MAC_TIMESTAMP_CONTROL_TSIPENA_MASK            (0x1U << GMAC_MAC_TIMESTAMP_CONTROL_TSIPENA_SHIFT)           /* 0x00000800 */
#define GMAC_MAC_TIMESTAMP_CONTROL_TSIPV6ENA_SHIFT         (12U)
#define GMAC_MAC_TIMESTAMP_CONTROL_TSIPV6ENA_MASK          (0x1U << GMAC_MAC_TIMESTAMP_CONTROL_TSIPV6ENA_SHIFT)         /* 0x00001000 */
#define GMAC_MAC_TIMESTAMP_CONTROL_TSIPV4ENA_SHIFT         (13U)
#define GMAC_MAC_TIMESTAMP_CONTROL_TSIPV4ENA_MASK          (0x1U << GMAC_MAC_TIMESTAMP_CONTROL_TSIPV4ENA_SHIFT)         /* 0x00002000 */
#define GMAC_MAC_TIMESTAMP_CONTROL_TSEVNTENA_SHIFT         (14U)
#define GMAC_MAC_TIMESTAMP_CONTROL_TSEVNTENA_MASK          (0x1U << GMAC_MAC_TIMESTAMP_CONTROL_TSEVNTENA_SHIFT)         /* 0x00004000 */
#define GMAC_MAC_TIMESTAMP_CONTROL_TSMSTRENA_SHIFT         (15U)
#define GMAC_MAC_TIMESTAMP_CONTROL_TSMSTRENA_MASK          (0x1U << GMAC_MAC_TIMESTAMP_CONTROL_TSMSTRENA_SHIFT)         /* 0x00008000 */
#define GMAC_MAC_TIMESTAMP_CONTROL_SNAPTYPSEL_SHIFT        (16U)
#define GMAC_MAC_TIMESTAMP_CONTROL_SNAPTYPSEL_MASK         (0x3U << GMAC_MAC_TIMESTAMP_CONTROL_SNAPTYPSEL_SHIFT)        /* 0x00030000 */
#define GMAC_MAC_TIMESTAMP_CONTROL_TSENMACADDR_SHIFT       (18U)
#define GMAC_MAC_TIMESTAMP_CONTROL_TSENMACADDR_MASK        (0x1U << GMAC_MAC_TIMESTAMP_CONTROL_TSENMACADDR_SHIFT)       /* 0x00040000 */
#define GMAC_MAC_TIMESTAMP_CONTROL_TXTSSTSM_SHIFT          (24U)
#define GMAC_MAC_TIMESTAMP_CONTROL_TXTSSTSM_MASK           (0x1U << GMAC_MAC_TIMESTAMP_CONTROL_TXTSSTSM_SHIFT)          /* 0x01000000 */
#define GMAC_MAC_TIMESTAMP_CONTROL_AV8021ASMEN_SHIFT       (28U)
#define GMAC_MAC_TIMESTAMP_CONTROL_AV8021ASMEN_MASK        (0x1U << GMAC_MAC_TIMESTAMP_CONTROL_AV8021ASMEN_SHIFT)       /* 0x10000000 */
/* MAC_SUB_SECOND_INCREMENT */
#define GMAC_MAC_SUB_SECOND_INCREMENT_OFFSET               (0xB04U)
#define GMAC_MAC_SUB_SECOND_INCREMENT_SSINC_SHIFT          (16U)
#define GMAC_MAC_SUB_SECOND_INCREMENT_SSINC_MASK           (0xFFU << GMAC_MAC_SUB_SECOND_INCREMENT_SSINC_SHIFT)         /* 0x00FF0000 */
/* MAC_SYSTEM_TIME_SECS */
#define GMAC_MAC_SYSTEM_TIME_SECS_OFFSET                   (0xB08U)
#define GMAC_MAC_SYSTEM_TIME_SECS_TSS_SHIFT                (0U)
#define GMAC_MAC_SYSTEM_TIME_SECS_TSS_MASK                 (0xFFFFFFFFU << GMAC_MAC_SYSTEM_TIME_SECS_TSS_SHIFT)         /* 0xFFFFFFFF */
/* MAC_SYSTEM_TIME_NS */
#define GMAC_MAC_SYSTEM_TIME_NS_OFFSET                     (0xB0CU)
#define GMAC_MAC_SYSTEM_TIME_NS_TSSS_SHIFT                 (0U)
#define GMAC_MAC_SYSTEM_TIME_NS_TSSS_MASK                  (0x7FFFFFFFU << GMAC_MAC_SYSTEM_TIME_NS_TSSS_SHIFT)          /* 0x7FFFFFFF */
/* MAC_SYS_TIME_SECS_UPDATE */
#define GMAC_MAC_SYS_TIME_SECS_UPDATE_OFFSET               (0xB10U)
#define GMAC_MAC_SYS_TIME_SECS_UPDATE_TSS_SHIFT            (0U)
#define GMAC_MAC_SYS_TIME_SECS_UPDATE_TSS_MASK             (0xFFFFFFFFU << GMAC_MAC_SYS_TIME_SECS_UPDATE_TSS_SHIFT)     /* 0xFFFFFFFF */
/* MAC_SYS_TIME_NS_UPDATE */
#define GMAC_MAC_SYS_TIME_NS_UPDATE_OFFSET                 (0xB14U)
#define GMAC_MAC_SYS_TIME_NS_UPDATE_TSSS_SHIFT             (0U)
#define GMAC_MAC_SYS_TIME_NS_UPDATE_TSSS_MASK              (0x7FFFFFFFU << GMAC_MAC_SYS_TIME_NS_UPDATE_TSSS_SHIFT)      /* 0x7FFFFFFF */
#define GMAC_MAC_SYS_TIME_NS_UPDATE_ADDSUB_SHIFT           (31U)
#define GMAC_MAC_SYS_TIME_NS_UPDATE_ADDSUB_MASK            (0x1U << GMAC_MAC_SYS_TIME_NS_UPDATE_ADDSUB_SHIFT)           /* 0x80000000 */
/* MAC_TIMESTAMP_ADDEND */
#define GMAC_MAC_TIMESTAMP_ADDEND_OFFSET                   (0xB18U)
#define GMAC_MAC_TIMESTAMP_ADDEND_TSAR_SHIFT               (0U)
#define GMAC_MAC_TIMESTAMP_ADDEND_TSAR_MASK                (0xFFFFFFFFU << GMAC_MAC_TIMESTAMP_ADDEND_TSAR_SHIFT)        /* 0xFFFFFFFF */
/* MAC_TIMESTAMP_STATUS */
#define GMAC_MAC_TIMESTAMP_STATUS_OFFSET                   (0xB20U)
#define GMAC_MAC_TIMESTAMP_STATUS                          (0x0U)
#define GMAC_MAC_TIMESTAMP_STATUS_TSSOVF_SHIFT             (0U)
#define GMAC_MAC_TIMESTAMP_STATUS_TSSOVF_MASK              (0x1U << GMAC_MAC_TIMESTAMP_STATUS_TSSOVF_SHIFT)             /* 0x00000001 */
#define GMAC_MAC_TIMESTAMP_STATUS_TSTARGT0_SHIFT           (1U)
#define GMAC_MAC_TIMESTAMP_STATUS_TSTARGT0_MASK            (0x1U << GMAC_MAC_TIMESTAMP_STATUS_TSTARGT0_SHIFT)           /* 0x00000002 */
#define GMAC_MAC_TIMESTAMP_STATUS_AUXTSTRIG_SHIFT          (2U)
#define GMAC_MAC_TIMESTAMP_STATUS_AUXTSTRIG_MASK           (0x1U << GMAC_MAC_TIMESTAMP_STATUS_AUXTSTRIG_SHIFT)          /* 0x00000004 */
#define GMAC_MAC_TIMESTAMP_STATUS_TSTRGTERR0_SHIFT         (3U)
#define GMAC_MAC_TIMESTAMP_STATUS_TSTRGTERR0_MASK          (0x1U << GMAC_MAC_TIMESTAMP_STATUS_TSTRGTERR0_SHIFT)         /* 0x00000008 */
#define GMAC_MAC_TIMESTAMP_STATUS_TXTSSIS_SHIFT            (15U)
#define GMAC_MAC_TIMESTAMP_STATUS_TXTSSIS_MASK             (0x1U << GMAC_MAC_TIMESTAMP_STATUS_TXTSSIS_SHIFT)            /* 0x00008000 */
#define GMAC_MAC_TIMESTAMP_STATUS_ATSSTM_SHIFT             (24U)
#define GMAC_MAC_TIMESTAMP_STATUS_ATSSTM_MASK              (0x1U << GMAC_MAC_TIMESTAMP_STATUS_ATSSTM_SHIFT)             /* 0x01000000 */
#define GMAC_MAC_TIMESTAMP_STATUS_ATSNS_SHIFT              (25U)
#define GMAC_MAC_TIMESTAMP_STATUS_ATSNS_MASK               (0x1FU << GMAC_MAC_TIMESTAMP_STATUS_ATSNS_SHIFT)             /* 0x3E000000 */
/* MAC_TX_TS_STATUS_NS */
#define GMAC_MAC_TX_TS_STATUS_NS_OFFSET                    (0xB30U)
#define GMAC_MAC_TX_TS_STATUS_NS                           (0x0U)
#define GMAC_MAC_TX_TS_STATUS_NS_TXTSSLO_SHIFT             (0U)
#define GMAC_MAC_TX_TS_STATUS_NS_TXTSSLO_MASK              (0x7FFFFFFFU << GMAC_MAC_TX_TS_STATUS_NS_TXTSSLO_SHIFT)      /* 0x7FFFFFFF */
#define GMAC_MAC_TX_TS_STATUS_NS_TXTSSMIS_SHIFT            (31U)
#define GMAC_MAC_TX_TS_STATUS_NS_TXTSSMIS_MASK             (0x1U << GMAC_MAC_TX_TS_STATUS_NS_TXTSSMIS_SHIFT)            /* 0x80000000 */
/* MAC_TX_TS_STATUS_SECS */
#define GMAC_MAC_TX_TS_STATUS_SECS_OFFSET                  (0xB34U)
#define GMAC_MAC_TX_TS_STATUS_SECS                         (0x0U)
#define GMAC_MAC_TX_TS_STATUS_SECS_TXTSSHI_SHIFT           (0U)
#define GMAC_MAC_TX_TS_STATUS_SECS_TXTSSHI_MASK            (0xFFFFFFFFU << GMAC_MAC_TX_TS_STATUS_SECS_TXTSSHI_SHIFT)    /* 0xFFFFFFFF */
/* MAC_AUXILIARY_CONTROL */
#define GMAC_MAC_AUXILIARY_CONTROL_OFFSET                  (0xB40U)
#define GMAC_MAC_AUXILIARY_CONTROL_ATSFC_SHIFT             (0U)
#define GMAC_MAC_AUXILIARY_CONTROL_ATSFC_MASK              (0x1U << GMAC_MAC_AUXILIARY_CONTROL_ATSFC_SHIFT)             /* 0x00000001 */
#define GMAC_MAC_AUXILIARY_CONTROL_ATSEN0_SHIFT            (4U)
#define GMAC_MAC_AUXILIARY_CONTROL_ATSEN0_MASK             (0x1U << GMAC_MAC_AUXILIARY_CONTROL_ATSEN0_SHIFT)            /* 0x00000010 */
/* MAC_AUXILIARY_TS_NS */
#define GMAC_MAC_AUXILIARY_TS_NS_OFFSET                    (0xB48U)
#define GMAC_MAC_AUXILIARY_TS_NS                           (0x0U)
#define GMAC_MAC_AUXILIARY_TS_NS_AUXTSLO_SHIFT             (0U)
#define GMAC_MAC_AUXILIARY_TS_NS_AUXTSLO_MASK              (0x7FFFFFFFU << GMAC_MAC_AUXILIARY_TS_NS_AUXTSLO_SHIFT)      /* 0x7FFFFFFF */
/* MAC_AUXILIARY_TS_SECS */
#define GMAC_MAC_AUXILIARY_TS_SECS_OFFSET                  (0xB4CU)
#define GMAC_MAC_AUXILIARY_TS_SECS                         (0x0U)
#define GMAC_MAC_AUXILIARY_TS_SECS_AUXTSHI_SHIFT           (0U)
#define GMAC_MAC_AUXILIARY_TS_SECS_AUXTSHI_MASK            (0xFFFFFFFFU << GMAC_MAC_AUXILIARY_TS_SECS_AUXTSHI_SHIFT)    /* 0xFFFFFFFF */
/* MAC_TS_INGRESS_CORR_NS */
#define GMAC_MAC_TS_INGRESS_CORR_NS_OFFSET                 (0xB58U)
#define GMAC_MAC_TS_INGRESS_CORR_NS_TSIC_SHIFT             (0U)
#define GMAC_MAC_TS_INGRESS_CORR_NS_TSIC_MASK              (0xFFFFFFFFU << GMAC_MAC_TS_INGRESS_CORR_NS_TSIC_SHIFT)      /* 0xFFFFFFFF */
/* MAC_TS_EGRESS_CORR_NS */
#define GMAC_MAC_TS_EGRESS_CORR_NS_OFFSET                  (0xB5CU)
#define GMAC_MAC_TS_EGRESS_CORR_NS_TSEC_SHIFT              (0U)
#define GMAC_MAC_TS_EGRESS_CORR_NS_TSEC_MASK               (0xFFFFFFFFU << GMAC_MAC_TS_EGRESS_CORR_NS_TSEC_SHIFT)       /* 0xFFFFFFFF */
/* MAC_TS_INGRESS_LATENCY */
#define GMAC_MAC_TS_INGRESS_LATENCY_OFFSET                 (0xB68U)
#define GMAC_MAC_TS_INGRESS_LATENCY                        (0x0U)
#define GMAC_MAC_TS_INGRESS_LATENCY_ITLSNS_SHIFT           (8U)
#define GMAC_MAC_TS_INGRESS_LATENCY_ITLSNS_MASK            (0xFFU << GMAC_MAC_TS_INGRESS_LATENCY_ITLSNS_SHIFT)          /* 0x0000FF00 */
#define GMAC_MAC_TS_INGRESS_LATENCY_ITLNS_SHIFT            (16U)
#define GMAC_MAC_TS_INGRESS_LATENCY_ITLNS_MASK             (0xFFU << GMAC_MAC_TS_INGRESS_LATENCY_ITLNS_SHIFT)           /* 0x00FF0000 */
/* MAC_TS_EGRESS_LATENCY */
#define GMAC_MAC_TS_EGRESS_LATENCY_OFFSET                  (0xB6CU)
#define GMAC_MAC_TS_EGRESS_LATENCY                         (0x0U)
#define GMAC_MAC_TS_EGRESS_LATENCY_ETLSNS_SHIFT            (8U)
#define GMAC_MAC_TS_EGRESS_LATENCY_ETLSNS_MASK             (0xFFU << GMAC_MAC_TS_EGRESS_LATENCY_ETLSNS_SHIFT)           /* 0x0000FF00 */
#define GMAC_MAC_TS_EGRESS_LATENCY_ETLNS_SHIFT             (16U)
#define GMAC_MAC_TS_EGRESS_LATENCY_ETLNS_MASK              (0xFFU << GMAC_MAC_TS_EGRESS_LATENCY_ETLNS_SHIFT)            /* 0x00FF0000 */
/* MAC_PPS_CONTROL */
#define GMAC_MAC_PPS_CONTROL_OFFSET                        (0xB70U)
#define GMAC_MAC_PPS_CONTROL_PPSCTRL_PPSCMD_SHIFT          (0U)
#define GMAC_MAC_PPS_CONTROL_PPSCTRL_PPSCMD_MASK           (0xFU << GMAC_MAC_PPS_CONTROL_PPSCTRL_PPSCMD_SHIFT)          /* 0x0000000F */
#define GMAC_MAC_PPS_CONTROL_PPSCTRL_PPSCMD_CONT_SHIFT     (0U)
#define GMAC_MAC_PPS_CONTROL_PPSCTRL_PPSCMD_CONT_MASK      (0xFU << GMAC_MAC_PPS_CONTROL_PPSCTRL_PPSCMD_CONT_SHIFT)     /* 0x0000000F */
#define GMAC_MAC_PPS_CONTROL_PPSEN0_SHIFT                  (4U)
#define GMAC_MAC_PPS_CONTROL_PPSEN0_MASK                   (0x1U << GMAC_MAC_PPS_CONTROL_PPSEN0_SHIFT)                  /* 0x00000010 */
#define GMAC_MAC_PPS_CONTROL_TRGTMODSEL0_SHIFT             (5U)
#define GMAC_MAC_PPS_CONTROL_TRGTMODSEL0_MASK              (0x3U << GMAC_MAC_PPS_CONTROL_TRGTMODSEL0_SHIFT)             /* 0x00000060 */
#define GMAC_MAC_PPS_CONTROL_MCGREN0_SHIFT                 (7U)
#define GMAC_MAC_PPS_CONTROL_MCGREN0_MASK                  (0x1U << GMAC_MAC_PPS_CONTROL_MCGREN0_SHIFT)                 /* 0x00000080 */
/* MAC_PPS0_TARGET_TIME_SECONDS */
#define GMAC_MAC_PPS0_TARGET_TIME_SECONDS_OFFSET           (0xB80U)
#define GMAC_MAC_PPS0_TARGET_TIME_SECONDS_TSTRH0_SHIFT     (0U)
#define GMAC_MAC_PPS0_TARGET_TIME_SECONDS_TSTRH0_MASK      (0xFFFFFFFFU << GMAC_MAC_PPS0_TARGET_TIME_SECONDS_TSTRH0_SHIFT) /* 0xFFFFFFFF */
/* MAC_PPS0_TARGET_TIME_NS */
#define GMAC_MAC_PPS0_TARGET_TIME_NS_OFFSET                (0xB84U)
#define GMAC_MAC_PPS0_TARGET_TIME_NS_TTSL0_SHIFT           (0U)
#define GMAC_MAC_PPS0_TARGET_TIME_NS_TTSL0_MASK            (0x7FFFFFFFU << GMAC_MAC_PPS0_TARGET_TIME_NS_TTSL0_SHIFT)    /* 0x7FFFFFFF */
#define GMAC_MAC_PPS0_TARGET_TIME_NS_TRGTBUSY0_SHIFT       (31U)
#define GMAC_MAC_PPS0_TARGET_TIME_NS_TRGTBUSY0_MASK        (0x1U << GMAC_MAC_PPS0_TARGET_TIME_NS_TRGTBUSY0_SHIFT)       /* 0x80000000 */
/* MAC_PPS0_INTERVAL */
#define GMAC_MAC_PPS0_INTERVAL_OFFSET                      (0xB88U)
#define GMAC_MAC_PPS0_INTERVAL_PPSINT0_SHIFT               (0U)
#define GMAC_MAC_PPS0_INTERVAL_PPSINT0_MASK                (0xFFFFFFFFU << GMAC_MAC_PPS0_INTERVAL_PPSINT0_SHIFT)        /* 0xFFFFFFFF */
/* MAC_PPS0_WIDTH */
#define GMAC_MAC_PPS0_WIDTH_OFFSET                         (0xB8CU)
#define GMAC_MAC_PPS0_WIDTH_PPSWIDTH0_SHIFT                (0U)
#define GMAC_MAC_PPS0_WIDTH_PPSWIDTH0_MASK                 (0xFFFFFFFFU << GMAC_MAC_PPS0_WIDTH_PPSWIDTH0_SHIFT)         /* 0xFFFFFFFF */
/* MTL_OPERATION_MODE */
#define GMAC_MTL_OPERATION_MODE_OFFSET                     (0xC00U)
#define GMAC_MTL_OPERATION_MODE_DTXSTS_SHIFT               (1U)
#define GMAC_MTL_OPERATION_MODE_DTXSTS_MASK                (0x1U << GMAC_MTL_OPERATION_MODE_DTXSTS_SHIFT)               /* 0x00000002 */
#define GMAC_MTL_OPERATION_MODE_CNTPRST_SHIFT              (8U)
#define GMAC_MTL_OPERATION_MODE_CNTPRST_MASK               (0x1U << GMAC_MTL_OPERATION_MODE_CNTPRST_SHIFT)              /* 0x00000100 */
#define GMAC_MTL_OPERATION_MODE_CNTCLR_SHIFT               (9U)
#define GMAC_MTL_OPERATION_MODE_CNTCLR_MASK                (0x1U << GMAC_MTL_OPERATION_MODE_CNTCLR_SHIFT)               /* 0x00000200 */
/* MTL_DBG_CTL */
#define GMAC_MTL_DBG_CTL_OFFSET                            (0xC08U)
#define GMAC_MTL_DBG_CTL_FDBGEN_SHIFT                      (0U)
#define GMAC_MTL_DBG_CTL_FDBGEN_MASK                       (0x1U << GMAC_MTL_DBG_CTL_FDBGEN_SHIFT)                      /* 0x00000001 */
#define GMAC_MTL_DBG_CTL_DBGMOD_SHIFT                      (1U)
#define GMAC_MTL_DBG_CTL_DBGMOD_MASK                       (0x1U << GMAC_MTL_DBG_CTL_DBGMOD_SHIFT)                      /* 0x00000002 */
#define GMAC_MTL_DBG_CTL_BYTEEN_SHIFT                      (2U)
#define GMAC_MTL_DBG_CTL_BYTEEN_MASK                       (0x3U << GMAC_MTL_DBG_CTL_BYTEEN_SHIFT)                      /* 0x0000000C */
#define GMAC_MTL_DBG_CTL_PKTSTATE_SHIFT                    (5U)
#define GMAC_MTL_DBG_CTL_PKTSTATE_MASK                     (0x3U << GMAC_MTL_DBG_CTL_PKTSTATE_SHIFT)                    /* 0x00000060 */
#define GMAC_MTL_DBG_CTL_RSTALL_SHIFT                      (8U)
#define GMAC_MTL_DBG_CTL_RSTALL_MASK                       (0x1U << GMAC_MTL_DBG_CTL_RSTALL_SHIFT)                      /* 0x00000100 */
#define GMAC_MTL_DBG_CTL_RSTSEL_SHIFT                      (9U)
#define GMAC_MTL_DBG_CTL_RSTSEL_MASK                       (0x1U << GMAC_MTL_DBG_CTL_RSTSEL_SHIFT)                      /* 0x00000200 */
#define GMAC_MTL_DBG_CTL_FIFORDEN_SHIFT                    (10U)
#define GMAC_MTL_DBG_CTL_FIFORDEN_MASK                     (0x1U << GMAC_MTL_DBG_CTL_FIFORDEN_SHIFT)                    /* 0x00000400 */
#define GMAC_MTL_DBG_CTL_FIFOWREN_SHIFT                    (11U)
#define GMAC_MTL_DBG_CTL_FIFOWREN_MASK                     (0x1U << GMAC_MTL_DBG_CTL_FIFOWREN_SHIFT)                    /* 0x00000800 */
#define GMAC_MTL_DBG_CTL_FIFOSEL_SHIFT                     (12U)
#define GMAC_MTL_DBG_CTL_FIFOSEL_MASK                      (0x3U << GMAC_MTL_DBG_CTL_FIFOSEL_SHIFT)                     /* 0x00003000 */
#define GMAC_MTL_DBG_CTL_PKTIE_SHIFT                       (14U)
#define GMAC_MTL_DBG_CTL_PKTIE_MASK                        (0x1U << GMAC_MTL_DBG_CTL_PKTIE_SHIFT)                       /* 0x00004000 */
#define GMAC_MTL_DBG_CTL_STSIE_SHIFT                       (15U)
#define GMAC_MTL_DBG_CTL_STSIE_MASK                        (0x1U << GMAC_MTL_DBG_CTL_STSIE_SHIFT)                       /* 0x00008000 */
/* MTL_DBG_STS */
#define GMAC_MTL_DBG_STS_OFFSET                            (0xC0CU)
#define GMAC_MTL_DBG_STS_FIFOBUSY_SHIFT                    (0U)
#define GMAC_MTL_DBG_STS_FIFOBUSY_MASK                     (0x1U << GMAC_MTL_DBG_STS_FIFOBUSY_SHIFT)                    /* 0x00000001 */
#define GMAC_MTL_DBG_STS_PKTSTATE_SHIFT                    (1U)
#define GMAC_MTL_DBG_STS_PKTSTATE_MASK                     (0x3U << GMAC_MTL_DBG_STS_PKTSTATE_SHIFT)                    /* 0x00000006 */
#define GMAC_MTL_DBG_STS_BYTEEN_SHIFT                      (3U)
#define GMAC_MTL_DBG_STS_BYTEEN_MASK                       (0x3U << GMAC_MTL_DBG_STS_BYTEEN_SHIFT)                      /* 0x00000018 */
#define GMAC_MTL_DBG_STS_PKTI_SHIFT                        (8U)
#define GMAC_MTL_DBG_STS_PKTI_MASK                         (0x1U << GMAC_MTL_DBG_STS_PKTI_SHIFT)                        /* 0x00000100 */
#define GMAC_MTL_DBG_STS_STSI_SHIFT                        (9U)
#define GMAC_MTL_DBG_STS_STSI_MASK                         (0x1U << GMAC_MTL_DBG_STS_STSI_SHIFT)                        /* 0x00000200 */
#define GMAC_MTL_DBG_STS_LOCR_SHIFT                        (15U)
#define GMAC_MTL_DBG_STS_LOCR_MASK                         (0x1FFFFU << GMAC_MTL_DBG_STS_LOCR_SHIFT)                    /* 0xFFFF8000 */
/* MTL_FIFO_DEBUG_DATA */
#define GMAC_MTL_FIFO_DEBUG_DATA_OFFSET                    (0xC10U)
#define GMAC_MTL_FIFO_DEBUG_DATA_FDBGDATA_SHIFT            (0U)
#define GMAC_MTL_FIFO_DEBUG_DATA_FDBGDATA_MASK             (0xFFFFFFFFU << GMAC_MTL_FIFO_DEBUG_DATA_FDBGDATA_SHIFT)     /* 0xFFFFFFFF */
/* MTL_INTERRUPT_STATUS */
#define GMAC_MTL_INTERRUPT_STATUS_OFFSET                   (0xC20U)
#define GMAC_MTL_INTERRUPT_STATUS                          (0x0U)
#define GMAC_MTL_INTERRUPT_STATUS_Q0IS_SHIFT               (0U)
#define GMAC_MTL_INTERRUPT_STATUS_Q0IS_MASK                (0x1U << GMAC_MTL_INTERRUPT_STATUS_Q0IS_SHIFT)               /* 0x00000001 */
#define GMAC_MTL_INTERRUPT_STATUS_DBGIS_SHIFT              (17U)
#define GMAC_MTL_INTERRUPT_STATUS_DBGIS_MASK               (0x1U << GMAC_MTL_INTERRUPT_STATUS_DBGIS_SHIFT)              /* 0x00020000 */
/* MTL_TXQ0_OPERATION_MODE */
#define GMAC_MTL_TXQ0_OPERATION_MODE_OFFSET                (0xD00U)
#define GMAC_MTL_TXQ0_OPERATION_MODE_FTQ_SHIFT             (0U)
#define GMAC_MTL_TXQ0_OPERATION_MODE_FTQ_MASK              (0x1U << GMAC_MTL_TXQ0_OPERATION_MODE_FTQ_SHIFT)             /* 0x00000001 */
#define GMAC_MTL_TXQ0_OPERATION_MODE_TSF_SHIFT             (1U)
#define GMAC_MTL_TXQ0_OPERATION_MODE_TSF_MASK              (0x1U << GMAC_MTL_TXQ0_OPERATION_MODE_TSF_SHIFT)             /* 0x00000002 */
#define GMAC_MTL_TXQ0_OPERATION_MODE_TTC_SHIFT             (4U)
#define GMAC_MTL_TXQ0_OPERATION_MODE_TTC_MASK              (0x7U << GMAC_MTL_TXQ0_OPERATION_MODE_TTC_SHIFT)             /* 0x00000070 */
/* MTL_TXQ0_UNDERFLOW */
#define GMAC_MTL_TXQ0_UNDERFLOW_OFFSET                     (0xD04U)
#define GMAC_MTL_TXQ0_UNDERFLOW                            (0x0U)
#define GMAC_MTL_TXQ0_UNDERFLOW_UFFRMCNT_SHIFT             (0U)
#define GMAC_MTL_TXQ0_UNDERFLOW_UFFRMCNT_MASK              (0x7FFU << GMAC_MTL_TXQ0_UNDERFLOW_UFFRMCNT_SHIFT)           /* 0x000007FF */
#define GMAC_MTL_TXQ0_UNDERFLOW_UFCNTOVF_SHIFT             (11U)
#define GMAC_MTL_TXQ0_UNDERFLOW_UFCNTOVF_MASK              (0x1U << GMAC_MTL_TXQ0_UNDERFLOW_UFCNTOVF_SHIFT)             /* 0x00000800 */
/* MTL_TXQ0_DEBUG */
#define GMAC_MTL_TXQ0_DEBUG_OFFSET                         (0xD08U)
#define GMAC_MTL_TXQ0_DEBUG                                (0x0U)
#define GMAC_MTL_TXQ0_DEBUG_TXQPAUSED_SHIFT                (0U)
#define GMAC_MTL_TXQ0_DEBUG_TXQPAUSED_MASK                 (0x1U << GMAC_MTL_TXQ0_DEBUG_TXQPAUSED_SHIFT)                /* 0x00000001 */
#define GMAC_MTL_TXQ0_DEBUG_TRCSTS_SHIFT                   (1U)
#define GMAC_MTL_TXQ0_DEBUG_TRCSTS_MASK                    (0x3U << GMAC_MTL_TXQ0_DEBUG_TRCSTS_SHIFT)                   /* 0x00000006 */
#define GMAC_MTL_TXQ0_DEBUG_TWCSTS_SHIFT                   (3U)
#define GMAC_MTL_TXQ0_DEBUG_TWCSTS_MASK                    (0x1U << GMAC_MTL_TXQ0_DEBUG_TWCSTS_SHIFT)                   /* 0x00000008 */
#define GMAC_MTL_TXQ0_DEBUG_TXQSTS_SHIFT                   (4U)
#define GMAC_MTL_TXQ0_DEBUG_TXQSTS_MASK                    (0x1U << GMAC_MTL_TXQ0_DEBUG_TXQSTS_SHIFT)                   /* 0x00000010 */
#define GMAC_MTL_TXQ0_DEBUG_TXSTSFSTS_SHIFT                (5U)
#define GMAC_MTL_TXQ0_DEBUG_TXSTSFSTS_MASK                 (0x1U << GMAC_MTL_TXQ0_DEBUG_TXSTSFSTS_SHIFT)                /* 0x00000020 */
#define GMAC_MTL_TXQ0_DEBUG_PTXQ_SHIFT                     (16U)
#define GMAC_MTL_TXQ0_DEBUG_PTXQ_MASK                      (0x7U << GMAC_MTL_TXQ0_DEBUG_PTXQ_SHIFT)                     /* 0x00070000 */
#define GMAC_MTL_TXQ0_DEBUG_STXSTSF_SHIFT                  (20U)
#define GMAC_MTL_TXQ0_DEBUG_STXSTSF_MASK                   (0x7U << GMAC_MTL_TXQ0_DEBUG_STXSTSF_SHIFT)                  /* 0x00700000 */
/* MTL_Q0_INTERRUPT_CTRL_STATUS */
#define GMAC_MTL_Q0_INTERRUPT_CTRL_STATUS_OFFSET           (0xD2CU)
#define GMAC_MTL_Q0_INTERRUPT_CTRL_STATUS_TXUNFIS_SHIFT    (0U)
#define GMAC_MTL_Q0_INTERRUPT_CTRL_STATUS_TXUNFIS_MASK     (0x1U << GMAC_MTL_Q0_INTERRUPT_CTRL_STATUS_TXUNFIS_SHIFT)    /* 0x00000001 */
#define GMAC_MTL_Q0_INTERRUPT_CTRL_STATUS_TXUIE_SHIFT      (8U)
#define GMAC_MTL_Q0_INTERRUPT_CTRL_STATUS_TXUIE_MASK       (0x1U << GMAC_MTL_Q0_INTERRUPT_CTRL_STATUS_TXUIE_SHIFT)      /* 0x00000100 */
#define GMAC_MTL_Q0_INTERRUPT_CTRL_STATUS_RXOVFIS_SHIFT    (16U)
#define GMAC_MTL_Q0_INTERRUPT_CTRL_STATUS_RXOVFIS_MASK     (0x1U << GMAC_MTL_Q0_INTERRUPT_CTRL_STATUS_RXOVFIS_SHIFT)    /* 0x00010000 */
#define GMAC_MTL_Q0_INTERRUPT_CTRL_STATUS_RXOIE_SHIFT      (24U)
#define GMAC_MTL_Q0_INTERRUPT_CTRL_STATUS_RXOIE_MASK       (0x1U << GMAC_MTL_Q0_INTERRUPT_CTRL_STATUS_RXOIE_SHIFT)      /* 0x01000000 */
/* MTL_RXQ0_OPERATION_MODE */
#define GMAC_MTL_RXQ0_OPERATION_MODE_OFFSET                (0xD30U)
#define GMAC_MTL_RXQ0_OPERATION_MODE_RTC_SHIFT             (0U)
#define GMAC_MTL_RXQ0_OPERATION_MODE_RTC_MASK              (0x3U << GMAC_MTL_RXQ0_OPERATION_MODE_RTC_SHIFT)             /* 0x00000003 */
#define GMAC_MTL_RXQ0_OPERATION_MODE_FUP_SHIFT             (3U)
#define GMAC_MTL_RXQ0_OPERATION_MODE_FUP_MASK              (0x1U << GMAC_MTL_RXQ0_OPERATION_MODE_FUP_SHIFT)             /* 0x00000008 */
#define GMAC_MTL_RXQ0_OPERATION_MODE_FEP_SHIFT             (4U)
#define GMAC_MTL_RXQ0_OPERATION_MODE_FEP_MASK              (0x1U << GMAC_MTL_RXQ0_OPERATION_MODE_FEP_SHIFT)             /* 0x00000010 */
#define GMAC_MTL_RXQ0_OPERATION_MODE_RSF_SHIFT             (5U)
#define GMAC_MTL_RXQ0_OPERATION_MODE_RSF_MASK              (0x1U << GMAC_MTL_RXQ0_OPERATION_MODE_RSF_SHIFT)             /* 0x00000020 */
#define GMAC_MTL_RXQ0_OPERATION_MODE_DIS_TCP_EF_SHIFT      (6U)
#define GMAC_MTL_RXQ0_OPERATION_MODE_DIS_TCP_EF_MASK       (0x1U << GMAC_MTL_RXQ0_OPERATION_MODE_DIS_TCP_EF_SHIFT)      /* 0x00000040 */
#define GMAC_MTL_RXQ0_OPERATION_MODE_EHFC_SHIFT            (7U)
#define GMAC_MTL_RXQ0_OPERATION_MODE_EHFC_MASK             (0x1U << GMAC_MTL_RXQ0_OPERATION_MODE_EHFC_SHIFT)            /* 0x00000080 */
#define GMAC_MTL_RXQ0_OPERATION_MODE_RFA_SHIFT             (8U)
#define GMAC_MTL_RXQ0_OPERATION_MODE_RFA_MASK              (0xFU << GMAC_MTL_RXQ0_OPERATION_MODE_RFA_SHIFT)             /* 0x00000F00 */
#define GMAC_MTL_RXQ0_OPERATION_MODE_RFD_SHIFT             (14U)
#define GMAC_MTL_RXQ0_OPERATION_MODE_RFD_MASK              (0xFU << GMAC_MTL_RXQ0_OPERATION_MODE_RFD_SHIFT)             /* 0x0003C000 */
/* MTL_RXQ0_MISS_PKT_OVF_CNT */
#define GMAC_MTL_RXQ0_MISS_PKT_OVF_CNT_OFFSET              (0xD34U)
#define GMAC_MTL_RXQ0_MISS_PKT_OVF_CNT                     (0x0U)
#define GMAC_MTL_RXQ0_MISS_PKT_OVF_CNT_OVFPKTCNT_SHIFT     (0U)
#define GMAC_MTL_RXQ0_MISS_PKT_OVF_CNT_OVFPKTCNT_MASK      (0x7FFU << GMAC_MTL_RXQ0_MISS_PKT_OVF_CNT_OVFPKTCNT_SHIFT)   /* 0x000007FF */
#define GMAC_MTL_RXQ0_MISS_PKT_OVF_CNT_OVFCNTOVF_SHIFT     (11U)
#define GMAC_MTL_RXQ0_MISS_PKT_OVF_CNT_OVFCNTOVF_MASK      (0x1U << GMAC_MTL_RXQ0_MISS_PKT_OVF_CNT_OVFCNTOVF_SHIFT)     /* 0x00000800 */
#define GMAC_MTL_RXQ0_MISS_PKT_OVF_CNT_MISPKTCNT_SHIFT     (16U)
#define GMAC_MTL_RXQ0_MISS_PKT_OVF_CNT_MISPKTCNT_MASK      (0x7FFU << GMAC_MTL_RXQ0_MISS_PKT_OVF_CNT_MISPKTCNT_SHIFT)   /* 0x07FF0000 */
#define GMAC_MTL_RXQ0_MISS_PKT_OVF_CNT_MISCNTOVF_SHIFT     (27U)
#define GMAC_MTL_RXQ0_MISS_PKT_OVF_CNT_MISCNTOVF_MASK      (0x1U << GMAC_MTL_RXQ0_MISS_PKT_OVF_CNT_MISCNTOVF_SHIFT)     /* 0x08000000 */
/* MTL_RXQ0_DEBUG */
#define GMAC_MTL_RXQ0_DEBUG_OFFSET                         (0xD38U)
#define GMAC_MTL_RXQ0_DEBUG                                (0x0U)
#define GMAC_MTL_RXQ0_DEBUG_RWCSTS_SHIFT                   (0U)
#define GMAC_MTL_RXQ0_DEBUG_RWCSTS_MASK                    (0x1U << GMAC_MTL_RXQ0_DEBUG_RWCSTS_SHIFT)                   /* 0x00000001 */
#define GMAC_MTL_RXQ0_DEBUG_RRCSTS_SHIFT                   (1U)
#define GMAC_MTL_RXQ0_DEBUG_RRCSTS_MASK                    (0x3U << GMAC_MTL_RXQ0_DEBUG_RRCSTS_SHIFT)                   /* 0x00000006 */
#define GMAC_MTL_RXQ0_DEBUG_RXQSTS_SHIFT                   (4U)
#define GMAC_MTL_RXQ0_DEBUG_RXQSTS_MASK                    (0x3U << GMAC_MTL_RXQ0_DEBUG_RXQSTS_SHIFT)                   /* 0x00000030 */
#define GMAC_MTL_RXQ0_DEBUG_PRXQ_SHIFT                     (16U)
#define GMAC_MTL_RXQ0_DEBUG_PRXQ_MASK                      (0xFU << GMAC_MTL_RXQ0_DEBUG_PRXQ_SHIFT)                     /* 0x000F0000 */
/* DMA_MODE */
#define GMAC_DMA_MODE_OFFSET                               (0x1000U)
#define GMAC_DMA_MODE_SWR_SHIFT                            (0U)
#define GMAC_DMA_MODE_SWR_MASK                             (0x1U << GMAC_DMA_MODE_SWR_SHIFT)                            /* 0x00000001 */
#define GMAC_DMA_MODE_DSPW_SHIFT                           (8U)
#define GMAC_DMA_MODE_DSPW_MASK                            (0x1U << GMAC_DMA_MODE_DSPW_SHIFT)                           /* 0x00000100 */
#define GMAC_DMA_MODE_INTM_SHIFT                           (16U)
#define GMAC_DMA_MODE_INTM_MASK                            (0x3U << GMAC_DMA_MODE_INTM_SHIFT)                           /* 0x00030000 */
/* DMA_SYSBUS_MODE */
#define GMAC_DMA_SYSBUS_MODE_OFFSET                        (0x1004U)
#define GMAC_DMA_SYSBUS_MODE_FB_SHIFT                      (0U)
#define GMAC_DMA_SYSBUS_MODE_FB_MASK                       (0x1U << GMAC_DMA_SYSBUS_MODE_FB_SHIFT)                      /* 0x00000001 */
#define GMAC_DMA_SYSBUS_MODE_BLEN4_SHIFT                   (1U)
#define GMAC_DMA_SYSBUS_MODE_BLEN4_MASK                    (0x1U << GMAC_DMA_SYSBUS_MODE_BLEN4_SHIFT)                   /* 0x00000002 */
#define GMAC_DMA_SYSBUS_MODE_BLEN8_SHIFT                   (2U)
#define GMAC_DMA_SYSBUS_MODE_BLEN8_MASK                    (0x1U << GMAC_DMA_SYSBUS_MODE_BLEN8_SHIFT)                   /* 0x00000004 */
#define GMAC_DMA_SYSBUS_MODE_BLEN16_SHIFT                  (3U)
#define GMAC_DMA_SYSBUS_MODE_BLEN16_MASK                   (0x1U << GMAC_DMA_SYSBUS_MODE_BLEN16_SHIFT)                  /* 0x00000008 */
#define GMAC_DMA_SYSBUS_MODE_AALE_SHIFT                    (10U)
#define GMAC_DMA_SYSBUS_MODE_AALE_MASK                     (0x1U << GMAC_DMA_SYSBUS_MODE_AALE_SHIFT)                    /* 0x00000400 */
#define GMAC_DMA_SYSBUS_MODE_EAME_SHIFT                    (11U)
#define GMAC_DMA_SYSBUS_MODE_EAME_MASK                     (0x1U << GMAC_DMA_SYSBUS_MODE_EAME_SHIFT)                    /* 0x00000800 */
#define GMAC_DMA_SYSBUS_MODE_AAL_SHIFT                     (12U)
#define GMAC_DMA_SYSBUS_MODE_AAL_MASK                      (0x1U << GMAC_DMA_SYSBUS_MODE_AAL_SHIFT)                     /* 0x00001000 */
#define GMAC_DMA_SYSBUS_MODE_RD_OSR_LMT_SHIFT              (16U)
#define GMAC_DMA_SYSBUS_MODE_RD_OSR_LMT_MASK               (0x7U << GMAC_DMA_SYSBUS_MODE_RD_OSR_LMT_SHIFT)              /* 0x00070000 */
#define GMAC_DMA_SYSBUS_MODE_WR_OSR_LMT_SHIFT              (24U)
#define GMAC_DMA_SYSBUS_MODE_WR_OSR_LMT_MASK               (0x3U << GMAC_DMA_SYSBUS_MODE_WR_OSR_LMT_SHIFT)              /* 0x03000000 */
#define GMAC_DMA_SYSBUS_MODE_LPI_XIT_PKT_SHIFT             (30U)
#define GMAC_DMA_SYSBUS_MODE_LPI_XIT_PKT_MASK              (0x1U << GMAC_DMA_SYSBUS_MODE_LPI_XIT_PKT_SHIFT)             /* 0x40000000 */
#define GMAC_DMA_SYSBUS_MODE_EN_LPI_SHIFT                  (31U)
#define GMAC_DMA_SYSBUS_MODE_EN_LPI_MASK                   (0x1U << GMAC_DMA_SYSBUS_MODE_EN_LPI_SHIFT)                  /* 0x80000000 */
/* DMA_INTERRUPT_STATUS */
#define GMAC_DMA_INTERRUPT_STATUS_OFFSET                   (0x1008U)
#define GMAC_DMA_INTERRUPT_STATUS                          (0x0U)
#define GMAC_DMA_INTERRUPT_STATUS_DC0IS_SHIFT              (0U)
#define GMAC_DMA_INTERRUPT_STATUS_DC0IS_MASK               (0x1U << GMAC_DMA_INTERRUPT_STATUS_DC0IS_SHIFT)              /* 0x00000001 */
#define GMAC_DMA_INTERRUPT_STATUS_MTLIS_SHIFT              (16U)
#define GMAC_DMA_INTERRUPT_STATUS_MTLIS_MASK               (0x1U << GMAC_DMA_INTERRUPT_STATUS_MTLIS_SHIFT)              /* 0x00010000 */
#define GMAC_DMA_INTERRUPT_STATUS_MACIS_SHIFT              (17U)
#define GMAC_DMA_INTERRUPT_STATUS_MACIS_MASK               (0x1U << GMAC_DMA_INTERRUPT_STATUS_MACIS_SHIFT)              /* 0x00020000 */
/* DMA_DEBUG_STATUS0 */
#define GMAC_DMA_DEBUG_STATUS0_OFFSET                      (0x100CU)
#define GMAC_DMA_DEBUG_STATUS0                             (0x0U)
#define GMAC_DMA_DEBUG_STATUS0_AXWHSTS_SHIFT               (0U)
#define GMAC_DMA_DEBUG_STATUS0_AXWHSTS_MASK                (0x1U << GMAC_DMA_DEBUG_STATUS0_AXWHSTS_SHIFT)               /* 0x00000001 */
#define GMAC_DMA_DEBUG_STATUS0_AXRHSTS_SHIFT               (1U)
#define GMAC_DMA_DEBUG_STATUS0_AXRHSTS_MASK                (0x1U << GMAC_DMA_DEBUG_STATUS0_AXRHSTS_SHIFT)               /* 0x00000002 */
#define GMAC_DMA_DEBUG_STATUS0_RPS0_SHIFT                  (8U)
#define GMAC_DMA_DEBUG_STATUS0_RPS0_MASK                   (0xFU << GMAC_DMA_DEBUG_STATUS0_RPS0_SHIFT)                  /* 0x00000F00 */
#define GMAC_DMA_DEBUG_STATUS0_TPS0_SHIFT                  (12U)
#define GMAC_DMA_DEBUG_STATUS0_TPS0_MASK                   (0xFU << GMAC_DMA_DEBUG_STATUS0_TPS0_SHIFT)                  /* 0x0000F000 */
/* AXI_LPI_ENTRY_INTERVAL */
#define GMAC_AXI_LPI_ENTRY_INTERVAL_OFFSET                 (0x1040U)
#define GMAC_AXI_LPI_ENTRY_INTERVAL_LPIEI_SHIFT            (0U)
#define GMAC_AXI_LPI_ENTRY_INTERVAL_LPIEI_MASK             (0xFU << GMAC_AXI_LPI_ENTRY_INTERVAL_LPIEI_SHIFT)            /* 0x0000000F */
/* DMA_CH0_CONTROL */
#define GMAC_DMA_CH0_CONTROL_OFFSET                        (0x1100U)
#define GMAC_DMA_CH0_CONTROL_MSS_SHIFT                     (0U)
#define GMAC_DMA_CH0_CONTROL_MSS_MASK                      (0x3FFFU << GMAC_DMA_CH0_CONTROL_MSS_SHIFT)                  /* 0x00003FFF */
#define GMAC_DMA_CH0_CONTROL_PBLX8_SHIFT                   (16U)
#define GMAC_DMA_CH0_CONTROL_PBLX8_MASK                    (0x1U << GMAC_DMA_CH0_CONTROL_PBLX8_SHIFT)                   /* 0x00010000 */
#define GMAC_DMA_CH0_CONTROL_DSL_SHIFT                     (18U)
#define GMAC_DMA_CH0_CONTROL_DSL_MASK                      (0x7U << GMAC_DMA_CH0_CONTROL_DSL_SHIFT)                     /* 0x001C0000 */
#define GMAC_DMA_CH0_CONTROL_SPH_SHIFT                     (24U)
#define GMAC_DMA_CH0_CONTROL_SPH_MASK                      (0x1U << GMAC_DMA_CH0_CONTROL_SPH_SHIFT)                     /* 0x01000000 */
/* DMA_CH0_TX_CONTROL */
#define GMAC_DMA_CH0_TX_CONTROL_OFFSET                     (0x1104U)
#define GMAC_DMA_CH0_TX_CONTROL_ST_SHIFT                   (0U)
#define GMAC_DMA_CH0_TX_CONTROL_ST_MASK                    (0x1U << GMAC_DMA_CH0_TX_CONTROL_ST_SHIFT)                   /* 0x00000001 */
#define GMAC_DMA_CH0_TX_CONTROL_OSF_SHIFT                  (4U)
#define GMAC_DMA_CH0_TX_CONTROL_OSF_MASK                   (0x1U << GMAC_DMA_CH0_TX_CONTROL_OSF_SHIFT)                  /* 0x00000010 */
#define GMAC_DMA_CH0_TX_CONTROL_TSE_SHIFT                  (12U)
#define GMAC_DMA_CH0_TX_CONTROL_TSE_MASK                   (0x1U << GMAC_DMA_CH0_TX_CONTROL_TSE_SHIFT)                  /* 0x00001000 */
#define GMAC_DMA_CH0_TX_CONTROL_TSE_MODE_SHIFT             (13U)
#define GMAC_DMA_CH0_TX_CONTROL_TSE_MODE_MASK              (0x3U << GMAC_DMA_CH0_TX_CONTROL_TSE_MODE_SHIFT)             /* 0x00006000 */
#define GMAC_DMA_CH0_TX_CONTROL_IPBL_SHIFT                 (15U)
#define GMAC_DMA_CH0_TX_CONTROL_IPBL_MASK                  (0x1U << GMAC_DMA_CH0_TX_CONTROL_IPBL_SHIFT)                 /* 0x00008000 */
#define GMAC_DMA_CH0_TX_CONTROL_TXPBL_SHIFT                (16U)
#define GMAC_DMA_CH0_TX_CONTROL_TXPBL_MASK                 (0x3FU << GMAC_DMA_CH0_TX_CONTROL_TXPBL_SHIFT)               /* 0x003F0000 */
/* DMA_CH0_RX_CONTROL */
#define GMAC_DMA_CH0_RX_CONTROL_OFFSET                     (0x1108U)
#define GMAC_DMA_CH0_RX_CONTROL_SR_SHIFT                   (0U)
#define GMAC_DMA_CH0_RX_CONTROL_SR_MASK                    (0x1U << GMAC_DMA_CH0_RX_CONTROL_SR_SHIFT)                   /* 0x00000001 */
#define GMAC_DMA_CH0_RX_CONTROL_RBSZ_3_0_SHIFT             (1U)
#define GMAC_DMA_CH0_RX_CONTROL_RBSZ_3_0_MASK              (0x7U << GMAC_DMA_CH0_RX_CONTROL_RBSZ_3_0_SHIFT)             /* 0x0000000E */
#define GMAC_DMA_CH0_RX_CONTROL_RBSZ_13_Y_SHIFT            (4U)
#define GMAC_DMA_CH0_RX_CONTROL_RBSZ_13_Y_MASK             (0x7FFU << GMAC_DMA_CH0_RX_CONTROL_RBSZ_13_Y_SHIFT)          /* 0x00007FF0 */
#define GMAC_DMA_CH0_RX_CONTROL_RXPBL_SHIFT                (16U)
#define GMAC_DMA_CH0_RX_CONTROL_RXPBL_MASK                 (0x3FU << GMAC_DMA_CH0_RX_CONTROL_RXPBL_SHIFT)               /* 0x003F0000 */
#define GMAC_DMA_CH0_RX_CONTROL_RPF_SHIFT                  (31U)
#define GMAC_DMA_CH0_RX_CONTROL_RPF_MASK                   (0x1U << GMAC_DMA_CH0_RX_CONTROL_RPF_SHIFT)                  /* 0x80000000 */
/* DMA_CH0_TXDESC_LIST_HADDRESS */
#define GMAC_DMA_CH0_TXDESC_LIST_HADDRESS_OFFSET           (0x1110U)
#define GMAC_DMA_CH0_TXDESC_LIST_HADDRESS_TDESHA_SHIFT     (0U)
#define GMAC_DMA_CH0_TXDESC_LIST_HADDRESS_TDESHA_MASK      (0xFFU << GMAC_DMA_CH0_TXDESC_LIST_HADDRESS_TDESHA_SHIFT)    /* 0x000000FF */
/* DMA_CH0_TXDESC_LIST_ADDRESS */
#define GMAC_DMA_CH0_TXDESC_LIST_ADDRESS_OFFSET            (0x1114U)
#define GMAC_DMA_CH0_TXDESC_LIST_ADDRESS_TDESLA_SHIFT      (3U)
#define GMAC_DMA_CH0_TXDESC_LIST_ADDRESS_TDESLA_MASK       (0x1FFFFFFFU << GMAC_DMA_CH0_TXDESC_LIST_ADDRESS_TDESLA_SHIFT) /* 0xFFFFFFF8 */
/* DMA_CH0_RXDESC_LIST_HAADDRESS */
#define GMAC_DMA_CH0_RXDESC_LIST_HAADDRESS_OFFSET          (0x1118U)
#define GMAC_DMA_CH0_RXDESC_LIST_HAADDRESS_RDESHA_SHIFT    (0U)
#define GMAC_DMA_CH0_RXDESC_LIST_HAADDRESS_RDESHA_MASK     (0xFFU << GMAC_DMA_CH0_RXDESC_LIST_HAADDRESS_RDESHA_SHIFT)   /* 0x000000FF */
/* DMA_CH0_RXDESC_LIST_ADDRESS */
#define GMAC_DMA_CH0_RXDESC_LIST_ADDRESS_OFFSET            (0x111CU)
#define GMAC_DMA_CH0_RXDESC_LIST_ADDRESS_RDESLA_SHIFT      (3U)
#define GMAC_DMA_CH0_RXDESC_LIST_ADDRESS_RDESLA_MASK       (0x1FFFFFFFU << GMAC_DMA_CH0_RXDESC_LIST_ADDRESS_RDESLA_SHIFT) /* 0xFFFFFFF8 */
/* DMA_CH0_TXDESC_TAIL_POINTER */
#define GMAC_DMA_CH0_TXDESC_TAIL_POINTER_OFFSET            (0x1120U)
#define GMAC_DMA_CH0_TXDESC_TAIL_POINTER_TDTP_SHIFT        (3U)
#define GMAC_DMA_CH0_TXDESC_TAIL_POINTER_TDTP_MASK         (0x1FFFFFFFU << GMAC_DMA_CH0_TXDESC_TAIL_POINTER_TDTP_SHIFT) /* 0xFFFFFFF8 */
/* DMA_CH0_RXDESC_TAIL_POINTER */
#define GMAC_DMA_CH0_RXDESC_TAIL_POINTER_OFFSET            (0x1128U)
#define GMAC_DMA_CH0_RXDESC_TAIL_POINTER_RDRT_SHIFT        (3U)
#define GMAC_DMA_CH0_RXDESC_TAIL_POINTER_RDRT_MASK         (0x1FFFFFFFU << GMAC_DMA_CH0_RXDESC_TAIL_POINTER_RDRT_SHIFT) /* 0xFFFFFFF8 */
/* DMA_CH0_TXDESC_RING_LENGTH */
#define GMAC_DMA_CH0_TXDESC_RING_LENGTH_OFFSET             (0x112CU)
#define GMAC_DMA_CH0_TXDESC_RING_LENGTH_TDRL_SHIFT         (0U)
#define GMAC_DMA_CH0_TXDESC_RING_LENGTH_TDRL_MASK          (0x3FFU << GMAC_DMA_CH0_TXDESC_RING_LENGTH_TDRL_SHIFT)       /* 0x000003FF */
/* DMA_CH0_RXDESC_RING_LENGTH */
#define GMAC_DMA_CH0_RXDESC_RING_LENGTH_OFFSET             (0x1130U)
#define GMAC_DMA_CH0_RXDESC_RING_LENGTH_RDRL_SHIFT         (0U)
#define GMAC_DMA_CH0_RXDESC_RING_LENGTH_RDRL_MASK          (0x3FFU << GMAC_DMA_CH0_RXDESC_RING_LENGTH_RDRL_SHIFT)       /* 0x000003FF */
/* DMA_CH0_INTERRUPT_ENABLE */
#define GMAC_DMA_CH0_INTERRUPT_ENABLE_OFFSET               (0x1134U)
#define GMAC_DMA_CH0_INTERRUPT_ENABLE_TIE_SHIFT            (0U)
#define GMAC_DMA_CH0_INTERRUPT_ENABLE_TIE_MASK             (0x1U << GMAC_DMA_CH0_INTERRUPT_ENABLE_TIE_SHIFT)            /* 0x00000001 */
#define GMAC_DMA_CH0_INTERRUPT_ENABLE_TXSE_SHIFT           (1U)
#define GMAC_DMA_CH0_INTERRUPT_ENABLE_TXSE_MASK            (0x1U << GMAC_DMA_CH0_INTERRUPT_ENABLE_TXSE_SHIFT)           /* 0x00000002 */
#define GMAC_DMA_CH0_INTERRUPT_ENABLE_TBUE_SHIFT           (2U)
#define GMAC_DMA_CH0_INTERRUPT_ENABLE_TBUE_MASK            (0x1U << GMAC_DMA_CH0_INTERRUPT_ENABLE_TBUE_SHIFT)           /* 0x00000004 */
#define GMAC_DMA_CH0_INTERRUPT_ENABLE_RIE_SHIFT            (6U)
#define GMAC_DMA_CH0_INTERRUPT_ENABLE_RIE_MASK             (0x1U << GMAC_DMA_CH0_INTERRUPT_ENABLE_RIE_SHIFT)            /* 0x00000040 */
#define GMAC_DMA_CH0_INTERRUPT_ENABLE_RBUE_SHIFT           (7U)
#define GMAC_DMA_CH0_INTERRUPT_ENABLE_RBUE_MASK            (0x1U << GMAC_DMA_CH0_INTERRUPT_ENABLE_RBUE_SHIFT)           /* 0x00000080 */
#define GMAC_DMA_CH0_INTERRUPT_ENABLE_RSE_SHIFT            (8U)
#define GMAC_DMA_CH0_INTERRUPT_ENABLE_RSE_MASK             (0x1U << GMAC_DMA_CH0_INTERRUPT_ENABLE_RSE_SHIFT)            /* 0x00000100 */
#define GMAC_DMA_CH0_INTERRUPT_ENABLE_RWTE_SHIFT           (9U)
#define GMAC_DMA_CH0_INTERRUPT_ENABLE_RWTE_MASK            (0x1U << GMAC_DMA_CH0_INTERRUPT_ENABLE_RWTE_SHIFT)           /* 0x00000200 */
#define GMAC_DMA_CH0_INTERRUPT_ENABLE_ETIE_SHIFT           (10U)
#define GMAC_DMA_CH0_INTERRUPT_ENABLE_ETIE_MASK            (0x1U << GMAC_DMA_CH0_INTERRUPT_ENABLE_ETIE_SHIFT)           /* 0x00000400 */
#define GMAC_DMA_CH0_INTERRUPT_ENABLE_ERIE_SHIFT           (11U)
#define GMAC_DMA_CH0_INTERRUPT_ENABLE_ERIE_MASK            (0x1U << GMAC_DMA_CH0_INTERRUPT_ENABLE_ERIE_SHIFT)           /* 0x00000800 */
#define GMAC_DMA_CH0_INTERRUPT_ENABLE_FBEE_SHIFT           (12U)
#define GMAC_DMA_CH0_INTERRUPT_ENABLE_FBEE_MASK            (0x1U << GMAC_DMA_CH0_INTERRUPT_ENABLE_FBEE_SHIFT)           /* 0x00001000 */
#define GMAC_DMA_CH0_INTERRUPT_ENABLE_CDEE_SHIFT           (13U)
#define GMAC_DMA_CH0_INTERRUPT_ENABLE_CDEE_MASK            (0x1U << GMAC_DMA_CH0_INTERRUPT_ENABLE_CDEE_SHIFT)           /* 0x00002000 */
#define GMAC_DMA_CH0_INTERRUPT_ENABLE_AIE_SHIFT            (14U)
#define GMAC_DMA_CH0_INTERRUPT_ENABLE_AIE_MASK             (0x1U << GMAC_DMA_CH0_INTERRUPT_ENABLE_AIE_SHIFT)            /* 0x00004000 */
#define GMAC_DMA_CH0_INTERRUPT_ENABLE_NIE_SHIFT            (15U)
#define GMAC_DMA_CH0_INTERRUPT_ENABLE_NIE_MASK             (0x1U << GMAC_DMA_CH0_INTERRUPT_ENABLE_NIE_SHIFT)            /* 0x00008000 */
/* DMA_CH0_RX_INTERRUPT_WATCHDOG_TIMER */
#define GMAC_DMA_CH0_RX_INTERRUPT_WATCHDOG_TIMER_OFFSET    (0x1138U)
#define GMAC_DMA_CH0_RX_INTERRUPT_WATCHDOG_TIMER_RWT_SHIFT (0U)
#define GMAC_DMA_CH0_RX_INTERRUPT_WATCHDOG_TIMER_RWT_MASK  (0xFFU << GMAC_DMA_CH0_RX_INTERRUPT_WATCHDOG_TIMER_RWT_SHIFT) /* 0x000000FF */
#define GMAC_DMA_CH0_RX_INTERRUPT_WATCHDOG_TIMER_RWTU_SHIFT (16U)
#define GMAC_DMA_CH0_RX_INTERRUPT_WATCHDOG_TIMER_RWTU_MASK (0x3U << GMAC_DMA_CH0_RX_INTERRUPT_WATCHDOG_TIMER_RWTU_SHIFT) /* 0x00030000 */
/* DMA_CH0_CURRENT_APP_TXDESC */
#define GMAC_DMA_CH0_CURRENT_APP_TXDESC_OFFSET             (0x1144U)
#define GMAC_DMA_CH0_CURRENT_APP_TXDESC                    (0x0U)
#define GMAC_DMA_CH0_CURRENT_APP_TXDESC_CURTDESAPTR_SHIFT  (0U)
#define GMAC_DMA_CH0_CURRENT_APP_TXDESC_CURTDESAPTR_MASK   (0xFFFFFFFFU << GMAC_DMA_CH0_CURRENT_APP_TXDESC_CURTDESAPTR_SHIFT) /* 0xFFFFFFFF */
/* DMA_CH0_CURRENT_APP_RXDESC */
#define GMAC_DMA_CH0_CURRENT_APP_RXDESC_OFFSET             (0x114CU)
#define GMAC_DMA_CH0_CURRENT_APP_RXDESC                    (0x0U)
#define GMAC_DMA_CH0_CURRENT_APP_RXDESC_CURRDESAPTR_SHIFT  (0U)
#define GMAC_DMA_CH0_CURRENT_APP_RXDESC_CURRDESAPTR_MASK   (0xFFFFFFFFU << GMAC_DMA_CH0_CURRENT_APP_RXDESC_CURRDESAPTR_SHIFT) /* 0xFFFFFFFF */
/* DMA_CH0_CURREN_APP_TXBUFFER_H */
#define GMAC_DMA_CH0_CURREN_APP_TXBUFFER_H_OFFSET          (0x1150U)
#define GMAC_DMA_CH0_CURREN_APP_TXBUFFER_H                 (0x0U)
#define GMAC_DMA_CH0_CURREN_APP_TXBUFFER_H_CURTBUFAPTRH_SHIFT (0U)
#define GMAC_DMA_CH0_CURREN_APP_TXBUFFER_H_CURTBUFAPTRH_MASK (0xFFU << GMAC_DMA_CH0_CURREN_APP_TXBUFFER_H_CURTBUFAPTRH_SHIFT) /* 0x000000FF */
/* DMA_CH0_CURRENT_APP_TXBUFFER */
#define GMAC_DMA_CH0_CURRENT_APP_TXBUFFER_OFFSET           (0x1154U)
#define GMAC_DMA_CH0_CURRENT_APP_TXBUFFER                  (0x0U)
#define GMAC_DMA_CH0_CURRENT_APP_TXBUFFER_CURTBUFAPTR_SHIFT (0U)
#define GMAC_DMA_CH0_CURRENT_APP_TXBUFFER_CURTBUFAPTR_MASK (0xFFFFFFFFU << GMAC_DMA_CH0_CURRENT_APP_TXBUFFER_CURTBUFAPTR_SHIFT) /* 0xFFFFFFFF */
/* DMA_CH0_CURRENT_APP_RXBUFFER_H */
#define GMAC_DMA_CH0_CURRENT_APP_RXBUFFER_H_OFFSET         (0x1158U)
#define GMAC_DMA_CH0_CURRENT_APP_RXBUFFER_H                (0x0U)
#define GMAC_DMA_CH0_CURRENT_APP_RXBUFFER_H_CURRBUFAPTRH_SHIFT (0U)
#define GMAC_DMA_CH0_CURRENT_APP_RXBUFFER_H_CURRBUFAPTRH_MASK (0xFFU << GMAC_DMA_CH0_CURRENT_APP_RXBUFFER_H_CURRBUFAPTRH_SHIFT) /* 0x000000FF */
/* DMA_CH0_CURRENT_APP_RXBUFFER */
#define GMAC_DMA_CH0_CURRENT_APP_RXBUFFER_OFFSET           (0x115CU)
#define GMAC_DMA_CH0_CURRENT_APP_RXBUFFER                  (0x0U)
#define GMAC_DMA_CH0_CURRENT_APP_RXBUFFER_CURRBUFAPTR_SHIFT (0U)
#define GMAC_DMA_CH0_CURRENT_APP_RXBUFFER_CURRBUFAPTR_MASK (0xFFFFFFFFU << GMAC_DMA_CH0_CURRENT_APP_RXBUFFER_CURRBUFAPTR_SHIFT) /* 0xFFFFFFFF */
/* DMA_CH0_STATUS */
#define GMAC_DMA_CH0_STATUS_OFFSET                         (0x1160U)
#define GMAC_DMA_CH0_STATUS_TI_SHIFT                       (0U)
#define GMAC_DMA_CH0_STATUS_TI_MASK                        (0x1U << GMAC_DMA_CH0_STATUS_TI_SHIFT)                       /* 0x00000001 */
#define GMAC_DMA_CH0_STATUS_TPS_SHIFT                      (1U)
#define GMAC_DMA_CH0_STATUS_TPS_MASK                       (0x1U << GMAC_DMA_CH0_STATUS_TPS_SHIFT)                      /* 0x00000002 */
#define GMAC_DMA_CH0_STATUS_TBU_SHIFT                      (2U)
#define GMAC_DMA_CH0_STATUS_TBU_MASK                       (0x1U << GMAC_DMA_CH0_STATUS_TBU_SHIFT)                      /* 0x00000004 */
#define GMAC_DMA_CH0_STATUS_RI_SHIFT                       (6U)
#define GMAC_DMA_CH0_STATUS_RI_MASK                        (0x1U << GMAC_DMA_CH0_STATUS_RI_SHIFT)                       /* 0x00000040 */
#define GMAC_DMA_CH0_STATUS_RBU_SHIFT                      (7U)
#define GMAC_DMA_CH0_STATUS_RBU_MASK                       (0x1U << GMAC_DMA_CH0_STATUS_RBU_SHIFT)                      /* 0x00000080 */
#define GMAC_DMA_CH0_STATUS_RPS_SHIFT                      (8U)
#define GMAC_DMA_CH0_STATUS_RPS_MASK                       (0x1U << GMAC_DMA_CH0_STATUS_RPS_SHIFT)                      /* 0x00000100 */
#define GMAC_DMA_CH0_STATUS_RWT_SHIFT                      (9U)
#define GMAC_DMA_CH0_STATUS_RWT_MASK                       (0x1U << GMAC_DMA_CH0_STATUS_RWT_SHIFT)                      /* 0x00000200 */
#define GMAC_DMA_CH0_STATUS_ETI_SHIFT                      (10U)
#define GMAC_DMA_CH0_STATUS_ETI_MASK                       (0x1U << GMAC_DMA_CH0_STATUS_ETI_SHIFT)                      /* 0x00000400 */
#define GMAC_DMA_CH0_STATUS_ERI_SHIFT                      (11U)
#define GMAC_DMA_CH0_STATUS_ERI_MASK                       (0x1U << GMAC_DMA_CH0_STATUS_ERI_SHIFT)                      /* 0x00000800 */
#define GMAC_DMA_CH0_STATUS_FBE_SHIFT                      (12U)
#define GMAC_DMA_CH0_STATUS_FBE_MASK                       (0x1U << GMAC_DMA_CH0_STATUS_FBE_SHIFT)                      /* 0x00001000 */
#define GMAC_DMA_CH0_STATUS_CDE_SHIFT                      (13U)
#define GMAC_DMA_CH0_STATUS_CDE_MASK                       (0x1U << GMAC_DMA_CH0_STATUS_CDE_SHIFT)                      /* 0x00002000 */
#define GMAC_DMA_CH0_STATUS_AIS_SHIFT                      (14U)
#define GMAC_DMA_CH0_STATUS_AIS_MASK                       (0x1U << GMAC_DMA_CH0_STATUS_AIS_SHIFT)                      /* 0x00004000 */
#define GMAC_DMA_CH0_STATUS_NIS_SHIFT                      (15U)
#define GMAC_DMA_CH0_STATUS_NIS_MASK                       (0x1U << GMAC_DMA_CH0_STATUS_NIS_SHIFT)                      /* 0x00008000 */
#define GMAC_DMA_CH0_STATUS_TEB_SHIFT                      (16U)
#define GMAC_DMA_CH0_STATUS_TEB_MASK                       (0x7U << GMAC_DMA_CH0_STATUS_TEB_SHIFT)                      /* 0x00070000 */
#define GMAC_DMA_CH0_STATUS_REB_SHIFT                      (19U)
#define GMAC_DMA_CH0_STATUS_REB_MASK                       (0x7U << GMAC_DMA_CH0_STATUS_REB_SHIFT)                      /* 0x00380000 */
/* DMA_CH0_MISS_FRAME_CNT */
#define GMAC_DMA_CH0_MISS_FRAME_CNT_OFFSET                 (0x1164U)
#define GMAC_DMA_CH0_MISS_FRAME_CNT                        (0x0U)
#define GMAC_DMA_CH0_MISS_FRAME_CNT_MFC_SHIFT              (0U)
#define GMAC_DMA_CH0_MISS_FRAME_CNT_MFC_MASK               (0x7FFU << GMAC_DMA_CH0_MISS_FRAME_CNT_MFC_SHIFT)            /* 0x000007FF */
#define GMAC_DMA_CH0_MISS_FRAME_CNT_MFC0_SHIFT             (15U)
#define GMAC_DMA_CH0_MISS_FRAME_CNT_MFC0_MASK              (0x1U << GMAC_DMA_CH0_MISS_FRAME_CNT_MFC0_SHIFT)             /* 0x00008000 */
/* DMA_CH0_RX_ERI_CNT */
#define GMAC_DMA_CH0_RX_ERI_CNT_OFFSET                     (0x1168U)
#define GMAC_DMA_CH0_RX_ERI_CNT                            (0x0U)
#define GMAC_DMA_CH0_RX_ERI_CNT_ECNT_SHIFT                 (0U)
#define GMAC_DMA_CH0_RX_ERI_CNT_ECNT_MASK                  (0x1U << GMAC_DMA_CH0_RX_ERI_CNT_ECNT_SHIFT)                 /* 0x00000001 */
/***************************************GPIO2_IOC****************************************/
/* GPIO2A_IOMUX_SEL_0 */
#define GPIO2_IOC_GPIO2A_IOMUX_SEL_0_OFFSET                (0x40U)
#define GPIO2_IOC_GPIO2A_IOMUX_SEL_0_GPIO2A0_SEL_SHIFT     (0U)
#define GPIO2_IOC_GPIO2A_IOMUX_SEL_0_GPIO2A0_SEL_MASK      (0xFU << GPIO2_IOC_GPIO2A_IOMUX_SEL_0_GPIO2A0_SEL_SHIFT)     /* 0x0000000F */
#define GPIO2_IOC_GPIO2A_IOMUX_SEL_0_GPIO2A1_SEL_SHIFT     (4U)
#define GPIO2_IOC_GPIO2A_IOMUX_SEL_0_GPIO2A1_SEL_MASK      (0xFU << GPIO2_IOC_GPIO2A_IOMUX_SEL_0_GPIO2A1_SEL_SHIFT)     /* 0x000000F0 */
#define GPIO2_IOC_GPIO2A_IOMUX_SEL_0_GPIO2A2_SEL_SHIFT     (8U)
#define GPIO2_IOC_GPIO2A_IOMUX_SEL_0_GPIO2A2_SEL_MASK      (0xFU << GPIO2_IOC_GPIO2A_IOMUX_SEL_0_GPIO2A2_SEL_SHIFT)     /* 0x00000F00 */
#define GPIO2_IOC_GPIO2A_IOMUX_SEL_0_GPIO2A3_SEL_SHIFT     (12U)
#define GPIO2_IOC_GPIO2A_IOMUX_SEL_0_GPIO2A3_SEL_MASK      (0xFU << GPIO2_IOC_GPIO2A_IOMUX_SEL_0_GPIO2A3_SEL_SHIFT)     /* 0x0000F000 */
/* GPIO2A_IOMUX_SEL_1 */
#define GPIO2_IOC_GPIO2A_IOMUX_SEL_1_OFFSET                (0x44U)
#define GPIO2_IOC_GPIO2A_IOMUX_SEL_1_GPIO2A4_SEL_SHIFT     (0U)
#define GPIO2_IOC_GPIO2A_IOMUX_SEL_1_GPIO2A4_SEL_MASK      (0xFU << GPIO2_IOC_GPIO2A_IOMUX_SEL_1_GPIO2A4_SEL_SHIFT)     /* 0x0000000F */
#define GPIO2_IOC_GPIO2A_IOMUX_SEL_1_GPIO2A5_SEL_SHIFT     (4U)
#define GPIO2_IOC_GPIO2A_IOMUX_SEL_1_GPIO2A5_SEL_MASK      (0xFU << GPIO2_IOC_GPIO2A_IOMUX_SEL_1_GPIO2A5_SEL_SHIFT)     /* 0x000000F0 */
/* GPIO2B_IOMUX_SEL_0 */
#define GPIO2_IOC_GPIO2B_IOMUX_SEL_0_OFFSET                (0x48U)
#define GPIO2_IOC_GPIO2B_IOMUX_SEL_0_GPIO2B0_SEL_SHIFT     (0U)
#define GPIO2_IOC_GPIO2B_IOMUX_SEL_0_GPIO2B0_SEL_MASK      (0xFU << GPIO2_IOC_GPIO2B_IOMUX_SEL_0_GPIO2B0_SEL_SHIFT)     /* 0x0000000F */
#define GPIO2_IOC_GPIO2B_IOMUX_SEL_0_GPIO2B1_SEL_SHIFT     (4U)
#define GPIO2_IOC_GPIO2B_IOMUX_SEL_0_GPIO2B1_SEL_MASK      (0xFU << GPIO2_IOC_GPIO2B_IOMUX_SEL_0_GPIO2B1_SEL_SHIFT)     /* 0x000000F0 */
#define GPIO2_IOC_GPIO2B_IOMUX_SEL_0_GPIO2B2_SEL_SHIFT     (8U)
#define GPIO2_IOC_GPIO2B_IOMUX_SEL_0_GPIO2B2_SEL_MASK      (0xFU << GPIO2_IOC_GPIO2B_IOMUX_SEL_0_GPIO2B2_SEL_SHIFT)     /* 0x00000F00 */
#define GPIO2_IOC_GPIO2B_IOMUX_SEL_0_GPIO2B3_SEL_SHIFT     (12U)
#define GPIO2_IOC_GPIO2B_IOMUX_SEL_0_GPIO2B3_SEL_MASK      (0xFU << GPIO2_IOC_GPIO2B_IOMUX_SEL_0_GPIO2B3_SEL_SHIFT)     /* 0x0000F000 */
/* GPIO2B_IOMUX_SEL_1 */
#define GPIO2_IOC_GPIO2B_IOMUX_SEL_1_OFFSET                (0x4CU)
#define GPIO2_IOC_GPIO2B_IOMUX_SEL_1_GPIO2B4_SEL_SHIFT     (0U)
#define GPIO2_IOC_GPIO2B_IOMUX_SEL_1_GPIO2B4_SEL_MASK      (0xFU << GPIO2_IOC_GPIO2B_IOMUX_SEL_1_GPIO2B4_SEL_SHIFT)     /* 0x0000000F */
#define GPIO2_IOC_GPIO2B_IOMUX_SEL_1_GPIO2B5_SEL_SHIFT     (4U)
#define GPIO2_IOC_GPIO2B_IOMUX_SEL_1_GPIO2B5_SEL_MASK      (0xFU << GPIO2_IOC_GPIO2B_IOMUX_SEL_1_GPIO2B5_SEL_SHIFT)     /* 0x000000F0 */
#define GPIO2_IOC_GPIO2B_IOMUX_SEL_1_GPIO2B6_SEL_SHIFT     (8U)
#define GPIO2_IOC_GPIO2B_IOMUX_SEL_1_GPIO2B6_SEL_MASK      (0xFU << GPIO2_IOC_GPIO2B_IOMUX_SEL_1_GPIO2B6_SEL_SHIFT)     /* 0x00000F00 */
#define GPIO2_IOC_GPIO2B_IOMUX_SEL_1_GPIO2B7_SEL_SHIFT     (12U)
#define GPIO2_IOC_GPIO2B_IOMUX_SEL_1_GPIO2B7_SEL_MASK      (0xFU << GPIO2_IOC_GPIO2B_IOMUX_SEL_1_GPIO2B7_SEL_SHIFT)     /* 0x0000F000 */
/* GPIO2C_IOMUX_SEL_0 */
#define GPIO2_IOC_GPIO2C_IOMUX_SEL_0_OFFSET                (0x50U)
#define GPIO2_IOC_GPIO2C_IOMUX_SEL_0_GPIO2C0_SEL_SHIFT     (0U)
#define GPIO2_IOC_GPIO2C_IOMUX_SEL_0_GPIO2C0_SEL_MASK      (0xFU << GPIO2_IOC_GPIO2C_IOMUX_SEL_0_GPIO2C0_SEL_SHIFT)     /* 0x0000000F */
/* GPIO2A_DS_0 */
#define GPIO2_IOC_GPIO2A_DS_0_OFFSET                       (0x180U)
#define GPIO2_IOC_GPIO2A_DS_0_GPIO2A0_DS_SHIFT             (0U)
#define GPIO2_IOC_GPIO2A_DS_0_GPIO2A0_DS_MASK              (0x3FU << GPIO2_IOC_GPIO2A_DS_0_GPIO2A0_DS_SHIFT)            /* 0x0000003F */
#define GPIO2_IOC_GPIO2A_DS_0_GPIO2A1_DS_SHIFT             (8U)
#define GPIO2_IOC_GPIO2A_DS_0_GPIO2A1_DS_MASK              (0x3FU << GPIO2_IOC_GPIO2A_DS_0_GPIO2A1_DS_SHIFT)            /* 0x00003F00 */
/* GPIO2A_DS_1 */
#define GPIO2_IOC_GPIO2A_DS_1_OFFSET                       (0x184U)
#define GPIO2_IOC_GPIO2A_DS_1_GPIO2A2_DS_SHIFT             (0U)
#define GPIO2_IOC_GPIO2A_DS_1_GPIO2A2_DS_MASK              (0x3FU << GPIO2_IOC_GPIO2A_DS_1_GPIO2A2_DS_SHIFT)            /* 0x0000003F */
#define GPIO2_IOC_GPIO2A_DS_1_GPIO2A3_DS_SHIFT             (8U)
#define GPIO2_IOC_GPIO2A_DS_1_GPIO2A3_DS_MASK              (0x3FU << GPIO2_IOC_GPIO2A_DS_1_GPIO2A3_DS_SHIFT)            /* 0x00003F00 */
/* GPIO2A_DS_2 */
#define GPIO2_IOC_GPIO2A_DS_2_OFFSET                       (0x188U)
#define GPIO2_IOC_GPIO2A_DS_2_GPIO2A4_DS_SHIFT             (0U)
#define GPIO2_IOC_GPIO2A_DS_2_GPIO2A4_DS_MASK              (0x3FU << GPIO2_IOC_GPIO2A_DS_2_GPIO2A4_DS_SHIFT)            /* 0x0000003F */
#define GPIO2_IOC_GPIO2A_DS_2_GPIO2A5_DS_SHIFT             (8U)
#define GPIO2_IOC_GPIO2A_DS_2_GPIO2A5_DS_MASK              (0x3FU << GPIO2_IOC_GPIO2A_DS_2_GPIO2A5_DS_SHIFT)            /* 0x00003F00 */
/* GPIO2B_DS_0 */
#define GPIO2_IOC_GPIO2B_DS_0_OFFSET                       (0x190U)
#define GPIO2_IOC_GPIO2B_DS_0_GPIO2B0_DS_SHIFT             (0U)
#define GPIO2_IOC_GPIO2B_DS_0_GPIO2B0_DS_MASK              (0x3FU << GPIO2_IOC_GPIO2B_DS_0_GPIO2B0_DS_SHIFT)            /* 0x0000003F */
#define GPIO2_IOC_GPIO2B_DS_0_GPIO2B1_DS_SHIFT             (8U)
#define GPIO2_IOC_GPIO2B_DS_0_GPIO2B1_DS_MASK              (0x3FU << GPIO2_IOC_GPIO2B_DS_0_GPIO2B1_DS_SHIFT)            /* 0x00003F00 */
/* GPIO2B_DS_1 */
#define GPIO2_IOC_GPIO2B_DS_1_OFFSET                       (0x194U)
#define GPIO2_IOC_GPIO2B_DS_1_GPIO2B2_DS_SHIFT             (0U)
#define GPIO2_IOC_GPIO2B_DS_1_GPIO2B2_DS_MASK              (0x3FU << GPIO2_IOC_GPIO2B_DS_1_GPIO2B2_DS_SHIFT)            /* 0x0000003F */
#define GPIO2_IOC_GPIO2B_DS_1_GPIO2B3_DS_SHIFT             (8U)
#define GPIO2_IOC_GPIO2B_DS_1_GPIO2B3_DS_MASK              (0x3FU << GPIO2_IOC_GPIO2B_DS_1_GPIO2B3_DS_SHIFT)            /* 0x00003F00 */
/* GPIO2B_DS_2 */
#define GPIO2_IOC_GPIO2B_DS_2_OFFSET                       (0x198U)
#define GPIO2_IOC_GPIO2B_DS_2_GPIO2B4_DS_SHIFT             (0U)
#define GPIO2_IOC_GPIO2B_DS_2_GPIO2B4_DS_MASK              (0x3FU << GPIO2_IOC_GPIO2B_DS_2_GPIO2B4_DS_SHIFT)            /* 0x0000003F */
#define GPIO2_IOC_GPIO2B_DS_2_GPIO2B5_DS_SHIFT             (8U)
#define GPIO2_IOC_GPIO2B_DS_2_GPIO2B5_DS_MASK              (0x3FU << GPIO2_IOC_GPIO2B_DS_2_GPIO2B5_DS_SHIFT)            /* 0x00003F00 */
/* GPIO2B_DS_3 */
#define GPIO2_IOC_GPIO2B_DS_3_OFFSET                       (0x19CU)
#define GPIO2_IOC_GPIO2B_DS_3_GPIO2B6_DS_SHIFT             (0U)
#define GPIO2_IOC_GPIO2B_DS_3_GPIO2B6_DS_MASK              (0x3FU << GPIO2_IOC_GPIO2B_DS_3_GPIO2B6_DS_SHIFT)            /* 0x0000003F */
#define GPIO2_IOC_GPIO2B_DS_3_GPIO2B7_DS_SHIFT             (8U)
#define GPIO2_IOC_GPIO2B_DS_3_GPIO2B7_DS_MASK              (0x3FU << GPIO2_IOC_GPIO2B_DS_3_GPIO2B7_DS_SHIFT)            /* 0x00003F00 */
/* GPIO2C_DS_0 */
#define GPIO2_IOC_GPIO2C_DS_0_OFFSET                       (0x1A0U)
#define GPIO2_IOC_GPIO2C_DS_0_GPIO2C0_DS_SHIFT             (0U)
#define GPIO2_IOC_GPIO2C_DS_0_GPIO2C0_DS_MASK              (0x3FU << GPIO2_IOC_GPIO2C_DS_0_GPIO2C0_DS_SHIFT)            /* 0x0000003F */
/* GPIO2A_PULL */
#define GPIO2_IOC_GPIO2A_PULL_OFFSET                       (0x220U)
#define GPIO2_IOC_GPIO2A_PULL_GPIO2A0_PULL_SHIFT           (0U)
#define GPIO2_IOC_GPIO2A_PULL_GPIO2A0_PULL_MASK            (0x3U << GPIO2_IOC_GPIO2A_PULL_GPIO2A0_PULL_SHIFT)           /* 0x00000003 */
#define GPIO2_IOC_GPIO2A_PULL_GPIO2A1_PULL_SHIFT           (2U)
#define GPIO2_IOC_GPIO2A_PULL_GPIO2A1_PULL_MASK            (0x3U << GPIO2_IOC_GPIO2A_PULL_GPIO2A1_PULL_SHIFT)           /* 0x0000000C */
#define GPIO2_IOC_GPIO2A_PULL_GPIO2A2_PULL_SHIFT           (4U)
#define GPIO2_IOC_GPIO2A_PULL_GPIO2A2_PULL_MASK            (0x3U << GPIO2_IOC_GPIO2A_PULL_GPIO2A2_PULL_SHIFT)           /* 0x00000030 */
#define GPIO2_IOC_GPIO2A_PULL_GPIO2A3_PULL_SHIFT           (6U)
#define GPIO2_IOC_GPIO2A_PULL_GPIO2A3_PULL_MASK            (0x3U << GPIO2_IOC_GPIO2A_PULL_GPIO2A3_PULL_SHIFT)           /* 0x000000C0 */
#define GPIO2_IOC_GPIO2A_PULL_GPIO2A4_PULL_SHIFT           (8U)
#define GPIO2_IOC_GPIO2A_PULL_GPIO2A4_PULL_MASK            (0x3U << GPIO2_IOC_GPIO2A_PULL_GPIO2A4_PULL_SHIFT)           /* 0x00000300 */
#define GPIO2_IOC_GPIO2A_PULL_GPIO2A5_PULL_SHIFT           (10U)
#define GPIO2_IOC_GPIO2A_PULL_GPIO2A5_PULL_MASK            (0x3U << GPIO2_IOC_GPIO2A_PULL_GPIO2A5_PULL_SHIFT)           /* 0x00000C00 */
/* GPIO2B_PULL */
#define GPIO2_IOC_GPIO2B_PULL_OFFSET                       (0x224U)
#define GPIO2_IOC_GPIO2B_PULL_GPIO2B0_PULL_SHIFT           (0U)
#define GPIO2_IOC_GPIO2B_PULL_GPIO2B0_PULL_MASK            (0x3U << GPIO2_IOC_GPIO2B_PULL_GPIO2B0_PULL_SHIFT)           /* 0x00000003 */
#define GPIO2_IOC_GPIO2B_PULL_GPIO2B1_PULL_SHIFT           (2U)
#define GPIO2_IOC_GPIO2B_PULL_GPIO2B1_PULL_MASK            (0x3U << GPIO2_IOC_GPIO2B_PULL_GPIO2B1_PULL_SHIFT)           /* 0x0000000C */
#define GPIO2_IOC_GPIO2B_PULL_GPIO2B2_PULL_SHIFT           (4U)
#define GPIO2_IOC_GPIO2B_PULL_GPIO2B2_PULL_MASK            (0x3U << GPIO2_IOC_GPIO2B_PULL_GPIO2B2_PULL_SHIFT)           /* 0x00000030 */
#define GPIO2_IOC_GPIO2B_PULL_GPIO2B3_PULL_SHIFT           (6U)
#define GPIO2_IOC_GPIO2B_PULL_GPIO2B3_PULL_MASK            (0x3U << GPIO2_IOC_GPIO2B_PULL_GPIO2B3_PULL_SHIFT)           /* 0x000000C0 */
#define GPIO2_IOC_GPIO2B_PULL_GPIO2B4_PULL_SHIFT           (8U)
#define GPIO2_IOC_GPIO2B_PULL_GPIO2B4_PULL_MASK            (0x3U << GPIO2_IOC_GPIO2B_PULL_GPIO2B4_PULL_SHIFT)           /* 0x00000300 */
#define GPIO2_IOC_GPIO2B_PULL_GPIO2B5_PULL_SHIFT           (10U)
#define GPIO2_IOC_GPIO2B_PULL_GPIO2B5_PULL_MASK            (0x3U << GPIO2_IOC_GPIO2B_PULL_GPIO2B5_PULL_SHIFT)           /* 0x00000C00 */
#define GPIO2_IOC_GPIO2B_PULL_GPIO2B6_PULL_SHIFT           (12U)
#define GPIO2_IOC_GPIO2B_PULL_GPIO2B6_PULL_MASK            (0x3U << GPIO2_IOC_GPIO2B_PULL_GPIO2B6_PULL_SHIFT)           /* 0x00003000 */
#define GPIO2_IOC_GPIO2B_PULL_GPIO2B7_PULL_SHIFT           (14U)
#define GPIO2_IOC_GPIO2B_PULL_GPIO2B7_PULL_MASK            (0x3U << GPIO2_IOC_GPIO2B_PULL_GPIO2B7_PULL_SHIFT)           /* 0x0000C000 */
/* GPIO2C_PULL */
#define GPIO2_IOC_GPIO2C_PULL_OFFSET                       (0x228U)
#define GPIO2_IOC_GPIO2C_PULL_GPIO2C0_PULL_SHIFT           (0U)
#define GPIO2_IOC_GPIO2C_PULL_GPIO2C0_PULL_MASK            (0x3U << GPIO2_IOC_GPIO2C_PULL_GPIO2C0_PULL_SHIFT)           /* 0x00000003 */
/* GPIO2A_IE */
#define GPIO2_IOC_GPIO2A_IE_OFFSET                         (0x320U)
#define GPIO2_IOC_GPIO2A_IE_GPIO2A0_IE_SHIFT               (0U)
#define GPIO2_IOC_GPIO2A_IE_GPIO2A0_IE_MASK                (0x1U << GPIO2_IOC_GPIO2A_IE_GPIO2A0_IE_SHIFT)               /* 0x00000001 */
#define GPIO2_IOC_GPIO2A_IE_GPIO2A1_IE_SHIFT               (1U)
#define GPIO2_IOC_GPIO2A_IE_GPIO2A1_IE_MASK                (0x1U << GPIO2_IOC_GPIO2A_IE_GPIO2A1_IE_SHIFT)               /* 0x00000002 */
#define GPIO2_IOC_GPIO2A_IE_GPIO2A2_IE_SHIFT               (2U)
#define GPIO2_IOC_GPIO2A_IE_GPIO2A2_IE_MASK                (0x1U << GPIO2_IOC_GPIO2A_IE_GPIO2A2_IE_SHIFT)               /* 0x00000004 */
#define GPIO2_IOC_GPIO2A_IE_GPIO2A3_IE_SHIFT               (3U)
#define GPIO2_IOC_GPIO2A_IE_GPIO2A3_IE_MASK                (0x1U << GPIO2_IOC_GPIO2A_IE_GPIO2A3_IE_SHIFT)               /* 0x00000008 */
#define GPIO2_IOC_GPIO2A_IE_GPIO2A4_IE_SHIFT               (4U)
#define GPIO2_IOC_GPIO2A_IE_GPIO2A4_IE_MASK                (0x1U << GPIO2_IOC_GPIO2A_IE_GPIO2A4_IE_SHIFT)               /* 0x00000010 */
#define GPIO2_IOC_GPIO2A_IE_GPIO2A5_IE_SHIFT               (5U)
#define GPIO2_IOC_GPIO2A_IE_GPIO2A5_IE_MASK                (0x1U << GPIO2_IOC_GPIO2A_IE_GPIO2A5_IE_SHIFT)               /* 0x00000020 */
/* GPIO2B_IE */
#define GPIO2_IOC_GPIO2B_IE_OFFSET                         (0x324U)
#define GPIO2_IOC_GPIO2B_IE_GPIO2B0_IE_SHIFT               (0U)
#define GPIO2_IOC_GPIO2B_IE_GPIO2B0_IE_MASK                (0x1U << GPIO2_IOC_GPIO2B_IE_GPIO2B0_IE_SHIFT)               /* 0x00000001 */
#define GPIO2_IOC_GPIO2B_IE_GPIO2B1_IE_SHIFT               (1U)
#define GPIO2_IOC_GPIO2B_IE_GPIO2B1_IE_MASK                (0x1U << GPIO2_IOC_GPIO2B_IE_GPIO2B1_IE_SHIFT)               /* 0x00000002 */
#define GPIO2_IOC_GPIO2B_IE_GPIO2B2_IE_SHIFT               (2U)
#define GPIO2_IOC_GPIO2B_IE_GPIO2B2_IE_MASK                (0x1U << GPIO2_IOC_GPIO2B_IE_GPIO2B2_IE_SHIFT)               /* 0x00000004 */
#define GPIO2_IOC_GPIO2B_IE_GPIO2B3_IE_SHIFT               (3U)
#define GPIO2_IOC_GPIO2B_IE_GPIO2B3_IE_MASK                (0x1U << GPIO2_IOC_GPIO2B_IE_GPIO2B3_IE_SHIFT)               /* 0x00000008 */
#define GPIO2_IOC_GPIO2B_IE_GPIO2B4_IE_SHIFT               (4U)
#define GPIO2_IOC_GPIO2B_IE_GPIO2B4_IE_MASK                (0x1U << GPIO2_IOC_GPIO2B_IE_GPIO2B4_IE_SHIFT)               /* 0x00000010 */
#define GPIO2_IOC_GPIO2B_IE_GPIO2B5_IE_SHIFT               (5U)
#define GPIO2_IOC_GPIO2B_IE_GPIO2B5_IE_MASK                (0x1U << GPIO2_IOC_GPIO2B_IE_GPIO2B5_IE_SHIFT)               /* 0x00000020 */
#define GPIO2_IOC_GPIO2B_IE_GPIO2B6_IE_SHIFT               (6U)
#define GPIO2_IOC_GPIO2B_IE_GPIO2B6_IE_MASK                (0x1U << GPIO2_IOC_GPIO2B_IE_GPIO2B6_IE_SHIFT)               /* 0x00000040 */
#define GPIO2_IOC_GPIO2B_IE_GPIO2B7_IE_SHIFT               (7U)
#define GPIO2_IOC_GPIO2B_IE_GPIO2B7_IE_MASK                (0x1U << GPIO2_IOC_GPIO2B_IE_GPIO2B7_IE_SHIFT)               /* 0x00000080 */
/* GPIO2C_IE */
#define GPIO2_IOC_GPIO2C_IE_OFFSET                         (0x328U)
#define GPIO2_IOC_GPIO2C_IE_GPIO2C0_IE_SHIFT               (0U)
#define GPIO2_IOC_GPIO2C_IE_GPIO2C0_IE_MASK                (0x1U << GPIO2_IOC_GPIO2C_IE_GPIO2C0_IE_SHIFT)               /* 0x00000001 */
/* GPIO2A_SMT */
#define GPIO2_IOC_GPIO2A_SMT_OFFSET                        (0x420U)
#define GPIO2_IOC_GPIO2A_SMT_GPIO2A0_SMT_SHIFT             (0U)
#define GPIO2_IOC_GPIO2A_SMT_GPIO2A0_SMT_MASK              (0x1U << GPIO2_IOC_GPIO2A_SMT_GPIO2A0_SMT_SHIFT)             /* 0x00000001 */
#define GPIO2_IOC_GPIO2A_SMT_GPIO2A1_SMT_SHIFT             (1U)
#define GPIO2_IOC_GPIO2A_SMT_GPIO2A1_SMT_MASK              (0x1U << GPIO2_IOC_GPIO2A_SMT_GPIO2A1_SMT_SHIFT)             /* 0x00000002 */
#define GPIO2_IOC_GPIO2A_SMT_GPIO2A2_SMT_SHIFT             (2U)
#define GPIO2_IOC_GPIO2A_SMT_GPIO2A2_SMT_MASK              (0x1U << GPIO2_IOC_GPIO2A_SMT_GPIO2A2_SMT_SHIFT)             /* 0x00000004 */
#define GPIO2_IOC_GPIO2A_SMT_GPIO2A3_SMT_SHIFT             (3U)
#define GPIO2_IOC_GPIO2A_SMT_GPIO2A3_SMT_MASK              (0x1U << GPIO2_IOC_GPIO2A_SMT_GPIO2A3_SMT_SHIFT)             /* 0x00000008 */
#define GPIO2_IOC_GPIO2A_SMT_GPIO2A4_SMT_SHIFT             (4U)
#define GPIO2_IOC_GPIO2A_SMT_GPIO2A4_SMT_MASK              (0x1U << GPIO2_IOC_GPIO2A_SMT_GPIO2A4_SMT_SHIFT)             /* 0x00000010 */
#define GPIO2_IOC_GPIO2A_SMT_GPIO2A5_SMT_SHIFT             (5U)
#define GPIO2_IOC_GPIO2A_SMT_GPIO2A5_SMT_MASK              (0x1U << GPIO2_IOC_GPIO2A_SMT_GPIO2A5_SMT_SHIFT)             /* 0x00000020 */
/* GPIO2B_SMT */
#define GPIO2_IOC_GPIO2B_SMT_OFFSET                        (0x424U)
#define GPIO2_IOC_GPIO2B_SMT_GPIO2B0_SMT_SHIFT             (0U)
#define GPIO2_IOC_GPIO2B_SMT_GPIO2B0_SMT_MASK              (0x1U << GPIO2_IOC_GPIO2B_SMT_GPIO2B0_SMT_SHIFT)             /* 0x00000001 */
#define GPIO2_IOC_GPIO2B_SMT_GPIO2B1_SMT_SHIFT             (1U)
#define GPIO2_IOC_GPIO2B_SMT_GPIO2B1_SMT_MASK              (0x1U << GPIO2_IOC_GPIO2B_SMT_GPIO2B1_SMT_SHIFT)             /* 0x00000002 */
#define GPIO2_IOC_GPIO2B_SMT_GPIO2B2_SMT_SHIFT             (2U)
#define GPIO2_IOC_GPIO2B_SMT_GPIO2B2_SMT_MASK              (0x1U << GPIO2_IOC_GPIO2B_SMT_GPIO2B2_SMT_SHIFT)             /* 0x00000004 */
#define GPIO2_IOC_GPIO2B_SMT_GPIO2B3_SMT_SHIFT             (3U)
#define GPIO2_IOC_GPIO2B_SMT_GPIO2B3_SMT_MASK              (0x1U << GPIO2_IOC_GPIO2B_SMT_GPIO2B3_SMT_SHIFT)             /* 0x00000008 */
#define GPIO2_IOC_GPIO2B_SMT_GPIO2B4_SMT_SHIFT             (4U)
#define GPIO2_IOC_GPIO2B_SMT_GPIO2B4_SMT_MASK              (0x1U << GPIO2_IOC_GPIO2B_SMT_GPIO2B4_SMT_SHIFT)             /* 0x00000010 */
#define GPIO2_IOC_GPIO2B_SMT_GPIO2B5_SMT_SHIFT             (5U)
#define GPIO2_IOC_GPIO2B_SMT_GPIO2B5_SMT_MASK              (0x1U << GPIO2_IOC_GPIO2B_SMT_GPIO2B5_SMT_SHIFT)             /* 0x00000020 */
#define GPIO2_IOC_GPIO2B_SMT_GPIO2B6_SMT_SHIFT             (6U)
#define GPIO2_IOC_GPIO2B_SMT_GPIO2B6_SMT_MASK              (0x1U << GPIO2_IOC_GPIO2B_SMT_GPIO2B6_SMT_SHIFT)             /* 0x00000040 */
#define GPIO2_IOC_GPIO2B_SMT_GPIO2B7_SMT_SHIFT             (7U)
#define GPIO2_IOC_GPIO2B_SMT_GPIO2B7_SMT_MASK              (0x1U << GPIO2_IOC_GPIO2B_SMT_GPIO2B7_SMT_SHIFT)             /* 0x00000080 */
/* GPIO2C_SMT */
#define GPIO2_IOC_GPIO2C_SMT_OFFSET                        (0x428U)
#define GPIO2_IOC_GPIO2C_SMT_GPIO2C0_SMT_SHIFT             (0U)
#define GPIO2_IOC_GPIO2C_SMT_GPIO2C0_SMT_MASK              (0x1U << GPIO2_IOC_GPIO2C_SMT_GPIO2C0_SMT_SHIFT)             /* 0x00000001 */
/* GPIO2A_SUS */
#define GPIO2_IOC_GPIO2A_SUS_OFFSET                        (0x520U)
#define GPIO2_IOC_GPIO2A_SUS_GPIO2A0_SUS_SHIFT             (0U)
#define GPIO2_IOC_GPIO2A_SUS_GPIO2A0_SUS_MASK              (0x1U << GPIO2_IOC_GPIO2A_SUS_GPIO2A0_SUS_SHIFT)             /* 0x00000001 */
#define GPIO2_IOC_GPIO2A_SUS_GPIO2A1_SUS_SHIFT             (1U)
#define GPIO2_IOC_GPIO2A_SUS_GPIO2A1_SUS_MASK              (0x1U << GPIO2_IOC_GPIO2A_SUS_GPIO2A1_SUS_SHIFT)             /* 0x00000002 */
#define GPIO2_IOC_GPIO2A_SUS_GPIO2A2_SUS_SHIFT             (2U)
#define GPIO2_IOC_GPIO2A_SUS_GPIO2A2_SUS_MASK              (0x1U << GPIO2_IOC_GPIO2A_SUS_GPIO2A2_SUS_SHIFT)             /* 0x00000004 */
#define GPIO2_IOC_GPIO2A_SUS_GPIO2A3_SUS_SHIFT             (3U)
#define GPIO2_IOC_GPIO2A_SUS_GPIO2A3_SUS_MASK              (0x1U << GPIO2_IOC_GPIO2A_SUS_GPIO2A3_SUS_SHIFT)             /* 0x00000008 */
#define GPIO2_IOC_GPIO2A_SUS_GPIO2A4_SUS_SHIFT             (4U)
#define GPIO2_IOC_GPIO2A_SUS_GPIO2A4_SUS_MASK              (0x1U << GPIO2_IOC_GPIO2A_SUS_GPIO2A4_SUS_SHIFT)             /* 0x00000010 */
#define GPIO2_IOC_GPIO2A_SUS_GPIO2A5_SUS_SHIFT             (5U)
#define GPIO2_IOC_GPIO2A_SUS_GPIO2A5_SUS_MASK              (0x1U << GPIO2_IOC_GPIO2A_SUS_GPIO2A5_SUS_SHIFT)             /* 0x00000020 */
/* GPIO2B_SUS */
#define GPIO2_IOC_GPIO2B_SUS_OFFSET                        (0x524U)
#define GPIO2_IOC_GPIO2B_SUS_GPIO2B0_SUS_SHIFT             (0U)
#define GPIO2_IOC_GPIO2B_SUS_GPIO2B0_SUS_MASK              (0x1U << GPIO2_IOC_GPIO2B_SUS_GPIO2B0_SUS_SHIFT)             /* 0x00000001 */
#define GPIO2_IOC_GPIO2B_SUS_GPIO2B1_SUS_SHIFT             (1U)
#define GPIO2_IOC_GPIO2B_SUS_GPIO2B1_SUS_MASK              (0x1U << GPIO2_IOC_GPIO2B_SUS_GPIO2B1_SUS_SHIFT)             /* 0x00000002 */
#define GPIO2_IOC_GPIO2B_SUS_GPIO2B2_SUS_SHIFT             (2U)
#define GPIO2_IOC_GPIO2B_SUS_GPIO2B2_SUS_MASK              (0x1U << GPIO2_IOC_GPIO2B_SUS_GPIO2B2_SUS_SHIFT)             /* 0x00000004 */
#define GPIO2_IOC_GPIO2B_SUS_GPIO2B3_SUS_SHIFT             (3U)
#define GPIO2_IOC_GPIO2B_SUS_GPIO2B3_SUS_MASK              (0x1U << GPIO2_IOC_GPIO2B_SUS_GPIO2B3_SUS_SHIFT)             /* 0x00000008 */
#define GPIO2_IOC_GPIO2B_SUS_GPIO2B4_SUS_SHIFT             (4U)
#define GPIO2_IOC_GPIO2B_SUS_GPIO2B4_SUS_MASK              (0x1U << GPIO2_IOC_GPIO2B_SUS_GPIO2B4_SUS_SHIFT)             /* 0x00000010 */
#define GPIO2_IOC_GPIO2B_SUS_GPIO2B5_SUS_SHIFT             (5U)
#define GPIO2_IOC_GPIO2B_SUS_GPIO2B5_SUS_MASK              (0x1U << GPIO2_IOC_GPIO2B_SUS_GPIO2B5_SUS_SHIFT)             /* 0x00000020 */
#define GPIO2_IOC_GPIO2B_SUS_GPIO2B6_SUS_SHIFT             (6U)
#define GPIO2_IOC_GPIO2B_SUS_GPIO2B6_SUS_MASK              (0x1U << GPIO2_IOC_GPIO2B_SUS_GPIO2B6_SUS_SHIFT)             /* 0x00000040 */
#define GPIO2_IOC_GPIO2B_SUS_GPIO2B7_SUS_SHIFT             (7U)
#define GPIO2_IOC_GPIO2B_SUS_GPIO2B7_SUS_MASK              (0x1U << GPIO2_IOC_GPIO2B_SUS_GPIO2B7_SUS_SHIFT)             /* 0x00000080 */
/* GPIO2C_SUS */
#define GPIO2_IOC_GPIO2C_SUS_OFFSET                        (0x528U)
#define GPIO2_IOC_GPIO2C_SUS_GPIO2C0_SUS_SHIFT             (0U)
#define GPIO2_IOC_GPIO2C_SUS_GPIO2C0_SUS_MASK              (0x1U << GPIO2_IOC_GPIO2C_SUS_GPIO2C0_SUS_SHIFT)             /* 0x00000001 */
/* GPIO2A_SL */
#define GPIO2_IOC_GPIO2A_SL_OFFSET                         (0x620U)
#define GPIO2_IOC_GPIO2A_SL_GPIO2A0_SL_SHIFT               (0U)
#define GPIO2_IOC_GPIO2A_SL_GPIO2A0_SL_MASK                (0x3U << GPIO2_IOC_GPIO2A_SL_GPIO2A0_SL_SHIFT)               /* 0x00000003 */
#define GPIO2_IOC_GPIO2A_SL_GPIO2A1_SL_SHIFT               (2U)
#define GPIO2_IOC_GPIO2A_SL_GPIO2A1_SL_MASK                (0x3U << GPIO2_IOC_GPIO2A_SL_GPIO2A1_SL_SHIFT)               /* 0x0000000C */
#define GPIO2_IOC_GPIO2A_SL_GPIO2A2_SL_SHIFT               (4U)
#define GPIO2_IOC_GPIO2A_SL_GPIO2A2_SL_MASK                (0x3U << GPIO2_IOC_GPIO2A_SL_GPIO2A2_SL_SHIFT)               /* 0x00000030 */
#define GPIO2_IOC_GPIO2A_SL_GPIO2A3_SL_SHIFT               (6U)
#define GPIO2_IOC_GPIO2A_SL_GPIO2A3_SL_MASK                (0x3U << GPIO2_IOC_GPIO2A_SL_GPIO2A3_SL_SHIFT)               /* 0x000000C0 */
#define GPIO2_IOC_GPIO2A_SL_GPIO2A4_SL_SHIFT               (8U)
#define GPIO2_IOC_GPIO2A_SL_GPIO2A4_SL_MASK                (0x3U << GPIO2_IOC_GPIO2A_SL_GPIO2A4_SL_SHIFT)               /* 0x00000300 */
#define GPIO2_IOC_GPIO2A_SL_GPIO2A5_SL_SHIFT               (10U)
#define GPIO2_IOC_GPIO2A_SL_GPIO2A5_SL_MASK                (0x3U << GPIO2_IOC_GPIO2A_SL_GPIO2A5_SL_SHIFT)               /* 0x00000C00 */
/* GPIO2B_SL */
#define GPIO2_IOC_GPIO2B_SL_OFFSET                         (0x624U)
#define GPIO2_IOC_GPIO2B_SL_GPIO2B0_SL_SHIFT               (0U)
#define GPIO2_IOC_GPIO2B_SL_GPIO2B0_SL_MASK                (0x3U << GPIO2_IOC_GPIO2B_SL_GPIO2B0_SL_SHIFT)               /* 0x00000003 */
#define GPIO2_IOC_GPIO2B_SL_GPIO2B1_SL_SHIFT               (2U)
#define GPIO2_IOC_GPIO2B_SL_GPIO2B1_SL_MASK                (0x3U << GPIO2_IOC_GPIO2B_SL_GPIO2B1_SL_SHIFT)               /* 0x0000000C */
#define GPIO2_IOC_GPIO2B_SL_GPIO2B2_SL_SHIFT               (4U)
#define GPIO2_IOC_GPIO2B_SL_GPIO2B2_SL_MASK                (0x3U << GPIO2_IOC_GPIO2B_SL_GPIO2B2_SL_SHIFT)               /* 0x00000030 */
#define GPIO2_IOC_GPIO2B_SL_GPIO2B3_SL_SHIFT               (6U)
#define GPIO2_IOC_GPIO2B_SL_GPIO2B3_SL_MASK                (0x3U << GPIO2_IOC_GPIO2B_SL_GPIO2B3_SL_SHIFT)               /* 0x000000C0 */
#define GPIO2_IOC_GPIO2B_SL_GPIO2B4_SL_SHIFT               (8U)
#define GPIO2_IOC_GPIO2B_SL_GPIO2B4_SL_MASK                (0x3U << GPIO2_IOC_GPIO2B_SL_GPIO2B4_SL_SHIFT)               /* 0x00000300 */
#define GPIO2_IOC_GPIO2B_SL_GPIO2B5_SL_SHIFT               (10U)
#define GPIO2_IOC_GPIO2B_SL_GPIO2B5_SL_MASK                (0x3U << GPIO2_IOC_GPIO2B_SL_GPIO2B5_SL_SHIFT)               /* 0x00000C00 */
#define GPIO2_IOC_GPIO2B_SL_GPIO2B6_SL_SHIFT               (12U)
#define GPIO2_IOC_GPIO2B_SL_GPIO2B6_SL_MASK                (0x3U << GPIO2_IOC_GPIO2B_SL_GPIO2B6_SL_SHIFT)               /* 0x00003000 */
#define GPIO2_IOC_GPIO2B_SL_GPIO2B7_SL_SHIFT               (14U)
#define GPIO2_IOC_GPIO2B_SL_GPIO2B7_SL_MASK                (0x3U << GPIO2_IOC_GPIO2B_SL_GPIO2B7_SL_SHIFT)               /* 0x0000C000 */
/* GPIO2C_SL */
#define GPIO2_IOC_GPIO2C_SL_OFFSET                         (0x628U)
#define GPIO2_IOC_GPIO2C_SL_GPIO2C0_SL_SHIFT               (0U)
#define GPIO2_IOC_GPIO2C_SL_GPIO2C0_SL_MASK                (0x3U << GPIO2_IOC_GPIO2C_SL_GPIO2C0_SL_SHIFT)               /* 0x00000003 */
/* GPIO2A_OD */
#define GPIO2_IOC_GPIO2A_OD_OFFSET                         (0x720U)
#define GPIO2_IOC_GPIO2A_OD_GPIO2A0_OD_SHIFT               (0U)
#define GPIO2_IOC_GPIO2A_OD_GPIO2A0_OD_MASK                (0x1U << GPIO2_IOC_GPIO2A_OD_GPIO2A0_OD_SHIFT)               /* 0x00000001 */
#define GPIO2_IOC_GPIO2A_OD_GPIO2A1_OD_SHIFT               (1U)
#define GPIO2_IOC_GPIO2A_OD_GPIO2A1_OD_MASK                (0x1U << GPIO2_IOC_GPIO2A_OD_GPIO2A1_OD_SHIFT)               /* 0x00000002 */
#define GPIO2_IOC_GPIO2A_OD_GPIO2A2_OD_SHIFT               (2U)
#define GPIO2_IOC_GPIO2A_OD_GPIO2A2_OD_MASK                (0x1U << GPIO2_IOC_GPIO2A_OD_GPIO2A2_OD_SHIFT)               /* 0x00000004 */
#define GPIO2_IOC_GPIO2A_OD_GPIO2A3_OD_SHIFT               (3U)
#define GPIO2_IOC_GPIO2A_OD_GPIO2A3_OD_MASK                (0x1U << GPIO2_IOC_GPIO2A_OD_GPIO2A3_OD_SHIFT)               /* 0x00000008 */
#define GPIO2_IOC_GPIO2A_OD_GPIO2A4_OD_SHIFT               (4U)
#define GPIO2_IOC_GPIO2A_OD_GPIO2A4_OD_MASK                (0x1U << GPIO2_IOC_GPIO2A_OD_GPIO2A4_OD_SHIFT)               /* 0x00000010 */
#define GPIO2_IOC_GPIO2A_OD_GPIO2A5_OD_SHIFT               (5U)
#define GPIO2_IOC_GPIO2A_OD_GPIO2A5_OD_MASK                (0x1U << GPIO2_IOC_GPIO2A_OD_GPIO2A5_OD_SHIFT)               /* 0x00000020 */
/* GPIO2B_OD */
#define GPIO2_IOC_GPIO2B_OD_OFFSET                         (0x724U)
#define GPIO2_IOC_GPIO2B_OD_GPIO2B0_OD_SHIFT               (0U)
#define GPIO2_IOC_GPIO2B_OD_GPIO2B0_OD_MASK                (0x1U << GPIO2_IOC_GPIO2B_OD_GPIO2B0_OD_SHIFT)               /* 0x00000001 */
#define GPIO2_IOC_GPIO2B_OD_GPIO2B1_OD_SHIFT               (1U)
#define GPIO2_IOC_GPIO2B_OD_GPIO2B1_OD_MASK                (0x1U << GPIO2_IOC_GPIO2B_OD_GPIO2B1_OD_SHIFT)               /* 0x00000002 */
#define GPIO2_IOC_GPIO2B_OD_GPIO2B2_OD_SHIFT               (2U)
#define GPIO2_IOC_GPIO2B_OD_GPIO2B2_OD_MASK                (0x1U << GPIO2_IOC_GPIO2B_OD_GPIO2B2_OD_SHIFT)               /* 0x00000004 */
#define GPIO2_IOC_GPIO2B_OD_GPIO2B3_OD_SHIFT               (3U)
#define GPIO2_IOC_GPIO2B_OD_GPIO2B3_OD_MASK                (0x1U << GPIO2_IOC_GPIO2B_OD_GPIO2B3_OD_SHIFT)               /* 0x00000008 */
#define GPIO2_IOC_GPIO2B_OD_GPIO2B4_OD_SHIFT               (4U)
#define GPIO2_IOC_GPIO2B_OD_GPIO2B4_OD_MASK                (0x1U << GPIO2_IOC_GPIO2B_OD_GPIO2B4_OD_SHIFT)               /* 0x00000010 */
#define GPIO2_IOC_GPIO2B_OD_GPIO2B5_OD_SHIFT               (5U)
#define GPIO2_IOC_GPIO2B_OD_GPIO2B5_OD_MASK                (0x1U << GPIO2_IOC_GPIO2B_OD_GPIO2B5_OD_SHIFT)               /* 0x00000020 */
#define GPIO2_IOC_GPIO2B_OD_GPIO2B6_OD_SHIFT               (6U)
#define GPIO2_IOC_GPIO2B_OD_GPIO2B6_OD_MASK                (0x1U << GPIO2_IOC_GPIO2B_OD_GPIO2B6_OD_SHIFT)               /* 0x00000040 */
#define GPIO2_IOC_GPIO2B_OD_GPIO2B7_OD_SHIFT               (7U)
#define GPIO2_IOC_GPIO2B_OD_GPIO2B7_OD_MASK                (0x1U << GPIO2_IOC_GPIO2B_OD_GPIO2B7_OD_SHIFT)               /* 0x00000080 */
/* GPIO2C_OD */
#define GPIO2_IOC_GPIO2C_OD_OFFSET                         (0x728U)
#define GPIO2_IOC_GPIO2C_OD_GPIO2C0_OD_SHIFT               (0U)
#define GPIO2_IOC_GPIO2C_OD_GPIO2C0_OD_MASK                (0x1U << GPIO2_IOC_GPIO2C_OD_GPIO2C0_OD_SHIFT)               /* 0x00000001 */
/* IDDQ_VCCIO234 */
#define GPIO2_IOC_IDDQ_VCCIO234_OFFSET                     (0x820U)
#define GPIO2_IOC_IDDQ_VCCIO234_VCCIO2_SHIFT               (0U)
#define GPIO2_IOC_IDDQ_VCCIO234_VCCIO2_MASK                (0x1U << GPIO2_IOC_IDDQ_VCCIO234_VCCIO2_SHIFT)               /* 0x00000001 */
#define GPIO2_IOC_IDDQ_VCCIO234_VCCIO3_SHIFT               (1U)
#define GPIO2_IOC_IDDQ_VCCIO234_VCCIO3_MASK                (0x1U << GPIO2_IOC_IDDQ_VCCIO234_VCCIO3_SHIFT)               /* 0x00000002 */
#define GPIO2_IOC_IDDQ_VCCIO234_VCCIO4_SHIFT               (2U)
#define GPIO2_IOC_IDDQ_VCCIO234_VCCIO4_MASK                (0x1U << GPIO2_IOC_IDDQ_VCCIO234_VCCIO4_SHIFT)               /* 0x00000004 */
/***************************************GPIO3_IOC****************************************/
/* GPIO3A_IOMUX_SEL_0 */
#define GPIO3_IOC_GPIO3A_IOMUX_SEL_0_OFFSET                (0x60U)
#define GPIO3_IOC_GPIO3A_IOMUX_SEL_0_GPIO3A0_SEL_SHIFT     (0U)
#define GPIO3_IOC_GPIO3A_IOMUX_SEL_0_GPIO3A0_SEL_MASK      (0xFU << GPIO3_IOC_GPIO3A_IOMUX_SEL_0_GPIO3A0_SEL_SHIFT)     /* 0x0000000F */
#define GPIO3_IOC_GPIO3A_IOMUX_SEL_0_GPIO3A1_SEL_SHIFT     (4U)
#define GPIO3_IOC_GPIO3A_IOMUX_SEL_0_GPIO3A1_SEL_MASK      (0xFU << GPIO3_IOC_GPIO3A_IOMUX_SEL_0_GPIO3A1_SEL_SHIFT)     /* 0x000000F0 */
#define GPIO3_IOC_GPIO3A_IOMUX_SEL_0_GPIO3A2_SEL_SHIFT     (8U)
#define GPIO3_IOC_GPIO3A_IOMUX_SEL_0_GPIO3A2_SEL_MASK      (0xFU << GPIO3_IOC_GPIO3A_IOMUX_SEL_0_GPIO3A2_SEL_SHIFT)     /* 0x00000F00 */
#define GPIO3_IOC_GPIO3A_IOMUX_SEL_0_GPIO3A3_SEL_SHIFT     (12U)
#define GPIO3_IOC_GPIO3A_IOMUX_SEL_0_GPIO3A3_SEL_MASK      (0xFU << GPIO3_IOC_GPIO3A_IOMUX_SEL_0_GPIO3A3_SEL_SHIFT)     /* 0x0000F000 */
/* GPIO3A_IOMUX_SEL_1 */
#define GPIO3_IOC_GPIO3A_IOMUX_SEL_1_OFFSET                (0x64U)
#define GPIO3_IOC_GPIO3A_IOMUX_SEL_1_GPIO3A4_SEL_SHIFT     (0U)
#define GPIO3_IOC_GPIO3A_IOMUX_SEL_1_GPIO3A4_SEL_MASK      (0xFU << GPIO3_IOC_GPIO3A_IOMUX_SEL_1_GPIO3A4_SEL_SHIFT)     /* 0x0000000F */
#define GPIO3_IOC_GPIO3A_IOMUX_SEL_1_GPIO3A5_SEL_SHIFT     (4U)
#define GPIO3_IOC_GPIO3A_IOMUX_SEL_1_GPIO3A5_SEL_MASK      (0xFU << GPIO3_IOC_GPIO3A_IOMUX_SEL_1_GPIO3A5_SEL_SHIFT)     /* 0x000000F0 */
#define GPIO3_IOC_GPIO3A_IOMUX_SEL_1_GPIO3A6_SEL_SHIFT     (8U)
#define GPIO3_IOC_GPIO3A_IOMUX_SEL_1_GPIO3A6_SEL_MASK      (0xFU << GPIO3_IOC_GPIO3A_IOMUX_SEL_1_GPIO3A6_SEL_SHIFT)     /* 0x00000F00 */
#define GPIO3_IOC_GPIO3A_IOMUX_SEL_1_GPIO3A7_SEL_SHIFT     (12U)
#define GPIO3_IOC_GPIO3A_IOMUX_SEL_1_GPIO3A7_SEL_MASK      (0xFU << GPIO3_IOC_GPIO3A_IOMUX_SEL_1_GPIO3A7_SEL_SHIFT)     /* 0x0000F000 */
/* GPIO3B_IOMUX_SEL_0 */
#define GPIO3_IOC_GPIO3B_IOMUX_SEL_0_OFFSET                (0x68U)
#define GPIO3_IOC_GPIO3B_IOMUX_SEL_0_GPIO3B0_SEL_SHIFT     (0U)
#define GPIO3_IOC_GPIO3B_IOMUX_SEL_0_GPIO3B0_SEL_MASK      (0xFU << GPIO3_IOC_GPIO3B_IOMUX_SEL_0_GPIO3B0_SEL_SHIFT)     /* 0x0000000F */
#define GPIO3_IOC_GPIO3B_IOMUX_SEL_0_GPIO3B1_SEL_SHIFT     (4U)
#define GPIO3_IOC_GPIO3B_IOMUX_SEL_0_GPIO3B1_SEL_MASK      (0xFU << GPIO3_IOC_GPIO3B_IOMUX_SEL_0_GPIO3B1_SEL_SHIFT)     /* 0x000000F0 */
#define GPIO3_IOC_GPIO3B_IOMUX_SEL_0_GPIO3B2_SEL_SHIFT     (8U)
#define GPIO3_IOC_GPIO3B_IOMUX_SEL_0_GPIO3B2_SEL_MASK      (0xFU << GPIO3_IOC_GPIO3B_IOMUX_SEL_0_GPIO3B2_SEL_SHIFT)     /* 0x00000F00 */
#define GPIO3_IOC_GPIO3B_IOMUX_SEL_0_GPIO3B3_SEL_SHIFT     (12U)
#define GPIO3_IOC_GPIO3B_IOMUX_SEL_0_GPIO3B3_SEL_MASK      (0xFU << GPIO3_IOC_GPIO3B_IOMUX_SEL_0_GPIO3B3_SEL_SHIFT)     /* 0x0000F000 */
/* GPIO3B_IOMUX_SEL_1 */
#define GPIO3_IOC_GPIO3B_IOMUX_SEL_1_OFFSET                (0x6CU)
#define GPIO3_IOC_GPIO3B_IOMUX_SEL_1_GPIO3B4_SEL_SHIFT     (0U)
#define GPIO3_IOC_GPIO3B_IOMUX_SEL_1_GPIO3B4_SEL_MASK      (0xFU << GPIO3_IOC_GPIO3B_IOMUX_SEL_1_GPIO3B4_SEL_SHIFT)     /* 0x0000000F */
#define GPIO3_IOC_GPIO3B_IOMUX_SEL_1_GPIO3B5_SEL_SHIFT     (4U)
#define GPIO3_IOC_GPIO3B_IOMUX_SEL_1_GPIO3B5_SEL_MASK      (0xFU << GPIO3_IOC_GPIO3B_IOMUX_SEL_1_GPIO3B5_SEL_SHIFT)     /* 0x000000F0 */
#define GPIO3_IOC_GPIO3B_IOMUX_SEL_1_GPIO3B6_SEL_SHIFT     (8U)
#define GPIO3_IOC_GPIO3B_IOMUX_SEL_1_GPIO3B6_SEL_MASK      (0xFU << GPIO3_IOC_GPIO3B_IOMUX_SEL_1_GPIO3B6_SEL_SHIFT)     /* 0x00000F00 */
/* GPIO3A_DS_0 */
#define GPIO3_IOC_GPIO3A_DS_0_OFFSET                       (0x1C0U)
#define GPIO3_IOC_GPIO3A_DS_0_GPIO3A0_DS_SHIFT             (0U)
#define GPIO3_IOC_GPIO3A_DS_0_GPIO3A0_DS_MASK              (0x3FU << GPIO3_IOC_GPIO3A_DS_0_GPIO3A0_DS_SHIFT)            /* 0x0000003F */
#define GPIO3_IOC_GPIO3A_DS_0_GPIO3A1_DS_SHIFT             (8U)
#define GPIO3_IOC_GPIO3A_DS_0_GPIO3A1_DS_MASK              (0x3FU << GPIO3_IOC_GPIO3A_DS_0_GPIO3A1_DS_SHIFT)            /* 0x00003F00 */
/* GPIO3A_DS_1 */
#define GPIO3_IOC_GPIO3A_DS_1_OFFSET                       (0x1C4U)
#define GPIO3_IOC_GPIO3A_DS_1_GPIO3A2_DS_SHIFT             (0U)
#define GPIO3_IOC_GPIO3A_DS_1_GPIO3A2_DS_MASK              (0x3FU << GPIO3_IOC_GPIO3A_DS_1_GPIO3A2_DS_SHIFT)            /* 0x0000003F */
#define GPIO3_IOC_GPIO3A_DS_1_GPIO3A3_DS_SHIFT             (8U)
#define GPIO3_IOC_GPIO3A_DS_1_GPIO3A3_DS_MASK              (0x3FU << GPIO3_IOC_GPIO3A_DS_1_GPIO3A3_DS_SHIFT)            /* 0x00003F00 */
/* GPIO3A_DS_2 */
#define GPIO3_IOC_GPIO3A_DS_2_OFFSET                       (0x1C8U)
#define GPIO3_IOC_GPIO3A_DS_2_GPIO3A4_DS_SHIFT             (0U)
#define GPIO3_IOC_GPIO3A_DS_2_GPIO3A4_DS_MASK              (0x3FU << GPIO3_IOC_GPIO3A_DS_2_GPIO3A4_DS_SHIFT)            /* 0x0000003F */
#define GPIO3_IOC_GPIO3A_DS_2_GPIO3A5_DS_SHIFT             (8U)
#define GPIO3_IOC_GPIO3A_DS_2_GPIO3A5_DS_MASK              (0x3FU << GPIO3_IOC_GPIO3A_DS_2_GPIO3A5_DS_SHIFT)            /* 0x00003F00 */
/* GPIO3A_DS_3 */
#define GPIO3_IOC_GPIO3A_DS_3_OFFSET                       (0x1CCU)
#define GPIO3_IOC_GPIO3A_DS_3_GPIO3A6_DS_SHIFT             (0U)
#define GPIO3_IOC_GPIO3A_DS_3_GPIO3A6_DS_MASK              (0x3FU << GPIO3_IOC_GPIO3A_DS_3_GPIO3A6_DS_SHIFT)            /* 0x0000003F */
#define GPIO3_IOC_GPIO3A_DS_3_GPIO3A7_DS_SHIFT             (8U)
#define GPIO3_IOC_GPIO3A_DS_3_GPIO3A7_DS_MASK              (0x3FU << GPIO3_IOC_GPIO3A_DS_3_GPIO3A7_DS_SHIFT)            /* 0x00003F00 */
/* GPIO3B_DS_0 */
#define GPIO3_IOC_GPIO3B_DS_0_OFFSET                       (0x1D0U)
#define GPIO3_IOC_GPIO3B_DS_0_GPIO3B0_DS_SHIFT             (0U)
#define GPIO3_IOC_GPIO3B_DS_0_GPIO3B0_DS_MASK              (0x3FU << GPIO3_IOC_GPIO3B_DS_0_GPIO3B0_DS_SHIFT)            /* 0x0000003F */
#define GPIO3_IOC_GPIO3B_DS_0_GPIO3B1_DS_SHIFT             (8U)
#define GPIO3_IOC_GPIO3B_DS_0_GPIO3B1_DS_MASK              (0x3FU << GPIO3_IOC_GPIO3B_DS_0_GPIO3B1_DS_SHIFT)            /* 0x00003F00 */
/* GPIO3B_DS_1 */
#define GPIO3_IOC_GPIO3B_DS_1_OFFSET                       (0x1D4U)
#define GPIO3_IOC_GPIO3B_DS_1_GPIO3B2_DS_SHIFT             (0U)
#define GPIO3_IOC_GPIO3B_DS_1_GPIO3B2_DS_MASK              (0x3FU << GPIO3_IOC_GPIO3B_DS_1_GPIO3B2_DS_SHIFT)            /* 0x0000003F */
#define GPIO3_IOC_GPIO3B_DS_1_GPIO3B3_DS_SHIFT             (8U)
#define GPIO3_IOC_GPIO3B_DS_1_GPIO3B3_DS_MASK              (0x3FU << GPIO3_IOC_GPIO3B_DS_1_GPIO3B3_DS_SHIFT)            /* 0x00003F00 */
/* GPIO3B_DS_2 */
#define GPIO3_IOC_GPIO3B_DS_2_OFFSET                       (0x1D8U)
#define GPIO3_IOC_GPIO3B_DS_2_GPIO3B4_DS_SHIFT             (0U)
#define GPIO3_IOC_GPIO3B_DS_2_GPIO3B4_DS_MASK              (0x3FU << GPIO3_IOC_GPIO3B_DS_2_GPIO3B4_DS_SHIFT)            /* 0x0000003F */
#define GPIO3_IOC_GPIO3B_DS_2_GPIO3B5_DS_SHIFT             (8U)
#define GPIO3_IOC_GPIO3B_DS_2_GPIO3B5_DS_MASK              (0x3FU << GPIO3_IOC_GPIO3B_DS_2_GPIO3B5_DS_SHIFT)            /* 0x00003F00 */
/* GPIO3B_DS_3 */
#define GPIO3_IOC_GPIO3B_DS_3_OFFSET                       (0x1DCU)
#define GPIO3_IOC_GPIO3B_DS_3_GPIO3B6_DS_SHIFT             (0U)
#define GPIO3_IOC_GPIO3B_DS_3_GPIO3B6_DS_MASK              (0x3FU << GPIO3_IOC_GPIO3B_DS_3_GPIO3B6_DS_SHIFT)            /* 0x0000003F */
/* GPIO3A_PULL */
#define GPIO3_IOC_GPIO3A_PULL_OFFSET                       (0x230U)
#define GPIO3_IOC_GPIO3A_PULL_GPIO3A0_PULL_SHIFT           (0U)
#define GPIO3_IOC_GPIO3A_PULL_GPIO3A0_PULL_MASK            (0x3U << GPIO3_IOC_GPIO3A_PULL_GPIO3A0_PULL_SHIFT)           /* 0x00000003 */
#define GPIO3_IOC_GPIO3A_PULL_GPIO3A1_PULL_SHIFT           (2U)
#define GPIO3_IOC_GPIO3A_PULL_GPIO3A1_PULL_MASK            (0x3U << GPIO3_IOC_GPIO3A_PULL_GPIO3A1_PULL_SHIFT)           /* 0x0000000C */
#define GPIO3_IOC_GPIO3A_PULL_GPIO3A2_PULL_SHIFT           (4U)
#define GPIO3_IOC_GPIO3A_PULL_GPIO3A2_PULL_MASK            (0x3U << GPIO3_IOC_GPIO3A_PULL_GPIO3A2_PULL_SHIFT)           /* 0x00000030 */
#define GPIO3_IOC_GPIO3A_PULL_GPIO3A3_PULL_SHIFT           (6U)
#define GPIO3_IOC_GPIO3A_PULL_GPIO3A3_PULL_MASK            (0x3U << GPIO3_IOC_GPIO3A_PULL_GPIO3A3_PULL_SHIFT)           /* 0x000000C0 */
#define GPIO3_IOC_GPIO3A_PULL_GPIO3A4_PULL_SHIFT           (8U)
#define GPIO3_IOC_GPIO3A_PULL_GPIO3A4_PULL_MASK            (0x3U << GPIO3_IOC_GPIO3A_PULL_GPIO3A4_PULL_SHIFT)           /* 0x00000300 */
#define GPIO3_IOC_GPIO3A_PULL_GPIO3A5_PULL_SHIFT           (10U)
#define GPIO3_IOC_GPIO3A_PULL_GPIO3A5_PULL_MASK            (0x3U << GPIO3_IOC_GPIO3A_PULL_GPIO3A5_PULL_SHIFT)           /* 0x00000C00 */
#define GPIO3_IOC_GPIO3A_PULL_GPIO3A6_PULL_SHIFT           (12U)
#define GPIO3_IOC_GPIO3A_PULL_GPIO3A6_PULL_MASK            (0x3U << GPIO3_IOC_GPIO3A_PULL_GPIO3A6_PULL_SHIFT)           /* 0x00003000 */
#define GPIO3_IOC_GPIO3A_PULL_GPIO3A7_PULL_SHIFT           (14U)
#define GPIO3_IOC_GPIO3A_PULL_GPIO3A7_PULL_MASK            (0x3U << GPIO3_IOC_GPIO3A_PULL_GPIO3A7_PULL_SHIFT)           /* 0x0000C000 */
/* GPIO3B_PULL */
#define GPIO3_IOC_GPIO3B_PULL_OFFSET                       (0x234U)
#define GPIO3_IOC_GPIO3B_PULL_GPIO3B0_PULL_SHIFT           (0U)
#define GPIO3_IOC_GPIO3B_PULL_GPIO3B0_PULL_MASK            (0x3U << GPIO3_IOC_GPIO3B_PULL_GPIO3B0_PULL_SHIFT)           /* 0x00000003 */
#define GPIO3_IOC_GPIO3B_PULL_GPIO3B1_PULL_SHIFT           (2U)
#define GPIO3_IOC_GPIO3B_PULL_GPIO3B1_PULL_MASK            (0x3U << GPIO3_IOC_GPIO3B_PULL_GPIO3B1_PULL_SHIFT)           /* 0x0000000C */
#define GPIO3_IOC_GPIO3B_PULL_GPIO3B2_PULL_SHIFT           (4U)
#define GPIO3_IOC_GPIO3B_PULL_GPIO3B2_PULL_MASK            (0x3U << GPIO3_IOC_GPIO3B_PULL_GPIO3B2_PULL_SHIFT)           /* 0x00000030 */
#define GPIO3_IOC_GPIO3B_PULL_GPIO3B3_PULL_SHIFT           (6U)
#define GPIO3_IOC_GPIO3B_PULL_GPIO3B3_PULL_MASK            (0x3U << GPIO3_IOC_GPIO3B_PULL_GPIO3B3_PULL_SHIFT)           /* 0x000000C0 */
#define GPIO3_IOC_GPIO3B_PULL_GPIO3B4_PULL_SHIFT           (8U)
#define GPIO3_IOC_GPIO3B_PULL_GPIO3B4_PULL_MASK            (0x3U << GPIO3_IOC_GPIO3B_PULL_GPIO3B4_PULL_SHIFT)           /* 0x00000300 */
#define GPIO3_IOC_GPIO3B_PULL_GPIO3B5_PULL_SHIFT           (10U)
#define GPIO3_IOC_GPIO3B_PULL_GPIO3B5_PULL_MASK            (0x3U << GPIO3_IOC_GPIO3B_PULL_GPIO3B5_PULL_SHIFT)           /* 0x00000C00 */
#define GPIO3_IOC_GPIO3B_PULL_GPIO3B6_PULL_SHIFT           (12U)
#define GPIO3_IOC_GPIO3B_PULL_GPIO3B6_PULL_MASK            (0x3U << GPIO3_IOC_GPIO3B_PULL_GPIO3B6_PULL_SHIFT)           /* 0x00003000 */
/* GPIO3A_IE */
#define GPIO3_IOC_GPIO3A_IE_OFFSET                         (0x330U)
#define GPIO3_IOC_GPIO3A_IE_GPIO3A0_IE_SHIFT               (0U)
#define GPIO3_IOC_GPIO3A_IE_GPIO3A0_IE_MASK                (0x1U << GPIO3_IOC_GPIO3A_IE_GPIO3A0_IE_SHIFT)               /* 0x00000001 */
#define GPIO3_IOC_GPIO3A_IE_GPIO3A1_IE_SHIFT               (1U)
#define GPIO3_IOC_GPIO3A_IE_GPIO3A1_IE_MASK                (0x1U << GPIO3_IOC_GPIO3A_IE_GPIO3A1_IE_SHIFT)               /* 0x00000002 */
#define GPIO3_IOC_GPIO3A_IE_GPIO3A2_IE_SHIFT               (2U)
#define GPIO3_IOC_GPIO3A_IE_GPIO3A2_IE_MASK                (0x1U << GPIO3_IOC_GPIO3A_IE_GPIO3A2_IE_SHIFT)               /* 0x00000004 */
#define GPIO3_IOC_GPIO3A_IE_GPIO3A3_IE_SHIFT               (3U)
#define GPIO3_IOC_GPIO3A_IE_GPIO3A3_IE_MASK                (0x1U << GPIO3_IOC_GPIO3A_IE_GPIO3A3_IE_SHIFT)               /* 0x00000008 */
#define GPIO3_IOC_GPIO3A_IE_GPIO3A4_IE_SHIFT               (4U)
#define GPIO3_IOC_GPIO3A_IE_GPIO3A4_IE_MASK                (0x1U << GPIO3_IOC_GPIO3A_IE_GPIO3A4_IE_SHIFT)               /* 0x00000010 */
#define GPIO3_IOC_GPIO3A_IE_GPIO3A5_IE_SHIFT               (5U)
#define GPIO3_IOC_GPIO3A_IE_GPIO3A5_IE_MASK                (0x1U << GPIO3_IOC_GPIO3A_IE_GPIO3A5_IE_SHIFT)               /* 0x00000020 */
#define GPIO3_IOC_GPIO3A_IE_GPIO3A6_IE_SHIFT               (6U)
#define GPIO3_IOC_GPIO3A_IE_GPIO3A6_IE_MASK                (0x1U << GPIO3_IOC_GPIO3A_IE_GPIO3A6_IE_SHIFT)               /* 0x00000040 */
#define GPIO3_IOC_GPIO3A_IE_GPIO3A7_IE_SHIFT               (7U)
#define GPIO3_IOC_GPIO3A_IE_GPIO3A7_IE_MASK                (0x1U << GPIO3_IOC_GPIO3A_IE_GPIO3A7_IE_SHIFT)               /* 0x00000080 */
/* GPIO3B_IE */
#define GPIO3_IOC_GPIO3B_IE_OFFSET                         (0x334U)
#define GPIO3_IOC_GPIO3B_IE_GPIO3B0_IE_SHIFT               (0U)
#define GPIO3_IOC_GPIO3B_IE_GPIO3B0_IE_MASK                (0x1U << GPIO3_IOC_GPIO3B_IE_GPIO3B0_IE_SHIFT)               /* 0x00000001 */
#define GPIO3_IOC_GPIO3B_IE_GPIO3B1_IE_SHIFT               (1U)
#define GPIO3_IOC_GPIO3B_IE_GPIO3B1_IE_MASK                (0x1U << GPIO3_IOC_GPIO3B_IE_GPIO3B1_IE_SHIFT)               /* 0x00000002 */
#define GPIO3_IOC_GPIO3B_IE_GPIO3B2_IE_SHIFT               (2U)
#define GPIO3_IOC_GPIO3B_IE_GPIO3B2_IE_MASK                (0x1U << GPIO3_IOC_GPIO3B_IE_GPIO3B2_IE_SHIFT)               /* 0x00000004 */
#define GPIO3_IOC_GPIO3B_IE_GPIO3B3_IE_SHIFT               (3U)
#define GPIO3_IOC_GPIO3B_IE_GPIO3B3_IE_MASK                (0x1U << GPIO3_IOC_GPIO3B_IE_GPIO3B3_IE_SHIFT)               /* 0x00000008 */
#define GPIO3_IOC_GPIO3B_IE_GPIO3B4_IE_SHIFT               (4U)
#define GPIO3_IOC_GPIO3B_IE_GPIO3B4_IE_MASK                (0x1U << GPIO3_IOC_GPIO3B_IE_GPIO3B4_IE_SHIFT)               /* 0x00000010 */
#define GPIO3_IOC_GPIO3B_IE_GPIO3B5_IE_SHIFT               (5U)
#define GPIO3_IOC_GPIO3B_IE_GPIO3B5_IE_MASK                (0x1U << GPIO3_IOC_GPIO3B_IE_GPIO3B5_IE_SHIFT)               /* 0x00000020 */
#define GPIO3_IOC_GPIO3B_IE_GPIO3B6_IE_SHIFT               (6U)
#define GPIO3_IOC_GPIO3B_IE_GPIO3B6_IE_MASK                (0x1U << GPIO3_IOC_GPIO3B_IE_GPIO3B6_IE_SHIFT)               /* 0x00000040 */
/* GPIO3A_SMT */
#define GPIO3_IOC_GPIO3A_SMT_OFFSET                        (0x430U)
#define GPIO3_IOC_GPIO3A_SMT_GPIO3A0_SMT_SHIFT             (0U)
#define GPIO3_IOC_GPIO3A_SMT_GPIO3A0_SMT_MASK              (0x1U << GPIO3_IOC_GPIO3A_SMT_GPIO3A0_SMT_SHIFT)             /* 0x00000001 */
#define GPIO3_IOC_GPIO3A_SMT_GPIO3A1_SMT_SHIFT             (1U)
#define GPIO3_IOC_GPIO3A_SMT_GPIO3A1_SMT_MASK              (0x1U << GPIO3_IOC_GPIO3A_SMT_GPIO3A1_SMT_SHIFT)             /* 0x00000002 */
#define GPIO3_IOC_GPIO3A_SMT_GPIO3A2_SMT_SHIFT             (2U)
#define GPIO3_IOC_GPIO3A_SMT_GPIO3A2_SMT_MASK              (0x1U << GPIO3_IOC_GPIO3A_SMT_GPIO3A2_SMT_SHIFT)             /* 0x00000004 */
#define GPIO3_IOC_GPIO3A_SMT_GPIO3A3_SMT_SHIFT             (3U)
#define GPIO3_IOC_GPIO3A_SMT_GPIO3A3_SMT_MASK              (0x1U << GPIO3_IOC_GPIO3A_SMT_GPIO3A3_SMT_SHIFT)             /* 0x00000008 */
#define GPIO3_IOC_GPIO3A_SMT_GPIO3A4_SMT_SHIFT             (4U)
#define GPIO3_IOC_GPIO3A_SMT_GPIO3A4_SMT_MASK              (0x1U << GPIO3_IOC_GPIO3A_SMT_GPIO3A4_SMT_SHIFT)             /* 0x00000010 */
#define GPIO3_IOC_GPIO3A_SMT_GPIO3A5_SMT_SHIFT             (5U)
#define GPIO3_IOC_GPIO3A_SMT_GPIO3A5_SMT_MASK              (0x1U << GPIO3_IOC_GPIO3A_SMT_GPIO3A5_SMT_SHIFT)             /* 0x00000020 */
#define GPIO3_IOC_GPIO3A_SMT_GPIO3A6_SMT_SHIFT             (6U)
#define GPIO3_IOC_GPIO3A_SMT_GPIO3A6_SMT_MASK              (0x1U << GPIO3_IOC_GPIO3A_SMT_GPIO3A6_SMT_SHIFT)             /* 0x00000040 */
#define GPIO3_IOC_GPIO3A_SMT_GPIO3A7_SMT_SHIFT             (7U)
#define GPIO3_IOC_GPIO3A_SMT_GPIO3A7_SMT_MASK              (0x1U << GPIO3_IOC_GPIO3A_SMT_GPIO3A7_SMT_SHIFT)             /* 0x00000080 */
/* GPIO3B_SMT */
#define GPIO3_IOC_GPIO3B_SMT_OFFSET                        (0x434U)
#define GPIO3_IOC_GPIO3B_SMT_GPIO3B0_SMT_SHIFT             (0U)
#define GPIO3_IOC_GPIO3B_SMT_GPIO3B0_SMT_MASK              (0x1U << GPIO3_IOC_GPIO3B_SMT_GPIO3B0_SMT_SHIFT)             /* 0x00000001 */
#define GPIO3_IOC_GPIO3B_SMT_GPIO3B1_SMT_SHIFT             (1U)
#define GPIO3_IOC_GPIO3B_SMT_GPIO3B1_SMT_MASK              (0x1U << GPIO3_IOC_GPIO3B_SMT_GPIO3B1_SMT_SHIFT)             /* 0x00000002 */
#define GPIO3_IOC_GPIO3B_SMT_GPIO3B2_SMT_SHIFT             (2U)
#define GPIO3_IOC_GPIO3B_SMT_GPIO3B2_SMT_MASK              (0x1U << GPIO3_IOC_GPIO3B_SMT_GPIO3B2_SMT_SHIFT)             /* 0x00000004 */
#define GPIO3_IOC_GPIO3B_SMT_GPIO3B3_SMT_SHIFT             (3U)
#define GPIO3_IOC_GPIO3B_SMT_GPIO3B3_SMT_MASK              (0x1U << GPIO3_IOC_GPIO3B_SMT_GPIO3B3_SMT_SHIFT)             /* 0x00000008 */
#define GPIO3_IOC_GPIO3B_SMT_GPIO3B4_SMT_SHIFT             (4U)
#define GPIO3_IOC_GPIO3B_SMT_GPIO3B4_SMT_MASK              (0x1U << GPIO3_IOC_GPIO3B_SMT_GPIO3B4_SMT_SHIFT)             /* 0x00000010 */
#define GPIO3_IOC_GPIO3B_SMT_GPIO3B5_SMT_SHIFT             (5U)
#define GPIO3_IOC_GPIO3B_SMT_GPIO3B5_SMT_MASK              (0x1U << GPIO3_IOC_GPIO3B_SMT_GPIO3B5_SMT_SHIFT)             /* 0x00000020 */
#define GPIO3_IOC_GPIO3B_SMT_GPIO3B6_SMT_SHIFT             (6U)
#define GPIO3_IOC_GPIO3B_SMT_GPIO3B6_SMT_MASK              (0x1U << GPIO3_IOC_GPIO3B_SMT_GPIO3B6_SMT_SHIFT)             /* 0x00000040 */
/* GPIO3A_SUS */
#define GPIO3_IOC_GPIO3A_SUS_OFFSET                        (0x530U)
#define GPIO3_IOC_GPIO3A_SUS_GPIO3A0_SUS_SHIFT             (0U)
#define GPIO3_IOC_GPIO3A_SUS_GPIO3A0_SUS_MASK              (0x1U << GPIO3_IOC_GPIO3A_SUS_GPIO3A0_SUS_SHIFT)             /* 0x00000001 */
#define GPIO3_IOC_GPIO3A_SUS_GPIO3A1_SUS_SHIFT             (1U)
#define GPIO3_IOC_GPIO3A_SUS_GPIO3A1_SUS_MASK              (0x1U << GPIO3_IOC_GPIO3A_SUS_GPIO3A1_SUS_SHIFT)             /* 0x00000002 */
#define GPIO3_IOC_GPIO3A_SUS_GPIO3A2_SUS_SHIFT             (2U)
#define GPIO3_IOC_GPIO3A_SUS_GPIO3A2_SUS_MASK              (0x1U << GPIO3_IOC_GPIO3A_SUS_GPIO3A2_SUS_SHIFT)             /* 0x00000004 */
#define GPIO3_IOC_GPIO3A_SUS_GPIO3A3_SUS_SHIFT             (3U)
#define GPIO3_IOC_GPIO3A_SUS_GPIO3A3_SUS_MASK              (0x1U << GPIO3_IOC_GPIO3A_SUS_GPIO3A3_SUS_SHIFT)             /* 0x00000008 */
#define GPIO3_IOC_GPIO3A_SUS_GPIO3A4_SUS_SHIFT             (4U)
#define GPIO3_IOC_GPIO3A_SUS_GPIO3A4_SUS_MASK              (0x1U << GPIO3_IOC_GPIO3A_SUS_GPIO3A4_SUS_SHIFT)             /* 0x00000010 */
#define GPIO3_IOC_GPIO3A_SUS_GPIO3A5_SUS_SHIFT             (5U)
#define GPIO3_IOC_GPIO3A_SUS_GPIO3A5_SUS_MASK              (0x1U << GPIO3_IOC_GPIO3A_SUS_GPIO3A5_SUS_SHIFT)             /* 0x00000020 */
#define GPIO3_IOC_GPIO3A_SUS_GPIO3A6_SUS_SHIFT             (6U)
#define GPIO3_IOC_GPIO3A_SUS_GPIO3A6_SUS_MASK              (0x1U << GPIO3_IOC_GPIO3A_SUS_GPIO3A6_SUS_SHIFT)             /* 0x00000040 */
#define GPIO3_IOC_GPIO3A_SUS_GPIO3A7_SUS_SHIFT             (7U)
#define GPIO3_IOC_GPIO3A_SUS_GPIO3A7_SUS_MASK              (0x1U << GPIO3_IOC_GPIO3A_SUS_GPIO3A7_SUS_SHIFT)             /* 0x00000080 */
/* GPIO3B_SUS */
#define GPIO3_IOC_GPIO3B_SUS_OFFSET                        (0x534U)
#define GPIO3_IOC_GPIO3B_SUS_GPIO3B0_SUS_SHIFT             (0U)
#define GPIO3_IOC_GPIO3B_SUS_GPIO3B0_SUS_MASK              (0x1U << GPIO3_IOC_GPIO3B_SUS_GPIO3B0_SUS_SHIFT)             /* 0x00000001 */
#define GPIO3_IOC_GPIO3B_SUS_GPIO3B1_SUS_SHIFT             (1U)
#define GPIO3_IOC_GPIO3B_SUS_GPIO3B1_SUS_MASK              (0x1U << GPIO3_IOC_GPIO3B_SUS_GPIO3B1_SUS_SHIFT)             /* 0x00000002 */
#define GPIO3_IOC_GPIO3B_SUS_GPIO3B2_SUS_SHIFT             (2U)
#define GPIO3_IOC_GPIO3B_SUS_GPIO3B2_SUS_MASK              (0x1U << GPIO3_IOC_GPIO3B_SUS_GPIO3B2_SUS_SHIFT)             /* 0x00000004 */
#define GPIO3_IOC_GPIO3B_SUS_GPIO3B3_SUS_SHIFT             (3U)
#define GPIO3_IOC_GPIO3B_SUS_GPIO3B3_SUS_MASK              (0x1U << GPIO3_IOC_GPIO3B_SUS_GPIO3B3_SUS_SHIFT)             /* 0x00000008 */
#define GPIO3_IOC_GPIO3B_SUS_GPIO3B4_SUS_SHIFT             (4U)
#define GPIO3_IOC_GPIO3B_SUS_GPIO3B4_SUS_MASK              (0x1U << GPIO3_IOC_GPIO3B_SUS_GPIO3B4_SUS_SHIFT)             /* 0x00000010 */
#define GPIO3_IOC_GPIO3B_SUS_GPIO3B5_SUS_SHIFT             (5U)
#define GPIO3_IOC_GPIO3B_SUS_GPIO3B5_SUS_MASK              (0x1U << GPIO3_IOC_GPIO3B_SUS_GPIO3B5_SUS_SHIFT)             /* 0x00000020 */
#define GPIO3_IOC_GPIO3B_SUS_GPIO3B6_SUS_SHIFT             (6U)
#define GPIO3_IOC_GPIO3B_SUS_GPIO3B6_SUS_MASK              (0x1U << GPIO3_IOC_GPIO3B_SUS_GPIO3B6_SUS_SHIFT)             /* 0x00000040 */
/* GPIO3A_SL */
#define GPIO3_IOC_GPIO3A_SL_OFFSET                         (0x630U)
#define GPIO3_IOC_GPIO3A_SL_GPIO3A0_SL_SHIFT               (0U)
#define GPIO3_IOC_GPIO3A_SL_GPIO3A0_SL_MASK                (0x3U << GPIO3_IOC_GPIO3A_SL_GPIO3A0_SL_SHIFT)               /* 0x00000003 */
#define GPIO3_IOC_GPIO3A_SL_GPIO3A1_SL_SHIFT               (2U)
#define GPIO3_IOC_GPIO3A_SL_GPIO3A1_SL_MASK                (0x3U << GPIO3_IOC_GPIO3A_SL_GPIO3A1_SL_SHIFT)               /* 0x0000000C */
#define GPIO3_IOC_GPIO3A_SL_GPIO3A2_SL_SHIFT               (4U)
#define GPIO3_IOC_GPIO3A_SL_GPIO3A2_SL_MASK                (0x3U << GPIO3_IOC_GPIO3A_SL_GPIO3A2_SL_SHIFT)               /* 0x00000030 */
#define GPIO3_IOC_GPIO3A_SL_GPIO3A3_SL_SHIFT               (6U)
#define GPIO3_IOC_GPIO3A_SL_GPIO3A3_SL_MASK                (0x3U << GPIO3_IOC_GPIO3A_SL_GPIO3A3_SL_SHIFT)               /* 0x000000C0 */
#define GPIO3_IOC_GPIO3A_SL_GPIO3A4_SL_SHIFT               (8U)
#define GPIO3_IOC_GPIO3A_SL_GPIO3A4_SL_MASK                (0x3U << GPIO3_IOC_GPIO3A_SL_GPIO3A4_SL_SHIFT)               /* 0x00000300 */
#define GPIO3_IOC_GPIO3A_SL_GPIO3A5_SL_SHIFT               (10U)
#define GPIO3_IOC_GPIO3A_SL_GPIO3A5_SL_MASK                (0x3U << GPIO3_IOC_GPIO3A_SL_GPIO3A5_SL_SHIFT)               /* 0x00000C00 */
#define GPIO3_IOC_GPIO3A_SL_GPIO3A6_SL_SHIFT               (12U)
#define GPIO3_IOC_GPIO3A_SL_GPIO3A6_SL_MASK                (0x3U << GPIO3_IOC_GPIO3A_SL_GPIO3A6_SL_SHIFT)               /* 0x00003000 */
#define GPIO3_IOC_GPIO3A_SL_GPIO3A7_SL_SHIFT               (14U)
#define GPIO3_IOC_GPIO3A_SL_GPIO3A7_SL_MASK                (0x3U << GPIO3_IOC_GPIO3A_SL_GPIO3A7_SL_SHIFT)               /* 0x0000C000 */
/* GPIO3B_SL */
#define GPIO3_IOC_GPIO3B_SL_OFFSET                         (0x634U)
#define GPIO3_IOC_GPIO3B_SL_GPIO3B0_SL_SHIFT               (0U)
#define GPIO3_IOC_GPIO3B_SL_GPIO3B0_SL_MASK                (0x3U << GPIO3_IOC_GPIO3B_SL_GPIO3B0_SL_SHIFT)               /* 0x00000003 */
#define GPIO3_IOC_GPIO3B_SL_GPIO3B1_SL_SHIFT               (2U)
#define GPIO3_IOC_GPIO3B_SL_GPIO3B1_SL_MASK                (0x3U << GPIO3_IOC_GPIO3B_SL_GPIO3B1_SL_SHIFT)               /* 0x0000000C */
#define GPIO3_IOC_GPIO3B_SL_GPIO3B2_SL_SHIFT               (4U)
#define GPIO3_IOC_GPIO3B_SL_GPIO3B2_SL_MASK                (0x3U << GPIO3_IOC_GPIO3B_SL_GPIO3B2_SL_SHIFT)               /* 0x00000030 */
#define GPIO3_IOC_GPIO3B_SL_GPIO3B3_SL_SHIFT               (6U)
#define GPIO3_IOC_GPIO3B_SL_GPIO3B3_SL_MASK                (0x3U << GPIO3_IOC_GPIO3B_SL_GPIO3B3_SL_SHIFT)               /* 0x000000C0 */
#define GPIO3_IOC_GPIO3B_SL_GPIO3B4_SL_SHIFT               (8U)
#define GPIO3_IOC_GPIO3B_SL_GPIO3B4_SL_MASK                (0x3U << GPIO3_IOC_GPIO3B_SL_GPIO3B4_SL_SHIFT)               /* 0x00000300 */
#define GPIO3_IOC_GPIO3B_SL_GPIO3B5_SL_SHIFT               (10U)
#define GPIO3_IOC_GPIO3B_SL_GPIO3B5_SL_MASK                (0x3U << GPIO3_IOC_GPIO3B_SL_GPIO3B5_SL_SHIFT)               /* 0x00000C00 */
#define GPIO3_IOC_GPIO3B_SL_GPIO3B6_SL_SHIFT               (12U)
#define GPIO3_IOC_GPIO3B_SL_GPIO3B6_SL_MASK                (0x3U << GPIO3_IOC_GPIO3B_SL_GPIO3B6_SL_SHIFT)               /* 0x00003000 */
/* GPIO3A_OD */
#define GPIO3_IOC_GPIO3A_OD_OFFSET                         (0x730U)
#define GPIO3_IOC_GPIO3A_OD_GPIO3A0_OD_SHIFT               (0U)
#define GPIO3_IOC_GPIO3A_OD_GPIO3A0_OD_MASK                (0x1U << GPIO3_IOC_GPIO3A_OD_GPIO3A0_OD_SHIFT)               /* 0x00000001 */
#define GPIO3_IOC_GPIO3A_OD_GPIO3A1_OD_SHIFT               (1U)
#define GPIO3_IOC_GPIO3A_OD_GPIO3A1_OD_MASK                (0x1U << GPIO3_IOC_GPIO3A_OD_GPIO3A1_OD_SHIFT)               /* 0x00000002 */
#define GPIO3_IOC_GPIO3A_OD_GPIO3A2_OD_SHIFT               (2U)
#define GPIO3_IOC_GPIO3A_OD_GPIO3A2_OD_MASK                (0x1U << GPIO3_IOC_GPIO3A_OD_GPIO3A2_OD_SHIFT)               /* 0x00000004 */
#define GPIO3_IOC_GPIO3A_OD_GPIO3A3_OD_SHIFT               (3U)
#define GPIO3_IOC_GPIO3A_OD_GPIO3A3_OD_MASK                (0x1U << GPIO3_IOC_GPIO3A_OD_GPIO3A3_OD_SHIFT)               /* 0x00000008 */
#define GPIO3_IOC_GPIO3A_OD_GPIO3A4_OD_SHIFT               (4U)
#define GPIO3_IOC_GPIO3A_OD_GPIO3A4_OD_MASK                (0x1U << GPIO3_IOC_GPIO3A_OD_GPIO3A4_OD_SHIFT)               /* 0x00000010 */
#define GPIO3_IOC_GPIO3A_OD_GPIO3A5_OD_SHIFT               (5U)
#define GPIO3_IOC_GPIO3A_OD_GPIO3A5_OD_MASK                (0x1U << GPIO3_IOC_GPIO3A_OD_GPIO3A5_OD_SHIFT)               /* 0x00000020 */
#define GPIO3_IOC_GPIO3A_OD_GPIO3A6_OD_SHIFT               (6U)
#define GPIO3_IOC_GPIO3A_OD_GPIO3A6_OD_MASK                (0x1U << GPIO3_IOC_GPIO3A_OD_GPIO3A6_OD_SHIFT)               /* 0x00000040 */
#define GPIO3_IOC_GPIO3A_OD_GPIO3A7_OD_SHIFT               (7U)
#define GPIO3_IOC_GPIO3A_OD_GPIO3A7_OD_MASK                (0x1U << GPIO3_IOC_GPIO3A_OD_GPIO3A7_OD_SHIFT)               /* 0x00000080 */
/* GPIO3B_OD */
#define GPIO3_IOC_GPIO3B_OD_OFFSET                         (0x734U)
#define GPIO3_IOC_GPIO3B_OD_GPIO3B0_OD_SHIFT               (0U)
#define GPIO3_IOC_GPIO3B_OD_GPIO3B0_OD_MASK                (0x1U << GPIO3_IOC_GPIO3B_OD_GPIO3B0_OD_SHIFT)               /* 0x00000001 */
#define GPIO3_IOC_GPIO3B_OD_GPIO3B1_OD_SHIFT               (1U)
#define GPIO3_IOC_GPIO3B_OD_GPIO3B1_OD_MASK                (0x1U << GPIO3_IOC_GPIO3B_OD_GPIO3B1_OD_SHIFT)               /* 0x00000002 */
#define GPIO3_IOC_GPIO3B_OD_GPIO3B2_OD_SHIFT               (2U)
#define GPIO3_IOC_GPIO3B_OD_GPIO3B2_OD_MASK                (0x1U << GPIO3_IOC_GPIO3B_OD_GPIO3B2_OD_SHIFT)               /* 0x00000004 */
#define GPIO3_IOC_GPIO3B_OD_GPIO3B3_OD_SHIFT               (3U)
#define GPIO3_IOC_GPIO3B_OD_GPIO3B3_OD_MASK                (0x1U << GPIO3_IOC_GPIO3B_OD_GPIO3B3_OD_SHIFT)               /* 0x00000008 */
#define GPIO3_IOC_GPIO3B_OD_GPIO3B4_OD_SHIFT               (4U)
#define GPIO3_IOC_GPIO3B_OD_GPIO3B4_OD_MASK                (0x1U << GPIO3_IOC_GPIO3B_OD_GPIO3B4_OD_SHIFT)               /* 0x00000010 */
#define GPIO3_IOC_GPIO3B_OD_GPIO3B5_OD_SHIFT               (5U)
#define GPIO3_IOC_GPIO3B_OD_GPIO3B5_OD_MASK                (0x1U << GPIO3_IOC_GPIO3B_OD_GPIO3B5_OD_SHIFT)               /* 0x00000020 */
#define GPIO3_IOC_GPIO3B_OD_GPIO3B6_OD_SHIFT               (6U)
#define GPIO3_IOC_GPIO3B_OD_GPIO3B6_OD_MASK                (0x1U << GPIO3_IOC_GPIO3B_OD_GPIO3B6_OD_SHIFT)               /* 0x00000040 */
/***************************************GPIO4_IOC****************************************/
/* SARADC_CON */
#define GPIO4_IOC_SARADC_CON_OFFSET                        (0x840U)
#define GPIO4_IOC_SARADC_CON_GPIO_SARADC_HE_SHIFT          (0U)
#define GPIO4_IOC_SARADC_CON_GPIO_SARADC_HE_MASK           (0xFU << GPIO4_IOC_SARADC_CON_GPIO_SARADC_HE_SHIFT)          /* 0x0000000F */
#define GPIO4_IOC_SARADC_CON_GPIO_SARADC_IE_SHIFT          (4U)
#define GPIO4_IOC_SARADC_CON_GPIO_SARADC_IE_MASK           (0xFU << GPIO4_IOC_SARADC_CON_GPIO_SARADC_IE_SHIFT)          /* 0x000000F0 */
#define GPIO4_IOC_SARADC_CON_GPIO_SARADC_SMT_SHIFT         (8U)
#define GPIO4_IOC_SARADC_CON_GPIO_SARADC_SMT_MASK          (0x3U << GPIO4_IOC_SARADC_CON_GPIO_SARADC_SMT_SHIFT)         /* 0x00000300 */
#define GPIO4_IOC_SARADC_CON_GPIO_SARADC_DS_SHIFT          (10U)
#define GPIO4_IOC_SARADC_CON_GPIO_SARADC_DS_MASK           (0x3U << GPIO4_IOC_SARADC_CON_GPIO_SARADC_DS_SHIFT)          /* 0x00000C00 */
#define GPIO4_IOC_SARADC_CON_GPIO_SARADC_SL_SHIFT          (12U)
#define GPIO4_IOC_SARADC_CON_GPIO_SARADC_SL_MASK           (0x1U << GPIO4_IOC_SARADC_CON_GPIO_SARADC_SL_SHIFT)          /* 0x00001000 */
#define GPIO4_IOC_SARADC_CON_GPIO_SARADC_PE_SHIFT          (13U)
#define GPIO4_IOC_SARADC_CON_GPIO_SARADC_PE_MASK           (0x1U << GPIO4_IOC_SARADC_CON_GPIO_SARADC_PE_SHIFT)          /* 0x00002000 */
#define GPIO4_IOC_SARADC_CON_GPIO_SARADC_PS_SHIFT          (14U)
#define GPIO4_IOC_SARADC_CON_GPIO_SARADC_PS_MASK           (0x1U << GPIO4_IOC_SARADC_CON_GPIO_SARADC_PS_SHIFT)          /* 0x00004000 */
/*****************************************SARADC*****************************************/
/* CONV_CON */
#define SARADC_CONV_CON_OFFSET                             (0x0U)
#define SARADC_CONV_CON_CHANNEL_SEL_SHIFT                  (0U)
#define SARADC_CONV_CON_CHANNEL_SEL_MASK                   (0xFU << SARADC_CONV_CON_CHANNEL_SEL_SHIFT)                  /* 0x0000000F */
#define SARADC_CONV_CON_START_ADC_SHIFT                    (4U)
#define SARADC_CONV_CON_START_ADC_MASK                     (0x1U << SARADC_CONV_CON_START_ADC_SHIFT)                    /* 0x00000010 */
#define SARADC_CONV_CON_SINGLE_PD_MODE_SHIFT               (5U)
#define SARADC_CONV_CON_SINGLE_PD_MODE_MASK                (0x1U << SARADC_CONV_CON_SINGLE_PD_MODE_SHIFT)               /* 0x00000020 */
#define SARADC_CONV_CON_AUTO_CHANNEL_MODE_SHIFT            (6U)
#define SARADC_CONV_CON_AUTO_CHANNEL_MODE_MASK             (0x1U << SARADC_CONV_CON_AUTO_CHANNEL_MODE_SHIFT)            /* 0x00000040 */
#define SARADC_CONV_CON_END_CONV_SHIFT                     (7U)
#define SARADC_CONV_CON_END_CONV_MASK                      (0x1U << SARADC_CONV_CON_END_CONV_SHIFT)                     /* 0x00000080 */
#define SARADC_CONV_CON_AS_PD_MODE_SHIFT                   (8U)
#define SARADC_CONV_CON_AS_PD_MODE_MASK                    (0x1U << SARADC_CONV_CON_AS_PD_MODE_SHIFT)                   /* 0x00000100 */
#define SARADC_CONV_CON_INT_LOCK_SHIFT                     (9U)
#define SARADC_CONV_CON_INT_LOCK_MASK                      (0x1U << SARADC_CONV_CON_INT_LOCK_SHIFT)                     /* 0x00000200 */
/* T_PD_SOC */
#define SARADC_T_PD_SOC_OFFSET                             (0x4U)
#define SARADC_T_PD_SOC_T_PD_SOC_SHIFT                     (0U)
#define SARADC_T_PD_SOC_T_PD_SOC_MASK                      (0xFFU << SARADC_T_PD_SOC_T_PD_SOC_SHIFT)                    /* 0x000000FF */
/* T_AS_SOC */
#define SARADC_T_AS_SOC_OFFSET                             (0x8U)
#define SARADC_T_AS_SOC_T_AS_SOC_SHIFT                     (0U)
#define SARADC_T_AS_SOC_T_AS_SOC_MASK                      (0xFFFFFFFFU << SARADC_T_AS_SOC_T_AS_SOC_SHIFT)              /* 0xFFFFFFFF */
/* T_DAS_SOC */
#define SARADC_T_DAS_SOC_OFFSET                            (0xCU)
#define SARADC_T_DAS_SOC_T_DAS_SOC_SHIFT                   (0U)
#define SARADC_T_DAS_SOC_T_DAS_SOC_MASK                    (0xFFFFFFFFU << SARADC_T_DAS_SOC_T_DAS_SOC_SHIFT)            /* 0xFFFFFFFF */
/* T_SEL_SOC */
#define SARADC_T_SEL_SOC_OFFSET                            (0x10U)
#define SARADC_T_SEL_SOC_T_SEL_SOC_SHIFT                   (0U)
#define SARADC_T_SEL_SOC_T_SEL_SOC_MASK                    (0xFFFFU << SARADC_T_SEL_SOC_T_SEL_SOC_SHIFT)                /* 0x0000FFFF */
/* HIGH_COMP0 */
#define SARADC_HIGH_COMP0_OFFSET                           (0x14U)
#define SARADC_HIGH_COMP0_HIGH_COMP0_SHIFT                 (0U)
#define SARADC_HIGH_COMP0_HIGH_COMP0_MASK                  (0xFFFU << SARADC_HIGH_COMP0_HIGH_COMP0_SHIFT)               /* 0x00000FFF */
/* HIGH_COMP1 */
#define SARADC_HIGH_COMP1_OFFSET                           (0x18U)
#define SARADC_HIGH_COMP1_HIGH_COMP1_SHIFT                 (0U)
#define SARADC_HIGH_COMP1_HIGH_COMP1_MASK                  (0xFFFU << SARADC_HIGH_COMP1_HIGH_COMP1_SHIFT)               /* 0x00000FFF */
/* HIGH_COMP2 */
#define SARADC_HIGH_COMP2_OFFSET                           (0x1CU)
#define SARADC_HIGH_COMP2_HIGH_COMP2_SHIFT                 (0U)
#define SARADC_HIGH_COMP2_HIGH_COMP2_MASK                  (0xFFFU << SARADC_HIGH_COMP2_HIGH_COMP2_SHIFT)               /* 0x00000FFF */
/* HIGH_COMP3 */
#define SARADC_HIGH_COMP3_OFFSET                           (0x20U)
#define SARADC_HIGH_COMP3_HIGH_COMP3_SHIFT                 (0U)
#define SARADC_HIGH_COMP3_HIGH_COMP3_MASK                  (0xFFFU << SARADC_HIGH_COMP3_HIGH_COMP3_SHIFT)               /* 0x00000FFF */
/* HIGH_COMP4 */
#define SARADC_HIGH_COMP4_OFFSET                           (0x24U)
#define SARADC_HIGH_COMP4_HIGH_COMP4_SHIFT                 (0U)
#define SARADC_HIGH_COMP4_HIGH_COMP4_MASK                  (0xFFFU << SARADC_HIGH_COMP4_HIGH_COMP4_SHIFT)               /* 0x00000FFF */
/* HIGH_COMP5 */
#define SARADC_HIGH_COMP5_OFFSET                           (0x28U)
#define SARADC_HIGH_COMP5_HIGH_COMP5_SHIFT                 (0U)
#define SARADC_HIGH_COMP5_HIGH_COMP5_MASK                  (0xFFFU << SARADC_HIGH_COMP5_HIGH_COMP5_SHIFT)               /* 0x00000FFF */
/* HIGH_COMP7 */
#define SARADC_HIGH_COMP7_OFFSET                           (0x30U)
#define SARADC_HIGH_COMP7_HIGH_COMP7_SHIFT                 (0U)
#define SARADC_HIGH_COMP7_HIGH_COMP7_MASK                  (0xFFFU << SARADC_HIGH_COMP7_HIGH_COMP7_SHIFT)               /* 0x00000FFF */
/* HIGH_COMP8 */
#define SARADC_HIGH_COMP8_OFFSET                           (0x34U)
#define SARADC_HIGH_COMP8_HIGH_COMP8_SHIFT                 (0U)
#define SARADC_HIGH_COMP8_HIGH_COMP8_MASK                  (0xFFFU << SARADC_HIGH_COMP8_HIGH_COMP8_SHIFT)               /* 0x00000FFF */
/* HIGH_COMP9 */
#define SARADC_HIGH_COMP9_OFFSET                           (0x38U)
#define SARADC_HIGH_COMP9_HIGH_COMP9_SHIFT                 (0U)
#define SARADC_HIGH_COMP9_HIGH_COMP9_MASK                  (0xFFFU << SARADC_HIGH_COMP9_HIGH_COMP9_SHIFT)               /* 0x00000FFF */
/* HIGH_COMP10 */
#define SARADC_HIGH_COMP10_OFFSET                          (0x3CU)
#define SARADC_HIGH_COMP10_HIGH_COMP10_SHIFT               (0U)
#define SARADC_HIGH_COMP10_HIGH_COMP10_MASK                (0xFFFU << SARADC_HIGH_COMP10_HIGH_COMP10_SHIFT)             /* 0x00000FFF */
/* HIGH_COMP11 */
#define SARADC_HIGH_COMP11_OFFSET                          (0x40U)
#define SARADC_HIGH_COMP11_HIGH_COMP11_SHIFT               (0U)
#define SARADC_HIGH_COMP11_HIGH_COMP11_MASK                (0xFFFU << SARADC_HIGH_COMP11_HIGH_COMP11_SHIFT)             /* 0x00000FFF */
/* HIGH_COMP12 */
#define SARADC_HIGH_COMP12_OFFSET                          (0x44U)
#define SARADC_HIGH_COMP12_HIGH_COMP12_SHIFT               (0U)
#define SARADC_HIGH_COMP12_HIGH_COMP12_MASK                (0xFFFU << SARADC_HIGH_COMP12_HIGH_COMP12_SHIFT)             /* 0x00000FFF */
/* HIGH_COMP13 */
#define SARADC_HIGH_COMP13_OFFSET                          (0x48U)
#define SARADC_HIGH_COMP13_HIGH_COMP13_SHIFT               (0U)
#define SARADC_HIGH_COMP13_HIGH_COMP13_MASK                (0xFFFU << SARADC_HIGH_COMP13_HIGH_COMP13_SHIFT)             /* 0x00000FFF */
/* HIGH_COMP14 */
#define SARADC_HIGH_COMP14_OFFSET                          (0x4CU)
#define SARADC_HIGH_COMP14_HIGH_COMP14_SHIFT               (0U)
#define SARADC_HIGH_COMP14_HIGH_COMP14_MASK                (0xFFFU << SARADC_HIGH_COMP14_HIGH_COMP14_SHIFT)             /* 0x00000FFF */
/* HIGH_COMP15 */
#define SARADC_HIGH_COMP15_OFFSET                          (0x50U)
#define SARADC_HIGH_COMP15_HIGH_COMP15_SHIFT               (0U)
#define SARADC_HIGH_COMP15_HIGH_COMP15_MASK                (0xFFFU << SARADC_HIGH_COMP15_HIGH_COMP15_SHIFT)             /* 0x00000FFF */
/* LOW_COMP0 */
#define SARADC_LOW_COMP0_OFFSET                            (0x54U)
#define SARADC_LOW_COMP0_LOW_COMP0_SHIFT                   (0U)
#define SARADC_LOW_COMP0_LOW_COMP0_MASK                    (0xFFFU << SARADC_LOW_COMP0_LOW_COMP0_SHIFT)                 /* 0x00000FFF */
/* LOW_COMP1 */
#define SARADC_LOW_COMP1_OFFSET                            (0x58U)
#define SARADC_LOW_COMP1_LOW_COMP1_SHIFT                   (0U)
#define SARADC_LOW_COMP1_LOW_COMP1_MASK                    (0xFFFU << SARADC_LOW_COMP1_LOW_COMP1_SHIFT)                 /* 0x00000FFF */
/* LOW_COMP2 */
#define SARADC_LOW_COMP2_OFFSET                            (0x5CU)
#define SARADC_LOW_COMP2_LOW_COMP2_SHIFT                   (0U)
#define SARADC_LOW_COMP2_LOW_COMP2_MASK                    (0xFFFU << SARADC_LOW_COMP2_LOW_COMP2_SHIFT)                 /* 0x00000FFF */
/* LOW_COMP3 */
#define SARADC_LOW_COMP3_OFFSET                            (0x60U)
#define SARADC_LOW_COMP3_LOW_COMP3_SHIFT                   (0U)
#define SARADC_LOW_COMP3_LOW_COMP3_MASK                    (0xFFFU << SARADC_LOW_COMP3_LOW_COMP3_SHIFT)                 /* 0x00000FFF */
/* LOW_COMP4 */
#define SARADC_LOW_COMP4_OFFSET                            (0x64U)
#define SARADC_LOW_COMP4_LOW_COMP4_SHIFT                   (0U)
#define SARADC_LOW_COMP4_LOW_COMP4_MASK                    (0xFFFU << SARADC_LOW_COMP4_LOW_COMP4_SHIFT)                 /* 0x00000FFF */
/* LOW_COMP5 */
#define SARADC_LOW_COMP5_OFFSET                            (0x68U)
#define SARADC_LOW_COMP5_LOW_COMP5_SHIFT                   (0U)
#define SARADC_LOW_COMP5_LOW_COMP5_MASK                    (0xFFFU << SARADC_LOW_COMP5_LOW_COMP5_SHIFT)                 /* 0x00000FFF */
/* LOW_COMP6 */
#define SARADC_LOW_COMP6_OFFSET                            (0x6CU)
#define SARADC_LOW_COMP6_LOW_COMP6_SHIFT                   (0U)
#define SARADC_LOW_COMP6_LOW_COMP6_MASK                    (0xFFFU << SARADC_LOW_COMP6_LOW_COMP6_SHIFT)                 /* 0x00000FFF */
/* LOW_COMP7 */
#define SARADC_LOW_COMP7_OFFSET                            (0x70U)
#define SARADC_LOW_COMP7_LOW_COMP7_SHIFT                   (0U)
#define SARADC_LOW_COMP7_LOW_COMP7_MASK                    (0xFFFU << SARADC_LOW_COMP7_LOW_COMP7_SHIFT)                 /* 0x00000FFF */
/* LOW_COMP8 */
#define SARADC_LOW_COMP8_OFFSET                            (0x74U)
#define SARADC_LOW_COMP8_LOW_COMP8_SHIFT                   (0U)
#define SARADC_LOW_COMP8_LOW_COMP8_MASK                    (0xFFFU << SARADC_LOW_COMP8_LOW_COMP8_SHIFT)                 /* 0x00000FFF */
/* LOW_COMP9 */
#define SARADC_LOW_COMP9_OFFSET                            (0x78U)
#define SARADC_LOW_COMP9_LOW_COMP9_SHIFT                   (0U)
#define SARADC_LOW_COMP9_LOW_COMP9_MASK                    (0xFFFU << SARADC_LOW_COMP9_LOW_COMP9_SHIFT)                 /* 0x00000FFF */
/* LOW_COMP10 */
#define SARADC_LOW_COMP10_OFFSET                           (0x7CU)
#define SARADC_LOW_COMP10_LOW_COMP10_SHIFT                 (0U)
#define SARADC_LOW_COMP10_LOW_COMP10_MASK                  (0x1U << SARADC_LOW_COMP10_LOW_COMP10_SHIFT)                 /* 0x00000001 */
/* LOW_COMP11 */
#define SARADC_LOW_COMP11_OFFSET                           (0x80U)
#define SARADC_LOW_COMP11_LOW_COMP11_SHIFT                 (0U)
#define SARADC_LOW_COMP11_LOW_COMP11_MASK                  (0xFFFU << SARADC_LOW_COMP11_LOW_COMP11_SHIFT)               /* 0x00000FFF */
/* LOW_COMP12 */
#define SARADC_LOW_COMP12_OFFSET                           (0x84U)
#define SARADC_LOW_COMP12_LOW_COMP12_SHIFT                 (0U)
#define SARADC_LOW_COMP12_LOW_COMP12_MASK                  (0xFFFU << SARADC_LOW_COMP12_LOW_COMP12_SHIFT)               /* 0x00000FFF */
/* LOW_COMP13 */
#define SARADC_LOW_COMP13_OFFSET                           (0x88U)
#define SARADC_LOW_COMP13_LOW_COMP13_SHIFT                 (0U)
#define SARADC_LOW_COMP13_LOW_COMP13_MASK                  (0x1U << SARADC_LOW_COMP13_LOW_COMP13_SHIFT)                 /* 0x00000001 */
/* LOW_COMP14 */
#define SARADC_LOW_COMP14_OFFSET                           (0x8CU)
#define SARADC_LOW_COMP14_LOW_COMP14_SHIFT                 (0U)
#define SARADC_LOW_COMP14_LOW_COMP14_MASK                  (0xFFFU << SARADC_LOW_COMP14_LOW_COMP14_SHIFT)               /* 0x00000FFF */
/* LOW_COMP15 */
#define SARADC_LOW_COMP15_OFFSET                           (0x90U)
#define SARADC_LOW_COMP15_LOW_COMP15_SHIFT                 (0U)
#define SARADC_LOW_COMP15_LOW_COMP15_MASK                  (0xFFFU << SARADC_LOW_COMP15_LOW_COMP15_SHIFT)               /* 0x00000FFF */
/* DEBOUNCE */
#define SARADC_DEBOUNCE_OFFSET                             (0x94U)
#define SARADC_DEBOUNCE_DEBOUNCE_SHIFT                     (0U)
#define SARADC_DEBOUNCE_DEBOUNCE_MASK                      (0xFFU << SARADC_DEBOUNCE_DEBOUNCE_SHIFT)                    /* 0x000000FF */
/* HT_INT_EN */
#define SARADC_HT_INT_EN_OFFSET                            (0x98U)
#define SARADC_HT_INT_EN_HT_INT_EN0_SHIFT                  (0U)
#define SARADC_HT_INT_EN_HT_INT_EN0_MASK                   (0x1U << SARADC_HT_INT_EN_HT_INT_EN0_SHIFT)                  /* 0x00000001 */
#define SARADC_HT_INT_EN_HT_INT_EN1_SHIFT                  (1U)
#define SARADC_HT_INT_EN_HT_INT_EN1_MASK                   (0x1U << SARADC_HT_INT_EN_HT_INT_EN1_SHIFT)                  /* 0x00000002 */
#define SARADC_HT_INT_EN_HT_INT_EN2_SHIFT                  (2U)
#define SARADC_HT_INT_EN_HT_INT_EN2_MASK                   (0x1U << SARADC_HT_INT_EN_HT_INT_EN2_SHIFT)                  /* 0x00000004 */
#define SARADC_HT_INT_EN_HT_INT_EN3_SHIFT                  (3U)
#define SARADC_HT_INT_EN_HT_INT_EN3_MASK                   (0x1U << SARADC_HT_INT_EN_HT_INT_EN3_SHIFT)                  /* 0x00000008 */
#define SARADC_HT_INT_EN_HT_INT_EN4_SHIFT                  (4U)
#define SARADC_HT_INT_EN_HT_INT_EN4_MASK                   (0x1U << SARADC_HT_INT_EN_HT_INT_EN4_SHIFT)                  /* 0x00000010 */
#define SARADC_HT_INT_EN_HT_INT_EN5_SHIFT                  (5U)
#define SARADC_HT_INT_EN_HT_INT_EN5_MASK                   (0x1U << SARADC_HT_INT_EN_HT_INT_EN5_SHIFT)                  /* 0x00000020 */
#define SARADC_HT_INT_EN_HT_INT_EN6_SHIFT                  (6U)
#define SARADC_HT_INT_EN_HT_INT_EN6_MASK                   (0x1U << SARADC_HT_INT_EN_HT_INT_EN6_SHIFT)                  /* 0x00000040 */
#define SARADC_HT_INT_EN_HT_INT_EN7_SHIFT                  (7U)
#define SARADC_HT_INT_EN_HT_INT_EN7_MASK                   (0x1U << SARADC_HT_INT_EN_HT_INT_EN7_SHIFT)                  /* 0x00000080 */
#define SARADC_HT_INT_EN_HT_INT_EN8_SHIFT                  (8U)
#define SARADC_HT_INT_EN_HT_INT_EN8_MASK                   (0x1U << SARADC_HT_INT_EN_HT_INT_EN8_SHIFT)                  /* 0x00000100 */
#define SARADC_HT_INT_EN_HT_INT_EN9_SHIFT                  (9U)
#define SARADC_HT_INT_EN_HT_INT_EN9_MASK                   (0x1U << SARADC_HT_INT_EN_HT_INT_EN9_SHIFT)                  /* 0x00000200 */
#define SARADC_HT_INT_EN_HT_INT_EN10_SHIFT                 (10U)
#define SARADC_HT_INT_EN_HT_INT_EN10_MASK                  (0x1U << SARADC_HT_INT_EN_HT_INT_EN10_SHIFT)                 /* 0x00000400 */
#define SARADC_HT_INT_EN_HT_INT_EN11_SHIFT                 (11U)
#define SARADC_HT_INT_EN_HT_INT_EN11_MASK                  (0x1U << SARADC_HT_INT_EN_HT_INT_EN11_SHIFT)                 /* 0x00000800 */
#define SARADC_HT_INT_EN_HT_INT_EN12_SHIFT                 (12U)
#define SARADC_HT_INT_EN_HT_INT_EN12_MASK                  (0x1U << SARADC_HT_INT_EN_HT_INT_EN12_SHIFT)                 /* 0x00001000 */
#define SARADC_HT_INT_EN_HT_INT_EN13_SHIFT                 (13U)
#define SARADC_HT_INT_EN_HT_INT_EN13_MASK                  (0x1U << SARADC_HT_INT_EN_HT_INT_EN13_SHIFT)                 /* 0x00002000 */
#define SARADC_HT_INT_EN_HT_INT_EN14_SHIFT                 (14U)
#define SARADC_HT_INT_EN_HT_INT_EN14_MASK                  (0x1U << SARADC_HT_INT_EN_HT_INT_EN14_SHIFT)                 /* 0x00004000 */
#define SARADC_HT_INT_EN_HT_INT_EN15_SHIFT                 (15U)
#define SARADC_HT_INT_EN_HT_INT_EN15_MASK                  (0x1U << SARADC_HT_INT_EN_HT_INT_EN15_SHIFT)                 /* 0x00008000 */
/* LT_INT_EN */
#define SARADC_LT_INT_EN_OFFSET                            (0x9CU)
#define SARADC_LT_INT_EN_LT_INT_EN0_SHIFT                  (0U)
#define SARADC_LT_INT_EN_LT_INT_EN0_MASK                   (0x1U << SARADC_LT_INT_EN_LT_INT_EN0_SHIFT)                  /* 0x00000001 */
#define SARADC_LT_INT_EN_LT_INT_EN1_SHIFT                  (1U)
#define SARADC_LT_INT_EN_LT_INT_EN1_MASK                   (0x1U << SARADC_LT_INT_EN_LT_INT_EN1_SHIFT)                  /* 0x00000002 */
#define SARADC_LT_INT_EN_LT_INT_EN2_SHIFT                  (2U)
#define SARADC_LT_INT_EN_LT_INT_EN2_MASK                   (0x1U << SARADC_LT_INT_EN_LT_INT_EN2_SHIFT)                  /* 0x00000004 */
#define SARADC_LT_INT_EN_LT_INT_EN3_SHIFT                  (3U)
#define SARADC_LT_INT_EN_LT_INT_EN3_MASK                   (0x1U << SARADC_LT_INT_EN_LT_INT_EN3_SHIFT)                  /* 0x00000008 */
#define SARADC_LT_INT_EN_LT_INT_EN4_SHIFT                  (4U)
#define SARADC_LT_INT_EN_LT_INT_EN4_MASK                   (0x1U << SARADC_LT_INT_EN_LT_INT_EN4_SHIFT)                  /* 0x00000010 */
#define SARADC_LT_INT_EN_LT_INT_EN5_SHIFT                  (5U)
#define SARADC_LT_INT_EN_LT_INT_EN5_MASK                   (0x1U << SARADC_LT_INT_EN_LT_INT_EN5_SHIFT)                  /* 0x00000020 */
#define SARADC_LT_INT_EN_LT_INT_EN6_SHIFT                  (6U)
#define SARADC_LT_INT_EN_LT_INT_EN6_MASK                   (0x1U << SARADC_LT_INT_EN_LT_INT_EN6_SHIFT)                  /* 0x00000040 */
#define SARADC_LT_INT_EN_LT_INT_EN7_SHIFT                  (7U)
#define SARADC_LT_INT_EN_LT_INT_EN7_MASK                   (0x1U << SARADC_LT_INT_EN_LT_INT_EN7_SHIFT)                  /* 0x00000080 */
#define SARADC_LT_INT_EN_LT_INT_EN8_SHIFT                  (8U)
#define SARADC_LT_INT_EN_LT_INT_EN8_MASK                   (0x1U << SARADC_LT_INT_EN_LT_INT_EN8_SHIFT)                  /* 0x00000100 */
#define SARADC_LT_INT_EN_LT_INT_EN9_SHIFT                  (9U)
#define SARADC_LT_INT_EN_LT_INT_EN9_MASK                   (0x1U << SARADC_LT_INT_EN_LT_INT_EN9_SHIFT)                  /* 0x00000200 */
#define SARADC_LT_INT_EN_LT_INT_EN10_SHIFT                 (10U)
#define SARADC_LT_INT_EN_LT_INT_EN10_MASK                  (0x1U << SARADC_LT_INT_EN_LT_INT_EN10_SHIFT)                 /* 0x00000400 */
#define SARADC_LT_INT_EN_LT_INT_EN11_SHIFT                 (11U)
#define SARADC_LT_INT_EN_LT_INT_EN11_MASK                  (0x1U << SARADC_LT_INT_EN_LT_INT_EN11_SHIFT)                 /* 0x00000800 */
#define SARADC_LT_INT_EN_LT_INT_EN12_SHIFT                 (12U)
#define SARADC_LT_INT_EN_LT_INT_EN12_MASK                  (0x1U << SARADC_LT_INT_EN_LT_INT_EN12_SHIFT)                 /* 0x00001000 */
#define SARADC_LT_INT_EN_LT_INT_EN13_SHIFT                 (13U)
#define SARADC_LT_INT_EN_LT_INT_EN13_MASK                  (0x1U << SARADC_LT_INT_EN_LT_INT_EN13_SHIFT)                 /* 0x00002000 */
#define SARADC_LT_INT_EN_LT_INT_EN14_SHIFT                 (14U)
#define SARADC_LT_INT_EN_LT_INT_EN14_MASK                  (0x1U << SARADC_LT_INT_EN_LT_INT_EN14_SHIFT)                 /* 0x00004000 */
#define SARADC_LT_INT_EN_LT_INT_EN15_SHIFT                 (15U)
#define SARADC_LT_INT_EN_LT_INT_EN15_MASK                  (0x1U << SARADC_LT_INT_EN_LT_INT_EN15_SHIFT)                 /* 0x00008000 */
/* MT_INT_EN */
#define SARADC_MT_INT_EN_OFFSET                            (0x100U)
#define SARADC_MT_INT_EN_MT_INT_EN0_SHIFT                  (0U)
#define SARADC_MT_INT_EN_MT_INT_EN0_MASK                   (0x1U << SARADC_MT_INT_EN_MT_INT_EN0_SHIFT)                  /* 0x00000001 */
#define SARADC_MT_INT_EN_MT_INT_EN1_SHIFT                  (1U)
#define SARADC_MT_INT_EN_MT_INT_EN1_MASK                   (0x1U << SARADC_MT_INT_EN_MT_INT_EN1_SHIFT)                  /* 0x00000002 */
#define SARADC_MT_INT_EN_MT_INT_EN2_SHIFT                  (2U)
#define SARADC_MT_INT_EN_MT_INT_EN2_MASK                   (0x1U << SARADC_MT_INT_EN_MT_INT_EN2_SHIFT)                  /* 0x00000004 */
#define SARADC_MT_INT_EN_MT_INT_EN3_SHIFT                  (3U)
#define SARADC_MT_INT_EN_MT_INT_EN3_MASK                   (0x1U << SARADC_MT_INT_EN_MT_INT_EN3_SHIFT)                  /* 0x00000008 */
#define SARADC_MT_INT_EN_MT_INT_EN4_SHIFT                  (4U)
#define SARADC_MT_INT_EN_MT_INT_EN4_MASK                   (0x1U << SARADC_MT_INT_EN_MT_INT_EN4_SHIFT)                  /* 0x00000010 */
#define SARADC_MT_INT_EN_MT_INT_EN5_SHIFT                  (5U)
#define SARADC_MT_INT_EN_MT_INT_EN5_MASK                   (0x1U << SARADC_MT_INT_EN_MT_INT_EN5_SHIFT)                  /* 0x00000020 */
#define SARADC_MT_INT_EN_MT_INT_EN6_SHIFT                  (6U)
#define SARADC_MT_INT_EN_MT_INT_EN6_MASK                   (0x1U << SARADC_MT_INT_EN_MT_INT_EN6_SHIFT)                  /* 0x00000040 */
#define SARADC_MT_INT_EN_MT_INT_EN7_SHIFT                  (7U)
#define SARADC_MT_INT_EN_MT_INT_EN7_MASK                   (0x1U << SARADC_MT_INT_EN_MT_INT_EN7_SHIFT)                  /* 0x00000080 */
#define SARADC_MT_INT_EN_MT_INT_EN8_SHIFT                  (8U)
#define SARADC_MT_INT_EN_MT_INT_EN8_MASK                   (0x1U << SARADC_MT_INT_EN_MT_INT_EN8_SHIFT)                  /* 0x00000100 */
#define SARADC_MT_INT_EN_MT_INT_EN9_SHIFT                  (9U)
#define SARADC_MT_INT_EN_MT_INT_EN9_MASK                   (0x1U << SARADC_MT_INT_EN_MT_INT_EN9_SHIFT)                  /* 0x00000200 */
#define SARADC_MT_INT_EN_MT_INT_EN10_SHIFT                 (10U)
#define SARADC_MT_INT_EN_MT_INT_EN10_MASK                  (0x1U << SARADC_MT_INT_EN_MT_INT_EN10_SHIFT)                 /* 0x00000400 */
#define SARADC_MT_INT_EN_MT_INT_EN11_SHIFT                 (11U)
#define SARADC_MT_INT_EN_MT_INT_EN11_MASK                  (0x1U << SARADC_MT_INT_EN_MT_INT_EN11_SHIFT)                 /* 0x00000800 */
#define SARADC_MT_INT_EN_MT_INT_EN12_SHIFT                 (12U)
#define SARADC_MT_INT_EN_MT_INT_EN12_MASK                  (0x1U << SARADC_MT_INT_EN_MT_INT_EN12_SHIFT)                 /* 0x00001000 */
#define SARADC_MT_INT_EN_MT_INT_EN13_SHIFT                 (13U)
#define SARADC_MT_INT_EN_MT_INT_EN13_MASK                  (0x1U << SARADC_MT_INT_EN_MT_INT_EN13_SHIFT)                 /* 0x00002000 */
#define SARADC_MT_INT_EN_MT_INT_EN14_SHIFT                 (14U)
#define SARADC_MT_INT_EN_MT_INT_EN14_MASK                  (0x1U << SARADC_MT_INT_EN_MT_INT_EN14_SHIFT)                 /* 0x00004000 */
#define SARADC_MT_INT_EN_MT_INT_EN15_SHIFT                 (15U)
#define SARADC_MT_INT_EN_MT_INT_EN15_MASK                  (0x1U << SARADC_MT_INT_EN_MT_INT_EN15_SHIFT)                 /* 0x00008000 */
/* END_INT_EN */
#define SARADC_END_INT_EN_OFFSET                           (0x104U)
#define SARADC_END_INT_EN_END_INT_EN_SHIFT                 (0U)
#define SARADC_END_INT_EN_END_INT_EN_MASK                  (0x1U << SARADC_END_INT_EN_END_INT_EN_SHIFT)                 /* 0x00000001 */
/* ST_CON */
#define SARADC_ST_CON_OFFSET                               (0x108U)
#define SARADC_ST_CON_CCTRL_SHIFT                          (0U)
#define SARADC_ST_CON_CCTRL_MASK                           (0x7U << SARADC_ST_CON_CCTRL_SHIFT)                          /* 0x00000007 */
#define SARADC_ST_CON_ICTRL_SHIFT                          (3U)
#define SARADC_ST_CON_ICTRL_MASK                           (0x7U << SARADC_ST_CON_ICTRL_SHIFT)                          /* 0x00000038 */
/* STATUS */
#define SARADC_STATUS_OFFSET                               (0x10CU)
#define SARADC_STATUS                                      (0x2U)
#define SARADC_STATUS_CONV_ST_SHIFT                        (0U)
#define SARADC_STATUS_CONV_ST_MASK                         (0x1U << SARADC_STATUS_CONV_ST_SHIFT)                        /* 0x00000001 */
#define SARADC_STATUS_PD_SHIFT                             (1U)
#define SARADC_STATUS_PD_MASK                              (0x1U << SARADC_STATUS_PD_SHIFT)                             /* 0x00000002 */
#define SARADC_STATUS_SEL_SHIFT                            (2U)
#define SARADC_STATUS_SEL_MASK                             (0xFU << SARADC_STATUS_SEL_SHIFT)                            /* 0x0000003C */
/* END_INT_ST */
#define SARADC_END_INT_ST_OFFSET                           (0x110U)
#define SARADC_END_INT_ST_END_INT_ST_SHIFT                 (0U)
#define SARADC_END_INT_ST_END_INT_ST_MASK                  (0x1U << SARADC_END_INT_ST_END_INT_ST_SHIFT)                 /* 0x00000001 */
/* HT_INT_ST */
#define SARADC_HT_INT_ST_OFFSET                            (0x114U)
#define SARADC_HT_INT_ST_HT_INT_ST0_SHIFT                  (0U)
#define SARADC_HT_INT_ST_HT_INT_ST0_MASK                   (0x1U << SARADC_HT_INT_ST_HT_INT_ST0_SHIFT)                  /* 0x00000001 */
#define SARADC_HT_INT_ST_HT_INT_ST1_SHIFT                  (1U)
#define SARADC_HT_INT_ST_HT_INT_ST1_MASK                   (0x1U << SARADC_HT_INT_ST_HT_INT_ST1_SHIFT)                  /* 0x00000002 */
#define SARADC_HT_INT_ST_HT_INT_ST2_SHIFT                  (2U)
#define SARADC_HT_INT_ST_HT_INT_ST2_MASK                   (0x1U << SARADC_HT_INT_ST_HT_INT_ST2_SHIFT)                  /* 0x00000004 */
#define SARADC_HT_INT_ST_HT_INT_ST3_SHIFT                  (3U)
#define SARADC_HT_INT_ST_HT_INT_ST3_MASK                   (0x1U << SARADC_HT_INT_ST_HT_INT_ST3_SHIFT)                  /* 0x00000008 */
#define SARADC_HT_INT_ST_HT_INT_ST4_SHIFT                  (4U)
#define SARADC_HT_INT_ST_HT_INT_ST4_MASK                   (0x1U << SARADC_HT_INT_ST_HT_INT_ST4_SHIFT)                  /* 0x00000010 */
#define SARADC_HT_INT_ST_HT_INT_ST5_SHIFT                  (5U)
#define SARADC_HT_INT_ST_HT_INT_ST5_MASK                   (0x1U << SARADC_HT_INT_ST_HT_INT_ST5_SHIFT)                  /* 0x00000020 */
#define SARADC_HT_INT_ST_HT_INT_ST6_SHIFT                  (6U)
#define SARADC_HT_INT_ST_HT_INT_ST6_MASK                   (0x1U << SARADC_HT_INT_ST_HT_INT_ST6_SHIFT)                  /* 0x00000040 */
#define SARADC_HT_INT_ST_HT_INT_ST7_SHIFT                  (7U)
#define SARADC_HT_INT_ST_HT_INT_ST7_MASK                   (0x1U << SARADC_HT_INT_ST_HT_INT_ST7_SHIFT)                  /* 0x00000080 */
#define SARADC_HT_INT_ST_HT_INT_ST8_SHIFT                  (8U)
#define SARADC_HT_INT_ST_HT_INT_ST8_MASK                   (0x1U << SARADC_HT_INT_ST_HT_INT_ST8_SHIFT)                  /* 0x00000100 */
#define SARADC_HT_INT_ST_HT_INT_ST9_SHIFT                  (9U)
#define SARADC_HT_INT_ST_HT_INT_ST9_MASK                   (0x1U << SARADC_HT_INT_ST_HT_INT_ST9_SHIFT)                  /* 0x00000200 */
#define SARADC_HT_INT_ST_HT_INT_ST10_SHIFT                 (10U)
#define SARADC_HT_INT_ST_HT_INT_ST10_MASK                  (0x1U << SARADC_HT_INT_ST_HT_INT_ST10_SHIFT)                 /* 0x00000400 */
#define SARADC_HT_INT_ST_HT_INT_ST11_SHIFT                 (11U)
#define SARADC_HT_INT_ST_HT_INT_ST11_MASK                  (0x1U << SARADC_HT_INT_ST_HT_INT_ST11_SHIFT)                 /* 0x00000800 */
#define SARADC_HT_INT_ST_HT_INT_ST12_SHIFT                 (12U)
#define SARADC_HT_INT_ST_HT_INT_ST12_MASK                  (0x1U << SARADC_HT_INT_ST_HT_INT_ST12_SHIFT)                 /* 0x00001000 */
#define SARADC_HT_INT_ST_HT_INT_ST13_SHIFT                 (13U)
#define SARADC_HT_INT_ST_HT_INT_ST13_MASK                  (0x1U << SARADC_HT_INT_ST_HT_INT_ST13_SHIFT)                 /* 0x00002000 */
#define SARADC_HT_INT_ST_HT_INT_ST14_SHIFT                 (14U)
#define SARADC_HT_INT_ST_HT_INT_ST14_MASK                  (0x1U << SARADC_HT_INT_ST_HT_INT_ST14_SHIFT)                 /* 0x00004000 */
#define SARADC_HT_INT_ST_HT_INT_ST15_SHIFT                 (15U)
#define SARADC_HT_INT_ST_HT_INT_ST15_MASK                  (0x1U << SARADC_HT_INT_ST_HT_INT_ST15_SHIFT)                 /* 0x00008000 */
/* LT_INT_ST */
#define SARADC_LT_INT_ST_OFFSET                            (0x118U)
#define SARADC_LT_INT_ST_LT_INT_ST0_SHIFT                  (0U)
#define SARADC_LT_INT_ST_LT_INT_ST0_MASK                   (0x1U << SARADC_LT_INT_ST_LT_INT_ST0_SHIFT)                  /* 0x00000001 */
#define SARADC_LT_INT_ST_LT_INT_ST1_SHIFT                  (1U)
#define SARADC_LT_INT_ST_LT_INT_ST1_MASK                   (0x1U << SARADC_LT_INT_ST_LT_INT_ST1_SHIFT)                  /* 0x00000002 */
#define SARADC_LT_INT_ST_LT_INT_ST2_SHIFT                  (2U)
#define SARADC_LT_INT_ST_LT_INT_ST2_MASK                   (0x1U << SARADC_LT_INT_ST_LT_INT_ST2_SHIFT)                  /* 0x00000004 */
#define SARADC_LT_INT_ST_LT_INT_ST3_SHIFT                  (3U)
#define SARADC_LT_INT_ST_LT_INT_ST3_MASK                   (0x1U << SARADC_LT_INT_ST_LT_INT_ST3_SHIFT)                  /* 0x00000008 */
#define SARADC_LT_INT_ST_LT_INT_ST4_SHIFT                  (4U)
#define SARADC_LT_INT_ST_LT_INT_ST4_MASK                   (0x1U << SARADC_LT_INT_ST_LT_INT_ST4_SHIFT)                  /* 0x00000010 */
#define SARADC_LT_INT_ST_LT_INT_ST5_SHIFT                  (5U)
#define SARADC_LT_INT_ST_LT_INT_ST5_MASK                   (0x1U << SARADC_LT_INT_ST_LT_INT_ST5_SHIFT)                  /* 0x00000020 */
#define SARADC_LT_INT_ST_LT_INT_ST6_SHIFT                  (6U)
#define SARADC_LT_INT_ST_LT_INT_ST6_MASK                   (0x1U << SARADC_LT_INT_ST_LT_INT_ST6_SHIFT)                  /* 0x00000040 */
#define SARADC_LT_INT_ST_LT_INT_ST7_SHIFT                  (7U)
#define SARADC_LT_INT_ST_LT_INT_ST7_MASK                   (0x1U << SARADC_LT_INT_ST_LT_INT_ST7_SHIFT)                  /* 0x00000080 */
#define SARADC_LT_INT_ST_LT_INT_ST8_SHIFT                  (8U)
#define SARADC_LT_INT_ST_LT_INT_ST8_MASK                   (0x1U << SARADC_LT_INT_ST_LT_INT_ST8_SHIFT)                  /* 0x00000100 */
#define SARADC_LT_INT_ST_LT_INT_ST9_SHIFT                  (9U)
#define SARADC_LT_INT_ST_LT_INT_ST9_MASK                   (0x1U << SARADC_LT_INT_ST_LT_INT_ST9_SHIFT)                  /* 0x00000200 */
#define SARADC_LT_INT_ST_LT_INT_ST10_SHIFT                 (10U)
#define SARADC_LT_INT_ST_LT_INT_ST10_MASK                  (0x1U << SARADC_LT_INT_ST_LT_INT_ST10_SHIFT)                 /* 0x00000400 */
#define SARADC_LT_INT_ST_LT_INT_ST11_SHIFT                 (11U)
#define SARADC_LT_INT_ST_LT_INT_ST11_MASK                  (0x1U << SARADC_LT_INT_ST_LT_INT_ST11_SHIFT)                 /* 0x00000800 */
#define SARADC_LT_INT_ST_LT_INT_ST12_SHIFT                 (12U)
#define SARADC_LT_INT_ST_LT_INT_ST12_MASK                  (0x1U << SARADC_LT_INT_ST_LT_INT_ST12_SHIFT)                 /* 0x00001000 */
#define SARADC_LT_INT_ST_LT_INT_ST13_SHIFT                 (13U)
#define SARADC_LT_INT_ST_LT_INT_ST13_MASK                  (0x1U << SARADC_LT_INT_ST_LT_INT_ST13_SHIFT)                 /* 0x00002000 */
#define SARADC_LT_INT_ST_LT_INT_ST14_SHIFT                 (14U)
#define SARADC_LT_INT_ST_LT_INT_ST14_MASK                  (0x1U << SARADC_LT_INT_ST_LT_INT_ST14_SHIFT)                 /* 0x00004000 */
#define SARADC_LT_INT_ST_LT_INT_ST15_SHIFT                 (15U)
#define SARADC_LT_INT_ST_LT_INT_ST15_MASK                  (0x1U << SARADC_LT_INT_ST_LT_INT_ST15_SHIFT)                 /* 0x00008000 */
/* MT_INT_ST */
#define SARADC_MT_INT_ST_OFFSET                            (0x11CU)
#define SARADC_MT_INT_ST_MT_INT_ST0_SHIFT                  (0U)
#define SARADC_MT_INT_ST_MT_INT_ST0_MASK                   (0x1U << SARADC_MT_INT_ST_MT_INT_ST0_SHIFT)                  /* 0x00000001 */
#define SARADC_MT_INT_ST_MT_INT_ST1_SHIFT                  (1U)
#define SARADC_MT_INT_ST_MT_INT_ST1_MASK                   (0x1U << SARADC_MT_INT_ST_MT_INT_ST1_SHIFT)                  /* 0x00000002 */
#define SARADC_MT_INT_ST_MT_INT_ST2_SHIFT                  (2U)
#define SARADC_MT_INT_ST_MT_INT_ST2_MASK                   (0x1U << SARADC_MT_INT_ST_MT_INT_ST2_SHIFT)                  /* 0x00000004 */
#define SARADC_MT_INT_ST_MT_INT_ST3_SHIFT                  (3U)
#define SARADC_MT_INT_ST_MT_INT_ST3_MASK                   (0x1U << SARADC_MT_INT_ST_MT_INT_ST3_SHIFT)                  /* 0x00000008 */
#define SARADC_MT_INT_ST_MT_INT_ST4_SHIFT                  (4U)
#define SARADC_MT_INT_ST_MT_INT_ST4_MASK                   (0x1U << SARADC_MT_INT_ST_MT_INT_ST4_SHIFT)                  /* 0x00000010 */
#define SARADC_MT_INT_ST_MT_INT_ST5_SHIFT                  (5U)
#define SARADC_MT_INT_ST_MT_INT_ST5_MASK                   (0x1U << SARADC_MT_INT_ST_MT_INT_ST5_SHIFT)                  /* 0x00000020 */
#define SARADC_MT_INT_ST_MT_INT_ST6_SHIFT                  (6U)
#define SARADC_MT_INT_ST_MT_INT_ST6_MASK                   (0x1U << SARADC_MT_INT_ST_MT_INT_ST6_SHIFT)                  /* 0x00000040 */
#define SARADC_MT_INT_ST_MT_INT_ST7_SHIFT                  (7U)
#define SARADC_MT_INT_ST_MT_INT_ST7_MASK                   (0x1U << SARADC_MT_INT_ST_MT_INT_ST7_SHIFT)                  /* 0x00000080 */
#define SARADC_MT_INT_ST_MT_INT_ST8_SHIFT                  (8U)
#define SARADC_MT_INT_ST_MT_INT_ST8_MASK                   (0x1U << SARADC_MT_INT_ST_MT_INT_ST8_SHIFT)                  /* 0x00000100 */
#define SARADC_MT_INT_ST_MT_INT_ST9_SHIFT                  (9U)
#define SARADC_MT_INT_ST_MT_INT_ST9_MASK                   (0x1U << SARADC_MT_INT_ST_MT_INT_ST9_SHIFT)                  /* 0x00000200 */
#define SARADC_MT_INT_ST_MT_INT_ST10_SHIFT                 (10U)
#define SARADC_MT_INT_ST_MT_INT_ST10_MASK                  (0x1U << SARADC_MT_INT_ST_MT_INT_ST10_SHIFT)                 /* 0x00000400 */
#define SARADC_MT_INT_ST_MT_INT_ST11_SHIFT                 (11U)
#define SARADC_MT_INT_ST_MT_INT_ST11_MASK                  (0x1U << SARADC_MT_INT_ST_MT_INT_ST11_SHIFT)                 /* 0x00000800 */
#define SARADC_MT_INT_ST_MT_INT_ST12_SHIFT                 (12U)
#define SARADC_MT_INT_ST_MT_INT_ST12_MASK                  (0x1U << SARADC_MT_INT_ST_MT_INT_ST12_SHIFT)                 /* 0x00001000 */
#define SARADC_MT_INT_ST_MT_INT_ST13_SHIFT                 (13U)
#define SARADC_MT_INT_ST_MT_INT_ST13_MASK                  (0x1U << SARADC_MT_INT_ST_MT_INT_ST13_SHIFT)                 /* 0x00002000 */
#define SARADC_MT_INT_ST_MT_INT_ST14_SHIFT                 (14U)
#define SARADC_MT_INT_ST_MT_INT_ST14_MASK                  (0x1U << SARADC_MT_INT_ST_MT_INT_ST14_SHIFT)                 /* 0x00004000 */
#define SARADC_MT_INT_ST_MT_INT_ST15_SHIFT                 (15U)
#define SARADC_MT_INT_ST_MT_INT_ST15_MASK                  (0x1U << SARADC_MT_INT_ST_MT_INT_ST15_SHIFT)                 /* 0x00008000 */
/* DATA0 */
#define SARADC_DATA0_OFFSET                                (0x120U)
#define SARADC_DATA0                                       (0x0U)
#define SARADC_DATA0_DATA0_SHIFT                           (0U)
#define SARADC_DATA0_DATA0_MASK                            (0xFFFU << SARADC_DATA0_DATA0_SHIFT)                         /* 0x00000FFF */
/* DATA1 */
#define SARADC_DATA1_OFFSET                                (0x124U)
#define SARADC_DATA1                                       (0x0U)
#define SARADC_DATA1_DATA1_SHIFT                           (0U)
#define SARADC_DATA1_DATA1_MASK                            (0xFFFU << SARADC_DATA1_DATA1_SHIFT)                         /* 0x00000FFF */
/* DATA2 */
#define SARADC_DATA2_OFFSET                                (0x128U)
#define SARADC_DATA2                                       (0x0U)
#define SARADC_DATA2_DATA2_SHIFT                           (0U)
#define SARADC_DATA2_DATA2_MASK                            (0xFFFU << SARADC_DATA2_DATA2_SHIFT)                         /* 0x00000FFF */
/* DATA3 */
#define SARADC_DATA3_OFFSET                                (0x12CU)
#define SARADC_DATA3                                       (0x0U)
#define SARADC_DATA3_DATA3_SHIFT                           (0U)
#define SARADC_DATA3_DATA3_MASK                            (0xFFFU << SARADC_DATA3_DATA3_SHIFT)                         /* 0x00000FFF */
/* DATA4 */
#define SARADC_DATA4_OFFSET                                (0x130U)
#define SARADC_DATA4                                       (0x0U)
#define SARADC_DATA4_DATA4_SHIFT                           (0U)
#define SARADC_DATA4_DATA4_MASK                            (0xFFFU << SARADC_DATA4_DATA4_SHIFT)                         /* 0x00000FFF */
/* DATA5 */
#define SARADC_DATA5_OFFSET                                (0x134U)
#define SARADC_DATA5                                       (0x0U)
#define SARADC_DATA5_DATA5_SHIFT                           (0U)
#define SARADC_DATA5_DATA5_MASK                            (0xFFFU << SARADC_DATA5_DATA5_SHIFT)                         /* 0x00000FFF */
/* DATA6 */
#define SARADC_DATA6_OFFSET                                (0x138U)
#define SARADC_DATA6                                       (0x0U)
#define SARADC_DATA6_DATA6_SHIFT                           (0U)
#define SARADC_DATA6_DATA6_MASK                            (0xFFFU << SARADC_DATA6_DATA6_SHIFT)                         /* 0x00000FFF */
/* DATA7 */
#define SARADC_DATA7_OFFSET                                (0x13CU)
#define SARADC_DATA7                                       (0x0U)
#define SARADC_DATA7_DATA7_SHIFT                           (0U)
#define SARADC_DATA7_DATA7_MASK                            (0xFFFU << SARADC_DATA7_DATA7_SHIFT)                         /* 0x00000FFF */
/* DATA8 */
#define SARADC_DATA8_OFFSET                                (0x140U)
#define SARADC_DATA8                                       (0x0U)
#define SARADC_DATA8_DATA8_SHIFT                           (0U)
#define SARADC_DATA8_DATA8_MASK                            (0xFFFU << SARADC_DATA8_DATA8_SHIFT)                         /* 0x00000FFF */
/* DATA9 */
#define SARADC_DATA9_OFFSET                                (0x144U)
#define SARADC_DATA9                                       (0x0U)
#define SARADC_DATA9_DATA9_SHIFT                           (0U)
#define SARADC_DATA9_DATA9_MASK                            (0xFFFU << SARADC_DATA9_DATA9_SHIFT)                         /* 0x00000FFF */
/* DATA10 */
#define SARADC_DATA10_OFFSET                               (0x148U)
#define SARADC_DATA10                                      (0x0U)
#define SARADC_DATA10_DATA10_SHIFT                         (0U)
#define SARADC_DATA10_DATA10_MASK                          (0xFFFU << SARADC_DATA10_DATA10_SHIFT)                       /* 0x00000FFF */
/* DATA11 */
#define SARADC_DATA11_OFFSET                               (0x14CU)
#define SARADC_DATA11                                      (0x0U)
#define SARADC_DATA11_DATA11_SHIFT                         (0U)
#define SARADC_DATA11_DATA11_MASK                          (0xFFFU << SARADC_DATA11_DATA11_SHIFT)                       /* 0x00000FFF */
/* DATA12 */
#define SARADC_DATA12_OFFSET                               (0x150U)
#define SARADC_DATA12                                      (0x0U)
#define SARADC_DATA12_DATA12_SHIFT                         (0U)
#define SARADC_DATA12_DATA12_MASK                          (0xFFFU << SARADC_DATA12_DATA12_SHIFT)                       /* 0x00000FFF */
/* DATA13 */
#define SARADC_DATA13_OFFSET                               (0x154U)
#define SARADC_DATA13                                      (0x0U)
#define SARADC_DATA13_DATA13_SHIFT                         (0U)
#define SARADC_DATA13_DATA13_MASK                          (0xFFFU << SARADC_DATA13_DATA13_SHIFT)                       /* 0x00000FFF */
/* DATA14 */
#define SARADC_DATA14_OFFSET                               (0x158U)
#define SARADC_DATA14                                      (0x0U)
#define SARADC_DATA14_DATA14_SHIFT                         (0U)
#define SARADC_DATA14_DATA14_MASK                          (0xFFFU << SARADC_DATA14_DATA14_SHIFT)                       /* 0x00000FFF */
/* DATA15 */
#define SARADC_DATA15_OFFSET                               (0x15CU)
#define SARADC_DATA15                                      (0x0U)
#define SARADC_DATA15_DATA15_SHIFT                         (0U)
#define SARADC_DATA15_DATA15_MASK                          (0xFFFU << SARADC_DATA15_DATA15_SHIFT)                       /* 0x00000FFF */
/* AUTO_CH_EN */
#define SARADC_AUTO_CH_EN_OFFSET                           (0x160U)
#define SARADC_AUTO_CH_EN_AUTO_CH_EN_SHIFT                 (0U)
#define SARADC_AUTO_CH_EN_AUTO_CH_EN_MASK                  (0xFFFFU << SARADC_AUTO_CH_EN_AUTO_CH_EN_SHIFT)              /* 0x0000FFFF */
/*****************************************ACODEC*****************************************/
/* ADC0 */
#define ACODEC_ADC0_OFFSET                                 (0x8U)
#define ACODEC_ADC0_ADC_PWD_SHIFT                          (0U)
#define ACODEC_ADC0_ADC_PWD_MASK                           (0x1U << ACODEC_ADC0_ADC_PWD_SHIFT)                          /* 0x00000001 */
#define ACODEC_ADC0_ADC_ZERO_SHIFT                         (1U)
#define ACODEC_ADC0_ADC_ZERO_MASK                          (0x1U << ACODEC_ADC0_ADC_ZERO_SHIFT)                         /* 0x00000002 */
#define ACODEC_ADC0_ADC_METH_CTRL_SHIFT                    (2U)
#define ACODEC_ADC0_ADC_METH_CTRL_MASK                     (0x3U << ACODEC_ADC0_ADC_METH_CTRL_SHIFT)                    /* 0x0000000C */
#define ACODEC_ADC0_ADC_DELAY_INTSEL_SHIFT                 (4U)
#define ACODEC_ADC0_ADC_DELAY_INTSEL_MASK                  (0x3U << ACODEC_ADC0_ADC_DELAY_INTSEL_SHIFT)                 /* 0x00000030 */
#define ACODEC_ADC0_ADC_DELAY_CLKSEL_SHIFT                 (6U)
#define ACODEC_ADC0_ADC_DELAY_CLKSEL_MASK                  (0x3U << ACODEC_ADC0_ADC_DELAY_CLKSEL_SHIFT)                 /* 0x000000C0 */
/* ADC1 */
#define ACODEC_ADC1_OFFSET                                 (0xCU)
#define ACODEC_ADC1_ADC_IBOP1_CTRL_SHIFT                   (0U)
#define ACODEC_ADC1_ADC_IBOP1_CTRL_MASK                    (0x3U << ACODEC_ADC1_ADC_IBOP1_CTRL_SHIFT)                   /* 0x00000003 */
#define ACODEC_ADC1_ADC_IBOP2_INC_SHIFT                    (2U)
#define ACODEC_ADC1_ADC_IBOP2_INC_MASK                     (0x1U << ACODEC_ADC1_ADC_IBOP2_INC_SHIFT)                    /* 0x00000004 */
#define ACODEC_ADC1_ADC_IBOP3_INC_SHIFT                    (3U)
#define ACODEC_ADC1_ADC_IBOP3_INC_MASK                     (0x1U << ACODEC_ADC1_ADC_IBOP3_INC_SHIFT)                    /* 0x00000008 */
#define ACODEC_ADC1_ADC_IBCTRL_SHIFT                       (4U)
#define ACODEC_ADC1_ADC_IBCTRL_MASK                        (0x7U << ACODEC_ADC1_ADC_IBCTRL_SHIFT)                       /* 0x00000070 */
#define ACODEC_ADC1_ADC_STOP_RTZ_SHIFT                     (7U)
#define ACODEC_ADC1_ADC_STOP_RTZ_MASK                      (0x1U << ACODEC_ADC1_ADC_STOP_RTZ_SHIFT)                     /* 0x00000080 */
/* ADC2 */
#define ACODEC_ADC2_OFFSET                                 (0x10U)
#define ACODEC_ADC2_ADC_CAPTRIM_SHIFT                      (0U)
#define ACODEC_ADC2_ADC_CAPTRIM_MASK                       (0x7U << ACODEC_ADC2_ADC_CAPTRIM_SHIFT)                      /* 0x00000007 */
#define ACODEC_ADC2_ADC_ELD_OFF_SHIFT                      (3U)
#define ACODEC_ADC2_ADC_ELD_OFF_MASK                       (0x1U << ACODEC_ADC2_ADC_ELD_OFF_SHIFT)                      /* 0x00000008 */
#define ACODEC_ADC2_ADC_CHOP_EN_SHIFT                      (4U)
#define ACODEC_ADC2_ADC_CHOP_EN_MASK                       (0x1U << ACODEC_ADC2_ADC_CHOP_EN_SHIFT)                      /* 0x00000010 */
#define ACODEC_ADC2_ADC_CHOP_SEL_SHIFT                     (5U)
#define ACODEC_ADC2_ADC_CHOP_SEL_MASK                      (0x1U << ACODEC_ADC2_ADC_CHOP_SEL_SHIFT)                     /* 0x00000020 */
#define ACODEC_ADC2_ADC_OUT_SEL_SHIFT                      (6U)
#define ACODEC_ADC2_ADC_OUT_SEL_MASK                       (0x1U << ACODEC_ADC2_ADC_OUT_SEL_SHIFT)                      /* 0x00000040 */
/* MIC_PGA0 */
#define ACODEC_MIC_PGA0_OFFSET                             (0x14U)
#define ACODEC_MIC_PGA0_MIC_PGA_PWD_SHIFT                  (0U)
#define ACODEC_MIC_PGA0_MIC_PGA_PWD_MASK                   (0x1U << ACODEC_MIC_PGA0_MIC_PGA_PWD_SHIFT)                  /* 0x00000001 */
#define ACODEC_MIC_PGA0_MIC_PGA_INPUT_DEC_SHIFT            (1U)
#define ACODEC_MIC_PGA0_MIC_PGA_INPUT_DEC_MASK             (0x3U << ACODEC_MIC_PGA0_MIC_PGA_INPUT_DEC_SHIFT)            /* 0x00000006 */
#define ACODEC_MIC_PGA0_MIC_PGA_GAIN_SHIFT                 (3U)
#define ACODEC_MIC_PGA0_MIC_PGA_GAIN_MASK                  (0x1FU << ACODEC_MIC_PGA0_MIC_PGA_GAIN_SHIFT)                /* 0x000000F8 */
/* MIC_PGA1 */
#define ACODEC_MIC_PGA1_OFFSET                             (0x18U)
#define ACODEC_MIC_PGA1_MIC_PGA_CHOP_SEL_SHIFT             (0U)
#define ACODEC_MIC_PGA1_MIC_PGA_CHOP_SEL_MASK              (0x3U << ACODEC_MIC_PGA1_MIC_PGA_CHOP_SEL_SHIFT)             /* 0x00000003 */
#define ACODEC_MIC_PGA1_MIC_PGA_IBIAS_CTRL_SHIFT           (2U)
#define ACODEC_MIC_PGA1_MIC_PGA_IBIAS_CTRL_MASK            (0x3U << ACODEC_MIC_PGA1_MIC_PGA_IBIAS_CTRL_SHIFT)           /* 0x0000000C */
/* MIC_PGA2 */
#define ACODEC_MIC_PGA2_OFFSET                             (0x1CU)
#define ACODEC_MIC_PGA2_PGA_BUF_GAIN_SEL_SHIFT             (0U)
#define ACODEC_MIC_PGA2_PGA_BUF_GAIN_SEL_MASK              (0x1U << ACODEC_MIC_PGA2_PGA_BUF_GAIN_SEL_SHIFT)             /* 0x00000001 */
#define ACODEC_MIC_PGA2_PGA_BUF_IB_SEL_SHIFT               (1U)
#define ACODEC_MIC_PGA2_PGA_BUF_IB_SEL_MASK                (0x3U << ACODEC_MIC_PGA2_PGA_BUF_IB_SEL_SHIFT)               /* 0x00000006 */
#define ACODEC_MIC_PGA2_PGA_BUF_CHOP_SEL_SHIFT             (3U)
#define ACODEC_MIC_PGA2_PGA_BUF_CHOP_SEL_MASK              (0x3U << ACODEC_MIC_PGA2_PGA_BUF_CHOP_SEL_SHIFT)             /* 0x00000018 */
/* ADC_LDO */
#define ACODEC_ADC_LDO_OFFSET                              (0x20U)
#define ACODEC_ADC_LDO_LDO_EN_SHIFT                        (0U)
#define ACODEC_ADC_LDO_LDO_EN_MASK                         (0x1U << ACODEC_ADC_LDO_LDO_EN_SHIFT)                        /* 0x00000001 */
#define ACODEC_ADC_LDO_LDO_BYPASS_EN_SHIFT                 (1U)
#define ACODEC_ADC_LDO_LDO_BYPASS_EN_MASK                  (0x1U << ACODEC_ADC_LDO_LDO_BYPASS_EN_SHIFT)                 /* 0x00000002 */
#define ACODEC_ADC_LDO_LDO_VSEL_SHIFT                      (2U)
#define ACODEC_ADC_LDO_LDO_VSEL_MASK                       (0x3U << ACODEC_ADC_LDO_LDO_VSEL_SHIFT)                      /* 0x0000000C */
#define ACODEC_ADC_LDO_ADC_IP_EN_SHIFT                     (7U)
#define ACODEC_ADC_LDO_ADC_IP_EN_MASK                      (0x1U << ACODEC_ADC_LDO_ADC_IP_EN_SHIFT)                     /* 0x00000080 */
/* ADC_HK0 */
#define ACODEC_ADC_HK0_OFFSET                              (0x24U)
#define ACODEC_ADC_HK0_HK_HALF_VAG_BUF_SHIFT               (0U)
#define ACODEC_ADC_HK0_HK_HALF_VAG_BUF_MASK                (0x1U << ACODEC_ADC_HK0_HK_HALF_VAG_BUF_SHIFT)               /* 0x00000001 */
#define ACODEC_ADC_HK0_HK_HALF_ADC_BUF_SHIFT               (1U)
#define ACODEC_ADC_HK0_HK_HALF_ADC_BUF_MASK                (0x1U << ACODEC_ADC_HK0_HK_HALF_ADC_BUF_SHIFT)               /* 0x00000002 */
#define ACODEC_ADC_HK0_HK_VAG_BUF_EN_SHIFT                 (2U)
#define ACODEC_ADC_HK0_HK_VAG_BUF_EN_MASK                  (0x1U << ACODEC_ADC_HK0_HK_VAG_BUF_EN_SHIFT)                 /* 0x00000004 */
#define ACODEC_ADC_HK0_HK_ADC_BUF_EN_SHIFT                 (3U)
#define ACODEC_ADC_HK0_HK_ADC_BUF_EN_MASK                  (0x1U << ACODEC_ADC_HK0_HK_ADC_BUF_EN_SHIFT)                 /* 0x00000008 */
#define ACODEC_ADC_HK0_HK_IBIAS_SEL_SHIFT                  (4U)
#define ACODEC_ADC_HK0_HK_IBIAS_SEL_MASK                   (0xFU << ACODEC_ADC_HK0_HK_IBIAS_SEL_SHIFT)                  /* 0x000000F0 */
/* ADC_HK1 */
#define ACODEC_ADC_HK1_OFFSET                              (0x28U)
#define ACODEC_ADC_HK1_HK_VREF_1P2V_SEL_SHIFT              (0U)
#define ACODEC_ADC_HK1_HK_VREF_1P2V_SEL_MASK               (0x3U << ACODEC_ADC_HK1_HK_VREF_1P2V_SEL_SHIFT)              /* 0x00000003 */
#define ACODEC_ADC_HK1_HK_VAG_CUR_SEL_SHIFT                (2U)
#define ACODEC_ADC_HK1_HK_VAG_CUR_SEL_MASK                 (0x3U << ACODEC_ADC_HK1_HK_VAG_CUR_SEL_SHIFT)                /* 0x0000000C */
/* DIG_CLKEN */
#define ACODEC_DIG_CLKEN_OFFSET                            (0x2CU)
#define ACODEC_DIG_CLKEN_ADCSRT_SHIFT                      (0U)
#define ACODEC_DIG_CLKEN_ADCSRT_MASK                       (0x7U << ACODEC_DIG_CLKEN_ADCSRT_SHIFT)                      /* 0x00000007 */
#define ACODEC_DIG_CLKEN_SRST_SHIFT                        (3U)
#define ACODEC_DIG_CLKEN_SRST_MASK                         (0x1U << ACODEC_DIG_CLKEN_SRST_SHIFT)                        /* 0x00000008 */
#define ACODEC_DIG_CLKEN_I2STX_EN_SHIFT                    (4U)
#define ACODEC_DIG_CLKEN_I2STX_EN_MASK                     (0x1U << ACODEC_DIG_CLKEN_I2STX_EN_SHIFT)                    /* 0x00000010 */
#define ACODEC_DIG_CLKEN_ADC_EN_SHIFT                      (5U)
#define ACODEC_DIG_CLKEN_ADC_EN_MASK                       (0x1U << ACODEC_DIG_CLKEN_ADC_EN_SHIFT)                      /* 0x00000020 */
#define ACODEC_DIG_CLKEN_I2STX_CKE_SHIFT                   (6U)
#define ACODEC_DIG_CLKEN_I2STX_CKE_MASK                    (0x1U << ACODEC_DIG_CLKEN_I2STX_CKE_SHIFT)                   /* 0x00000040 */
#define ACODEC_DIG_CLKEN_ADC_CKE_SHIFT                     (7U)
#define ACODEC_DIG_CLKEN_ADC_CKE_MASK                      (0x1U << ACODEC_DIG_CLKEN_ADC_CKE_SHIFT)                     /* 0x00000080 */
/* VOL_CTL */
#define ACODEC_VOL_CTL_OFFSET                              (0x30U)
#define ACODEC_VOL_CTL_ADC_VOLUME_SHIFT                    (0U)
#define ACODEC_VOL_CTL_ADC_VOLUME_MASK                     (0xFFU << ACODEC_VOL_CTL_ADC_VOLUME_SHIFT)                   /* 0x000000FF */
/* ADC_AGC0 */
#define ACODEC_ADC_AGC0_OFFSET                             (0x34U)
#define ACODEC_ADC_AGC0_ADC_AGC_ENA_SHIFT                  (0U)
#define ACODEC_ADC_AGC0_ADC_AGC_ENA_MASK                   (0x1U << ACODEC_ADC_AGC0_ADC_AGC_ENA_SHIFT)                  /* 0x00000001 */
#define ACODEC_ADC_AGC0_ADC_NG_MODE_EN_SHIFT               (1U)
#define ACODEC_ADC_AGC0_ADC_NG_MODE_EN_MASK                (0x1U << ACODEC_ADC_AGC0_ADC_NG_MODE_EN_SHIFT)               /* 0x00000002 */
#define ACODEC_ADC_AGC0_AGC_ZEROCREN_SHIFT                 (2U)
#define ACODEC_ADC_AGC0_AGC_ZEROCREN_MASK                  (0x1U << ACODEC_ADC_AGC0_AGC_ZEROCREN_SHIFT)                 /* 0x00000004 */
#define ACODEC_ADC_AGC0_ADC_BYPS_SHIFT                     (3U)
#define ACODEC_ADC_AGC0_ADC_BYPS_MASK                      (0x1U << ACODEC_ADC_AGC0_ADC_BYPS_SHIFT)                     /* 0x00000008 */
#define ACODEC_ADC_AGC0_ADC_AGC_OFFSET_SHIFT               (4U)
#define ACODEC_ADC_AGC0_ADC_AGC_OFFSET_MASK                (0xFU << ACODEC_ADC_AGC0_ADC_AGC_OFFSET_SHIFT)               /* 0x000000F0 */
/* ADC_AGC1 */
#define ACODEC_ADC_AGC1_OFFSET                             (0x38U)
#define ACODEC_ADC_AGC1_ADC_AGC_OFFSET_SHIFT               (0U)
#define ACODEC_ADC_AGC1_ADC_AGC_OFFSET_MASK                (0x1FU << ACODEC_ADC_AGC1_ADC_AGC_OFFSET_SHIFT)              /* 0x0000001F */
/* ADC_AGC2 */
#define ACODEC_ADC_AGC2_OFFSET                             (0x3CU)
#define ACODEC_ADC_AGC2_ADC_NG_RSSI_DB_SHIFT               (0U)
#define ACODEC_ADC_AGC2_ADC_NG_RSSI_DB_MASK                (0xFFU << ACODEC_ADC_AGC2_ADC_NG_RSSI_DB_SHIFT)              /* 0x000000FF */
/* ADC_AGC3 */
#define ACODEC_ADC_AGC3_OFFSET                             (0x40U)
#define ACODEC_ADC_AGC3_ADC_NG_RSSI_DB_SHIFT               (0U)
#define ACODEC_ADC_AGC3_ADC_NG_RSSI_DB_MASK                (0x7U << ACODEC_ADC_AGC3_ADC_NG_RSSI_DB_SHIFT)               /* 0x00000007 */
#define ACODEC_ADC_AGC3_ADC_NG_PGA_GAIN_SHIFT              (3U)
#define ACODEC_ADC_AGC3_ADC_NG_PGA_GAIN_MASK               (0x1FU << ACODEC_ADC_AGC3_ADC_NG_PGA_GAIN_SHIFT)             /* 0x000000F8 */
/* ADC_AGC4 */
#define ACODEC_ADC_AGC4_OFFSET                             (0x44U)
#define ACODEC_ADC_AGC4_ADC_TAR_DB_SHIFT                   (0U)
#define ACODEC_ADC_AGC4_ADC_TAR_DB_MASK                    (0xFFU << ACODEC_ADC_AGC4_ADC_TAR_DB_SHIFT)                  /* 0x000000FF */
/* ADC_AGC5 */
#define ACODEC_ADC_AGC5_OFFSET                             (0x48U)
#define ACODEC_ADC_AGC5_ADC_TAR_DB_SHIFT                   (0U)
#define ACODEC_ADC_AGC5_ADC_TAR_DB_MASK                    (0x7U << ACODEC_ADC_AGC5_ADC_TAR_DB_SHIFT)                   /* 0x00000007 */
#define ACODEC_ADC_AGC5_ADC_INI_PGA_GAIN_SHIFT             (3U)
#define ACODEC_ADC_AGC5_ADC_INI_PGA_GAIN_MASK              (0x1FU << ACODEC_ADC_AGC5_ADC_INI_PGA_GAIN_SHIFT)            /* 0x000000F8 */
/* ADC_AGC6 */
#define ACODEC_ADC_AGC6_OFFSET                             (0x4CU)
#define ACODEC_ADC_AGC6_ADC_NG_VOL_CTRL_SHIFT              (0U)
#define ACODEC_ADC_AGC6_ADC_NG_VOL_CTRL_MASK               (0xFFU << ACODEC_ADC_AGC6_ADC_NG_VOL_CTRL_SHIFT)             /* 0x000000FF */
/* ADC_AGC7 */
#define ACODEC_ADC_AGC7_OFFSET                             (0x50U)
#define ACODEC_ADC_AGC7_ADC_INI_VOL_CTRL_SHIFT             (0U)
#define ACODEC_ADC_AGC7_ADC_INI_VOL_CTRL_MASK              (0xFFU << ACODEC_ADC_AGC7_ADC_INI_VOL_CTRL_SHIFT)            /* 0x000000FF */
/* ADC_AGC8 */
#define ACODEC_ADC_AGC8_OFFSET                             (0x54U)
#define ACODEC_ADC_AGC8_ADC_POWDET_WIN_SHIFT               (0U)
#define ACODEC_ADC_AGC8_ADC_POWDET_WIN_MASK                (0xFU << ACODEC_ADC_AGC8_ADC_POWDET_WIN_SHIFT)               /* 0x0000000F */
#define ACODEC_ADC_AGC8_ADC_PRATTRATE_WIN_SHIFT            (4U)
#define ACODEC_ADC_AGC8_ADC_PRATTRATE_WIN_MASK             (0xFU << ACODEC_ADC_AGC8_ADC_PRATTRATE_WIN_SHIFT)            /* 0x000000F0 */
/* ADC_STATUS0 */
#define ACODEC_ADC_STATUS0_OFFSET                          (0x58U)
#define ACODEC_ADC_STATUS0                                 (0x0U)
#define ACODEC_ADC_STATUS0_ADCRLV_SHIFT                    (0U)
#define ACODEC_ADC_STATUS0_ADCRLV_MASK                     (0xFFU << ACODEC_ADC_STATUS0_ADCRLV_SHIFT)                   /* 0x000000FF */
/* ADC_STATUS1 */
#define ACODEC_ADC_STATUS1_OFFSET                          (0x5CU)
#define ACODEC_ADC_STATUS1                                 (0x0U)
#define ACODEC_ADC_STATUS1_ADC_PGA_GAIN_R_SHIFT            (0U)
#define ACODEC_ADC_STATUS1_ADC_PGA_GAIN_R_MASK             (0x1FU << ACODEC_ADC_STATUS1_ADC_PGA_GAIN_R_SHIFT)           /* 0x0000001F */
#define ACODEC_ADC_STATUS1_ADC_NGVALID_SHIFT               (5U)
#define ACODEC_ADC_STATUS1_ADC_NGVALID_MASK                (0x1U << ACODEC_ADC_STATUS1_ADC_NGVALID_SHIFT)               /* 0x00000020 */
/* ADC_FILTER */
#define ACODEC_ADC_FILTER_OFFSET                           (0x60U)
#define ACODEC_ADC_FILTER_CICCOMP_ENA32_SHIFT              (0U)
#define ACODEC_ADC_FILTER_CICCOMP_ENA32_MASK               (0x1U << ACODEC_ADC_FILTER_CICCOMP_ENA32_SHIFT)              /* 0x00000001 */
#define ACODEC_ADC_FILTER_CICCOMP_ENA64_SHIFT              (1U)
#define ACODEC_ADC_FILTER_CICCOMP_ENA64_MASK               (0x1U << ACODEC_ADC_FILTER_CICCOMP_ENA64_SHIFT)              /* 0x00000002 */
#define ACODEC_ADC_FILTER_CICCOMP_CF_SHIFT                 (2U)
#define ACODEC_ADC_FILTER_CICCOMP_CF_MASK                  (0x3U << ACODEC_ADC_FILTER_CICCOMP_CF_SHIFT)                 /* 0x0000000C */
#define ACODEC_ADC_FILTER_HPFL_SHIFT                       (4U)
#define ACODEC_ADC_FILTER_HPFL_MASK                        (0x1U << ACODEC_ADC_FILTER_HPFL_SHIFT)                       /* 0x00000010 */
#define ACODEC_ADC_FILTER_HPF_CF_SHIFT                     (6U)
#define ACODEC_ADC_FILTER_HPF_CF_MASK                      (0x3U << ACODEC_ADC_FILTER_HPF_CF_SHIFT)                     /* 0x000000C0 */
/* I2S_CKM */
#define ACODEC_I2S_CKM_OFFSET                              (0x64U)
#define ACODEC_I2S_CKM_I2S_MST_SHIFT                       (0U)
#define ACODEC_I2S_CKM_I2S_MST_MASK                        (0x1U << ACODEC_I2S_CKM_I2S_MST_SHIFT)                       /* 0x00000001 */
#define ACODEC_I2S_CKM_SCK_P_SHIFT                         (1U)
#define ACODEC_I2S_CKM_SCK_P_MASK                          (0x1U << ACODEC_I2S_CKM_SCK_P_SHIFT)                         /* 0x00000002 */
#define ACODEC_I2S_CKM_SCK_EN_SHIFT                        (2U)
#define ACODEC_I2S_CKM_SCK_EN_MASK                         (0x1U << ACODEC_I2S_CKM_SCK_EN_SHIFT)                        /* 0x00000004 */
#define ACODEC_I2S_CKM_SCK_DIV_SHIFT                       (4U)
#define ACODEC_I2S_CKM_SCK_DIV_MASK                        (0xFU << ACODEC_I2S_CKM_SCK_DIV_SHIFT)                       /* 0x000000F0 */
/* I2S_TXCR0 */
#define ACODEC_I2S_TXCR0_OFFSET                            (0x68U)
#define ACODEC_I2S_TXCR0_TXRL_P_SHIFT                      (0U)
#define ACODEC_I2S_TXCR0_TXRL_P_MASK                       (0x1U << ACODEC_I2S_TXCR0_TXRL_P_SHIFT)                      /* 0x00000001 */
#define ACODEC_I2S_TXCR0_SCKD_TX_SHIFT                     (1U)
#define ACODEC_I2S_TXCR0_SCKD_TX_MASK                      (0x3U << ACODEC_I2S_TXCR0_SCKD_TX_SHIFT)                     /* 0x00000006 */
#define ACODEC_I2S_TXCR0_VDW_TX_SHIFT                      (3U)
#define ACODEC_I2S_TXCR0_VDW_TX_MASK                       (0x1FU << ACODEC_I2S_TXCR0_VDW_TX_SHIFT)                     /* 0x000000F8 */
/* I2S_TXCR1 */
#define ACODEC_I2S_TXCR1_OFFSET                            (0x6CU)
#define ACODEC_I2S_TXCR1_LSB_TX_SHIFT                      (0U)
#define ACODEC_I2S_TXCR1_LSB_TX_MASK                       (0x1U << ACODEC_I2S_TXCR1_LSB_TX_SHIFT)                      /* 0x00000001 */
#define ACODEC_I2S_TXCR1_EXRL_TX_SHIFT                     (1U)
#define ACODEC_I2S_TXCR1_EXRL_TX_MASK                      (0x1U << ACODEC_I2S_TXCR1_EXRL_TX_SHIFT)                     /* 0x00000002 */
#define ACODEC_I2S_TXCR1_IBM_TX_SHIFT                      (2U)
#define ACODEC_I2S_TXCR1_IBM_TX_MASK                       (0x3U << ACODEC_I2S_TXCR1_IBM_TX_SHIFT)                      /* 0x0000000C */
#define ACODEC_I2S_TXCR1_PBM_TX_SHIFT                      (4U)
#define ACODEC_I2S_TXCR1_PBM_TX_MASK                       (0x3U << ACODEC_I2S_TXCR1_PBM_TX_SHIFT)                      /* 0x00000030 */
#define ACODEC_I2S_TXCR1_TFS_TX_SHIFT                      (6U)
#define ACODEC_I2S_TXCR1_TFS_TX_MASK                       (0x1U << ACODEC_I2S_TXCR1_TFS_TX_SHIFT)                      /* 0x00000040 */
/* I2S_TXCMD */
#define ACODEC_I2S_TXCMD_OFFSET                            (0x70U)
#define ACODEC_I2S_TXCMD_RCNT_TX_SHIFT                     (0U)
#define ACODEC_I2S_TXCMD_RCNT_TX_MASK                      (0x3FU << ACODEC_I2S_TXCMD_RCNT_TX_SHIFT)                    /* 0x0000003F */
#define ACODEC_I2S_TXCMD_TXC_SHIFT                         (6U)
#define ACODEC_I2S_TXCMD_TXC_MASK                          (0x1U << ACODEC_I2S_TXCMD_TXC_SHIFT)                         /* 0x00000040 */
#define ACODEC_I2S_TXCMD_TXS_SHIFT                         (7U)
#define ACODEC_I2S_TXCMD_TXS_MASK                          (0x1U << ACODEC_I2S_TXCMD_TXS_SHIFT)                         /* 0x00000080 */
/******************************************VOP*******************************************/
/* REG_CFG_DONE */
#define VOP_REG_CFG_DONE_OFFSET                            (0x0U)
#define VOP_REG_CFG_DONE_REG_LOAD_GLOBAL_EN_SHIFT          (0U)
#define VOP_REG_CFG_DONE_REG_LOAD_GLOBAL_EN_MASK           (0x1U << VOP_REG_CFG_DONE_REG_LOAD_GLOBAL_EN_SHIFT)          /* 0x00000001 */
#define VOP_REG_CFG_DONE_REG_LOAD_WIN1_EN_SHIFT            (2U)
#define VOP_REG_CFG_DONE_REG_LOAD_WIN1_EN_MASK             (0x1U << VOP_REG_CFG_DONE_REG_LOAD_WIN1_EN_SHIFT)            /* 0x00000004 */
#define VOP_REG_CFG_DONE_REG_LOAD_SYS_EN_SHIFT             (5U)
#define VOP_REG_CFG_DONE_REG_LOAD_SYS_EN_MASK              (0x1U << VOP_REG_CFG_DONE_REG_LOAD_SYS_EN_SHIFT)             /* 0x00000020 */
/* VERSION */
#define VOP_VERSION_OFFSET                                 (0x4U)
#define VOP_VERSION                                        (0x20F0301U)
#define VOP_VERSION_BUILD_SHIFT                            (0U)
#define VOP_VERSION_BUILD_MASK                             (0xFFFFU << VOP_VERSION_BUILD_SHIFT)                         /* 0x0000FFFF */
#define VOP_VERSION_MINOR_SHIFT                            (16U)
#define VOP_VERSION_MINOR_MASK                             (0xFFU << VOP_VERSION_MINOR_SHIFT)                           /* 0x00FF0000 */
#define VOP_VERSION_MAJOR_SHIFT                            (24U)
#define VOP_VERSION_MAJOR_MASK                             (0xFFU << VOP_VERSION_MAJOR_SHIFT)                           /* 0xFF000000 */
/* DSP_BG */
#define VOP_DSP_BG_OFFSET                                  (0x8U)
#define VOP_DSP_BG_DSP_BG_BLUE_SHIFT                       (0U)
#define VOP_DSP_BG_DSP_BG_BLUE_MASK                        (0xFFU << VOP_DSP_BG_DSP_BG_BLUE_SHIFT)                      /* 0x000000FF */
#define VOP_DSP_BG_DSP_BG_GREEN_SHIFT                      (8U)
#define VOP_DSP_BG_DSP_BG_GREEN_MASK                       (0xFFU << VOP_DSP_BG_DSP_BG_GREEN_SHIFT)                     /* 0x0000FF00 */
#define VOP_DSP_BG_DSP_BG_RED_SHIFT                        (16U)
#define VOP_DSP_BG_DSP_BG_RED_MASK                         (0xFFU << VOP_DSP_BG_DSP_BG_RED_SHIFT)                       /* 0x00FF0000 */
/* MCU */
#define VOP_MCU_OFFSET                                     (0xCU)
#define VOP_MCU_MCU_PIX_TOTAL_SHIFT                        (0U)
#define VOP_MCU_MCU_PIX_TOTAL_MASK                         (0x3FU << VOP_MCU_MCU_PIX_TOTAL_SHIFT)                       /* 0x0000003F */
#define VOP_MCU_MCU_CS_PST_SHIFT                           (6U)
#define VOP_MCU_MCU_CS_PST_MASK                            (0xFU << VOP_MCU_MCU_CS_PST_SHIFT)                           /* 0x000003C0 */
#define VOP_MCU_MCU_CS_PEND_SHIFT                          (10U)
#define VOP_MCU_MCU_CS_PEND_MASK                           (0x3FU << VOP_MCU_MCU_CS_PEND_SHIFT)                         /* 0x0000FC00 */
#define VOP_MCU_MCU_RW_PST_SHIFT                           (16U)
#define VOP_MCU_MCU_RW_PST_MASK                            (0xFU << VOP_MCU_MCU_RW_PST_SHIFT)                           /* 0x000F0000 */
#define VOP_MCU_MCU_RW_PEND_SHIFT                          (20U)
#define VOP_MCU_MCU_RW_PEND_MASK                           (0x3FU << VOP_MCU_MCU_RW_PEND_SHIFT)                         /* 0x03F00000 */
#define VOP_MCU_MCU_CLK_SEL_SHIFT                          (26U)
#define VOP_MCU_MCU_CLK_SEL_MASK                           (0x1U << VOP_MCU_MCU_CLK_SEL_SHIFT)                          /* 0x04000000 */
#define VOP_MCU_MCU_HOLD_MODE_SHIFT                        (27U)
#define VOP_MCU_MCU_HOLD_MODE_MASK                         (0x1U << VOP_MCU_MCU_HOLD_MODE_SHIFT)                        /* 0x08000000 */
#define VOP_MCU_MCU_FRAME_ST_SHIFT                         (28U)
#define VOP_MCU_MCU_FRAME_ST_MASK                          (0x1U << VOP_MCU_MCU_FRAME_ST_SHIFT)                         /* 0x10000000 */
#define VOP_MCU_MCU_RS_SHIFT                               (29U)
#define VOP_MCU_MCU_RS_MASK                                (0x1U << VOP_MCU_MCU_RS_SHIFT)                               /* 0x20000000 */
#define VOP_MCU_MCU_BYPASS_SHIFT                           (30U)
#define VOP_MCU_MCU_BYPASS_MASK                            (0x1U << VOP_MCU_MCU_BYPASS_SHIFT)                           /* 0x40000000 */
#define VOP_MCU_MCU_TYPE_SHIFT                             (31U)
#define VOP_MCU_MCU_TYPE_MASK                              (0x1U << VOP_MCU_MCU_TYPE_SHIFT)                             /* 0x80000000 */
/* SYS_CTRL0 */
#define VOP_SYS_CTRL0_OFFSET                               (0x10U)
#define VOP_SYS_CTRL0_RESERVED_SHIFT                       (0U)
#define VOP_SYS_CTRL0_RESERVED_MASK                        (0xFFFFFFFFU << VOP_SYS_CTRL0_RESERVED_SHIFT)                /* 0xFFFFFFFF */
/* SYS_CTRL1 */
#define VOP_SYS_CTRL1_OFFSET                               (0x14U)
#define VOP_SYS_CTRL1_SW_NOC_QOS_EN_SHIFT                  (0U)
#define VOP_SYS_CTRL1_SW_NOC_QOS_EN_MASK                   (0x1U << VOP_SYS_CTRL1_SW_NOC_QOS_EN_SHIFT)                  /* 0x00000001 */
#define VOP_SYS_CTRL1_SW_NOC_QOS_VALUE_SHIFT               (1U)
#define VOP_SYS_CTRL1_SW_NOC_QOS_VALUE_MASK                (0x3U << VOP_SYS_CTRL1_SW_NOC_QOS_VALUE_SHIFT)               /* 0x00000006 */
#define VOP_SYS_CTRL1_SW_NOC_HURRY_EN_SHIFT                (4U)
#define VOP_SYS_CTRL1_SW_NOC_HURRY_EN_MASK                 (0x1U << VOP_SYS_CTRL1_SW_NOC_HURRY_EN_SHIFT)                /* 0x00000010 */
#define VOP_SYS_CTRL1_SW_NOC_HURRY_VALUE_SHIFT             (5U)
#define VOP_SYS_CTRL1_SW_NOC_HURRY_VALUE_MASK              (0x3U << VOP_SYS_CTRL1_SW_NOC_HURRY_VALUE_SHIFT)             /* 0x00000060 */
#define VOP_SYS_CTRL1_SW_NOC_HURRY_THRESHOLD_SHIFT         (8U)
#define VOP_SYS_CTRL1_SW_NOC_HURRY_THRESHOLD_MASK          (0xFU << VOP_SYS_CTRL1_SW_NOC_HURRY_THRESHOLD_SHIFT)         /* 0x00000F00 */
#define VOP_SYS_CTRL1_SW_AXI_MAX_OUTSTAND_EN_SHIFT         (12U)
#define VOP_SYS_CTRL1_SW_AXI_MAX_OUTSTAND_EN_MASK          (0x1U << VOP_SYS_CTRL1_SW_AXI_MAX_OUTSTAND_EN_SHIFT)         /* 0x00001000 */
#define VOP_SYS_CTRL1_SW_AXI_MAX_OUTSTAND_NUM_SHIFT        (16U)
#define VOP_SYS_CTRL1_SW_AXI_MAX_OUTSTAND_NUM_MASK         (0x1FU << VOP_SYS_CTRL1_SW_AXI_MAX_OUTSTAND_NUM_SHIFT)       /* 0x001F0000 */
/* SYS_CTRL2 */
#define VOP_SYS_CTRL2_OFFSET                               (0x18U)
#define VOP_SYS_CTRL2_IMD_AUTO_GATING_EN_SHIFT             (0U)
#define VOP_SYS_CTRL2_IMD_AUTO_GATING_EN_MASK              (0x1U << VOP_SYS_CTRL2_IMD_AUTO_GATING_EN_SHIFT)             /* 0x00000001 */
#define VOP_SYS_CTRL2_IMD_VOP_STANDBY_EN_SHIFT             (1U)
#define VOP_SYS_CTRL2_IMD_VOP_STANDBY_EN_MASK              (0x1U << VOP_SYS_CTRL2_IMD_VOP_STANDBY_EN_SHIFT)             /* 0x00000002 */
#define VOP_SYS_CTRL2_IMD_VOP_DMA_STOP_SHIFT               (2U)
#define VOP_SYS_CTRL2_IMD_VOP_DMA_STOP_MASK                (0x1U << VOP_SYS_CTRL2_IMD_VOP_DMA_STOP_SHIFT)               /* 0x00000004 */
#define VOP_SYS_CTRL2_IMD_DSP_OUT_ZERO_SHIFT               (3U)
#define VOP_SYS_CTRL2_IMD_DSP_OUT_ZERO_MASK                (0x1U << VOP_SYS_CTRL2_IMD_DSP_OUT_ZERO_SHIFT)               /* 0x00000008 */
#define VOP_SYS_CTRL2_IMD_YUV_CLIP_SHIFT                   (4U)
#define VOP_SYS_CTRL2_IMD_YUV_CLIP_MASK                    (0x1U << VOP_SYS_CTRL2_IMD_YUV_CLIP_SHIFT)                   /* 0x00000010 */
#define VOP_SYS_CTRL2_IMD_DSP_DATA_OUT_MODE_SHIFT          (6U)
#define VOP_SYS_CTRL2_IMD_DSP_DATA_OUT_MODE_MASK           (0x1U << VOP_SYS_CTRL2_IMD_DSP_DATA_OUT_MODE_SHIFT)          /* 0x00000040 */
#define VOP_SYS_CTRL2_SW_IO_PAD_CLK_SEL_SHIFT              (7U)
#define VOP_SYS_CTRL2_SW_IO_PAD_CLK_SEL_MASK               (0x1U << VOP_SYS_CTRL2_SW_IO_PAD_CLK_SEL_SHIFT)              /* 0x00000080 */
#define VOP_SYS_CTRL2_DCF_IDLE_EN_SHIFT                    (15U)
#define VOP_SYS_CTRL2_DCF_IDLE_EN_MASK                     (0x1U << VOP_SYS_CTRL2_DCF_IDLE_EN_SHIFT)                    /* 0x00008000 */
/* DSP_CTRL0 */
#define VOP_DSP_CTRL0_OFFSET                               (0x20U)
#define VOP_DSP_CTRL0_RGB_DCLK_EN_SHIFT                    (0U)
#define VOP_DSP_CTRL0_RGB_DCLK_EN_MASK                     (0x1U << VOP_DSP_CTRL0_RGB_DCLK_EN_SHIFT)                    /* 0x00000001 */
#define VOP_DSP_CTRL0_RGB_HSYNC_POL_SHIFT                  (2U)
#define VOP_DSP_CTRL0_RGB_HSYNC_POL_MASK                   (0x1U << VOP_DSP_CTRL0_RGB_HSYNC_POL_SHIFT)                  /* 0x00000004 */
#define VOP_DSP_CTRL0_RGB_VSYNC_POL_SHIFT                  (3U)
#define VOP_DSP_CTRL0_RGB_VSYNC_POL_MASK                   (0x1U << VOP_DSP_CTRL0_RGB_VSYNC_POL_SHIFT)                  /* 0x00000008 */
#define VOP_DSP_CTRL0_RGB_DEN_POL_SHIFT                    (4U)
#define VOP_DSP_CTRL0_RGB_DEN_POL_MASK                     (0x1U << VOP_DSP_CTRL0_RGB_DEN_POL_SHIFT)                    /* 0x00000010 */
#define VOP_DSP_CTRL0_SW_BT1120_UV_SWAP_SHIFT              (5U)
#define VOP_DSP_CTRL0_SW_BT1120_UV_SWAP_MASK               (0x1U << VOP_DSP_CTRL0_SW_BT1120_UV_SWAP_SHIFT)              /* 0x00000020 */
#define VOP_DSP_CTRL0_SW_BT656_EN_SHIFT                    (6U)
#define VOP_DSP_CTRL0_SW_BT656_EN_MASK                     (0x1U << VOP_DSP_CTRL0_SW_BT656_EN_SHIFT)                    /* 0x00000040 */
#define VOP_DSP_CTRL0_SW_IMD_CORE_CLK_SEL_SHIFT            (13U)
#define VOP_DSP_CTRL0_SW_IMD_CORE_CLK_SEL_MASK             (0x1U << VOP_DSP_CTRL0_SW_IMD_CORE_CLK_SEL_SHIFT)            /* 0x00002000 */
#define VOP_DSP_CTRL0_MIPI_DCLK_EN_SHIFT                   (24U)
#define VOP_DSP_CTRL0_MIPI_DCLK_EN_MASK                    (0x1U << VOP_DSP_CTRL0_MIPI_DCLK_EN_SHIFT)                   /* 0x01000000 */
#define VOP_DSP_CTRL0_MIPI_HSYNC_POL_SHIFT                 (26U)
#define VOP_DSP_CTRL0_MIPI_HSYNC_POL_MASK                  (0x1U << VOP_DSP_CTRL0_MIPI_HSYNC_POL_SHIFT)                 /* 0x04000000 */
#define VOP_DSP_CTRL0_MIPI_VSYNC_POL_SHIFT                 (27U)
#define VOP_DSP_CTRL0_MIPI_VSYNC_POL_MASK                  (0x1U << VOP_DSP_CTRL0_MIPI_VSYNC_POL_SHIFT)                 /* 0x08000000 */
#define VOP_DSP_CTRL0_MIPI_DEN_POL_SHIFT                   (28U)
#define VOP_DSP_CTRL0_MIPI_DEN_POL_MASK                    (0x1U << VOP_DSP_CTRL0_MIPI_DEN_POL_SHIFT)                   /* 0x10000000 */
#define VOP_DSP_CTRL0_SW_BT1120_YC_SWAP_SHIFT              (30U)
#define VOP_DSP_CTRL0_SW_BT1120_YC_SWAP_MASK               (0x1U << VOP_DSP_CTRL0_SW_BT1120_YC_SWAP_SHIFT)              /* 0x40000000 */
#define VOP_DSP_CTRL0_SW_BT1120_EN_SHIFT                   (31U)
#define VOP_DSP_CTRL0_SW_BT1120_EN_MASK                    (0x1U << VOP_DSP_CTRL0_SW_BT1120_EN_SHIFT)                   /* 0x80000000 */
/* DSP_CTRL1 */
#define VOP_DSP_CTRL1_OFFSET                               (0x24U)
#define VOP_DSP_CTRL1_MCU_REN_SHIFT                        (0U)
#define VOP_DSP_CTRL1_MCU_REN_MASK                         (0x1U << VOP_DSP_CTRL1_MCU_REN_SHIFT)                        /* 0x00000001 */
#define VOP_DSP_CTRL1_MCU_OEN_SEL_SHIFT                    (1U)
#define VOP_DSP_CTRL1_MCU_OEN_SEL_MASK                     (0x1U << VOP_DSP_CTRL1_MCU_OEN_SEL_SHIFT)                    /* 0x00000002 */
/* DSP_CTRL2 */
#define VOP_DSP_CTRL2_OFFSET                               (0x28U)
#define VOP_DSP_CTRL2_DSP_INTERLACE_SHIFT                  (0U)
#define VOP_DSP_CTRL2_DSP_INTERLACE_MASK                   (0x1U << VOP_DSP_CTRL2_DSP_INTERLACE_SHIFT)                  /* 0x00000001 */
#define VOP_DSP_CTRL2_INTERLACE_FIELD_POL_SHIFT            (1U)
#define VOP_DSP_CTRL2_INTERLACE_FIELD_POL_MASK             (0x1U << VOP_DSP_CTRL2_INTERLACE_FIELD_POL_SHIFT)            /* 0x00000002 */
#define VOP_DSP_CTRL2_DITHER_UP_SHIFT                      (2U)
#define VOP_DSP_CTRL2_DITHER_UP_MASK                       (0x1U << VOP_DSP_CTRL2_DITHER_UP_SHIFT)                      /* 0x00000004 */
#define VOP_DSP_CTRL2_SW_OVERLAY_MODE_SHIFT                (4U)
#define VOP_DSP_CTRL2_SW_OVERLAY_MODE_MASK                 (0x1U << VOP_DSP_CTRL2_SW_OVERLAY_MODE_SHIFT)                /* 0x00000010 */
#define VOP_DSP_CTRL2_SW_DSP_LUT_EN_SHIFT                  (5U)
#define VOP_DSP_CTRL2_SW_DSP_LUT_EN_MASK                   (0x1U << VOP_DSP_CTRL2_SW_DSP_LUT_EN_SHIFT)                  /* 0x00000020 */
#define VOP_DSP_CTRL2_DITHER_DOWN_MODE_SHIFT               (6U)
#define VOP_DSP_CTRL2_DITHER_DOWN_MODE_MASK                (0x1U << VOP_DSP_CTRL2_DITHER_DOWN_MODE_SHIFT)               /* 0x00000040 */
#define VOP_DSP_CTRL2_DITHER_DOWN_SEL_SHIFT                (7U)
#define VOP_DSP_CTRL2_DITHER_DOWN_SEL_MASK                 (0x1U << VOP_DSP_CTRL2_DITHER_DOWN_SEL_SHIFT)                /* 0x00000080 */
#define VOP_DSP_CTRL2_DITHER_DOWN_SHIFT                    (8U)
#define VOP_DSP_CTRL2_DITHER_DOWN_MASK                     (0x1U << VOP_DSP_CTRL2_DITHER_DOWN_SHIFT)                    /* 0x00000100 */
#define VOP_DSP_CTRL2_DSP_BG_SWAP_SHIFT                    (9U)
#define VOP_DSP_CTRL2_DSP_BG_SWAP_MASK                     (0x1U << VOP_DSP_CTRL2_DSP_BG_SWAP_SHIFT)                    /* 0x00000200 */
#define VOP_DSP_CTRL2_DSP_RB_SWAP_SHIFT                    (11U)
#define VOP_DSP_CTRL2_DSP_RB_SWAP_MASK                     (0x1U << VOP_DSP_CTRL2_DSP_RB_SWAP_SHIFT)                    /* 0x00000800 */
#define VOP_DSP_CTRL2_DSP_RG_SWAP_SHIFT                    (12U)
#define VOP_DSP_CTRL2_DSP_RG_SWAP_MASK                     (0x1U << VOP_DSP_CTRL2_DSP_RG_SWAP_SHIFT)                    /* 0x00001000 */
#define VOP_DSP_CTRL2_DSP_BLANK_EN_SHIFT                   (14U)
#define VOP_DSP_CTRL2_DSP_BLANK_EN_MASK                    (0x1U << VOP_DSP_CTRL2_DSP_BLANK_EN_SHIFT)                   /* 0x00004000 */
#define VOP_DSP_CTRL2_DSP_BLACK_EN_SHIFT                   (15U)
#define VOP_DSP_CTRL2_DSP_BLACK_EN_MASK                    (0x1U << VOP_DSP_CTRL2_DSP_BLACK_EN_SHIFT)                   /* 0x00008000 */
#define VOP_DSP_CTRL2_DSP_OUT_MODE_SHIFT                   (16U)
#define VOP_DSP_CTRL2_DSP_OUT_MODE_MASK                    (0xFU << VOP_DSP_CTRL2_DSP_OUT_MODE_SHIFT)                   /* 0x000F0000 */
/* VOP_STATUS */
#define VOP_VOP_STATUS_OFFSET                              (0x2CU)
#define VOP_VOP_STATUS_DSP_BLANKING_EN_ASYNC_AFF2_SHIFT    (0U)
#define VOP_VOP_STATUS_DSP_BLANKING_EN_ASYNC_AFF2_MASK     (0x1U << VOP_VOP_STATUS_DSP_BLANKING_EN_ASYNC_AFF2_SHIFT)    /* 0x00000001 */
#define VOP_VOP_STATUS_INT_RAW_DMA_FINISH_SHIFT            (2U)
#define VOP_VOP_STATUS_INT_RAW_DMA_FINISH_MASK             (0x1U << VOP_VOP_STATUS_INT_RAW_DMA_FINISH_SHIFT)            /* 0x00000004 */
#define VOP_VOP_STATUS_DMA_STOP_VALID_SHIFT                (4U)
#define VOP_VOP_STATUS_DMA_STOP_VALID_MASK                 (0x1U << VOP_VOP_STATUS_DMA_STOP_VALID_SHIFT)                /* 0x00000010 */
#define VOP_VOP_STATUS_INTR_DMA_FINISH_MUX_SHIFT           (8U)
#define VOP_VOP_STATUS_INTR_DMA_FINISH_MUX_MASK            (0x1U << VOP_VOP_STATUS_INTR_DMA_FINISH_MUX_SHIFT)           /* 0x00000100 */
#define VOP_VOP_STATUS_INTR_LINE_FLAG0_MUX_SHIFT           (9U)
#define VOP_VOP_STATUS_INTR_LINE_FLAG0_MUX_MASK            (0x1U << VOP_VOP_STATUS_INTR_LINE_FLAG0_MUX_SHIFT)           /* 0x00000200 */
#define VOP_VOP_STATUS_INTR_LINE_FLAG1_MUX_SHIFT           (10U)
#define VOP_VOP_STATUS_INTR_LINE_FLAG1_MUX_MASK            (0x1U << VOP_VOP_STATUS_INTR_LINE_FLAG1_MUX_SHIFT)           /* 0x00000400 */
#define VOP_VOP_STATUS_INTR_POST_LB_ALMOST_FULL_MUX_SHIFT  (12U)
#define VOP_VOP_STATUS_INTR_POST_LB_ALMOST_FULL_MUX_MASK   (0x1U << VOP_VOP_STATUS_INTR_POST_LB_ALMOST_FULL_MUX_SHIFT)  /* 0x00001000 */
#define VOP_VOP_STATUS_INTR_POST_LB_ALMOST_EMTPY_MUX_SHIFT (13U)
#define VOP_VOP_STATUS_INTR_POST_LB_ALMOST_EMTPY_MUX_MASK  (0x1U << VOP_VOP_STATUS_INTR_POST_LB_ALMOST_EMTPY_MUX_SHIFT) /* 0x00002000 */
/* LINE_FLAG */
#define VOP_LINE_FLAG_OFFSET                               (0x30U)
#define VOP_LINE_FLAG_DSP_LINE_FLAG0_NUM_SHIFT             (0U)
#define VOP_LINE_FLAG_DSP_LINE_FLAG0_NUM_MASK              (0xFFFU << VOP_LINE_FLAG_DSP_LINE_FLAG0_NUM_SHIFT)           /* 0x00000FFF */
#define VOP_LINE_FLAG_DSP_LINE_FLAG1_NUM_SHIFT             (16U)
#define VOP_LINE_FLAG_DSP_LINE_FLAG1_NUM_MASK              (0xFFFU << VOP_LINE_FLAG_DSP_LINE_FLAG1_NUM_SHIFT)           /* 0x0FFF0000 */
/* INTR_EN */
#define VOP_INTR_EN_OFFSET                                 (0x34U)
#define VOP_INTR_EN_FS0_INTR_EN_SHIFT                      (0U)
#define VOP_INTR_EN_FS0_INTR_EN_MASK                       (0x1U << VOP_INTR_EN_FS0_INTR_EN_SHIFT)                      /* 0x00000001 */
#define VOP_INTR_EN_FS1_INTR_EN_SHIFT                      (1U)
#define VOP_INTR_EN_FS1_INTR_EN_MASK                       (0x1U << VOP_INTR_EN_FS1_INTR_EN_SHIFT)                      /* 0x00000002 */
#define VOP_INTR_EN_ADDR_SAME_INTR_EN_SHIFT                (2U)
#define VOP_INTR_EN_ADDR_SAME_INTR_EN_MASK                 (0x1U << VOP_INTR_EN_ADDR_SAME_INTR_EN_SHIFT)                /* 0x00000004 */
#define VOP_INTR_EN_LINE_FLAG0_INTR_EN_SHIFT               (3U)
#define VOP_INTR_EN_LINE_FLAG0_INTR_EN_MASK                (0x1U << VOP_INTR_EN_LINE_FLAG0_INTR_EN_SHIFT)               /* 0x00000008 */
#define VOP_INTR_EN_LINE_FLAG1_INTR_EN_SHIFT               (4U)
#define VOP_INTR_EN_LINE_FLAG1_INTR_EN_MASK                (0x1U << VOP_INTR_EN_LINE_FLAG1_INTR_EN_SHIFT)               /* 0x00000010 */
#define VOP_INTR_EN_BUS_ERROR_INTR_EN_SHIFT                (5U)
#define VOP_INTR_EN_BUS_ERROR_INTR_EN_MASK                 (0x1U << VOP_INTR_EN_BUS_ERROR_INTR_EN_SHIFT)                /* 0x00000020 */
#define VOP_INTR_EN_WIN1_EMPTY_INTR_EN_SHIFT               (7U)
#define VOP_INTR_EN_WIN1_EMPTY_INTR_EN_MASK                (0x1U << VOP_INTR_EN_WIN1_EMPTY_INTR_EN_SHIFT)               /* 0x00000080 */
#define VOP_INTR_EN_DSP_HOLD_VALID_INTR_EN_SHIFT           (8U)
#define VOP_INTR_EN_DSP_HOLD_VALID_INTR_EN_MASK            (0x1U << VOP_INTR_EN_DSP_HOLD_VALID_INTR_EN_SHIFT)           /* 0x00000100 */
#define VOP_INTR_EN_DMA_FRM_FSH_INTR_EN_SHIFT              (9U)
#define VOP_INTR_EN_DMA_FRM_FSH_INTR_EN_MASK               (0x1U << VOP_INTR_EN_DMA_FRM_FSH_INTR_EN_SHIFT)              /* 0x00000200 */
#define VOP_INTR_EN_POST_EMPTY_INTR_EN_SHIFT               (11U)
#define VOP_INTR_EN_POST_EMPTY_INTR_EN_MASK                (0x1U << VOP_INTR_EN_POST_EMPTY_INTR_EN_SHIFT)               /* 0x00000800 */
#define VOP_INTR_EN_POST_LB_ALMOST_FULL_INTR_EN_SHIFT      (12U)
#define VOP_INTR_EN_POST_LB_ALMOST_FULL_INTR_EN_MASK       (0x1U << VOP_INTR_EN_POST_LB_ALMOST_FULL_INTR_EN_SHIFT)      /* 0x00001000 */
#define VOP_INTR_EN_POST_LB_ALMOST_EMPTY_INTR_EN_SHIFT     (13U)
#define VOP_INTR_EN_POST_LB_ALMOST_EMPTY_INTR_EN_MASK      (0x1U << VOP_INTR_EN_POST_LB_ALMOST_EMPTY_INTR_EN_SHIFT)     /* 0x00002000 */
/* INTR_CLEAR */
#define VOP_INTR_CLEAR_OFFSET                              (0x38U)
#define VOP_INTR_CLEAR_FS0_INTR_CLR_SHIFT                  (0U)
#define VOP_INTR_CLEAR_FS0_INTR_CLR_MASK                   (0x1U << VOP_INTR_CLEAR_FS0_INTR_CLR_SHIFT)                  /* 0x00000001 */
#define VOP_INTR_CLEAR_FS1_INTR_CLR_SHIFT                  (1U)
#define VOP_INTR_CLEAR_FS1_INTR_CLR_MASK                   (0x1U << VOP_INTR_CLEAR_FS1_INTR_CLR_SHIFT)                  /* 0x00000002 */
#define VOP_INTR_CLEAR_ADDR_SAME_INTR_CLR_SHIFT            (2U)
#define VOP_INTR_CLEAR_ADDR_SAME_INTR_CLR_MASK             (0x1U << VOP_INTR_CLEAR_ADDR_SAME_INTR_CLR_SHIFT)            /* 0x00000004 */
#define VOP_INTR_CLEAR_LINE_FLAG0_INTR_CLR_SHIFT           (3U)
#define VOP_INTR_CLEAR_LINE_FLAG0_INTR_CLR_MASK            (0x1U << VOP_INTR_CLEAR_LINE_FLAG0_INTR_CLR_SHIFT)           /* 0x00000008 */
#define VOP_INTR_CLEAR_LINE_FLAG1_INTR_CLR_SHIFT           (4U)
#define VOP_INTR_CLEAR_LINE_FLAG1_INTR_CLR_MASK            (0x1U << VOP_INTR_CLEAR_LINE_FLAG1_INTR_CLR_SHIFT)           /* 0x00000010 */
#define VOP_INTR_CLEAR_BUS_ERROR_INTR_CLR_SHIFT            (5U)
#define VOP_INTR_CLEAR_BUS_ERROR_INTR_CLR_MASK             (0x1U << VOP_INTR_CLEAR_BUS_ERROR_INTR_CLR_SHIFT)            /* 0x00000020 */
#define VOP_INTR_CLEAR_WIN1_EMPTY_INTR_CLR_SHIFT           (7U)
#define VOP_INTR_CLEAR_WIN1_EMPTY_INTR_CLR_MASK            (0x1U << VOP_INTR_CLEAR_WIN1_EMPTY_INTR_CLR_SHIFT)           /* 0x00000080 */
#define VOP_INTR_CLEAR_DSP_HOLD_VALID_INTR_CLR_SHIFT       (8U)
#define VOP_INTR_CLEAR_DSP_HOLD_VALID_INTR_CLR_MASK        (0x1U << VOP_INTR_CLEAR_DSP_HOLD_VALID_INTR_CLR_SHIFT)       /* 0x00000100 */
#define VOP_INTR_CLEAR_DMA_FRM_FSH_INTR_CLR_SHIFT          (9U)
#define VOP_INTR_CLEAR_DMA_FRM_FSH_INTR_CLR_MASK           (0x1U << VOP_INTR_CLEAR_DMA_FRM_FSH_INTR_CLR_SHIFT)          /* 0x00000200 */
#define VOP_INTR_CLEAR_POST_EMPTY_INTR_CLR_SHIFT           (11U)
#define VOP_INTR_CLEAR_POST_EMPTY_INTR_CLR_MASK            (0x1U << VOP_INTR_CLEAR_POST_EMPTY_INTR_CLR_SHIFT)           /* 0x00000800 */
#define VOP_INTR_CLEAR_POST_LB_ALMOST_FULL_INTR_CLR_SHIFT  (12U)
#define VOP_INTR_CLEAR_POST_LB_ALMOST_FULL_INTR_CLR_MASK   (0x1U << VOP_INTR_CLEAR_POST_LB_ALMOST_FULL_INTR_CLR_SHIFT)  /* 0x00001000 */
#define VOP_INTR_CLEAR_POST_LB_ALMOST_EMPTY_INTR_CLR_SHIFT (13U)
#define VOP_INTR_CLEAR_POST_LB_ALMOST_EMPTY_INTR_CLR_MASK  (0x1U << VOP_INTR_CLEAR_POST_LB_ALMOST_EMPTY_INTR_CLR_SHIFT) /* 0x00002000 */
/* INTR_STATUS */
#define VOP_INTR_STATUS_OFFSET                             (0x3CU)
#define VOP_INTR_STATUS_FS0_INTR_STS_SHIFT                 (0U)
#define VOP_INTR_STATUS_FS0_INTR_STS_MASK                  (0x1U << VOP_INTR_STATUS_FS0_INTR_STS_SHIFT)                 /* 0x00000001 */
#define VOP_INTR_STATUS_FS1_INTR_STS_SHIFT                 (1U)
#define VOP_INTR_STATUS_FS1_INTR_STS_MASK                  (0x1U << VOP_INTR_STATUS_FS1_INTR_STS_SHIFT)                 /* 0x00000002 */
#define VOP_INTR_STATUS_ADDR_SAME_INTR_STS_SHIFT           (2U)
#define VOP_INTR_STATUS_ADDR_SAME_INTR_STS_MASK            (0x1U << VOP_INTR_STATUS_ADDR_SAME_INTR_STS_SHIFT)           /* 0x00000004 */
#define VOP_INTR_STATUS_LINE_FLAG0_INTR_STS_SHIFT          (3U)
#define VOP_INTR_STATUS_LINE_FLAG0_INTR_STS_MASK           (0x1U << VOP_INTR_STATUS_LINE_FLAG0_INTR_STS_SHIFT)          /* 0x00000008 */
#define VOP_INTR_STATUS_LINE_FLAG1_INTR_STS_SHIFT          (4U)
#define VOP_INTR_STATUS_LINE_FLAG1_INTR_STS_MASK           (0x1U << VOP_INTR_STATUS_LINE_FLAG1_INTR_STS_SHIFT)          /* 0x00000010 */
#define VOP_INTR_STATUS_BUS_ERROR_INTR_STS_SHIFT           (5U)
#define VOP_INTR_STATUS_BUS_ERROR_INTR_STS_MASK            (0x1U << VOP_INTR_STATUS_BUS_ERROR_INTR_STS_SHIFT)           /* 0x00000020 */
#define VOP_INTR_STATUS_WIN1_EMPTY_INTR_STS_SHIFT          (7U)
#define VOP_INTR_STATUS_WIN1_EMPTY_INTR_STS_MASK           (0x1U << VOP_INTR_STATUS_WIN1_EMPTY_INTR_STS_SHIFT)          /* 0x00000080 */
#define VOP_INTR_STATUS_DSP_HOLD_VALID_INTR_STS_SHIFT      (8U)
#define VOP_INTR_STATUS_DSP_HOLD_VALID_INTR_STS_MASK       (0x1U << VOP_INTR_STATUS_DSP_HOLD_VALID_INTR_STS_SHIFT)      /* 0x00000100 */
#define VOP_INTR_STATUS_DMA_FRM_FSH_INTR_STS_SHIFT         (9U)
#define VOP_INTR_STATUS_DMA_FRM_FSH_INTR_STS_MASK          (0x1U << VOP_INTR_STATUS_DMA_FRM_FSH_INTR_STS_SHIFT)         /* 0x00000200 */
#define VOP_INTR_STATUS_POST_EMPTY_INTR_STS_SHIFT          (11U)
#define VOP_INTR_STATUS_POST_EMPTY_INTR_STS_MASK           (0x1U << VOP_INTR_STATUS_POST_EMPTY_INTR_STS_SHIFT)          /* 0x00000800 */
#define VOP_INTR_STATUS_POST_LB_ALMOST_FULL_INTR_SHIFT     (12U)
#define VOP_INTR_STATUS_POST_LB_ALMOST_FULL_INTR_MASK      (0x1U << VOP_INTR_STATUS_POST_LB_ALMOST_FULL_INTR_SHIFT)     /* 0x00001000 */
#define VOP_INTR_STATUS_POST_LB_ALMOST_EMPTY_INTR_STS_SHIFT (13U)
#define VOP_INTR_STATUS_POST_LB_ALMOST_EMPTY_INTR_STS_MASK (0x1U << VOP_INTR_STATUS_POST_LB_ALMOST_EMPTY_INTR_STS_SHIFT) /* 0x00002000 */
#define VOP_INTR_STATUS_MMU_INTR_STATUS_SHIFT              (15U)
#define VOP_INTR_STATUS_MMU_INTR_STATUS_MASK               (0x1U << VOP_INTR_STATUS_MMU_INTR_STATUS_SHIFT)              /* 0x00008000 */
#define VOP_INTR_STATUS_FS0_INTR_RAW_STS_SHIFT             (16U)
#define VOP_INTR_STATUS_FS0_INTR_RAW_STS_MASK              (0x1U << VOP_INTR_STATUS_FS0_INTR_RAW_STS_SHIFT)             /* 0x00010000 */
#define VOP_INTR_STATUS_FS1_INTR_RAW_STS_SHIFT             (17U)
#define VOP_INTR_STATUS_FS1_INTR_RAW_STS_MASK              (0x1U << VOP_INTR_STATUS_FS1_INTR_RAW_STS_SHIFT)             /* 0x00020000 */
#define VOP_INTR_STATUS_ADDR_SAME_INTR_RAW_STS_SHIFT       (18U)
#define VOP_INTR_STATUS_ADDR_SAME_INTR_RAW_STS_MASK        (0x1U << VOP_INTR_STATUS_ADDR_SAME_INTR_RAW_STS_SHIFT)       /* 0x00040000 */
#define VOP_INTR_STATUS_LINE_FLAG0_INTR_RAW_STS_SHIFT      (19U)
#define VOP_INTR_STATUS_LINE_FLAG0_INTR_RAW_STS_MASK       (0x1U << VOP_INTR_STATUS_LINE_FLAG0_INTR_RAW_STS_SHIFT)      /* 0x00080000 */
#define VOP_INTR_STATUS_LINE_FLAG1_INTR_RAW_STS_SHIFT      (20U)
#define VOP_INTR_STATUS_LINE_FLAG1_INTR_RAW_STS_MASK       (0x1U << VOP_INTR_STATUS_LINE_FLAG1_INTR_RAW_STS_SHIFT)      /* 0x00100000 */
#define VOP_INTR_STATUS_BUS_ERROR_INTR_RAW_STS_SHIFT       (21U)
#define VOP_INTR_STATUS_BUS_ERROR_INTR_RAW_STS_MASK        (0x1U << VOP_INTR_STATUS_BUS_ERROR_INTR_RAW_STS_SHIFT)       /* 0x00200000 */
#define VOP_INTR_STATUS_WIN1_EMPTY_INTR_RAW_STS_SHIFT      (23U)
#define VOP_INTR_STATUS_WIN1_EMPTY_INTR_RAW_STS_MASK       (0x1U << VOP_INTR_STATUS_WIN1_EMPTY_INTR_RAW_STS_SHIFT)      /* 0x00800000 */
#define VOP_INTR_STATUS_DSP_HOLD_VALID_INTR_RAW_STS_SHIFT  (24U)
#define VOP_INTR_STATUS_DSP_HOLD_VALID_INTR_RAW_STS_MASK   (0x1U << VOP_INTR_STATUS_DSP_HOLD_VALID_INTR_RAW_STS_SHIFT)  /* 0x01000000 */
#define VOP_INTR_STATUS_DMA_FRM_FSH_INTR_RAW_STS_SHIFT     (25U)
#define VOP_INTR_STATUS_DMA_FRM_FSH_INTR_RAW_STS_MASK      (0x1U << VOP_INTR_STATUS_DMA_FRM_FSH_INTR_RAW_STS_SHIFT)     /* 0x02000000 */
#define VOP_INTR_STATUS_POST_EMPTY_INTR_RAW_SHIFT          (27U)
#define VOP_INTR_STATUS_POST_EMPTY_INTR_RAW_MASK           (0x1U << VOP_INTR_STATUS_POST_EMPTY_INTR_RAW_SHIFT)          /* 0x08000000 */
#define VOP_INTR_STATUS_POST_LB_ALMOST_FULL_INTR_RAW_SHIFT (28U)
#define VOP_INTR_STATUS_POST_LB_ALMOST_FULL_INTR_RAW_MASK  (0x1U << VOP_INTR_STATUS_POST_LB_ALMOST_FULL_INTR_RAW_SHIFT) /* 0x10000000 */
#define VOP_INTR_STATUS_POST_LB_ALMOST_EMPTY_INTR_RAW_STS_SHIFT (29U)
#define VOP_INTR_STATUS_POST_LB_ALMOST_EMPTY_INTR_RAW_STS_MASK (0x1U << VOP_INTR_STATUS_POST_LB_ALMOST_EMPTY_INTR_RAW_STS_SHIFT) /* 0x20000000 */
/* POST_LB_CTRL */
#define VOP_POST_LB_CTRL_OFFSET                            (0x40U)
#define VOP_POST_LB_CTRL_POST_LB_ALMOST_FULL_THRESHOLD_SHIFT (0U)
#define VOP_POST_LB_CTRL_POST_LB_ALMOST_FULL_THRESHOLD_MASK (0xFU << VOP_POST_LB_CTRL_POST_LB_ALMOST_FULL_THRESHOLD_SHIFT) /* 0x0000000F */
#define VOP_POST_LB_CTRL_POST_LB_ALMOST_EMPTY_THRESHOLD_SHIFT (4U)
#define VOP_POST_LB_CTRL_POST_LB_ALMOST_EMPTY_THRESHOLD_MASK (0xFU << VOP_POST_LB_CTRL_POST_LB_ALMOST_EMPTY_THRESHOLD_SHIFT) /* 0x000000F0 */
/* WIN1_CTRL0 */
#define VOP_WIN1_CTRL0_OFFSET                              (0x90U)
#define VOP_WIN1_CTRL0_WIN1_EN_SHIFT                       (0U)
#define VOP_WIN1_CTRL0_WIN1_EN_MASK                        (0x1U << VOP_WIN1_CTRL0_WIN1_EN_SHIFT)                       /* 0x00000001 */
#define VOP_WIN1_CTRL0_WIN1_CSC_MODE_SHIFT                 (2U)
#define VOP_WIN1_CTRL0_WIN1_CSC_MODE_MASK                  (0x1U << VOP_WIN1_CTRL0_WIN1_CSC_MODE_SHIFT)                 /* 0x00000004 */
#define VOP_WIN1_CTRL0_WIN1_DATA_FMT_SHIFT                 (4U)
#define VOP_WIN1_CTRL0_WIN1_DATA_FMT_MASK                  (0x7U << VOP_WIN1_CTRL0_WIN1_DATA_FMT_SHIFT)                 /* 0x00000070 */
#define VOP_WIN1_CTRL0_WIN1_INTERLACE_READ_SHIFT           (8U)
#define VOP_WIN1_CTRL0_WIN1_INTERLACE_READ_MASK            (0x1U << VOP_WIN1_CTRL0_WIN1_INTERLACE_READ_SHIFT)           /* 0x00000100 */
#define VOP_WIN1_CTRL0_WIN1_NO_OUTSTANDING_SHIFT           (9U)
#define VOP_WIN1_CTRL0_WIN1_NO_OUTSTANDING_MASK            (0x1U << VOP_WIN1_CTRL0_WIN1_NO_OUTSTANDING_SHIFT)           /* 0x00000200 */
#define VOP_WIN1_CTRL0_WIN1_RB_SWAP_SHIFT                  (12U)
#define VOP_WIN1_CTRL0_WIN1_RB_SWAP_MASK                   (0x1U << VOP_WIN1_CTRL0_WIN1_RB_SWAP_SHIFT)                  /* 0x00001000 */
#define VOP_WIN1_CTRL0_WIN1_ALPHA_SWAP_SHIFT               (13U)
#define VOP_WIN1_CTRL0_WIN1_ALPHA_SWAP_MASK                (0x1U << VOP_WIN1_CTRL0_WIN1_ALPHA_SWAP_SHIFT)               /* 0x00002000 */
/* WIN1_CTRL1 */
#define VOP_WIN1_CTRL1_OFFSET                              (0x94U)
#define VOP_WIN1_CTRL1_WIN1_AXI_GATHER_EN_SHIFT            (0U)
#define VOP_WIN1_CTRL1_WIN1_AXI_GATHER_EN_MASK             (0x1U << VOP_WIN1_CTRL1_WIN1_AXI_GATHER_EN_SHIFT)            /* 0x00000001 */
#define VOP_WIN1_CTRL1_WIN1_DMA_BURST_LENGTH_SHIFT         (2U)
#define VOP_WIN1_CTRL1_WIN1_DMA_BURST_LENGTH_MASK          (0x3U << VOP_WIN1_CTRL1_WIN1_DMA_BURST_LENGTH_SHIFT)         /* 0x0000000C */
#define VOP_WIN1_CTRL1_WIN1_AXI_GATHER_NUM_SHIFT           (4U)
#define VOP_WIN1_CTRL1_WIN1_AXI_GATHER_NUM_MASK            (0xFU << VOP_WIN1_CTRL1_WIN1_AXI_GATHER_NUM_SHIFT)           /* 0x000000F0 */
#define VOP_WIN1_CTRL1_SW_WIN1_RID_SHIFT                   (8U)
#define VOP_WIN1_CTRL1_SW_WIN1_RID_MASK                    (0xFU << VOP_WIN1_CTRL1_SW_WIN1_RID_SHIFT)                   /* 0x00000F00 */
/* WIN1_VIR */
#define VOP_WIN1_VIR_OFFSET                                (0x98U)
#define VOP_WIN1_VIR_WIN1_VIR_STRIDE_SHIFT                 (0U)
#define VOP_WIN1_VIR_WIN1_VIR_STRIDE_MASK                  (0x1FFFU << VOP_WIN1_VIR_WIN1_VIR_STRIDE_SHIFT)              /* 0x00001FFF */
/* WIN1_MST */
#define VOP_WIN1_MST_OFFSET                                (0xA0U)
#define VOP_WIN1_MST_WIN1_MST_SHIFT                        (0U)
#define VOP_WIN1_MST_WIN1_MST_MASK                         (0xFFFFFFFFU << VOP_WIN1_MST_WIN1_MST_SHIFT)                 /* 0xFFFFFFFF */
/* WIN1_DSP_INFO */
#define VOP_WIN1_DSP_INFO_OFFSET                           (0xA4U)
#define VOP_WIN1_DSP_INFO_DSP_WIN1_WIDTH_SHIFT             (0U)
#define VOP_WIN1_DSP_INFO_DSP_WIN1_WIDTH_MASK              (0x7FFU << VOP_WIN1_DSP_INFO_DSP_WIN1_WIDTH_SHIFT)           /* 0x000007FF */
#define VOP_WIN1_DSP_INFO_DSP_WIN1_HEIGHT_SHIFT            (16U)
#define VOP_WIN1_DSP_INFO_DSP_WIN1_HEIGHT_MASK             (0x7FFU << VOP_WIN1_DSP_INFO_DSP_WIN1_HEIGHT_SHIFT)          /* 0x07FF0000 */
/* WIN1_DSP_ST */
#define VOP_WIN1_DSP_ST_OFFSET                             (0xA8U)
#define VOP_WIN1_DSP_ST_DSP_WIN1_XST_SHIFT                 (0U)
#define VOP_WIN1_DSP_ST_DSP_WIN1_XST_MASK                  (0xFFFU << VOP_WIN1_DSP_ST_DSP_WIN1_XST_SHIFT)               /* 0x00000FFF */
#define VOP_WIN1_DSP_ST_DSP_WIN1_YST_SHIFT                 (16U)
#define VOP_WIN1_DSP_ST_DSP_WIN1_YST_MASK                  (0xFFFU << VOP_WIN1_DSP_ST_DSP_WIN1_YST_SHIFT)               /* 0x0FFF0000 */
/* WIN1_COLOR_KEY */
#define VOP_WIN1_COLOR_KEY_OFFSET                          (0xACU)
#define VOP_WIN1_COLOR_KEY_WIN1_KEY_COLOR_SHIFT            (0U)
#define VOP_WIN1_COLOR_KEY_WIN1_KEY_COLOR_MASK             (0xFFFFFFU << VOP_WIN1_COLOR_KEY_WIN1_KEY_COLOR_SHIFT)       /* 0x00FFFFFF */
#define VOP_WIN1_COLOR_KEY_WIN1_KEY_EN_SHIFT               (24U)
#define VOP_WIN1_COLOR_KEY_WIN1_KEY_EN_MASK                (0x1U << VOP_WIN1_COLOR_KEY_WIN1_KEY_EN_SHIFT)               /* 0x01000000 */
/* WIN1_ALPHA_CTRL */
#define VOP_WIN1_ALPHA_CTRL_OFFSET                         (0xBCU)
#define VOP_WIN1_ALPHA_CTRL_WIN1_ALPHA_EN_SHIFT            (0U)
#define VOP_WIN1_ALPHA_CTRL_WIN1_ALPHA_EN_MASK             (0x1U << VOP_WIN1_ALPHA_CTRL_WIN1_ALPHA_EN_SHIFT)            /* 0x00000001 */
#define VOP_WIN1_ALPHA_CTRL_WIN1_ALPHA_MODE_SHIFT          (1U)
#define VOP_WIN1_ALPHA_CTRL_WIN1_ALPHA_MODE_MASK           (0x1U << VOP_WIN1_ALPHA_CTRL_WIN1_ALPHA_MODE_SHIFT)          /* 0x00000002 */
#define VOP_WIN1_ALPHA_CTRL_WIN1_ALPHA_PRE_MUL_SHIFT       (2U)
#define VOP_WIN1_ALPHA_CTRL_WIN1_ALPHA_PRE_MUL_MASK        (0x1U << VOP_WIN1_ALPHA_CTRL_WIN1_ALPHA_PRE_MUL_SHIFT)       /* 0x00000004 */
#define VOP_WIN1_ALPHA_CTRL_WIN1_ALPHA_SAT_MODE_SHIFT      (3U)
#define VOP_WIN1_ALPHA_CTRL_WIN1_ALPHA_SAT_MODE_MASK       (0x1U << VOP_WIN1_ALPHA_CTRL_WIN1_ALPHA_SAT_MODE_SHIFT)      /* 0x00000008 */
#define VOP_WIN1_ALPHA_CTRL_WIN1_ALPHA_VALUE_SHIFT         (4U)
#define VOP_WIN1_ALPHA_CTRL_WIN1_ALPHA_VALUE_MASK          (0xFFU << VOP_WIN1_ALPHA_CTRL_WIN1_ALPHA_VALUE_SHIFT)        /* 0x00000FF0 */
/* DSP_HTOTAL_HS_END */
#define VOP_DSP_HTOTAL_HS_END_OFFSET                       (0x100U)
#define VOP_DSP_HTOTAL_HS_END_DSP_HS_END_SHIFT             (0U)
#define VOP_DSP_HTOTAL_HS_END_DSP_HS_END_MASK              (0xFFFU << VOP_DSP_HTOTAL_HS_END_DSP_HS_END_SHIFT)           /* 0x00000FFF */
#define VOP_DSP_HTOTAL_HS_END_DSP_HTOTAL_SHIFT             (16U)
#define VOP_DSP_HTOTAL_HS_END_DSP_HTOTAL_MASK              (0xFFFU << VOP_DSP_HTOTAL_HS_END_DSP_HTOTAL_SHIFT)           /* 0x0FFF0000 */
/* DSP_HACT_ST_END */
#define VOP_DSP_HACT_ST_END_OFFSET                         (0x104U)
#define VOP_DSP_HACT_ST_END_DSP_HACT_END_SHIFT             (0U)
#define VOP_DSP_HACT_ST_END_DSP_HACT_END_MASK              (0xFFFU << VOP_DSP_HACT_ST_END_DSP_HACT_END_SHIFT)           /* 0x00000FFF */
#define VOP_DSP_HACT_ST_END_DSP_HACT_ST_SHIFT              (16U)
#define VOP_DSP_HACT_ST_END_DSP_HACT_ST_MASK               (0xFFFU << VOP_DSP_HACT_ST_END_DSP_HACT_ST_SHIFT)            /* 0x0FFF0000 */
/* DSP_VTOTAL_VS_END */
#define VOP_DSP_VTOTAL_VS_END_OFFSET                       (0x108U)
#define VOP_DSP_VTOTAL_VS_END_DSP_VS_END_SHIFT             (0U)
#define VOP_DSP_VTOTAL_VS_END_DSP_VS_END_MASK              (0xFFFU << VOP_DSP_VTOTAL_VS_END_DSP_VS_END_SHIFT)           /* 0x00000FFF */
#define VOP_DSP_VTOTAL_VS_END_DSP_VTOTAL_SHIFT             (16U)
#define VOP_DSP_VTOTAL_VS_END_DSP_VTOTAL_MASK              (0xFFFU << VOP_DSP_VTOTAL_VS_END_DSP_VTOTAL_SHIFT)           /* 0x0FFF0000 */
/* DSP_VACT_ST_END */
#define VOP_DSP_VACT_ST_END_OFFSET                         (0x10CU)
#define VOP_DSP_VACT_ST_END_DSP_VACT_END_SHIFT             (0U)
#define VOP_DSP_VACT_ST_END_DSP_VACT_END_MASK              (0xFFFU << VOP_DSP_VACT_ST_END_DSP_VACT_END_SHIFT)           /* 0x00000FFF */
#define VOP_DSP_VACT_ST_END_DSP_VACT_ST_SHIFT              (16U)
#define VOP_DSP_VACT_ST_END_DSP_VACT_ST_MASK               (0xFFFU << VOP_DSP_VACT_ST_END_DSP_VACT_ST_SHIFT)            /* 0x0FFF0000 */
/* DSP_VS_ST_END_F1 */
#define VOP_DSP_VS_ST_END_F1_OFFSET                        (0x110U)
#define VOP_DSP_VS_ST_END_F1_DSP_VS_END_F1_SHIFT           (0U)
#define VOP_DSP_VS_ST_END_F1_DSP_VS_END_F1_MASK            (0xFFFU << VOP_DSP_VS_ST_END_F1_DSP_VS_END_F1_SHIFT)         /* 0x00000FFF */
#define VOP_DSP_VS_ST_END_F1_DSP_VS_ST_F1_SHIFT            (16U)
#define VOP_DSP_VS_ST_END_F1_DSP_VS_ST_F1_MASK             (0xFFFU << VOP_DSP_VS_ST_END_F1_DSP_VS_ST_F1_SHIFT)          /* 0x0FFF0000 */
/* DSP_VACT_ST_END_F1 */
#define VOP_DSP_VACT_ST_END_F1_OFFSET                      (0x114U)
#define VOP_DSP_VACT_ST_END_F1_DSP_VACT_END_F1_SHIFT       (0U)
#define VOP_DSP_VACT_ST_END_F1_DSP_VACT_END_F1_MASK        (0xFFFU << VOP_DSP_VACT_ST_END_F1_DSP_VACT_END_F1_SHIFT)     /* 0x00000FFF */
#define VOP_DSP_VACT_ST_END_F1_DSP_VACT_ST_F1_SHIFT        (16U)
#define VOP_DSP_VACT_ST_END_F1_DSP_VACT_ST_F1_MASK         (0xFFFU << VOP_DSP_VACT_ST_END_F1_DSP_VACT_ST_F1_SHIFT)      /* 0x0FFF0000 */
/* BCSH_CTRL */
#define VOP_BCSH_CTRL_OFFSET                               (0x160U)
#define VOP_BCSH_CTRL_BCSH_EN_SHIFT                        (0U)
#define VOP_BCSH_CTRL_BCSH_EN_MASK                         (0x1U << VOP_BCSH_CTRL_BCSH_EN_SHIFT)                        /* 0x00000001 */
#define VOP_BCSH_CTRL_SW_BCSH_R2Y_CSC_MODE_SHIFT           (1U)
#define VOP_BCSH_CTRL_SW_BCSH_R2Y_CSC_MODE_MASK            (0x1U << VOP_BCSH_CTRL_SW_BCSH_R2Y_CSC_MODE_SHIFT)           /* 0x00000002 */
#define VOP_BCSH_CTRL_VIDEO_MODE_SHIFT                     (2U)
#define VOP_BCSH_CTRL_VIDEO_MODE_MASK                      (0x3U << VOP_BCSH_CTRL_VIDEO_MODE_SHIFT)                     /* 0x0000000C */
#define VOP_BCSH_CTRL_SW_BCSH_Y2R_CSC_MODE_SHIFT           (4U)
#define VOP_BCSH_CTRL_SW_BCSH_Y2R_CSC_MODE_MASK            (0x3U << VOP_BCSH_CTRL_SW_BCSH_Y2R_CSC_MODE_SHIFT)           /* 0x00000030 */
#define VOP_BCSH_CTRL_SW_BCSH_Y2R_EN_SHIFT                 (6U)
#define VOP_BCSH_CTRL_SW_BCSH_Y2R_EN_MASK                  (0x1U << VOP_BCSH_CTRL_SW_BCSH_Y2R_EN_SHIFT)                 /* 0x00000040 */
#define VOP_BCSH_CTRL_SW_BCSH_R2Y_EN_SHIFT                 (7U)
#define VOP_BCSH_CTRL_SW_BCSH_R2Y_EN_MASK                  (0x1U << VOP_BCSH_CTRL_SW_BCSH_R2Y_EN_SHIFT)                 /* 0x00000080 */
/* BCSH_COL_BAR */
#define VOP_BCSH_COL_BAR_OFFSET                            (0x164U)
#define VOP_BCSH_COL_BAR_COLOR_BAR_Y_SHIFT                 (0U)
#define VOP_BCSH_COL_BAR_COLOR_BAR_Y_MASK                  (0xFFU << VOP_BCSH_COL_BAR_COLOR_BAR_Y_SHIFT)                /* 0x000000FF */
#define VOP_BCSH_COL_BAR_COLOR_BAR_U_SHIFT                 (8U)
#define VOP_BCSH_COL_BAR_COLOR_BAR_U_MASK                  (0xFFU << VOP_BCSH_COL_BAR_COLOR_BAR_U_SHIFT)                /* 0x0000FF00 */
#define VOP_BCSH_COL_BAR_COLOR_BAR_V_SHIFT                 (16U)
#define VOP_BCSH_COL_BAR_COLOR_BAR_V_MASK                  (0xFFU << VOP_BCSH_COL_BAR_COLOR_BAR_V_SHIFT)                /* 0x00FF0000 */
/* BCSH_BCS */
#define VOP_BCSH_BCS_OFFSET                                (0x168U)
#define VOP_BCSH_BCS_BRIGHTNESS_SHIFT                      (0U)
#define VOP_BCSH_BCS_BRIGHTNESS_MASK                       (0x7FU << VOP_BCSH_BCS_BRIGHTNESS_SHIFT)                     /* 0x0000007F */
#define VOP_BCSH_BCS_CONTRAST_SHIFT                        (8U)
#define VOP_BCSH_BCS_CONTRAST_MASK                         (0x1FFU << VOP_BCSH_BCS_CONTRAST_SHIFT)                      /* 0x0001FF00 */
#define VOP_BCSH_BCS_SAT_CON_SHIFT                         (20U)
#define VOP_BCSH_BCS_SAT_CON_MASK                          (0x3FFU << VOP_BCSH_BCS_SAT_CON_SHIFT)                       /* 0x3FF00000 */
/* BCSH_H */
#define VOP_BCSH_H_OFFSET                                  (0x16CU)
#define VOP_BCSH_H_SIN_HUE_SHIFT                           (0U)
#define VOP_BCSH_H_SIN_HUE_MASK                            (0x1FFU << VOP_BCSH_H_SIN_HUE_SHIFT)                         /* 0x000001FF */
#define VOP_BCSH_H_COS_HUE_SHIFT                           (16U)
#define VOP_BCSH_H_COS_HUE_MASK                            (0x1FFU << VOP_BCSH_H_COS_HUE_SHIFT)                         /* 0x01FF0000 */
/* FRC_LOWER01_0 */
#define VOP_FRC_LOWER01_0_OFFSET                           (0x170U)
#define VOP_FRC_LOWER01_0_LOWER01_FRM0_SHIFT               (0U)
#define VOP_FRC_LOWER01_0_LOWER01_FRM0_MASK                (0xFFFFU << VOP_FRC_LOWER01_0_LOWER01_FRM0_SHIFT)            /* 0x0000FFFF */
#define VOP_FRC_LOWER01_0_LOWER01_FRM1_SHIFT               (16U)
#define VOP_FRC_LOWER01_0_LOWER01_FRM1_MASK                (0xFFFFU << VOP_FRC_LOWER01_0_LOWER01_FRM1_SHIFT)            /* 0xFFFF0000 */
/* FRC_LOWER01_1 */
#define VOP_FRC_LOWER01_1_OFFSET                           (0x174U)
#define VOP_FRC_LOWER01_1_LOWER01_FRM2_SHIFT               (0U)
#define VOP_FRC_LOWER01_1_LOWER01_FRM2_MASK                (0xFFFFU << VOP_FRC_LOWER01_1_LOWER01_FRM2_SHIFT)            /* 0x0000FFFF */
#define VOP_FRC_LOWER01_1_LOWER01_FRM3_SHIFT               (16U)
#define VOP_FRC_LOWER01_1_LOWER01_FRM3_MASK                (0xFFFFU << VOP_FRC_LOWER01_1_LOWER01_FRM3_SHIFT)            /* 0xFFFF0000 */
/* FRC_LOWER10_0 */
#define VOP_FRC_LOWER10_0_OFFSET                           (0x178U)
#define VOP_FRC_LOWER10_0_LOWER10_FRM0_SHIFT               (0U)
#define VOP_FRC_LOWER10_0_LOWER10_FRM0_MASK                (0xFFFFU << VOP_FRC_LOWER10_0_LOWER10_FRM0_SHIFT)            /* 0x0000FFFF */
#define VOP_FRC_LOWER10_0_LOWER10_FRM1_SHIFT               (16U)
#define VOP_FRC_LOWER10_0_LOWER10_FRM1_MASK                (0xFFFFU << VOP_FRC_LOWER10_0_LOWER10_FRM1_SHIFT)            /* 0xFFFF0000 */
/* FRC_LOWER10_1 */
#define VOP_FRC_LOWER10_1_OFFSET                           (0x17CU)
#define VOP_FRC_LOWER10_1_LOWER10_FRM2_SHIFT               (0U)
#define VOP_FRC_LOWER10_1_LOWER10_FRM2_MASK                (0xFFFFU << VOP_FRC_LOWER10_1_LOWER10_FRM2_SHIFT)            /* 0x0000FFFF */
#define VOP_FRC_LOWER10_1_LOWER10_FRM3_SHIFT               (16U)
#define VOP_FRC_LOWER10_1_LOWER10_FRM3_MASK                (0xFFFFU << VOP_FRC_LOWER10_1_LOWER10_FRM3_SHIFT)            /* 0xFFFF0000 */
/* FRC_LOWER11_0 */
#define VOP_FRC_LOWER11_0_OFFSET                           (0x180U)
#define VOP_FRC_LOWER11_0_LOWER11_FRM0_SHIFT               (0U)
#define VOP_FRC_LOWER11_0_LOWER11_FRM0_MASK                (0xFFFFU << VOP_FRC_LOWER11_0_LOWER11_FRM0_SHIFT)            /* 0x0000FFFF */
#define VOP_FRC_LOWER11_0_LOWER11_FRM1_SHIFT               (16U)
#define VOP_FRC_LOWER11_0_LOWER11_FRM1_MASK                (0xFFFFU << VOP_FRC_LOWER11_0_LOWER11_FRM1_SHIFT)            /* 0xFFFF0000 */
/* FRC_LOWER11_1 */
#define VOP_FRC_LOWER11_1_OFFSET                           (0x184U)
#define VOP_FRC_LOWER11_1_LOWER11_FRM2_SHIFT               (0U)
#define VOP_FRC_LOWER11_1_LOWER11_FRM2_MASK                (0xFFFFU << VOP_FRC_LOWER11_1_LOWER11_FRM2_SHIFT)            /* 0x0000FFFF */
#define VOP_FRC_LOWER11_1_LOWER11_FRM3_SHIFT               (16U)
#define VOP_FRC_LOWER11_1_LOWER11_FRM3_MASK                (0xFFFFU << VOP_FRC_LOWER11_1_LOWER11_FRM3_SHIFT)            /* 0xFFFF0000 */
/* MCU_RW_BYPASS_PORT */
#define VOP_MCU_RW_BYPASS_PORT_OFFSET                      (0x18CU)
#define VOP_MCU_RW_BYPASS_PORT_MCU_RW_DATA_BYPASS_SHIFT    (0U)
#define VOP_MCU_RW_BYPASS_PORT_MCU_RW_DATA_BYPASS_MASK     (0xFFFFFFFFU << VOP_MCU_RW_BYPASS_PORT_MCU_RW_DATA_BYPASS_SHIFT) /* 0xFFFFFFFF */
/* SCAN_LINE_NUM */
#define VOP_SCAN_LINE_NUM_OFFSET                           (0x1F0U)
#define VOP_SCAN_LINE_NUM_SCAN_LINE_NUM_SHIFT              (0U)
#define VOP_SCAN_LINE_NUM_SCAN_LINE_NUM_MASK               (0xFFFU << VOP_SCAN_LINE_NUM_SCAN_LINE_NUM_SHIFT)            /* 0x00000FFF */
/* BLANKING_VALUE */
#define VOP_BLANKING_VALUE_OFFSET                          (0x1F4U)
#define VOP_BLANKING_VALUE_SW_BLANKING_VALUE_SHIFT         (0U)
#define VOP_BLANKING_VALUE_SW_BLANKING_VALUE_MASK          (0xFFFFFFU << VOP_BLANKING_VALUE_SW_BLANKING_VALUE_SHIFT)    /* 0x00FFFFFF */
#define VOP_BLANKING_VALUE_BLANKING_VALUE_CONFIG_EN_SHIFT  (24U)
#define VOP_BLANKING_VALUE_BLANKING_VALUE_CONFIG_EN_MASK   (0x1U << VOP_BLANKING_VALUE_BLANKING_VALUE_CONFIG_EN_SHIFT)  /* 0x01000000 */
/* FLAG_REG_FRM_VALID */
#define VOP_FLAG_REG_FRM_VALID_OFFSET                      (0x1F8U)
#define VOP_FLAG_REG_FRM_VALID_FLAG_REG_FRM_VALID_SHIFT    (0U)
#define VOP_FLAG_REG_FRM_VALID_FLAG_REG_FRM_VALID_MASK     (0xFFFFFFFFU << VOP_FLAG_REG_FRM_VALID_FLAG_REG_FRM_VALID_SHIFT) /* 0xFFFFFFFF */
/* FLAG_REG */
#define VOP_FLAG_REG_OFFSET                                (0x1FCU)
#define VOP_FLAG_REG_FLAG_REG_SHIFT                        (0U)
#define VOP_FLAG_REG_FLAG_REG_MASK                         (0xFFFFFFFFU << VOP_FLAG_REG_FLAG_REG_SHIFT)                 /* 0xFFFFFFFF */
/* GAMMA_LUT_ADDR */
#define VOP_GAMMA_LUT_ADDR_OFFSET                          (0xA00U)
#define VOP_GAMMA_LUT_ADDR_GAMMA_LUT_ADDR_SHIFT            (0U)
#define VOP_GAMMA_LUT_ADDR_GAMMA_LUT_ADDR_MASK             (0xFFFFFFU << VOP_GAMMA_LUT_ADDR_GAMMA_LUT_ADDR_SHIFT)       /* 0x00FFFFFF */
/******************************************RGA2******************************************/
/* SYS_CTRL */
#define RGA2_SYS_CTRL_OFFSET                               (0x0U)
#define RGA2_SYS_CTRL_SYS_CMD_OP_ST_P_SHIFT                (0U)
#define RGA2_SYS_CTRL_SYS_CMD_OP_ST_P_MASK                 (0x1U << RGA2_SYS_CTRL_SYS_CMD_OP_ST_P_SHIFT)                /* 0x00000001 */
#define RGA2_SYS_CTRL_SW_CMD_MODE_SHIFT                    (1U)
#define RGA2_SYS_CTRL_SW_CMD_MODE_MASK                     (0x1U << RGA2_SYS_CTRL_SW_CMD_MODE_SHIFT)                    /* 0x00000002 */
#define RGA2_SYS_CTRL_SW_AUTO_CKG_SHIFT                    (2U)
#define RGA2_SYS_CTRL_SW_AUTO_CKG_MASK                     (0x1U << RGA2_SYS_CTRL_SW_AUTO_CKG_SHIFT)                    /* 0x00000004 */
#define RGA2_SYS_CTRL_SYS_ACLK_SRESET_P_SHIFT              (3U)
#define RGA2_SYS_CTRL_SYS_ACLK_SRESET_P_MASK               (0x1U << RGA2_SYS_CTRL_SYS_ACLK_SRESET_P_SHIFT)              /* 0x00000008 */
#define RGA2_SYS_CTRL_SYS_CCLK_SRESET_P_SHIFT              (4U)
#define RGA2_SYS_CTRL_SYS_CCLK_SRESET_P_MASK               (0x1U << RGA2_SYS_CTRL_SYS_CCLK_SRESET_P_SHIFT)              /* 0x00000010 */
#define RGA2_SYS_CTRL_SW_AUTO_RST_SHIFT                    (5U)
#define RGA2_SYS_CTRL_SW_AUTO_RST_MASK                     (0x1U << RGA2_SYS_CTRL_SW_AUTO_RST_SHIFT)                    /* 0x00000020 */
#define RGA2_SYS_CTRL_SW_RST_PROTECT_E_SHIFT               (6U)
#define RGA2_SYS_CTRL_SW_RST_PROTECT_E_MASK                (0x1U << RGA2_SYS_CTRL_SW_RST_PROTECT_E_SHIFT)               /* 0x00000040 */
#define RGA2_SYS_CTRL_SYS_RST_HANDSAVE_P_SHIFT             (7U)
#define RGA2_SYS_CTRL_SYS_RST_HANDSAVE_P_MASK              (0x1U << RGA2_SYS_CTRL_SYS_RST_HANDSAVE_P_SHIFT)             /* 0x00000080 */
#define RGA2_SYS_CTRL_SW_RD_HOLD_MODE_EN_SHIFT             (9U)
#define RGA2_SYS_CTRL_SW_RD_HOLD_MODE_EN_MASK              (0x1U << RGA2_SYS_CTRL_SW_RD_HOLD_MODE_EN_SHIFT)             /* 0x00000200 */
#define RGA2_SYS_CTRL_SYS_CMD_CONTINUE_P_SHIFT             (10U)
#define RGA2_SYS_CTRL_SYS_CMD_CONTINUE_P_MASK              (0x1U << RGA2_SYS_CTRL_SYS_CMD_CONTINUE_P_SHIFT)             /* 0x00000400 */
#define RGA2_SYS_CTRL_SW_DST_WR_OPT_DIS_SHIFT              (11U)
#define RGA2_SYS_CTRL_SW_DST_WR_OPT_DIS_MASK               (0x1U << RGA2_SYS_CTRL_SW_DST_WR_OPT_DIS_SHIFT)              /* 0x00000800 */
#define RGA2_SYS_CTRL_SW_SRC0YUV420SP_RD_OPT_DIS_SHIFT     (12U)
#define RGA2_SYS_CTRL_SW_SRC0YUV420SP_RD_OPT_DIS_MASK      (0x1U << RGA2_SYS_CTRL_SW_SRC0YUV420SP_RD_OPT_DIS_SHIFT)     /* 0x00001000 */
#define RGA2_SYS_CTRL_SW_SRC1_RGB888_FIX_DIS_SHIFT         (13U)
#define RGA2_SYS_CTRL_SW_SRC1_RGB888_FIX_DIS_MASK          (0x1U << RGA2_SYS_CTRL_SW_SRC1_RGB888_FIX_DIS_SHIFT)         /* 0x00002000 */
/* CMD_CTRL */
#define RGA2_CMD_CTRL_OFFSET                               (0x4U)
#define RGA2_CMD_CTRL_SYS_CMD_LINE_ST_P_SHIFT              (0U)
#define RGA2_CMD_CTRL_SYS_CMD_LINE_ST_P_MASK               (0x1U << RGA2_CMD_CTRL_SYS_CMD_LINE_ST_P_SHIFT)              /* 0x00000001 */
#define RGA2_CMD_CTRL_SYS_CMD_INCR_VALID_P_SHIFT           (1U)
#define RGA2_CMD_CTRL_SYS_CMD_INCR_VALID_P_MASK            (0x1U << RGA2_CMD_CTRL_SYS_CMD_INCR_VALID_P_SHIFT)           /* 0x00000002 */
#define RGA2_CMD_CTRL_SW_CMD_STOP_MODE_SHIFT               (2U)
#define RGA2_CMD_CTRL_SW_CMD_STOP_MODE_MASK                (0x1U << RGA2_CMD_CTRL_SW_CMD_STOP_MODE_SHIFT)               /* 0x00000004 */
#define RGA2_CMD_CTRL_SW_CMD_INCR_NUM_SHIFT                (3U)
#define RGA2_CMD_CTRL_SW_CMD_INCR_NUM_MASK                 (0x3FFU << RGA2_CMD_CTRL_SW_CMD_INCR_NUM_SHIFT)              /* 0x00001FF8 */
/* CMD_BASE */
#define RGA2_CMD_BASE_OFFSET                               (0x8U)
#define RGA2_CMD_BASE_SW_CMD_BASE_SHIFT                    (0U)
#define RGA2_CMD_BASE_SW_CMD_BASE_MASK                     (0xFFFFFFFFU << RGA2_CMD_BASE_SW_CMD_BASE_SHIFT)             /* 0xFFFFFFFF */
/* STATUS1 */
#define RGA2_STATUS1_OFFSET                                (0xCU)
#define RGA2_STATUS1                                       (0x0U)
#define RGA2_STATUS1_SW_RGA_STA_SHIFT                      (0U)
#define RGA2_STATUS1_SW_RGA_STA_MASK                       (0x1U << RGA2_STATUS1_SW_RGA_STA_SHIFT)                      /* 0x00000001 */
#define RGA2_STATUS1_SW_CMD_CUR_NUM_SHIFT                  (8U)
#define RGA2_STATUS1_SW_CMD_CUR_NUM_MASK                   (0xFFFU << RGA2_STATUS1_SW_CMD_CUR_NUM_SHIFT)                /* 0x000FFF00 */
#define RGA2_STATUS1_SW_CMD_TOTAL_NUM_SHIFT                (20U)
#define RGA2_STATUS1_SW_CMD_TOTAL_NUM_MASK                 (0xFFFU << RGA2_STATUS1_SW_CMD_TOTAL_NUM_SHIFT)              /* 0xFFF00000 */
/* INT */
#define RGA2_INT_OFFSET                                    (0x10U)
#define RGA2_INT_RO_BUS_ERROR_INTR_SHIFT                   (0U)
#define RGA2_INT_RO_BUS_ERROR_INTR_MASK                    (0x1U << RGA2_INT_RO_BUS_ERROR_INTR_SHIFT)                   /* 0x00000001 */
#define RGA2_INT_RO_RPP_ERROR_INTR_SHIFT                   (1U)
#define RGA2_INT_RO_RPP_ERROR_INTR_MASK                    (0x1U << RGA2_INT_RO_RPP_ERROR_INTR_SHIFT)                   /* 0x00000002 */
#define RGA2_INT_RO_CMD_ALL_FINISH_INTR_SHIFT              (2U)
#define RGA2_INT_RO_CMD_ALL_FINISH_INTR_MASK               (0x1U << RGA2_INT_RO_CMD_ALL_FINISH_INTR_SHIFT)              /* 0x00000004 */
#define RGA2_INT_RO_CMD_CUR_FINISH_INTR_SHIFT              (3U)
#define RGA2_INT_RO_CMD_CUR_FINISH_INTR_MASK               (0x1U << RGA2_INT_RO_CMD_CUR_FINISH_INTR_SHIFT)              /* 0x00000008 */
#define RGA2_INT_SYS_INTR_BUS_ERR_CLR_SHIFT                (4U)
#define RGA2_INT_SYS_INTR_BUS_ERR_CLR_MASK                 (0x1U << RGA2_INT_SYS_INTR_BUS_ERR_CLR_SHIFT)                /* 0x00000010 */
#define RGA2_INT_SYS_INTR_RPP_ERR_CLR_SHIFT                (5U)
#define RGA2_INT_SYS_INTR_RPP_ERR_CLR_MASK                 (0x1U << RGA2_INT_SYS_INTR_RPP_ERR_CLR_SHIFT)                /* 0x00000020 */
#define RGA2_INT_SYS_INTR_AF_CLR_SHIFT                     (6U)
#define RGA2_INT_SYS_INTR_AF_CLR_MASK                      (0x1U << RGA2_INT_SYS_INTR_AF_CLR_SHIFT)                     /* 0x00000040 */
#define RGA2_INT_SYS_INTR_CF_CLR_SHIFT                     (7U)
#define RGA2_INT_SYS_INTR_CF_CLR_MASK                      (0x1U << RGA2_INT_SYS_INTR_CF_CLR_SHIFT)                     /* 0x00000080 */
#define RGA2_INT_SW_INTR_BUS_ERR_E_SHIFT                   (8U)
#define RGA2_INT_SW_INTR_BUS_ERR_E_MASK                    (0x1U << RGA2_INT_SW_INTR_BUS_ERR_E_SHIFT)                   /* 0x00000100 */
#define RGA2_INT_SW_INTR_RPP_ERR_E_SHIFT                   (9U)
#define RGA2_INT_SW_INTR_RPP_ERR_E_MASK                    (0x1U << RGA2_INT_SW_INTR_RPP_ERR_E_SHIFT)                   /* 0x00000200 */
#define RGA2_INT_SW_INTR_AF_E_SHIFT                        (10U)
#define RGA2_INT_SW_INTR_AF_E_MASK                         (0x1U << RGA2_INT_SW_INTR_AF_E_SHIFT)                        /* 0x00000400 */
#define RGA2_INT_RO_READ_CNT_INTR_SHIFT                    (11U)
#define RGA2_INT_RO_READ_CNT_INTR_MASK                     (0x1U << RGA2_INT_RO_READ_CNT_INTR_SHIFT)                    /* 0x00000800 */
#define RGA2_INT_RO_WRITE_CNT_INTR_SHIFT                   (12U)
#define RGA2_INT_RO_WRITE_CNT_INTR_MASK                    (0x1U << RGA2_INT_RO_WRITE_CNT_INTR_SHIFT)                   /* 0x00001000 */
#define RGA2_INT_SW_INTR_LINE_RD_EN_SHIFT                  (13U)
#define RGA2_INT_SW_INTR_LINE_RD_EN_MASK                   (0x1U << RGA2_INT_SW_INTR_LINE_RD_EN_SHIFT)                  /* 0x00002000 */
#define RGA2_INT_SW_INTR_LINE_WR_EN_SHIFT                  (14U)
#define RGA2_INT_SW_INTR_LINE_WR_EN_MASK                   (0x1U << RGA2_INT_SW_INTR_LINE_WR_EN_SHIFT)                  /* 0x00004000 */
#define RGA2_INT_SYS_INTR_LINE_RD_CLR_SHIFT                (15U)
#define RGA2_INT_SYS_INTR_LINE_RD_CLR_MASK                 (0x1U << RGA2_INT_SYS_INTR_LINE_RD_CLR_SHIFT)                /* 0x00008000 */
#define RGA2_INT_SYS_INTR_LINE_WR_CLR_SHIFT                (16U)
#define RGA2_INT_SYS_INTR_LINE_WR_CLR_MASK                 (0x1U << RGA2_INT_SYS_INTR_LINE_WR_CLR_SHIFT)                /* 0x00010000 */
#define RGA2_INT_RO_SCL_ERROR_INTR_SHIFT                   (17U)
#define RGA2_INT_RO_SCL_ERROR_INTR_MASK                    (0x1U << RGA2_INT_RO_SCL_ERROR_INTR_SHIFT)                   /* 0x00020000 */
#define RGA2_INT_SW_INTR_SCL_ERR_E_SHIFT                   (18U)
#define RGA2_INT_SW_INTR_SCL_ERR_E_MASK                    (0x1U << RGA2_INT_SW_INTR_SCL_ERR_E_SHIFT)                   /* 0x00040000 */
#define RGA2_INT_SYS_INTR_SCL_ERR_CLR_SHIFT                (19U)
#define RGA2_INT_SYS_INTR_SCL_ERR_CLR_MASK                 (0x1U << RGA2_INT_SYS_INTR_SCL_ERR_CLR_SHIFT)                /* 0x00080000 */
/* MMU_CTRL0 */
#define RGA2_MMU_CTRL0_OFFSET                              (0x14U)
#define RGA2_MMU_CTRL0_SW_SRC_CH_PRIORITY_SHIFT            (3U)
#define RGA2_MMU_CTRL0_SW_SRC_CH_PRIORITY_MASK             (0x3U << RGA2_MMU_CTRL0_SW_SRC_CH_PRIORITY_SHIFT)            /* 0x00000018 */
#define RGA2_MMU_CTRL0_SW_SRC1_CH_PRIORITY_SHIFT           (5U)
#define RGA2_MMU_CTRL0_SW_SRC1_CH_PRIORITY_MASK            (0x3U << RGA2_MMU_CTRL0_SW_SRC1_CH_PRIORITY_SHIFT)           /* 0x00000060 */
#define RGA2_MMU_CTRL0_SW_DST_CH_PRIORITY_SHIFT            (7U)
#define RGA2_MMU_CTRL0_SW_DST_CH_PRIORITY_MASK             (0x3U << RGA2_MMU_CTRL0_SW_DST_CH_PRIORITY_SHIFT)            /* 0x00000180 */
#define RGA2_MMU_CTRL0_SW_ELS_CH_PRIORITY_SHIFT            (9U)
#define RGA2_MMU_CTRL0_SW_ELS_CH_PRIORITY_MASK             (0x3U << RGA2_MMU_CTRL0_SW_ELS_CH_PRIORITY_SHIFT)            /* 0x00000600 */
#define RGA2_MMU_CTRL0_SW_QOS_EN_SHIFT                     (11U)
#define RGA2_MMU_CTRL0_SW_QOS_EN_MASK                      (0x1U << RGA2_MMU_CTRL0_SW_QOS_EN_SHIFT)                     /* 0x00000800 */
#define RGA2_MMU_CTRL0_SW_MMU_QOS_NUM3_SHIFT               (12U)
#define RGA2_MMU_CTRL0_SW_MMU_QOS_NUM3_MASK                (0x7U << RGA2_MMU_CTRL0_SW_MMU_QOS_NUM3_SHIFT)               /* 0x00007000 */
#define RGA2_MMU_CTRL0_SW_MMU_QOS_NUM2_SHIFT               (15U)
#define RGA2_MMU_CTRL0_SW_MMU_QOS_NUM2_MASK                (0x7U << RGA2_MMU_CTRL0_SW_MMU_QOS_NUM2_SHIFT)               /* 0x00038000 */
/* STATUS2 */
#define RGA2_STATUS2_OFFSET                                (0x1CU)
#define RGA2_STATUS2                                       (0x0U)
#define RGA2_STATUS2_RPP_ERROR_SHIFT                       (0U)
#define RGA2_STATUS2_RPP_ERROR_MASK                        (0x1U << RGA2_STATUS2_RPP_ERROR_SHIFT)                       /* 0x00000001 */
#define RGA2_STATUS2_BUS_ERROR_SHIFT                       (1U)
#define RGA2_STATUS2_BUS_ERROR_MASK                        (0x1U << RGA2_STATUS2_BUS_ERROR_SHIFT)                       /* 0x00000002 */
#define RGA2_STATUS2_SRCRPP_OUTBUF_RREADY_SHIFT            (2U)
#define RGA2_STATUS2_SRCRPP_OUTBUF_RREADY_MASK             (0xFU << RGA2_STATUS2_SRCRPP_OUTBUF_RREADY_SHIFT)            /* 0x0000003C */
#define RGA2_STATUS2_DSTRPP_OUTBUF_RREADY_SHIFT            (6U)
#define RGA2_STATUS2_DSTRPP_OUTBUF_RREADY_MASK             (0x1FU << RGA2_STATUS2_DSTRPP_OUTBUF_RREADY_SHIFT)           /* 0x000007C0 */
#define RGA2_STATUS2_RPP_MKRAM_RREADY_SHIFT                (11U)
#define RGA2_STATUS2_RPP_MKRAM_RREADY_MASK                 (0x3U << RGA2_STATUS2_RPP_MKRAM_RREADY_SHIFT)                /* 0x00001800 */
/* WORK_CNT */
#define RGA2_WORK_CNT_OFFSET                               (0x20U)
#define RGA2_WORK_CNT                                      (0x0U)
#define RGA2_WORK_CNT_SW_WORK_CNT_SHIFT                    (0U)
#define RGA2_WORK_CNT_SW_WORK_CNT_MASK                     (0x7FFFFFFU << RGA2_WORK_CNT_SW_WORK_CNT_SHIFT)              /* 0x07FFFFFF */
/* VERSION_INFO */
#define RGA2_VERSION_INFO_OFFSET                           (0x28U)
#define RGA2_VERSION_INFO_SVNBUILD_SHIFT                   (0U)
#define RGA2_VERSION_INFO_SVNBUILD_MASK                    (0xFFFFFU << RGA2_VERSION_INFO_SVNBUILD_SHIFT)               /* 0x000FFFFF */
#define RGA2_VERSION_INFO_MINOR_SHIFT                      (20U)
#define RGA2_VERSION_INFO_MINOR_MASK                       (0xFU << RGA2_VERSION_INFO_MINOR_SHIFT)                      /* 0x00F00000 */
#define RGA2_VERSION_INFO_MAJOR_SHIFT                      (24U)
#define RGA2_VERSION_INFO_MAJOR_MASK                       (0xFFU << RGA2_VERSION_INFO_MAJOR_SHIFT)                     /* 0xFF000000 */
/* READ_LINE_CNT_TH */
#define RGA2_READ_LINE_CNT_TH_OFFSET                       (0x30U)
#define RGA2_READ_LINE_CNT_TH_SW_INTR_LINE_RD_TH_SHIFT     (0U)
#define RGA2_READ_LINE_CNT_TH_SW_INTR_LINE_RD_TH_MASK      (0x1FFFU << RGA2_READ_LINE_CNT_TH_SW_INTR_LINE_RD_TH_SHIFT)  /* 0x00001FFF */
/* WRITE_LINE_CNT_TH */
#define RGA2_WRITE_LINE_CNT_TH_OFFSET                      (0x34U)
#define RGA2_WRITE_LINE_CNT_TH_SW_INTR_LINE_WR_START_SHIFT (0U)
#define RGA2_WRITE_LINE_CNT_TH_SW_INTR_LINE_WR_START_MASK  (0x1FFFU << RGA2_WRITE_LINE_CNT_TH_SW_INTR_LINE_WR_START_SHIFT) /* 0x00001FFF */
#define RGA2_WRITE_LINE_CNT_TH_SW_INTR_LINE_WR_STEP_SHIFT  (16U)
#define RGA2_WRITE_LINE_CNT_TH_SW_INTR_LINE_WR_STEP_MASK   (0x1FFFU << RGA2_WRITE_LINE_CNT_TH_SW_INTR_LINE_WR_STEP_SHIFT) /* 0x1FFF0000 */
/* INT_LINE_CNT */
#define RGA2_INT_LINE_CNT_OFFSET                           (0x38U)
#define RGA2_INT_LINE_CNT                                  (0x0U)
#define RGA2_INT_LINE_CNT_RO_READ_LINE_CNT_SHIFT           (0U)
#define RGA2_INT_LINE_CNT_RO_READ_LINE_CNT_MASK            (0x1FFFU << RGA2_INT_LINE_CNT_RO_READ_LINE_CNT_SHIFT)        /* 0x00001FFF */
#define RGA2_INT_LINE_CNT_RO_DMA_CMD_HOLD_SHIFT            (13U)
#define RGA2_INT_LINE_CNT_RO_DMA_CMD_HOLD_MASK             (0x1U << RGA2_INT_LINE_CNT_RO_DMA_CMD_HOLD_SHIFT)            /* 0x00002000 */
#define RGA2_INT_LINE_CNT_RO_WRITE_LINE_CNT_SHIFT          (16U)
#define RGA2_INT_LINE_CNT_RO_WRITE_LINE_CNT_MASK           (0x1FFFU << RGA2_INT_LINE_CNT_RO_WRITE_LINE_CNT_SHIFT)       /* 0x1FFF0000 */
/* DST_CSC_00 */
#define RGA2_DST_CSC_00_OFFSET                             (0x60U)
#define RGA2_DST_CSC_00_SW_DST_COE_00_SHIFT                (0U)
#define RGA2_DST_CSC_00_SW_DST_COE_00_MASK                 (0x1FFU << RGA2_DST_CSC_00_SW_DST_COE_00_SHIFT)              /* 0x000001FF */
#define RGA2_DST_CSC_00_SW_DST_CSC_Y_MAX_SHIFT             (16U)
#define RGA2_DST_CSC_00_SW_DST_CSC_Y_MAX_MASK              (0xFFU << RGA2_DST_CSC_00_SW_DST_CSC_Y_MAX_SHIFT)            /* 0x00FF0000 */
#define RGA2_DST_CSC_00_SW_DST_CSC_Y_MIN_SHIFT             (24U)
#define RGA2_DST_CSC_00_SW_DST_CSC_Y_MIN_MASK              (0xFFU << RGA2_DST_CSC_00_SW_DST_CSC_Y_MIN_SHIFT)            /* 0xFF000000 */
/* DST_CSC_01 */
#define RGA2_DST_CSC_01_OFFSET                             (0x64U)
#define RGA2_DST_CSC_01_SW_DST_COE_01_SHIFT                (0U)
#define RGA2_DST_CSC_01_SW_DST_COE_01_MASK                 (0x1FFU << RGA2_DST_CSC_01_SW_DST_COE_01_SHIFT)              /* 0x000001FF */
#define RGA2_DST_CSC_01_SW_DST_CSC_UV_MAX_SHIFT            (16U)
#define RGA2_DST_CSC_01_SW_DST_CSC_UV_MAX_MASK             (0xFFU << RGA2_DST_CSC_01_SW_DST_CSC_UV_MAX_SHIFT)           /* 0x00FF0000 */
#define RGA2_DST_CSC_01_SW_DST_CSC_UV_MIN_SHIFT            (24U)
#define RGA2_DST_CSC_01_SW_DST_CSC_UV_MIN_MASK             (0xFFU << RGA2_DST_CSC_01_SW_DST_CSC_UV_MIN_SHIFT)           /* 0xFF000000 */
/* DST_CSC_02 */
#define RGA2_DST_CSC_02_OFFSET                             (0x68U)
#define RGA2_DST_CSC_02_SW_DST_COE_02_SHIFT                (0U)
#define RGA2_DST_CSC_02_SW_DST_COE_02_MASK                 (0x1FFU << RGA2_DST_CSC_02_SW_DST_COE_02_SHIFT)              /* 0x000001FF */
/* DST_CSC_OFF0 */
#define RGA2_DST_CSC_OFF0_OFFSET                           (0x6CU)
#define RGA2_DST_CSC_OFF0_SW_DST_COE_OFF0_SHIFT            (0U)
#define RGA2_DST_CSC_OFF0_SW_DST_COE_OFF0_MASK             (0x7FFFFU << RGA2_DST_CSC_OFF0_SW_DST_COE_OFF0_SHIFT)        /* 0x0007FFFF */
/* DST_CSC_10 */
#define RGA2_DST_CSC_10_OFFSET                             (0x70U)
#define RGA2_DST_CSC_10_SW_DST_COE_10_SHIFT                (0U)
#define RGA2_DST_CSC_10_SW_DST_COE_10_MASK                 (0x1FFU << RGA2_DST_CSC_10_SW_DST_COE_10_SHIFT)              /* 0x000001FF */
/* DST_CSC_11 */
#define RGA2_DST_CSC_11_OFFSET                             (0x74U)
#define RGA2_DST_CSC_11_SW_DST_COE_11_SHIFT                (0U)
#define RGA2_DST_CSC_11_SW_DST_COE_11_MASK                 (0x1FFU << RGA2_DST_CSC_11_SW_DST_COE_11_SHIFT)              /* 0x000001FF */
/* DST_CSC_12 */
#define RGA2_DST_CSC_12_OFFSET                             (0x78U)
#define RGA2_DST_CSC_12_SW_DST_COE_12_SHIFT                (0U)
#define RGA2_DST_CSC_12_SW_DST_COE_12_MASK                 (0x1FFU << RGA2_DST_CSC_12_SW_DST_COE_12_SHIFT)              /* 0x000001FF */
/* DST_CSC_OFF1 */
#define RGA2_DST_CSC_OFF1_OFFSET                           (0x7CU)
#define RGA2_DST_CSC_OFF1_SW_DST_COE_OFF1_SHIFT            (0U)
#define RGA2_DST_CSC_OFF1_SW_DST_COE_OFF1_MASK             (0x7FFFFU << RGA2_DST_CSC_OFF1_SW_DST_COE_OFF1_SHIFT)        /* 0x0007FFFF */
/* DST_CSC_20 */
#define RGA2_DST_CSC_20_OFFSET                             (0x80U)
#define RGA2_DST_CSC_20_SW_DST_COE_20_SHIFT                (0U)
#define RGA2_DST_CSC_20_SW_DST_COE_20_MASK                 (0x1FFU << RGA2_DST_CSC_20_SW_DST_COE_20_SHIFT)              /* 0x000001FF */
/* DST_CSC_21 */
#define RGA2_DST_CSC_21_OFFSET                             (0x84U)
#define RGA2_DST_CSC_21_SW_DST_COE_21_SHIFT                (0U)
#define RGA2_DST_CSC_21_SW_DST_COE_21_MASK                 (0x1FFU << RGA2_DST_CSC_21_SW_DST_COE_21_SHIFT)              /* 0x000001FF */
/* DST_CSC_22 */
#define RGA2_DST_CSC_22_OFFSET                             (0x88U)
#define RGA2_DST_CSC_22_SW_DST_COE_22_SHIFT                (0U)
#define RGA2_DST_CSC_22_SW_DST_COE_22_MASK                 (0x1FFU << RGA2_DST_CSC_22_SW_DST_COE_22_SHIFT)              /* 0x000001FF */
/* DST_CSC_OFF2 */
#define RGA2_DST_CSC_OFF2_OFFSET                           (0x8CU)
#define RGA2_DST_CSC_OFF2_SW_DST_COE_OFF2_SHIFT            (0U)
#define RGA2_DST_CSC_OFF2_SW_DST_COE_OFF2_MASK             (0x7FFFFU << RGA2_DST_CSC_OFF2_SW_DST_COE_OFF2_SHIFT)        /* 0x0007FFFF */
/* MODE_CTRL */
#define RGA2_MODE_CTRL_OFFSET                              (0x100U)
#define RGA2_MODE_CTRL_SW_RENDER_MODE_SHIFT                (0U)
#define RGA2_MODE_CTRL_SW_RENDER_MODE_MASK                 (0x7U << RGA2_MODE_CTRL_SW_RENDER_MODE_SHIFT)                /* 0x00000007 */
#define RGA2_MODE_CTRL_SW_BB_MODE_SHIFT                    (3U)
#define RGA2_MODE_CTRL_SW_BB_MODE_MASK                     (0x1U << RGA2_MODE_CTRL_SW_BB_MODE_SHIFT)                    /* 0x00000008 */
#define RGA2_MODE_CTRL_SW_CF_ROP4_PAT_SHIFT                (4U)
#define RGA2_MODE_CTRL_SW_CF_ROP4_PAT_MASK                 (0x1U << RGA2_MODE_CTRL_SW_CF_ROP4_PAT_SHIFT)                /* 0x00000010 */
#define RGA2_MODE_CTRL_SW_ALPHA_ZERO_KEY_SHIFT             (5U)
#define RGA2_MODE_CTRL_SW_ALPHA_ZERO_KEY_MASK              (0x1U << RGA2_MODE_CTRL_SW_ALPHA_ZERO_KEY_SHIFT)             /* 0x00000020 */
#define RGA2_MODE_CTRL_SW_GRADIENT_SAT_SHIFT               (6U)
#define RGA2_MODE_CTRL_SW_GRADIENT_SAT_MASK                (0x1U << RGA2_MODE_CTRL_SW_GRADIENT_SAT_SHIFT)               /* 0x00000040 */
#define RGA2_MODE_CTRL_SW_INTR_CF_E_SHIFT                  (7U)
#define RGA2_MODE_CTRL_SW_INTR_CF_E_MASK                   (0x1U << RGA2_MODE_CTRL_SW_INTR_CF_E_SHIFT)                  /* 0x00000080 */
#define RGA2_MODE_CTRL_SW_YIN_YOUT_MODE_SHIFT              (10U)
#define RGA2_MODE_CTRL_SW_YIN_YOUT_MODE_MASK               (0x1U << RGA2_MODE_CTRL_SW_YIN_YOUT_MODE_SHIFT)              /* 0x00000400 */
#define RGA2_MODE_CTRL_SW_SRC_GAUSS_EN_SHIFT               (17U)
#define RGA2_MODE_CTRL_SW_SRC_GAUSS_EN_MASK                (0x1U << RGA2_MODE_CTRL_SW_SRC_GAUSS_EN_SHIFT)               /* 0x00020000 */
/* SRC_INFO */
#define RGA2_SRC_INFO_OFFSET                               (0x104U)
#define RGA2_SRC_INFO_SW_SRC_FMT_SHIFT                     (0U)
#define RGA2_SRC_INFO_SW_SRC_FMT_MASK                      (0xFU << RGA2_SRC_INFO_SW_SRC_FMT_SHIFT)                     /* 0x0000000F */
#define RGA2_SRC_INFO_SW_SRC_RBSWAP_SHIFT                  (4U)
#define RGA2_SRC_INFO_SW_SRC_RBSWAP_MASK                   (0x1U << RGA2_SRC_INFO_SW_SRC_RBSWAP_SHIFT)                  /* 0x00000010 */
#define RGA2_SRC_INFO_SW_SRC_ALPHA_SWAP_SHIFT              (5U)
#define RGA2_SRC_INFO_SW_SRC_ALPHA_SWAP_MASK               (0x1U << RGA2_SRC_INFO_SW_SRC_ALPHA_SWAP_SHIFT)              /* 0x00000020 */
#define RGA2_SRC_INFO_SW_SRC_UVSWAP_SHIFT                  (6U)
#define RGA2_SRC_INFO_SW_SRC_UVSWAP_MASK                   (0x1U << RGA2_SRC_INFO_SW_SRC_UVSWAP_SHIFT)                  /* 0x00000040 */
#define RGA2_SRC_INFO_SW_CP_ENDIAN_SHIFT                   (7U)
#define RGA2_SRC_INFO_SW_CP_ENDIAN_MASK                    (0x1U << RGA2_SRC_INFO_SW_CP_ENDIAN_SHIFT)                   /* 0x00000080 */
#define RGA2_SRC_INFO_SW_SRC_CSC_MODE_SHIFT                (8U)
#define RGA2_SRC_INFO_SW_SRC_CSC_MODE_MASK                 (0x3U << RGA2_SRC_INFO_SW_SRC_CSC_MODE_SHIFT)                /* 0x00000300 */
#define RGA2_SRC_INFO_SW_SRC_ROT_MODE_SHIFT                (10U)
#define RGA2_SRC_INFO_SW_SRC_ROT_MODE_MASK                 (0x3U << RGA2_SRC_INFO_SW_SRC_ROT_MODE_SHIFT)                /* 0x00000C00 */
#define RGA2_SRC_INFO_SW_SRC_MIR_MODE_SHIFT                (12U)
#define RGA2_SRC_INFO_SW_SRC_MIR_MODE_MASK                 (0x3U << RGA2_SRC_INFO_SW_SRC_MIR_MODE_SHIFT)                /* 0x00003000 */
#define RGA2_SRC_INFO_SW_SRC_HSCL_MODE_SHIFT               (14U)
#define RGA2_SRC_INFO_SW_SRC_HSCL_MODE_MASK                (0x3U << RGA2_SRC_INFO_SW_SRC_HSCL_MODE_SHIFT)               /* 0x0000C000 */
#define RGA2_SRC_INFO_SW_SRC_VSCL_MODE_SHIFT               (16U)
#define RGA2_SRC_INFO_SW_SRC_VSCL_MODE_MASK                (0x3U << RGA2_SRC_INFO_SW_SRC_VSCL_MODE_SHIFT)               /* 0x00030000 */
#define RGA2_SRC_INFO_SW_SRC_TRANS_MODE_SHIFT              (18U)
#define RGA2_SRC_INFO_SW_SRC_TRANS_MODE_MASK               (0x1U << RGA2_SRC_INFO_SW_SRC_TRANS_MODE_SHIFT)              /* 0x00040000 */
#define RGA2_SRC_INFO_SW_SRC_TRANS_E_SHIFT                 (19U)
#define RGA2_SRC_INFO_SW_SRC_TRANS_E_MASK                  (0xFU << RGA2_SRC_INFO_SW_SRC_TRANS_E_SHIFT)                 /* 0x00780000 */
#define RGA2_SRC_INFO_SW_SRC_DITHER_UP_SHIFT               (23U)
#define RGA2_SRC_INFO_SW_SRC_DITHER_UP_MASK                (0x1U << RGA2_SRC_INFO_SW_SRC_DITHER_UP_SHIFT)               /* 0x00800000 */
#define RGA2_SRC_INFO_SW_BIC_COE_SEL_SHIFT                 (24U)
#define RGA2_SRC_INFO_SW_BIC_COE_SEL_MASK                  (0x3U << RGA2_SRC_INFO_SW_BIC_COE_SEL_SHIFT)                 /* 0x03000000 */
#define RGA2_SRC_INFO_SW_VSP_MODE_SHIFT                    (26U)
#define RGA2_SRC_INFO_SW_VSP_MODE_MASK                     (0x1U << RGA2_SRC_INFO_SW_VSP_MODE_SHIFT)                    /* 0x04000000 */
#define RGA2_SRC_INFO_SW_SRC_YUV10_E_SHIFT                 (27U)
#define RGA2_SRC_INFO_SW_SRC_YUV10_E_MASK                  (0x1U << RGA2_SRC_INFO_SW_SRC_YUV10_E_SHIFT)                 /* 0x08000000 */
#define RGA2_SRC_INFO_SW_SRC_YUV10_ROUND_E_SHIFT           (28U)
#define RGA2_SRC_INFO_SW_SRC_YUV10_ROUND_E_MASK            (0x1U << RGA2_SRC_INFO_SW_SRC_YUV10_ROUND_E_SHIFT)           /* 0x10000000 */
#define RGA2_SRC_INFO_SW_VSD_MODE_SHIFT                    (29U)
#define RGA2_SRC_INFO_SW_VSD_MODE_MASK                     (0x1U << RGA2_SRC_INFO_SW_VSD_MODE_SHIFT)                    /* 0x20000000 */
#define RGA2_SRC_INFO_SW_HSP_MODE_SHIFT                    (30U)
#define RGA2_SRC_INFO_SW_HSP_MODE_MASK                     (0x1U << RGA2_SRC_INFO_SW_HSP_MODE_SHIFT)                    /* 0x40000000 */
#define RGA2_SRC_INFO_SW_HSD_MODE_SHIFT                    (31U)
#define RGA2_SRC_INFO_SW_HSD_MODE_MASK                     (0x1U << RGA2_SRC_INFO_SW_HSD_MODE_SHIFT)                    /* 0x80000000 */
/* SRC_BASE0 */
#define RGA2_SRC_BASE0_OFFSET                              (0x108U)
#define RGA2_SRC_BASE0_SW_SRC_BASE0_SHIFT                  (0U)
#define RGA2_SRC_BASE0_SW_SRC_BASE0_MASK                   (0xFFFFFFFFU << RGA2_SRC_BASE0_SW_SRC_BASE0_SHIFT)           /* 0xFFFFFFFF */
/* SRC_BASE1 */
#define RGA2_SRC_BASE1_OFFSET                              (0x10CU)
#define RGA2_SRC_BASE1_SW_SRC_BASE1_SHIFT                  (0U)
#define RGA2_SRC_BASE1_SW_SRC_BASE1_MASK                   (0xFFFFFFFFU << RGA2_SRC_BASE1_SW_SRC_BASE1_SHIFT)           /* 0xFFFFFFFF */
/* SRC_BASE2 */
#define RGA2_SRC_BASE2_OFFSET                              (0x110U)
#define RGA2_SRC_BASE2_SW_SRC_BASE2_SHIFT                  (0U)
#define RGA2_SRC_BASE2_SW_SRC_BASE2_MASK                   (0xFFFFFFFFU << RGA2_SRC_BASE2_SW_SRC_BASE2_SHIFT)           /* 0xFFFFFFFF */
/* SRC_BASE3 */
#define RGA2_SRC_BASE3_OFFSET                              (0x114U)
#define RGA2_SRC_BASE3_SW_SRC_BASE3_SHIFT                  (0U)
#define RGA2_SRC_BASE3_SW_SRC_BASE3_MASK                   (0xFFFFFFFFU << RGA2_SRC_BASE3_SW_SRC_BASE3_SHIFT)           /* 0xFFFFFFFF */
/* SRC_VIR_INFO */
#define RGA2_SRC_VIR_INFO_OFFSET                           (0x118U)
#define RGA2_SRC_VIR_INFO_SW_SRC_VIR_STRIDE_SHIFT          (0U)
#define RGA2_SRC_VIR_INFO_SW_SRC_VIR_STRIDE_MASK           (0xFFFFU << RGA2_SRC_VIR_INFO_SW_SRC_VIR_STRIDE_SHIFT)       /* 0x0000FFFF */
#define RGA2_SRC_VIR_INFO_SW_MASK_VIR_STRIDE_SHIFT         (16U)
#define RGA2_SRC_VIR_INFO_SW_MASK_VIR_STRIDE_MASK          (0x3FFU << RGA2_SRC_VIR_INFO_SW_MASK_VIR_STRIDE_SHIFT)       /* 0x03FF0000 */
/* SRC_ACT_INFO */
#define RGA2_SRC_ACT_INFO_OFFSET                           (0x11CU)
#define RGA2_SRC_ACT_INFO_SW_SRC_ACT_WIDTH_SHIFT           (0U)
#define RGA2_SRC_ACT_INFO_SW_SRC_ACT_WIDTH_MASK            (0x1FFFU << RGA2_SRC_ACT_INFO_SW_SRC_ACT_WIDTH_SHIFT)        /* 0x00001FFF */
#define RGA2_SRC_ACT_INFO_SW_SRC_ACT_HEIGHT_SHIFT          (16U)
#define RGA2_SRC_ACT_INFO_SW_SRC_ACT_HEIGHT_MASK           (0x1FFFU << RGA2_SRC_ACT_INFO_SW_SRC_ACT_HEIGHT_SHIFT)       /* 0x1FFF0000 */
/* SRC_X_FACTOR */
#define RGA2_SRC_X_FACTOR_OFFSET                           (0x120U)
#define RGA2_SRC_X_FACTOR_SW_SRC_HSD_FACTOR_SHIFT          (0U)
#define RGA2_SRC_X_FACTOR_SW_SRC_HSD_FACTOR_MASK           (0xFFFFU << RGA2_SRC_X_FACTOR_SW_SRC_HSD_FACTOR_SHIFT)       /* 0x0000FFFF */
#define RGA2_SRC_X_FACTOR_SW_SRC_HSP_FACTOR_SHIFT          (16U)
#define RGA2_SRC_X_FACTOR_SW_SRC_HSP_FACTOR_MASK           (0xFFFFU << RGA2_SRC_X_FACTOR_SW_SRC_HSP_FACTOR_SHIFT)       /* 0xFFFF0000 */
/* SRC_Y_FACTOR */
#define RGA2_SRC_Y_FACTOR_OFFSET                           (0x124U)
#define RGA2_SRC_Y_FACTOR_SW_SRC_VSD_FACTOR_SHIFT          (0U)
#define RGA2_SRC_Y_FACTOR_SW_SRC_VSD_FACTOR_MASK           (0xFFFFU << RGA2_SRC_Y_FACTOR_SW_SRC_VSD_FACTOR_SHIFT)       /* 0x0000FFFF */
#define RGA2_SRC_Y_FACTOR_SW_SRC_VSP_FACTOR_SHIFT          (16U)
#define RGA2_SRC_Y_FACTOR_SW_SRC_VSP_FACTOR_MASK           (0xFFFFU << RGA2_SRC_Y_FACTOR_SW_SRC_VSP_FACTOR_SHIFT)       /* 0xFFFF0000 */
/* SRC_BG_COLOR */
#define RGA2_SRC_BG_COLOR_OFFSET                           (0x128U)
#define RGA2_SRC_BG_COLOR_SW_SRC_BG_COLOR_SHIFT            (0U)
#define RGA2_SRC_BG_COLOR_SW_SRC_BG_COLOR_MASK             (0xFFFFFFFFU << RGA2_SRC_BG_COLOR_SW_SRC_BG_COLOR_SHIFT)     /* 0xFFFFFFFF */
/* GAUSS_COE */
#define RGA2_GAUSS_COE_OFFSET                              (0x128U)
#define RGA2_GAUSS_COE_SW_SRC_GAUSS_COE0_SHIFT             (0U)
#define RGA2_GAUSS_COE_SW_SRC_GAUSS_COE0_MASK              (0x3FU << RGA2_GAUSS_COE_SW_SRC_GAUSS_COE0_SHIFT)            /* 0x0000003F */
#define RGA2_GAUSS_COE_SW_SRC_GAUSS_COE1_SHIFT             (8U)
#define RGA2_GAUSS_COE_SW_SRC_GAUSS_COE1_MASK              (0x3FU << RGA2_GAUSS_COE_SW_SRC_GAUSS_COE1_SHIFT)            /* 0x00003F00 */
#define RGA2_GAUSS_COE_SW_SRC_GAUSS_COE2_SHIFT             (16U)
#define RGA2_GAUSS_COE_SW_SRC_GAUSS_COE2_MASK              (0xFFU << RGA2_GAUSS_COE_SW_SRC_GAUSS_COE2_SHIFT)            /* 0x00FF0000 */
/* SRC_FG_COLOR */
#define RGA2_SRC_FG_COLOR_OFFSET                           (0x12CU)
#define RGA2_SRC_FG_COLOR_SW_SRC_FG_COLOR_SHIFT            (0U)
#define RGA2_SRC_FG_COLOR_SW_SRC_FG_COLOR_MASK             (0xFFFFFFFFU << RGA2_SRC_FG_COLOR_SW_SRC_FG_COLOR_SHIFT)     /* 0xFFFFFFFF */
/* SRC_TR_COLOR0 */
#define RGA2_SRC_TR_COLOR0_OFFSET                          (0x130U)
#define RGA2_SRC_TR_COLOR0_SW_SRC_TRANS_RMIN_SHIFT         (0U)
#define RGA2_SRC_TR_COLOR0_SW_SRC_TRANS_RMIN_MASK          (0xFFU << RGA2_SRC_TR_COLOR0_SW_SRC_TRANS_RMIN_SHIFT)        /* 0x000000FF */
#define RGA2_SRC_TR_COLOR0_SW_SRC_TRANS_GMIN_SHIFT         (8U)
#define RGA2_SRC_TR_COLOR0_SW_SRC_TRANS_GMIN_MASK          (0xFFU << RGA2_SRC_TR_COLOR0_SW_SRC_TRANS_GMIN_SHIFT)        /* 0x0000FF00 */
#define RGA2_SRC_TR_COLOR0_SW_SRC_TRANS_BMIN_SHIFT         (16U)
#define RGA2_SRC_TR_COLOR0_SW_SRC_TRANS_BMIN_MASK          (0xFFU << RGA2_SRC_TR_COLOR0_SW_SRC_TRANS_BMIN_SHIFT)        /* 0x00FF0000 */
#define RGA2_SRC_TR_COLOR0_SW_SRC_TRANS_AMIN_SHIFT         (24U)
#define RGA2_SRC_TR_COLOR0_SW_SRC_TRANS_AMIN_MASK          (0xFFU << RGA2_SRC_TR_COLOR0_SW_SRC_TRANS_AMIN_SHIFT)        /* 0xFF000000 */
/* CP_GR_A */
#define RGA2_CP_GR_A_OFFSET                                (0x130U)
#define RGA2_CP_GR_A_SW_GRADIENT_X_A_SHIFT                 (0U)
#define RGA2_CP_GR_A_SW_GRADIENT_X_A_MASK                  (0xFFFFU << RGA2_CP_GR_A_SW_GRADIENT_X_A_SHIFT)              /* 0x0000FFFF */
#define RGA2_CP_GR_A_SW_GRADIENT_Y_A_SHIFT                 (16U)
#define RGA2_CP_GR_A_SW_GRADIENT_Y_A_MASK                  (0xFFFFU << RGA2_CP_GR_A_SW_GRADIENT_Y_A_SHIFT)              /* 0xFFFF0000 */
/* SRC_TR_COLOR1 */
#define RGA2_SRC_TR_COLOR1_OFFSET                          (0x134U)
#define RGA2_SRC_TR_COLOR1_SW_SRC_TRANS_RMAX_SHIFT         (0U)
#define RGA2_SRC_TR_COLOR1_SW_SRC_TRANS_RMAX_MASK          (0xFFU << RGA2_SRC_TR_COLOR1_SW_SRC_TRANS_RMAX_SHIFT)        /* 0x000000FF */
#define RGA2_SRC_TR_COLOR1_SW_SRC_TRANS_GMAX_SHIFT         (8U)
#define RGA2_SRC_TR_COLOR1_SW_SRC_TRANS_GMAX_MASK          (0xFFU << RGA2_SRC_TR_COLOR1_SW_SRC_TRANS_GMAX_SHIFT)        /* 0x0000FF00 */
#define RGA2_SRC_TR_COLOR1_SW_SRC_TRANS_BMAX_SHIFT         (16U)
#define RGA2_SRC_TR_COLOR1_SW_SRC_TRANS_BMAX_MASK          (0xFFU << RGA2_SRC_TR_COLOR1_SW_SRC_TRANS_BMAX_SHIFT)        /* 0x00FF0000 */
#define RGA2_SRC_TR_COLOR1_SW_SRC_TRANS_AMAX_SHIFT         (24U)
#define RGA2_SRC_TR_COLOR1_SW_SRC_TRANS_AMAX_MASK          (0xFFU << RGA2_SRC_TR_COLOR1_SW_SRC_TRANS_AMAX_SHIFT)        /* 0xFF000000 */
/* CP_GR_B */
#define RGA2_CP_GR_B_OFFSET                                (0x134U)
#define RGA2_CP_GR_B_SW_GRADIENT_X_B_SHIFT                 (0U)
#define RGA2_CP_GR_B_SW_GRADIENT_X_B_MASK                  (0xFFFFU << RGA2_CP_GR_B_SW_GRADIENT_X_B_SHIFT)              /* 0x0000FFFF */
#define RGA2_CP_GR_B_SW_GRADIENT_Y_B_SHIFT                 (16U)
#define RGA2_CP_GR_B_SW_GRADIENT_Y_B_MASK                  (0xFFFFU << RGA2_CP_GR_B_SW_GRADIENT_Y_B_SHIFT)              /* 0xFFFF0000 */
/* DST_INFO */
#define RGA2_DST_INFO_OFFSET                               (0x138U)
#define RGA2_DST_INFO_SW_DST_FMT_SHIFT                     (0U)
#define RGA2_DST_INFO_SW_DST_FMT_MASK                      (0xFU << RGA2_DST_INFO_SW_DST_FMT_SHIFT)                     /* 0x0000000F */
#define RGA2_DST_INFO_SW_DST_RBSWAP_SHIFT                  (4U)
#define RGA2_DST_INFO_SW_DST_RBSWAP_MASK                   (0x1U << RGA2_DST_INFO_SW_DST_RBSWAP_SHIFT)                  /* 0x00000010 */
#define RGA2_DST_INFO_SW_DST_ALPHA_SWAP_SHIFT              (5U)
#define RGA2_DST_INFO_SW_DST_ALPHA_SWAP_MASK               (0x1U << RGA2_DST_INFO_SW_DST_ALPHA_SWAP_SHIFT)              /* 0x00000020 */
#define RGA2_DST_INFO_SW_DST_UVSWAP_SHIFT                  (6U)
#define RGA2_DST_INFO_SW_DST_UVSWAP_MASK                   (0x1U << RGA2_DST_INFO_SW_DST_UVSWAP_SHIFT)                  /* 0x00000040 */
#define RGA2_DST_INFO_SW_SRC1_FMT_SHIFT                    (7U)
#define RGA2_DST_INFO_SW_SRC1_FMT_MASK                     (0x7U << RGA2_DST_INFO_SW_SRC1_FMT_SHIFT)                    /* 0x00000380 */
#define RGA2_DST_INFO_SW_SRC1_RBSWAP_SHIFT                 (10U)
#define RGA2_DST_INFO_SW_SRC1_RBSWAP_MASK                  (0x1U << RGA2_DST_INFO_SW_SRC1_RBSWAP_SHIFT)                 /* 0x00000400 */
#define RGA2_DST_INFO_SW_SRC1_ALPHA_SWAP_SHIFT             (11U)
#define RGA2_DST_INFO_SW_SRC1_ALPHA_SWAP_MASK              (0x1U << RGA2_DST_INFO_SW_SRC1_ALPHA_SWAP_SHIFT)             /* 0x00000800 */
#define RGA2_DST_INFO_SW_SRC1_DITHER_UP_SHIFT              (12U)
#define RGA2_DST_INFO_SW_SRC1_DITHER_UP_MASK               (0x1U << RGA2_DST_INFO_SW_SRC1_DITHER_UP_SHIFT)              /* 0x00001000 */
#define RGA2_DST_INFO_SW_DITHER_DOWN_SHIFT                 (13U)
#define RGA2_DST_INFO_SW_DITHER_DOWN_MASK                  (0x1U << RGA2_DST_INFO_SW_DITHER_DOWN_SHIFT)                 /* 0x00002000 */
#define RGA2_DST_INFO_SW_DITHER_MODE_SHIFT                 (14U)
#define RGA2_DST_INFO_SW_DITHER_MODE_MASK                  (0x3U << RGA2_DST_INFO_SW_DITHER_MODE_SHIFT)                 /* 0x0000C000 */
#define RGA2_DST_INFO_SW_DST_CSC_MODE_01_SHIFT             (16U)
#define RGA2_DST_INFO_SW_DST_CSC_MODE_01_MASK              (0x3U << RGA2_DST_INFO_SW_DST_CSC_MODE_01_SHIFT)             /* 0x00030000 */
#define RGA2_DST_INFO_SW_DST_CSC_CLIP_SHIFT                (18U)
#define RGA2_DST_INFO_SW_DST_CSC_CLIP_MASK                 (0x1U << RGA2_DST_INFO_SW_DST_CSC_CLIP_SHIFT)                /* 0x00040000 */
#define RGA2_DST_INFO_SW_DST_CSC_MODE_2_SHIFT              (19U)
#define RGA2_DST_INFO_SW_DST_CSC_MODE_2_MASK               (0x1U << RGA2_DST_INFO_SW_DST_CSC_MODE_2_SHIFT)              /* 0x00080000 */
#define RGA2_DST_INFO_SW_SRC1_CSC_MODE_SHIFT               (20U)
#define RGA2_DST_INFO_SW_SRC1_CSC_MODE_MASK                (0x3U << RGA2_DST_INFO_SW_SRC1_CSC_MODE_SHIFT)               /* 0x00300000 */
#define RGA2_DST_INFO_SW_SRC1_CSC_CLIP_SHIFT               (22U)
#define RGA2_DST_INFO_SW_SRC1_CSC_CLIP_MASK                (0x1U << RGA2_DST_INFO_SW_SRC1_CSC_CLIP_SHIFT)               /* 0x00400000 */
#define RGA2_DST_INFO_SW_DST_UVHDS_MODE_SHIFT              (23U)
#define RGA2_DST_INFO_SW_DST_UVHDS_MODE_MASK               (0x1U << RGA2_DST_INFO_SW_DST_UVHDS_MODE_SHIFT)              /* 0x00800000 */
#define RGA2_DST_INFO_SW_DST_FMT_YUV400_EN_SHIFT           (24U)
#define RGA2_DST_INFO_SW_DST_FMT_YUV400_EN_MASK            (0x1U << RGA2_DST_INFO_SW_DST_FMT_YUV400_EN_SHIFT)           /* 0x01000000 */
#define RGA2_DST_INFO_SW_DST_FMT_Y4_EN_SHIFT               (25U)
#define RGA2_DST_INFO_SW_DST_FMT_Y4_EN_MASK                (0x1U << RGA2_DST_INFO_SW_DST_FMT_Y4_EN_SHIFT)               /* 0x02000000 */
#define RGA2_DST_INFO_SW_DST_NN_QUANTIZE_EN_SHIFT          (26U)
#define RGA2_DST_INFO_SW_DST_NN_QUANTIZE_EN_MASK           (0x1U << RGA2_DST_INFO_SW_DST_NN_QUANTIZE_EN_SHIFT)          /* 0x04000000 */
#define RGA2_DST_INFO_SW_DST_UVVDS_MODE_SHIFT              (27U)
#define RGA2_DST_INFO_SW_DST_UVVDS_MODE_MASK               (0x1U << RGA2_DST_INFO_SW_DST_UVVDS_MODE_SHIFT)              /* 0x08000000 */
/* DST_BASE0 */
#define RGA2_DST_BASE0_OFFSET                              (0x13CU)
#define RGA2_DST_BASE0_SW_DST_BASE0_SHIFT                  (0U)
#define RGA2_DST_BASE0_SW_DST_BASE0_MASK                   (0xFFFFFFFFU << RGA2_DST_BASE0_SW_DST_BASE0_SHIFT)           /* 0xFFFFFFFF */
/* DST_BASE1 */
#define RGA2_DST_BASE1_OFFSET                              (0x140U)
#define RGA2_DST_BASE1_SW_DST_BASE1_SHIFT                  (0U)
#define RGA2_DST_BASE1_SW_DST_BASE1_MASK                   (0xFFFFFFFFU << RGA2_DST_BASE1_SW_DST_BASE1_SHIFT)           /* 0xFFFFFFFF */
/* DST_BASE2 */
#define RGA2_DST_BASE2_OFFSET                              (0x144U)
#define RGA2_DST_BASE2_SW_DST_BASE2_SHIFT                  (0U)
#define RGA2_DST_BASE2_SW_DST_BASE2_MASK                   (0xFFFFFFFFU << RGA2_DST_BASE2_SW_DST_BASE2_SHIFT)           /* 0xFFFFFFFF */
/* DST_VIR_INFO */
#define RGA2_DST_VIR_INFO_OFFSET                           (0x148U)
#define RGA2_DST_VIR_INFO_SW_DST_VIR_STRIDE_SHIFT          (0U)
#define RGA2_DST_VIR_INFO_SW_DST_VIR_STRIDE_MASK           (0xFFFFU << RGA2_DST_VIR_INFO_SW_DST_VIR_STRIDE_SHIFT)       /* 0x0000FFFF */
#define RGA2_DST_VIR_INFO_SW_SRC1_VIR_STRIDE_SHIFT         (16U)
#define RGA2_DST_VIR_INFO_SW_SRC1_VIR_STRIDE_MASK          (0x7FFFU << RGA2_DST_VIR_INFO_SW_SRC1_VIR_STRIDE_SHIFT)      /* 0x7FFF0000 */
/* DST_ACT_INFO */
#define RGA2_DST_ACT_INFO_OFFSET                           (0x14CU)
#define RGA2_DST_ACT_INFO_SW_DST_ACT_WIDTH_SHIFT           (0U)
#define RGA2_DST_ACT_INFO_SW_DST_ACT_WIDTH_MASK            (0xFFFU << RGA2_DST_ACT_INFO_SW_DST_ACT_WIDTH_SHIFT)         /* 0x00000FFF */
#define RGA2_DST_ACT_INFO_SW_DST_ACT_HEIGHT_SHIFT          (16U)
#define RGA2_DST_ACT_INFO_SW_DST_ACT_HEIGHT_MASK           (0xFFFU << RGA2_DST_ACT_INFO_SW_DST_ACT_HEIGHT_SHIFT)        /* 0x0FFF0000 */
/* ALPHA_CTRL0 */
#define RGA2_ALPHA_CTRL0_OFFSET                            (0x150U)
#define RGA2_ALPHA_CTRL0_SW_ALPHA_ROP_E_SHIFT              (0U)
#define RGA2_ALPHA_CTRL0_SW_ALPHA_ROP_E_MASK               (0x1U << RGA2_ALPHA_CTRL0_SW_ALPHA_ROP_E_SHIFT)              /* 0x00000001 */
#define RGA2_ALPHA_CTRL0_SW_ALPHA_ROP_SEL_SHIFT            (1U)
#define RGA2_ALPHA_CTRL0_SW_ALPHA_ROP_SEL_MASK             (0x1U << RGA2_ALPHA_CTRL0_SW_ALPHA_ROP_SEL_SHIFT)            /* 0x00000002 */
#define RGA2_ALPHA_CTRL0_SW_ROP_MODE_SHIFT                 (2U)
#define RGA2_ALPHA_CTRL0_SW_ROP_MODE_MASK                  (0x3U << RGA2_ALPHA_CTRL0_SW_ROP_MODE_SHIFT)                 /* 0x0000000C */
#define RGA2_ALPHA_CTRL0_SW_SRC_GLOBAL_ALPHA_SHIFT         (4U)
#define RGA2_ALPHA_CTRL0_SW_SRC_GLOBAL_ALPHA_MASK          (0xFFU << RGA2_ALPHA_CTRL0_SW_SRC_GLOBAL_ALPHA_SHIFT)        /* 0x00000FF0 */
#define RGA2_ALPHA_CTRL0_SW_DST_GLOBAL_ALPHA_SHIFT         (12U)
#define RGA2_ALPHA_CTRL0_SW_DST_GLOBAL_ALPHA_MASK          (0xFFU << RGA2_ALPHA_CTRL0_SW_DST_GLOBAL_ALPHA_SHIFT)        /* 0x000FF000 */
#define RGA2_ALPHA_CTRL0_SW_MASK_ENDIAN_SHIFT              (20U)
#define RGA2_ALPHA_CTRL0_SW_MASK_ENDIAN_MASK               (0x1U << RGA2_ALPHA_CTRL0_SW_MASK_ENDIAN_SHIFT)              /* 0x00100000 */
/* ALPHA_CTRL1 */
#define RGA2_ALPHA_CTRL1_OFFSET                            (0x154U)
#define RGA2_ALPHA_CTRL1_SW_DST_COLOR_M0_SHIFT             (0U)
#define RGA2_ALPHA_CTRL1_SW_DST_COLOR_M0_MASK              (0x1U << RGA2_ALPHA_CTRL1_SW_DST_COLOR_M0_SHIFT)             /* 0x00000001 */
#define RGA2_ALPHA_CTRL1_SW_SRC_COLOR_M0_SHIFT             (1U)
#define RGA2_ALPHA_CTRL1_SW_SRC_COLOR_M0_MASK              (0x1U << RGA2_ALPHA_CTRL1_SW_SRC_COLOR_M0_SHIFT)             /* 0x00000002 */
#define RGA2_ALPHA_CTRL1_SW_DST_FACTOR_M0_SHIFT            (2U)
#define RGA2_ALPHA_CTRL1_SW_DST_FACTOR_M0_MASK             (0x7U << RGA2_ALPHA_CTRL1_SW_DST_FACTOR_M0_SHIFT)            /* 0x0000001C */
#define RGA2_ALPHA_CTRL1_SW_SRC_FACTOR_M0_SHIFT            (5U)
#define RGA2_ALPHA_CTRL1_SW_SRC_FACTOR_M0_MASK             (0x7U << RGA2_ALPHA_CTRL1_SW_SRC_FACTOR_M0_SHIFT)            /* 0x000000E0 */
#define RGA2_ALPHA_CTRL1_SW_DST_ALPHA_CAL_M0_SHIFT         (8U)
#define RGA2_ALPHA_CTRL1_SW_DST_ALPHA_CAL_M0_MASK          (0x1U << RGA2_ALPHA_CTRL1_SW_DST_ALPHA_CAL_M0_SHIFT)         /* 0x00000100 */
#define RGA2_ALPHA_CTRL1_SW_SRC_ALPHA_CAL_M0_SHIFT         (9U)
#define RGA2_ALPHA_CTRL1_SW_SRC_ALPHA_CAL_M0_MASK          (0x1U << RGA2_ALPHA_CTRL1_SW_SRC_ALPHA_CAL_M0_SHIFT)         /* 0x00000200 */
#define RGA2_ALPHA_CTRL1_SW_DST_BLEND_M0_SHIFT             (10U)
#define RGA2_ALPHA_CTRL1_SW_DST_BLEND_M0_MASK              (0x3U << RGA2_ALPHA_CTRL1_SW_DST_BLEND_M0_SHIFT)             /* 0x00000C00 */
#define RGA2_ALPHA_CTRL1_SW_SRC_BLEND_M0_SHIFT             (12U)
#define RGA2_ALPHA_CTRL1_SW_SRC_BLEND_M0_MASK              (0x3U << RGA2_ALPHA_CTRL1_SW_SRC_BLEND_M0_SHIFT)             /* 0x00003000 */
#define RGA2_ALPHA_CTRL1_SW_DST_ALPHA_M0_SHIFT             (14U)
#define RGA2_ALPHA_CTRL1_SW_DST_ALPHA_M0_MASK              (0x1U << RGA2_ALPHA_CTRL1_SW_DST_ALPHA_M0_SHIFT)             /* 0x00004000 */
#define RGA2_ALPHA_CTRL1_SW_SRC_ALPHA_M0_SHIFT             (15U)
#define RGA2_ALPHA_CTRL1_SW_SRC_ALPHA_M0_MASK              (0x1U << RGA2_ALPHA_CTRL1_SW_SRC_ALPHA_M0_SHIFT)             /* 0x00008000 */
#define RGA2_ALPHA_CTRL1_SW_DST_FACTOR_M1_SHIFT            (16U)
#define RGA2_ALPHA_CTRL1_SW_DST_FACTOR_M1_MASK             (0x7U << RGA2_ALPHA_CTRL1_SW_DST_FACTOR_M1_SHIFT)            /* 0x00070000 */
#define RGA2_ALPHA_CTRL1_W_SRC_FACTOR_M1_SHIFT             (19U)
#define RGA2_ALPHA_CTRL1_W_SRC_FACTOR_M1_MASK              (0x7U << RGA2_ALPHA_CTRL1_W_SRC_FACTOR_M1_SHIFT)             /* 0x00380000 */
#define RGA2_ALPHA_CTRL1_SW_DST_ALPHA_CAL_M1_SHIFT         (22U)
#define RGA2_ALPHA_CTRL1_SW_DST_ALPHA_CAL_M1_MASK          (0x1U << RGA2_ALPHA_CTRL1_SW_DST_ALPHA_CAL_M1_SHIFT)         /* 0x00400000 */
#define RGA2_ALPHA_CTRL1_SW_SRC_ALPHA_CAL_M1_SHIFT         (23U)
#define RGA2_ALPHA_CTRL1_SW_SRC_ALPHA_CAL_M1_MASK          (0x1U << RGA2_ALPHA_CTRL1_SW_SRC_ALPHA_CAL_M1_SHIFT)         /* 0x00800000 */
#define RGA2_ALPHA_CTRL1_SW_DST_BLEND_M1_SHIFT             (24U)
#define RGA2_ALPHA_CTRL1_SW_DST_BLEND_M1_MASK              (0x3U << RGA2_ALPHA_CTRL1_SW_DST_BLEND_M1_SHIFT)             /* 0x03000000 */
#define RGA2_ALPHA_CTRL1_SW_SRC_BLEND_M1_SHIFT             (26U)
#define RGA2_ALPHA_CTRL1_SW_SRC_BLEND_M1_MASK              (0x3U << RGA2_ALPHA_CTRL1_SW_SRC_BLEND_M1_SHIFT)             /* 0x0C000000 */
#define RGA2_ALPHA_CTRL1_SW_DST_ALPHA_M1_SHIFT             (28U)
#define RGA2_ALPHA_CTRL1_SW_DST_ALPHA_M1_MASK              (0x1U << RGA2_ALPHA_CTRL1_SW_DST_ALPHA_M1_SHIFT)             /* 0x10000000 */
#define RGA2_ALPHA_CTRL1_SW_SRC_ALPHA_M1_SHIFT             (29U)
#define RGA2_ALPHA_CTRL1_SW_SRC_ALPHA_M1_MASK              (0x1U << RGA2_ALPHA_CTRL1_SW_SRC_ALPHA_M1_SHIFT)             /* 0x20000000 */
#define RGA2_ALPHA_CTRL1_RESERVED_SHIFT                    (30U)
#define RGA2_ALPHA_CTRL1_RESERVED_MASK                     (0x3U << RGA2_ALPHA_CTRL1_RESERVED_SHIFT)                    /* 0xC0000000 */
/* FADING_CTRL */
#define RGA2_FADING_CTRL_OFFSET                            (0x158U)
#define RGA2_FADING_CTRL_SW_FADING_OFFSET_R_SHIFT          (0U)
#define RGA2_FADING_CTRL_SW_FADING_OFFSET_R_MASK           (0xFFU << RGA2_FADING_CTRL_SW_FADING_OFFSET_R_SHIFT)         /* 0x000000FF */
#define RGA2_FADING_CTRL_SW_FADING_OFFSET_G_SHIFT          (8U)
#define RGA2_FADING_CTRL_SW_FADING_OFFSET_G_MASK           (0xFFU << RGA2_FADING_CTRL_SW_FADING_OFFSET_G_SHIFT)         /* 0x0000FF00 */
#define RGA2_FADING_CTRL_SW_FADING_OFFSET_B_SHIFT          (16U)
#define RGA2_FADING_CTRL_SW_FADING_OFFSET_B_MASK           (0xFFU << RGA2_FADING_CTRL_SW_FADING_OFFSET_B_SHIFT)         /* 0x00FF0000 */
#define RGA2_FADING_CTRL_SW_FADING_EN_SHIFT                (24U)
#define RGA2_FADING_CTRL_SW_FADING_EN_MASK                 (0x1U << RGA2_FADING_CTRL_SW_FADING_EN_SHIFT)                /* 0x01000000 */
/* PAT_CON */
#define RGA2_PAT_CON_OFFSET                                (0x15CU)
#define RGA2_PAT_CON_SW_PAT_WIDTH_SHIFT                    (0U)
#define RGA2_PAT_CON_SW_PAT_WIDTH_MASK                     (0xFFU << RGA2_PAT_CON_SW_PAT_WIDTH_SHIFT)                   /* 0x000000FF */
#define RGA2_PAT_CON_SW_PAT_HEIGHT_SHIFT                   (8U)
#define RGA2_PAT_CON_SW_PAT_HEIGHT_MASK                    (0xFFU << RGA2_PAT_CON_SW_PAT_HEIGHT_SHIFT)                  /* 0x0000FF00 */
#define RGA2_PAT_CON_SW_PAT_OFFSET_X_SHIFT                 (16U)
#define RGA2_PAT_CON_SW_PAT_OFFSET_X_MASK                  (0xFFU << RGA2_PAT_CON_SW_PAT_OFFSET_X_SHIFT)                /* 0x00FF0000 */
#define RGA2_PAT_CON_SW_PAT_OFFSET_Y_SHIFT                 (24U)
#define RGA2_PAT_CON_SW_PAT_OFFSET_Y_MASK                  (0xFFU << RGA2_PAT_CON_SW_PAT_OFFSET_Y_SHIFT)                /* 0xFF000000 */
/* NN_QUANTIZE_SCALE */
#define RGA2_NN_QUANTIZE_SCALE_OFFSET                      (0x160U)
#define RGA2_NN_QUANTIZE_SCALE_SW_NN_QUANTIZE_SCALE_R_SHIFT (0U)
#define RGA2_NN_QUANTIZE_SCALE_SW_NN_QUANTIZE_SCALE_R_MASK (0x3FFU << RGA2_NN_QUANTIZE_SCALE_SW_NN_QUANTIZE_SCALE_R_SHIFT) /* 0x000003FF */
#define RGA2_NN_QUANTIZE_SCALE_SW_NN_QUANTIZE_SCALE_G_SHIFT (10U)
#define RGA2_NN_QUANTIZE_SCALE_SW_NN_QUANTIZE_SCALE_G_MASK (0x3FFU << RGA2_NN_QUANTIZE_SCALE_SW_NN_QUANTIZE_SCALE_G_SHIFT) /* 0x000FFC00 */
#define RGA2_NN_QUANTIZE_SCALE_SW_NN_QUANTIZE_SCALE_B_SHIFT (20U)
#define RGA2_NN_QUANTIZE_SCALE_SW_NN_QUANTIZE_SCALE_B_MASK (0x3FFU << RGA2_NN_QUANTIZE_SCALE_SW_NN_QUANTIZE_SCALE_B_SHIFT) /* 0x3FF00000 */
/* ROP_CON0 */
#define RGA2_ROP_CON0_OFFSET                               (0x160U)
#define RGA2_ROP_CON0_SW_ROP3_CODE0_SHIFT                  (0U)
#define RGA2_ROP_CON0_SW_ROP3_CODE0_MASK                   (0x1FFFFFFU << RGA2_ROP_CON0_SW_ROP3_CODE0_SHIFT)            /* 0x01FFFFFF */
/* CP_GR_G */
#define RGA2_CP_GR_G_OFFSET                                (0x160U)
#define RGA2_CP_GR_G_SW_GRADIENT_X_G_SHIFT                 (0U)
#define RGA2_CP_GR_G_SW_GRADIENT_X_G_MASK                  (0xFFFFU << RGA2_CP_GR_G_SW_GRADIENT_X_G_SHIFT)              /* 0x0000FFFF */
#define RGA2_CP_GR_G_SW_GRADIENT_Y_G_SHIFT                 (16U)
#define RGA2_CP_GR_G_SW_GRADIENT_Y_G_MASK                  (0xFFFFU << RGA2_CP_GR_G_SW_GRADIENT_Y_G_SHIFT)              /* 0xFFFF0000 */
/* DST_Y4MAP_LUT0 */
#define RGA2_DST_Y4MAP_LUT0_OFFSET                         (0x160U)
#define RGA2_DST_Y4MAP_LUT0_SW_DST_Y4MAP_LUT0_SHIFT        (0U)
#define RGA2_DST_Y4MAP_LUT0_SW_DST_Y4MAP_LUT0_MASK         (0xFFFFFFFFU << RGA2_DST_Y4MAP_LUT0_SW_DST_Y4MAP_LUT0_SHIFT) /* 0xFFFFFFFF */
/* OSD_INVERTSION_CAL0 */
#define RGA2_OSD_INVERTSION_CAL0_OFFSET                    (0x160U)
#define RGA2_OSD_INVERTSION_CAL0_SW_OSD_MINY_SHIFT         (0U)
#define RGA2_OSD_INVERTSION_CAL0_SW_OSD_MINY_MASK          (0xFFU << RGA2_OSD_INVERTSION_CAL0_SW_OSD_MINY_SHIFT)        /* 0x000000FF */
#define RGA2_OSD_INVERTSION_CAL0_SW_OSD_MAXY_SHIFT         (8U)
#define RGA2_OSD_INVERTSION_CAL0_SW_OSD_MAXY_MASK          (0xFFU << RGA2_OSD_INVERTSION_CAL0_SW_OSD_MAXY_SHIFT)        /* 0x0000FF00 */
#define RGA2_OSD_INVERTSION_CAL0_SW_OSD_MINC_SHIFT         (16U)
#define RGA2_OSD_INVERTSION_CAL0_SW_OSD_MINC_MASK          (0xFFU << RGA2_OSD_INVERTSION_CAL0_SW_OSD_MINC_SHIFT)        /* 0x00FF0000 */
#define RGA2_OSD_INVERTSION_CAL0_SW_OSD_MAXC_SHIFT         (24U)
#define RGA2_OSD_INVERTSION_CAL0_SW_OSD_MAXC_MASK          (0xFFU << RGA2_OSD_INVERTSION_CAL0_SW_OSD_MAXC_SHIFT)        /* 0xFF000000 */
/* NN_QUANTIZE_OFFSET */
#define RGA2_NN_QUANTIZE_OFFSET_OFFSET                     (0x164U)
#define RGA2_NN_QUANTIZE_OFFSET_SW_NN_QUANTIZE_OFFSET_R_SHIFT (0U)
#define RGA2_NN_QUANTIZE_OFFSET_SW_NN_QUANTIZE_OFFSET_R_MASK (0x1FFU << RGA2_NN_QUANTIZE_OFFSET_SW_NN_QUANTIZE_OFFSET_R_SHIFT) /* 0x000001FF */
#define RGA2_NN_QUANTIZE_OFFSET_SW_NN_QUANTIZE_OFFSET_G_SHIFT (10U)
#define RGA2_NN_QUANTIZE_OFFSET_SW_NN_QUANTIZE_OFFSET_G_MASK (0x1FFU << RGA2_NN_QUANTIZE_OFFSET_SW_NN_QUANTIZE_OFFSET_G_SHIFT) /* 0x0007FC00 */
#define RGA2_NN_QUANTIZE_OFFSET_SW_NN_QUANTIZE_OFFSET_B_SHIFT (20U)
#define RGA2_NN_QUANTIZE_OFFSET_SW_NN_QUANTIZE_OFFSET_B_MASK (0x1FFU << RGA2_NN_QUANTIZE_OFFSET_SW_NN_QUANTIZE_OFFSET_B_SHIFT) /* 0x1FF00000 */
/* CP_GR_R */
#define RGA2_CP_GR_R_OFFSET                                (0x164U)
#define RGA2_CP_GR_R_SW_GRADIENT_X_R_SHIFT                 (0U)
#define RGA2_CP_GR_R_SW_GRADIENT_X_R_MASK                  (0xFFFFU << RGA2_CP_GR_R_SW_GRADIENT_X_R_SHIFT)              /* 0x0000FFFF */
#define RGA2_CP_GR_R_SW_GRADIENT_Y_R_SHIFT                 (16U)
#define RGA2_CP_GR_R_SW_GRADIENT_Y_R_MASK                  (0xFFFFU << RGA2_CP_GR_R_SW_GRADIENT_Y_R_SHIFT)              /* 0xFFFF0000 */
/* DST_Y4MAP_LUT1 */
#define RGA2_DST_Y4MAP_LUT1_OFFSET                         (0x164U)
#define RGA2_DST_Y4MAP_LUT1_SW_DST_Y4MAP_LUT1_SHIFT        (0U)
#define RGA2_DST_Y4MAP_LUT1_SW_DST_Y4MAP_LUT1_MASK         (0xFFFFFFFFU << RGA2_DST_Y4MAP_LUT1_SW_DST_Y4MAP_LUT1_SHIFT) /* 0xFFFFFFFF */
/* ROP_CON1 */
#define RGA2_ROP_CON1_OFFSET                               (0x164U)
#define RGA2_ROP_CON1_SW_ROP3_CODE1_SHIFT                  (0U)
#define RGA2_ROP_CON1_SW_ROP3_CODE1_MASK                   (0x1FFFFFFU << RGA2_ROP_CON1_SW_ROP3_CODE1_SHIFT)            /* 0x01FFFFFF */
/* MASK_BASE */
#define RGA2_MASK_BASE_OFFSET                              (0x168U)
#define RGA2_MASK_BASE_SW_MASK_BASE_SHIFT                  (0U)
#define RGA2_MASK_BASE_SW_MASK_BASE_MASK                   (0xFFFFFFFFU << RGA2_MASK_BASE_SW_MASK_BASE_SHIFT)           /* 0xFFFFFFFF */
/****************************************MIPI_DSI****************************************/
/* VERSION */
#define MIPI_DSI_VERSION_OFFSET                            (0x0U)
#define MIPI_DSI_VERSION                                   (0x3133302AU)
#define MIPI_DSI_VERSION_VERSION_SHIFT                     (0U)
#define MIPI_DSI_VERSION_VERSION_MASK                      (0xFFFFFFFFU << MIPI_DSI_VERSION_VERSION_SHIFT)              /* 0xFFFFFFFF */
/* PWR_UP */
#define MIPI_DSI_PWR_UP_OFFSET                             (0x4U)
#define MIPI_DSI_PWR_UP_SHUTDOWNZ_SHIFT                    (0U)
#define MIPI_DSI_PWR_UP_SHUTDOWNZ_MASK                     (0x1U << MIPI_DSI_PWR_UP_SHUTDOWNZ_SHIFT)                    /* 0x00000001 */
/* CLKMGR_CFG */
#define MIPI_DSI_CLKMGR_CFG_OFFSET                         (0x8U)
#define MIPI_DSI_CLKMGR_CFG_TX_ESC_CLK_DIVISION_SHIFT      (0U)
#define MIPI_DSI_CLKMGR_CFG_TX_ESC_CLK_DIVISION_MASK       (0xFFU << MIPI_DSI_CLKMGR_CFG_TX_ESC_CLK_DIVISION_SHIFT)     /* 0x000000FF */
#define MIPI_DSI_CLKMGR_CFG_TO_CLK_DIVISION_SHIFT          (8U)
#define MIPI_DSI_CLKMGR_CFG_TO_CLK_DIVISION_MASK           (0xFFU << MIPI_DSI_CLKMGR_CFG_TO_CLK_DIVISION_SHIFT)         /* 0x0000FF00 */
/* DPI_VCID */
#define MIPI_DSI_DPI_VCID_OFFSET                           (0xCU)
#define MIPI_DSI_DPI_VCID_DPI_VCID_SHIFT                   (0U)
#define MIPI_DSI_DPI_VCID_DPI_VCID_MASK                    (0x3U << MIPI_DSI_DPI_VCID_DPI_VCID_SHIFT)                   /* 0x00000003 */
/* DPI_COLOR_CODING */
#define MIPI_DSI_DPI_COLOR_CODING_OFFSET                   (0x10U)
#define MIPI_DSI_DPI_COLOR_CODING_DPI_COLOR_CODING_SHIFT   (0U)
#define MIPI_DSI_DPI_COLOR_CODING_DPI_COLOR_CODING_MASK    (0xFU << MIPI_DSI_DPI_COLOR_CODING_DPI_COLOR_CODING_SHIFT)   /* 0x0000000F */
#define MIPI_DSI_DPI_COLOR_CODING_LOOSELY18_EN_SHIFT       (8U)
#define MIPI_DSI_DPI_COLOR_CODING_LOOSELY18_EN_MASK        (0x1U << MIPI_DSI_DPI_COLOR_CODING_LOOSELY18_EN_SHIFT)       /* 0x00000100 */
/* DPI_CFG_POL */
#define MIPI_DSI_DPI_CFG_POL_OFFSET                        (0x14U)
#define MIPI_DSI_DPI_CFG_POL_DATAEN_ACTIVE_LOW_SHIFT       (0U)
#define MIPI_DSI_DPI_CFG_POL_DATAEN_ACTIVE_LOW_MASK        (0x1U << MIPI_DSI_DPI_CFG_POL_DATAEN_ACTIVE_LOW_SHIFT)       /* 0x00000001 */
#define MIPI_DSI_DPI_CFG_POL_VSYNC_ACTIVE_LOW_SHIFT        (1U)
#define MIPI_DSI_DPI_CFG_POL_VSYNC_ACTIVE_LOW_MASK         (0x1U << MIPI_DSI_DPI_CFG_POL_VSYNC_ACTIVE_LOW_SHIFT)        /* 0x00000002 */
#define MIPI_DSI_DPI_CFG_POL_HSYNC_ACTIVE_LOW_SHIFT        (2U)
#define MIPI_DSI_DPI_CFG_POL_HSYNC_ACTIVE_LOW_MASK         (0x1U << MIPI_DSI_DPI_CFG_POL_HSYNC_ACTIVE_LOW_SHIFT)        /* 0x00000004 */
#define MIPI_DSI_DPI_CFG_POL_SHUTD_ACTIVE_LOW_SHIFT        (3U)
#define MIPI_DSI_DPI_CFG_POL_SHUTD_ACTIVE_LOW_MASK         (0x1U << MIPI_DSI_DPI_CFG_POL_SHUTD_ACTIVE_LOW_SHIFT)        /* 0x00000008 */
#define MIPI_DSI_DPI_CFG_POL_COLORM_ACTIVE_LOW_SHIFT       (4U)
#define MIPI_DSI_DPI_CFG_POL_COLORM_ACTIVE_LOW_MASK        (0x1U << MIPI_DSI_DPI_CFG_POL_COLORM_ACTIVE_LOW_SHIFT)       /* 0x00000010 */
/* DPI_LP_CMD_TIM */
#define MIPI_DSI_DPI_LP_CMD_TIM_OFFSET                     (0x18U)
#define MIPI_DSI_DPI_LP_CMD_TIM_INVACT_IPCMD_TIME_SHIFT    (0U)
#define MIPI_DSI_DPI_LP_CMD_TIM_INVACT_IPCMD_TIME_MASK     (0xFFU << MIPI_DSI_DPI_LP_CMD_TIM_INVACT_IPCMD_TIME_SHIFT)   /* 0x000000FF */
#define MIPI_DSI_DPI_LP_CMD_TIM_OUTVACT_IPCMD_TIME_SHIFT   (16U)
#define MIPI_DSI_DPI_LP_CMD_TIM_OUTVACT_IPCMD_TIME_MASK    (0xFFU << MIPI_DSI_DPI_LP_CMD_TIM_OUTVACT_IPCMD_TIME_SHIFT)  /* 0x00FF0000 */
/* DBI_VCID */
#define MIPI_DSI_DBI_VCID_OFFSET                           (0x1CU)
#define MIPI_DSI_DBI_VCID_DBI_VCID_SHIFT                   (0U)
#define MIPI_DSI_DBI_VCID_DBI_VCID_MASK                    (0x3U << MIPI_DSI_DBI_VCID_DBI_VCID_SHIFT)                   /* 0x00000003 */
/* DBI_CFG */
#define MIPI_DSI_DBI_CFG_OFFSET                            (0x20U)
#define MIPI_DSI_DBI_CFG_IN_DBI_CONF_SHIFT                 (0U)
#define MIPI_DSI_DBI_CFG_IN_DBI_CONF_MASK                  (0xFU << MIPI_DSI_DBI_CFG_IN_DBI_CONF_SHIFT)                 /* 0x0000000F */
#define MIPI_DSI_DBI_CFG_OUT_DBI_CONF_SHIFT                (8U)
#define MIPI_DSI_DBI_CFG_OUT_DBI_CONF_MASK                 (0xFU << MIPI_DSI_DBI_CFG_OUT_DBI_CONF_SHIFT)                /* 0x00000F00 */
#define MIPI_DSI_DBI_CFG_LUT_SIZE_CONF_SHIFT               (16U)
#define MIPI_DSI_DBI_CFG_LUT_SIZE_CONF_MASK                (0x3U << MIPI_DSI_DBI_CFG_LUT_SIZE_CONF_SHIFT)               /* 0x00030000 */
/* DBI_PARTITIONING_EN */
#define MIPI_DSI_DBI_PARTITIONING_EN_OFFSET                (0x24U)
#define MIPI_DSI_DBI_PARTITIONING_EN_PARTITIONING_EN_SHIFT (0U)
#define MIPI_DSI_DBI_PARTITIONING_EN_PARTITIONING_EN_MASK  (0x1U << MIPI_DSI_DBI_PARTITIONING_EN_PARTITIONING_EN_SHIFT) /* 0x00000001 */
/* DBI_CMDSIZE */
#define MIPI_DSI_DBI_CMDSIZE_OFFSET                        (0x28U)
#define MIPI_DSI_DBI_CMDSIZE_WR_CMD_SIZE_SHIFT             (0U)
#define MIPI_DSI_DBI_CMDSIZE_WR_CMD_SIZE_MASK              (0xFFFFU << MIPI_DSI_DBI_CMDSIZE_WR_CMD_SIZE_SHIFT)          /* 0x0000FFFF */
#define MIPI_DSI_DBI_CMDSIZE_ALLOWED_CMD_SIZE_SHIFT        (16U)
#define MIPI_DSI_DBI_CMDSIZE_ALLOWED_CMD_SIZE_MASK         (0xFFFFU << MIPI_DSI_DBI_CMDSIZE_ALLOWED_CMD_SIZE_SHIFT)     /* 0xFFFF0000 */
/* PCKHDL_CFG */
#define MIPI_DSI_PCKHDL_CFG_OFFSET                         (0x2CU)
#define MIPI_DSI_PCKHDL_CFG_EOTP_TX_EN_SHIFT               (0U)
#define MIPI_DSI_PCKHDL_CFG_EOTP_TX_EN_MASK                (0x1U << MIPI_DSI_PCKHDL_CFG_EOTP_TX_EN_SHIFT)               /* 0x00000001 */
#define MIPI_DSI_PCKHDL_CFG_EOTP_RX_EN_SHIFT               (1U)
#define MIPI_DSI_PCKHDL_CFG_EOTP_RX_EN_MASK                (0x1U << MIPI_DSI_PCKHDL_CFG_EOTP_RX_EN_SHIFT)               /* 0x00000002 */
#define MIPI_DSI_PCKHDL_CFG_BTA_EN_SHIFT                   (2U)
#define MIPI_DSI_PCKHDL_CFG_BTA_EN_MASK                    (0x1U << MIPI_DSI_PCKHDL_CFG_BTA_EN_SHIFT)                   /* 0x00000004 */
#define MIPI_DSI_PCKHDL_CFG_ECC_RX_EN_SHIFT                (3U)
#define MIPI_DSI_PCKHDL_CFG_ECC_RX_EN_MASK                 (0x1U << MIPI_DSI_PCKHDL_CFG_ECC_RX_EN_SHIFT)                /* 0x00000008 */
#define MIPI_DSI_PCKHDL_CFG_CRC_RX_EN_SHIFT                (4U)
#define MIPI_DSI_PCKHDL_CFG_CRC_RX_EN_MASK                 (0x1U << MIPI_DSI_PCKHDL_CFG_CRC_RX_EN_SHIFT)                /* 0x00000010 */
/* GEN_VCID */
#define MIPI_DSI_GEN_VCID_OFFSET                           (0x30U)
#define MIPI_DSI_GEN_VCID_GEN_VCID_RX_SHIFT                (0U)
#define MIPI_DSI_GEN_VCID_GEN_VCID_RX_MASK                 (0x3U << MIPI_DSI_GEN_VCID_GEN_VCID_RX_SHIFT)                /* 0x00000003 */
/* MODE_CFG */
#define MIPI_DSI_MODE_CFG_OFFSET                           (0x34U)
#define MIPI_DSI_MODE_CFG_CMD_VIDEO_MODE_SHIFT             (0U)
#define MIPI_DSI_MODE_CFG_CMD_VIDEO_MODE_MASK              (0x1U << MIPI_DSI_MODE_CFG_CMD_VIDEO_MODE_SHIFT)             /* 0x00000001 */
/* VID_MODE_CFG */
#define MIPI_DSI_VID_MODE_CFG_OFFSET                       (0x38U)
#define MIPI_DSI_VID_MODE_CFG_VID_MODE_TYPE_SHIFT          (0U)
#define MIPI_DSI_VID_MODE_CFG_VID_MODE_TYPE_MASK           (0x3U << MIPI_DSI_VID_MODE_CFG_VID_MODE_TYPE_SHIFT)          /* 0x00000003 */
#define MIPI_DSI_VID_MODE_CFG_IP_VSA_EN_SHIFT              (8U)
#define MIPI_DSI_VID_MODE_CFG_IP_VSA_EN_MASK               (0x1U << MIPI_DSI_VID_MODE_CFG_IP_VSA_EN_SHIFT)              /* 0x00000100 */
#define MIPI_DSI_VID_MODE_CFG_IP_VBP_EN_SHIFT              (9U)
#define MIPI_DSI_VID_MODE_CFG_IP_VBP_EN_MASK               (0x1U << MIPI_DSI_VID_MODE_CFG_IP_VBP_EN_SHIFT)              /* 0x00000200 */
#define MIPI_DSI_VID_MODE_CFG_IP_VFP_EN_SHIFT              (10U)
#define MIPI_DSI_VID_MODE_CFG_IP_VFP_EN_MASK               (0x1U << MIPI_DSI_VID_MODE_CFG_IP_VFP_EN_SHIFT)              /* 0x00000400 */
#define MIPI_DSI_VID_MODE_CFG_IP_VACT_EN_SHIFT             (11U)
#define MIPI_DSI_VID_MODE_CFG_IP_VACT_EN_MASK              (0x1U << MIPI_DSI_VID_MODE_CFG_IP_VACT_EN_SHIFT)             /* 0x00000800 */
#define MIPI_DSI_VID_MODE_CFG_IP_HBP_EN_SHIFT              (12U)
#define MIPI_DSI_VID_MODE_CFG_IP_HBP_EN_MASK               (0x1U << MIPI_DSI_VID_MODE_CFG_IP_HBP_EN_SHIFT)              /* 0x00001000 */
#define MIPI_DSI_VID_MODE_CFG_IP_HFP_EN_SHIFT              (13U)
#define MIPI_DSI_VID_MODE_CFG_IP_HFP_EN_MASK               (0x1U << MIPI_DSI_VID_MODE_CFG_IP_HFP_EN_SHIFT)              /* 0x00002000 */
#define MIPI_DSI_VID_MODE_CFG_FRAME_BTA_ACK_EN_SHIFT       (14U)
#define MIPI_DSI_VID_MODE_CFG_FRAME_BTA_ACK_EN_MASK        (0x1U << MIPI_DSI_VID_MODE_CFG_FRAME_BTA_ACK_EN_SHIFT)       /* 0x00004000 */
#define MIPI_DSI_VID_MODE_CFG_IP_CMD_EN_SHIFT              (15U)
#define MIPI_DSI_VID_MODE_CFG_IP_CMD_EN_MASK               (0x1U << MIPI_DSI_VID_MODE_CFG_IP_CMD_EN_SHIFT)              /* 0x00008000 */
#define MIPI_DSI_VID_MODE_CFG_VGP_EN_SHIFT                 (16U)
#define MIPI_DSI_VID_MODE_CFG_VGP_EN_MASK                  (0x1U << MIPI_DSI_VID_MODE_CFG_VGP_EN_SHIFT)                 /* 0x00010000 */
#define MIPI_DSI_VID_MODE_CFG_VGP_MODE_SHIFT               (20U)
#define MIPI_DSI_VID_MODE_CFG_VGP_MODE_MASK                (0x1U << MIPI_DSI_VID_MODE_CFG_VGP_MODE_SHIFT)               /* 0x00100000 */
#define MIPI_DSI_VID_MODE_CFG_VGP_ORIENTATION_SHIFT        (24U)
#define MIPI_DSI_VID_MODE_CFG_VGP_ORIENTATION_MASK         (0x1U << MIPI_DSI_VID_MODE_CFG_VGP_ORIENTATION_SHIFT)        /* 0x01000000 */
/* VID_PKT_SIZE */
#define MIPI_DSI_VID_PKT_SIZE_OFFSET                       (0x3CU)
#define MIPI_DSI_VID_PKT_SIZE_VID_PKT_SIZE_SHIFT           (0U)
#define MIPI_DSI_VID_PKT_SIZE_VID_PKT_SIZE_MASK            (0x3FFFU << MIPI_DSI_VID_PKT_SIZE_VID_PKT_SIZE_SHIFT)        /* 0x00003FFF */
/* VID_NUM_CHUNKS */
#define MIPI_DSI_VID_NUM_CHUNKS_OFFSET                     (0x40U)
#define MIPI_DSI_VID_NUM_CHUNKS_VID_NUM_CHUNKS_SHIFT       (0U)
#define MIPI_DSI_VID_NUM_CHUNKS_VID_NUM_CHUNKS_MASK        (0x1FFFU << MIPI_DSI_VID_NUM_CHUNKS_VID_NUM_CHUNKS_SHIFT)    /* 0x00001FFF */
/* VID_NULL_SIZE */
#define MIPI_DSI_VID_NULL_SIZE_OFFSET                      (0x44U)
#define MIPI_DSI_VID_NULL_SIZE_VID_NULL_SIZE_SHIFT         (0U)
#define MIPI_DSI_VID_NULL_SIZE_VID_NULL_SIZE_MASK          (0x1FFFU << MIPI_DSI_VID_NULL_SIZE_VID_NULL_SIZE_SHIFT)      /* 0x00001FFF */
/* VID_HSA_TIME */
#define MIPI_DSI_VID_HSA_TIME_OFFSET                       (0x48U)
#define MIPI_DSI_VID_HSA_TIME_VID_HSA_TIME_SHIFT           (0U)
#define MIPI_DSI_VID_HSA_TIME_VID_HSA_TIME_MASK            (0xFFFU << MIPI_DSI_VID_HSA_TIME_VID_HSA_TIME_SHIFT)         /* 0x00000FFF */
/* VID_HBP_TIME */
#define MIPI_DSI_VID_HBP_TIME_OFFSET                       (0x4CU)
#define MIPI_DSI_VID_HBP_TIME_VID_HBP_TIME_SHIFT           (0U)
#define MIPI_DSI_VID_HBP_TIME_VID_HBP_TIME_MASK            (0xFFFU << MIPI_DSI_VID_HBP_TIME_VID_HBP_TIME_SHIFT)         /* 0x00000FFF */
/* VID_HLINE_TIME */
#define MIPI_DSI_VID_HLINE_TIME_OFFSET                     (0x50U)
#define MIPI_DSI_VID_HLINE_TIME_VID_HLINE_TIME_SHIFT       (0U)
#define MIPI_DSI_VID_HLINE_TIME_VID_HLINE_TIME_MASK        (0x7FFFU << MIPI_DSI_VID_HLINE_TIME_VID_HLINE_TIME_SHIFT)    /* 0x00007FFF */
/* VID_VSA_LINES */
#define MIPI_DSI_VID_VSA_LINES_OFFSET                      (0x54U)
#define MIPI_DSI_VID_VSA_LINES_VSA_LINES_SHIFT             (0U)
#define MIPI_DSI_VID_VSA_LINES_VSA_LINES_MASK              (0x3FFU << MIPI_DSI_VID_VSA_LINES_VSA_LINES_SHIFT)           /* 0x000003FF */
/* VID_VBP_LINES */
#define MIPI_DSI_VID_VBP_LINES_OFFSET                      (0x58U)
#define MIPI_DSI_VID_VBP_LINES_VBP_LINE_SHIFT              (0U)
#define MIPI_DSI_VID_VBP_LINES_VBP_LINE_MASK               (0x3FFU << MIPI_DSI_VID_VBP_LINES_VBP_LINE_SHIFT)            /* 0x000003FF */
/* VID_VFP_LINES */
#define MIPI_DSI_VID_VFP_LINES_OFFSET                      (0x5CU)
#define MIPI_DSI_VID_VFP_LINES_VFP_LINES_SHIFT             (0U)
#define MIPI_DSI_VID_VFP_LINES_VFP_LINES_MASK              (0x3FFU << MIPI_DSI_VID_VFP_LINES_VFP_LINES_SHIFT)           /* 0x000003FF */
/* VID_VACTIVE_LINES */
#define MIPI_DSI_VID_VACTIVE_LINES_OFFSET                  (0x60U)
#define MIPI_DSI_VID_VACTIVE_LINES_V_ACTIVE_LINES_SHIFT    (0U)
#define MIPI_DSI_VID_VACTIVE_LINES_V_ACTIVE_LINES_MASK     (0x3FFFU << MIPI_DSI_VID_VACTIVE_LINES_V_ACTIVE_LINES_SHIFT) /* 0x00003FFF */
/* EDPI_CMD_SIZE */
#define MIPI_DSI_EDPI_CMD_SIZE_OFFSET                      (0x64U)
#define MIPI_DSI_EDPI_CMD_SIZE_EDPI_ALLOWED_CMD_SIZE_SHIFT (0U)
#define MIPI_DSI_EDPI_CMD_SIZE_EDPI_ALLOWED_CMD_SIZE_MASK  (0xFFFFU << MIPI_DSI_EDPI_CMD_SIZE_EDPI_ALLOWED_CMD_SIZE_SHIFT) /* 0x0000FFFF */
/* CMD_MODE_CFG */
#define MIPI_DSI_CMD_MODE_CFG_OFFSET                       (0x68U)
#define MIPI_DSI_CMD_MODE_CFG_TEAR_FX_EN_SHIFT             (0U)
#define MIPI_DSI_CMD_MODE_CFG_TEAR_FX_EN_MASK              (0x1U << MIPI_DSI_CMD_MODE_CFG_TEAR_FX_EN_SHIFT)             /* 0x00000001 */
#define MIPI_DSI_CMD_MODE_CFG_ACK_RQST_EN_SHIFT            (1U)
#define MIPI_DSI_CMD_MODE_CFG_ACK_RQST_EN_MASK             (0x1U << MIPI_DSI_CMD_MODE_CFG_ACK_RQST_EN_SHIFT)            /* 0x00000002 */
#define MIPI_DSI_CMD_MODE_CFG_GEN_SW_0P_TX_SHIFT           (8U)
#define MIPI_DSI_CMD_MODE_CFG_GEN_SW_0P_TX_MASK            (0x1U << MIPI_DSI_CMD_MODE_CFG_GEN_SW_0P_TX_SHIFT)           /* 0x00000100 */
#define MIPI_DSI_CMD_MODE_CFG_GEN_SW_1P_TX_SHIFT           (9U)
#define MIPI_DSI_CMD_MODE_CFG_GEN_SW_1P_TX_MASK            (0x1U << MIPI_DSI_CMD_MODE_CFG_GEN_SW_1P_TX_SHIFT)           /* 0x00000200 */
#define MIPI_DSI_CMD_MODE_CFG_GEN_SW_2P_TX_SHIFT           (10U)
#define MIPI_DSI_CMD_MODE_CFG_GEN_SW_2P_TX_MASK            (0x1U << MIPI_DSI_CMD_MODE_CFG_GEN_SW_2P_TX_SHIFT)           /* 0x00000400 */
#define MIPI_DSI_CMD_MODE_CFG_GEN_SR_0P_TX_SHIFT           (11U)
#define MIPI_DSI_CMD_MODE_CFG_GEN_SR_0P_TX_MASK            (0x1U << MIPI_DSI_CMD_MODE_CFG_GEN_SR_0P_TX_SHIFT)           /* 0x00000800 */
#define MIPI_DSI_CMD_MODE_CFG_GEN_SR_1P_TX_SHIFT           (12U)
#define MIPI_DSI_CMD_MODE_CFG_GEN_SR_1P_TX_MASK            (0x1U << MIPI_DSI_CMD_MODE_CFG_GEN_SR_1P_TX_SHIFT)           /* 0x00001000 */
#define MIPI_DSI_CMD_MODE_CFG_GEN_SR_2P_TX_SHIFT           (13U)
#define MIPI_DSI_CMD_MODE_CFG_GEN_SR_2P_TX_MASK            (0x1U << MIPI_DSI_CMD_MODE_CFG_GEN_SR_2P_TX_SHIFT)           /* 0x00002000 */
#define MIPI_DSI_CMD_MODE_CFG_GEN_LW_TX_SHIFT              (14U)
#define MIPI_DSI_CMD_MODE_CFG_GEN_LW_TX_MASK               (0x1U << MIPI_DSI_CMD_MODE_CFG_GEN_LW_TX_SHIFT)              /* 0x00004000 */
#define MIPI_DSI_CMD_MODE_CFG_DCS_SW_0P_TX_SHIFT           (16U)
#define MIPI_DSI_CMD_MODE_CFG_DCS_SW_0P_TX_MASK            (0x1U << MIPI_DSI_CMD_MODE_CFG_DCS_SW_0P_TX_SHIFT)           /* 0x00010000 */
#define MIPI_DSI_CMD_MODE_CFG_DSC_SW_1P_TX_SHIFT           (17U)
#define MIPI_DSI_CMD_MODE_CFG_DSC_SW_1P_TX_MASK            (0x1U << MIPI_DSI_CMD_MODE_CFG_DSC_SW_1P_TX_SHIFT)           /* 0x00020000 */
#define MIPI_DSI_CMD_MODE_CFG_DCS_SR_0P_TX_SHIFT           (18U)
#define MIPI_DSI_CMD_MODE_CFG_DCS_SR_0P_TX_MASK            (0x1U << MIPI_DSI_CMD_MODE_CFG_DCS_SR_0P_TX_SHIFT)           /* 0x00040000 */
#define MIPI_DSI_CMD_MODE_CFG_DSC_LW_TX_SHIFT              (19U)
#define MIPI_DSI_CMD_MODE_CFG_DSC_LW_TX_MASK               (0x1U << MIPI_DSI_CMD_MODE_CFG_DSC_LW_TX_SHIFT)              /* 0x00080000 */
#define MIPI_DSI_CMD_MODE_CFG_MAX_RD_PKT_SIZE_SHIFT        (24U)
#define MIPI_DSI_CMD_MODE_CFG_MAX_RD_PKT_SIZE_MASK         (0x1U << MIPI_DSI_CMD_MODE_CFG_MAX_RD_PKT_SIZE_SHIFT)        /* 0x01000000 */
/* GEN_HDR */
#define MIPI_DSI_GEN_HDR_OFFSET                            (0x6CU)
#define MIPI_DSI_GEN_HDR_GEN_DT_SHIFT                      (0U)
#define MIPI_DSI_GEN_HDR_GEN_DT_MASK                       (0x3FU << MIPI_DSI_GEN_HDR_GEN_DT_SHIFT)                     /* 0x0000003F */
#define MIPI_DSI_GEN_HDR_GEN_VC_SHIFT                      (6U)
#define MIPI_DSI_GEN_HDR_GEN_VC_MASK                       (0x3U << MIPI_DSI_GEN_HDR_GEN_VC_SHIFT)                      /* 0x000000C0 */
#define MIPI_DSI_GEN_HDR_GEN_WC_LSBYTE_SHIFT               (8U)
#define MIPI_DSI_GEN_HDR_GEN_WC_LSBYTE_MASK                (0xFFU << MIPI_DSI_GEN_HDR_GEN_WC_LSBYTE_SHIFT)              /* 0x0000FF00 */
#define MIPI_DSI_GEN_HDR_GEM_WC_MSBYTE_SHIFT               (16U)
#define MIPI_DSI_GEN_HDR_GEM_WC_MSBYTE_MASK                (0xFFU << MIPI_DSI_GEN_HDR_GEM_WC_MSBYTE_SHIFT)              /* 0x00FF0000 */
/* GEN_PLD_DATA */
#define MIPI_DSI_GEN_PLD_DATA_OFFSET                       (0x70U)
#define MIPI_DSI_GEN_PLD_DATA_GEN_PLD_B1_SHIFT             (0U)
#define MIPI_DSI_GEN_PLD_DATA_GEN_PLD_B1_MASK              (0xFFU << MIPI_DSI_GEN_PLD_DATA_GEN_PLD_B1_SHIFT)            /* 0x000000FF */
#define MIPI_DSI_GEN_PLD_DATA_GEN_PLD_B2_SHIFT             (8U)
#define MIPI_DSI_GEN_PLD_DATA_GEN_PLD_B2_MASK              (0xFFU << MIPI_DSI_GEN_PLD_DATA_GEN_PLD_B2_SHIFT)            /* 0x0000FF00 */
#define MIPI_DSI_GEN_PLD_DATA_GEN_PLD_B3_SHIFT             (16U)
#define MIPI_DSI_GEN_PLD_DATA_GEN_PLD_B3_MASK              (0xFFU << MIPI_DSI_GEN_PLD_DATA_GEN_PLD_B3_SHIFT)            /* 0x00FF0000 */
#define MIPI_DSI_GEN_PLD_DATA_GEN_PLD_B4_SHIFT             (24U)
#define MIPI_DSI_GEN_PLD_DATA_GEN_PLD_B4_MASK              (0xFFU << MIPI_DSI_GEN_PLD_DATA_GEN_PLD_B4_SHIFT)            /* 0xFF000000 */
/* CMD_PKT_STATUS */
#define MIPI_DSI_CMD_PKT_STATUS_OFFSET                     (0x74U)
#define MIPI_DSI_CMD_PKT_STATUS                            (0x1515U)
#define MIPI_DSI_CMD_PKT_STATUS_GEN_CMD_EMPTY_SHIFT        (0U)
#define MIPI_DSI_CMD_PKT_STATUS_GEN_CMD_EMPTY_MASK         (0x1U << MIPI_DSI_CMD_PKT_STATUS_GEN_CMD_EMPTY_SHIFT)        /* 0x00000001 */
#define MIPI_DSI_CMD_PKT_STATUS_GEN_CMD_FULL_SHIFT         (1U)
#define MIPI_DSI_CMD_PKT_STATUS_GEN_CMD_FULL_MASK          (0x1U << MIPI_DSI_CMD_PKT_STATUS_GEN_CMD_FULL_SHIFT)         /* 0x00000002 */
#define MIPI_DSI_CMD_PKT_STATUS_GEN_PLD_W_EMPTY_SHIFT      (2U)
#define MIPI_DSI_CMD_PKT_STATUS_GEN_PLD_W_EMPTY_MASK       (0x1U << MIPI_DSI_CMD_PKT_STATUS_GEN_PLD_W_EMPTY_SHIFT)      /* 0x00000004 */
#define MIPI_DSI_CMD_PKT_STATUS_GEN_PLD_W_FULL_SHIFT       (3U)
#define MIPI_DSI_CMD_PKT_STATUS_GEN_PLD_W_FULL_MASK        (0x1U << MIPI_DSI_CMD_PKT_STATUS_GEN_PLD_W_FULL_SHIFT)       /* 0x00000008 */
#define MIPI_DSI_CMD_PKT_STATUS_GEN_PLD_R_EMPTY_SHIFT      (4U)
#define MIPI_DSI_CMD_PKT_STATUS_GEN_PLD_R_EMPTY_MASK       (0x1U << MIPI_DSI_CMD_PKT_STATUS_GEN_PLD_R_EMPTY_SHIFT)      /* 0x00000010 */
#define MIPI_DSI_CMD_PKT_STATUS_GEN_PLD_R_FULL_SHIFT       (5U)
#define MIPI_DSI_CMD_PKT_STATUS_GEN_PLD_R_FULL_MASK        (0x1U << MIPI_DSI_CMD_PKT_STATUS_GEN_PLD_R_FULL_SHIFT)       /* 0x00000020 */
#define MIPI_DSI_CMD_PKT_STATUS_GEN_RD_CMD_BUSY_SHIFT      (6U)
#define MIPI_DSI_CMD_PKT_STATUS_GEN_RD_CMD_BUSY_MASK       (0x1U << MIPI_DSI_CMD_PKT_STATUS_GEN_RD_CMD_BUSY_SHIFT)      /* 0x00000040 */
#define MIPI_DSI_CMD_PKT_STATUS_DBI_CMD_EMPTY_SHIFT        (8U)
#define MIPI_DSI_CMD_PKT_STATUS_DBI_CMD_EMPTY_MASK         (0x1U << MIPI_DSI_CMD_PKT_STATUS_DBI_CMD_EMPTY_SHIFT)        /* 0x00000100 */
#define MIPI_DSI_CMD_PKT_STATUS_DBI_CMD_FULL_SHIFT         (9U)
#define MIPI_DSI_CMD_PKT_STATUS_DBI_CMD_FULL_MASK          (0x1U << MIPI_DSI_CMD_PKT_STATUS_DBI_CMD_FULL_SHIFT)         /* 0x00000200 */
#define MIPI_DSI_CMD_PKT_STATUS_DBI_PLD_W_EMPTY_SHIFT      (10U)
#define MIPI_DSI_CMD_PKT_STATUS_DBI_PLD_W_EMPTY_MASK       (0x1U << MIPI_DSI_CMD_PKT_STATUS_DBI_PLD_W_EMPTY_SHIFT)      /* 0x00000400 */
#define MIPI_DSI_CMD_PKT_STATUS_DBI_PLD_W_FULL_SHIFT       (11U)
#define MIPI_DSI_CMD_PKT_STATUS_DBI_PLD_W_FULL_MASK        (0x1U << MIPI_DSI_CMD_PKT_STATUS_DBI_PLD_W_FULL_SHIFT)       /* 0x00000800 */
#define MIPI_DSI_CMD_PKT_STATUS_DBI_PLD_R_EMPTY_SHIFT      (12U)
#define MIPI_DSI_CMD_PKT_STATUS_DBI_PLD_R_EMPTY_MASK       (0x1U << MIPI_DSI_CMD_PKT_STATUS_DBI_PLD_R_EMPTY_SHIFT)      /* 0x00001000 */
#define MIPI_DSI_CMD_PKT_STATUS_DBI_PLD_R_FULL_SHIFT       (13U)
#define MIPI_DSI_CMD_PKT_STATUS_DBI_PLD_R_FULL_MASK        (0x1U << MIPI_DSI_CMD_PKT_STATUS_DBI_PLD_R_FULL_SHIFT)       /* 0x00002000 */
#define MIPI_DSI_CMD_PKT_STATUS_DBI_RD_CMD_BUSY_SHIFT      (14U)
#define MIPI_DSI_CMD_PKT_STATUS_DBI_RD_CMD_BUSY_MASK       (0x1U << MIPI_DSI_CMD_PKT_STATUS_DBI_RD_CMD_BUSY_SHIFT)      /* 0x00004000 */
/* TO_CNT_CFG */
#define MIPI_DSI_TO_CNT_CFG_OFFSET                         (0x78U)
#define MIPI_DSI_TO_CNT_CFG_LPRX_TO_CNT_SHIFT              (0U)
#define MIPI_DSI_TO_CNT_CFG_LPRX_TO_CNT_MASK               (0xFFFFU << MIPI_DSI_TO_CNT_CFG_LPRX_TO_CNT_SHIFT)           /* 0x0000FFFF */
#define MIPI_DSI_TO_CNT_CFG_HSTX_TO_CNT_SHIFT              (16U)
#define MIPI_DSI_TO_CNT_CFG_HSTX_TO_CNT_MASK               (0xFFFFU << MIPI_DSI_TO_CNT_CFG_HSTX_TO_CNT_SHIFT)           /* 0xFFFF0000 */
/* HS_RD_TO_CNT */
#define MIPI_DSI_HS_RD_TO_CNT_OFFSET                       (0x7CU)
#define MIPI_DSI_HS_RD_TO_CNT_HS_RD_TO_CNT_SHIFT           (0U)
#define MIPI_DSI_HS_RD_TO_CNT_HS_RD_TO_CNT_MASK            (0xFFFFU << MIPI_DSI_HS_RD_TO_CNT_HS_RD_TO_CNT_SHIFT)        /* 0x0000FFFF */
/* LP_RD_TO_CNT */
#define MIPI_DSI_LP_RD_TO_CNT_OFFSET                       (0x80U)
#define MIPI_DSI_LP_RD_TO_CNT_LP_RD_TO_CNT_SHIFT           (0U)
#define MIPI_DSI_LP_RD_TO_CNT_LP_RD_TO_CNT_MASK            (0xFFFFU << MIPI_DSI_LP_RD_TO_CNT_LP_RD_TO_CNT_SHIFT)        /* 0x0000FFFF */
/* HS_WR_TO_CNT */
#define MIPI_DSI_HS_WR_TO_CNT_OFFSET                       (0x84U)
#define MIPI_DSI_HS_WR_TO_CNT_HS_WR_TO_CNT_SHIFT           (0U)
#define MIPI_DSI_HS_WR_TO_CNT_HS_WR_TO_CNT_MASK            (0xFFFFU << MIPI_DSI_HS_WR_TO_CNT_HS_WR_TO_CNT_SHIFT)        /* 0x0000FFFF */
#define MIPI_DSI_HS_WR_TO_CNT_PRESP_TO_MODE_SHIFT          (24U)
#define MIPI_DSI_HS_WR_TO_CNT_PRESP_TO_MODE_MASK           (0x1U << MIPI_DSI_HS_WR_TO_CNT_PRESP_TO_MODE_SHIFT)          /* 0x01000000 */
/* LP_WR_TO_CNT */
#define MIPI_DSI_LP_WR_TO_CNT_OFFSET                       (0x88U)
#define MIPI_DSI_LP_WR_TO_CNT_LP_WR_TO_CNT_SHIFT           (0U)
#define MIPI_DSI_LP_WR_TO_CNT_LP_WR_TO_CNT_MASK            (0xFFFFU << MIPI_DSI_LP_WR_TO_CNT_LP_WR_TO_CNT_SHIFT)        /* 0x0000FFFF */
/* BTA_TO_CNT */
#define MIPI_DSI_BTA_TO_CNT_OFFSET                         (0x8CU)
#define MIPI_DSI_BTA_TO_CNT_BTA_TO_CNT_SHIFT               (0U)
#define MIPI_DSI_BTA_TO_CNT_BTA_TO_CNT_MASK                (0xFFFFU << MIPI_DSI_BTA_TO_CNT_BTA_TO_CNT_SHIFT)            /* 0x0000FFFF */
/* SDF_3D */
#define MIPI_DSI_SDF_3D_OFFSET                             (0x90U)
#define MIPI_DSI_SDF_3D_MODE_3D_SHIFT                      (0U)
#define MIPI_DSI_SDF_3D_MODE_3D_MASK                       (0x3U << MIPI_DSI_SDF_3D_MODE_3D_SHIFT)                      /* 0x00000003 */
#define MIPI_DSI_SDF_3D_FORMAT_3D_SHIFT                    (2U)
#define MIPI_DSI_SDF_3D_FORMAT_3D_MASK                     (0x3U << MIPI_DSI_SDF_3D_FORMAT_3D_SHIFT)                    /* 0x0000000C */
#define MIPI_DSI_SDF_3D_SECOND_VSYNC_SHIFT                 (4U)
#define MIPI_DSI_SDF_3D_SECOND_VSYNC_MASK                  (0x1U << MIPI_DSI_SDF_3D_SECOND_VSYNC_SHIFT)                 /* 0x00000010 */
#define MIPI_DSI_SDF_3D_RIGHT_FIRST_SHIFT                  (5U)
#define MIPI_DSI_SDF_3D_RIGHT_FIRST_MASK                   (0x1U << MIPI_DSI_SDF_3D_RIGHT_FIRST_SHIFT)                  /* 0x00000020 */
#define MIPI_DSI_SDF_3D_SEND_3D_CFG_SHIFT                  (16U)
#define MIPI_DSI_SDF_3D_SEND_3D_CFG_MASK                   (0x1U << MIPI_DSI_SDF_3D_SEND_3D_CFG_SHIFT)                  /* 0x00010000 */
/* LPCLK_CTRL */
#define MIPI_DSI_LPCLK_CTRL_OFFSET                         (0x94U)
#define MIPI_DSI_LPCLK_CTRL_PHY_TXREQUESTCLKHS_SHIFT       (0U)
#define MIPI_DSI_LPCLK_CTRL_PHY_TXREQUESTCLKHS_MASK        (0x1U << MIPI_DSI_LPCLK_CTRL_PHY_TXREQUESTCLKHS_SHIFT)       /* 0x00000001 */
#define MIPI_DSI_LPCLK_CTRL_AUTO_CLKLANE_CTRL_SHIFT        (1U)
#define MIPI_DSI_LPCLK_CTRL_AUTO_CLKLANE_CTRL_MASK         (0x1U << MIPI_DSI_LPCLK_CTRL_AUTO_CLKLANE_CTRL_SHIFT)        /* 0x00000002 */
/* PHY_TMR_LPCLK_CFG */
#define MIPI_DSI_PHY_TMR_LPCLK_CFG_OFFSET                  (0x98U)
#define MIPI_DSI_PHY_TMR_LPCLK_CFG_PHY_CLKLP2HS_TIME_SHIFT (0U)
#define MIPI_DSI_PHY_TMR_LPCLK_CFG_PHY_CLKLP2HS_TIME_MASK  (0x3FFU << MIPI_DSI_PHY_TMR_LPCLK_CFG_PHY_CLKLP2HS_TIME_SHIFT) /* 0x000003FF */
#define MIPI_DSI_PHY_TMR_LPCLK_CFG_PHY_CLKHS2LP_TIME_SHIFT (16U)
#define MIPI_DSI_PHY_TMR_LPCLK_CFG_PHY_CLKHS2LP_TIME_MASK  (0x3FFU << MIPI_DSI_PHY_TMR_LPCLK_CFG_PHY_CLKHS2LP_TIME_SHIFT) /* 0x03FF0000 */
/* PHY_TMR_CFG */
#define MIPI_DSI_PHY_TMR_CFG_OFFSET                        (0x9CU)
#define MIPI_DSI_PHY_TMR_CFG_MAX_RD_TIME_SHIFT             (0U)
#define MIPI_DSI_PHY_TMR_CFG_MAX_RD_TIME_MASK              (0x7FFFU << MIPI_DSI_PHY_TMR_CFG_MAX_RD_TIME_SHIFT)          /* 0x00007FFF */
#define MIPI_DSI_PHY_TMR_CFG_PHY_LP2HS_TIME_SHIFT          (16U)
#define MIPI_DSI_PHY_TMR_CFG_PHY_LP2HS_TIME_MASK           (0xFFU << MIPI_DSI_PHY_TMR_CFG_PHY_LP2HS_TIME_SHIFT)         /* 0x00FF0000 */
#define MIPI_DSI_PHY_TMR_CFG_PHY_HS2LP_TIME_SHIFT          (24U)
#define MIPI_DSI_PHY_TMR_CFG_PHY_HS2LP_TIME_MASK           (0xFFU << MIPI_DSI_PHY_TMR_CFG_PHY_HS2LP_TIME_SHIFT)         /* 0xFF000000 */
/* PHY_RSTZ */
#define MIPI_DSI_PHY_RSTZ_OFFSET                           (0xA0U)
#define MIPI_DSI_PHY_RSTZ_PHY_SHUTDOWNZ_SHIFT              (0U)
#define MIPI_DSI_PHY_RSTZ_PHY_SHUTDOWNZ_MASK               (0x1U << MIPI_DSI_PHY_RSTZ_PHY_SHUTDOWNZ_SHIFT)              /* 0x00000001 */
#define MIPI_DSI_PHY_RSTZ_PHY_RSTZ_SHIFT                   (1U)
#define MIPI_DSI_PHY_RSTZ_PHY_RSTZ_MASK                    (0x1U << MIPI_DSI_PHY_RSTZ_PHY_RSTZ_SHIFT)                   /* 0x00000002 */
#define MIPI_DSI_PHY_RSTZ_PHY_ENABLECLK_SHIFT              (2U)
#define MIPI_DSI_PHY_RSTZ_PHY_ENABLECLK_MASK               (0x1U << MIPI_DSI_PHY_RSTZ_PHY_ENABLECLK_SHIFT)              /* 0x00000004 */
#define MIPI_DSI_PHY_RSTZ_PHY_FORCEPLL_SHIFT               (3U)
#define MIPI_DSI_PHY_RSTZ_PHY_FORCEPLL_MASK                (0x1U << MIPI_DSI_PHY_RSTZ_PHY_FORCEPLL_SHIFT)               /* 0x00000008 */
/* PHY_IF_CFG */
#define MIPI_DSI_PHY_IF_CFG_OFFSET                         (0xA4U)
#define MIPI_DSI_PHY_IF_CFG_N_LANES_SHIFT                  (0U)
#define MIPI_DSI_PHY_IF_CFG_N_LANES_MASK                   (0x3U << MIPI_DSI_PHY_IF_CFG_N_LANES_SHIFT)                  /* 0x00000003 */
#define MIPI_DSI_PHY_IF_CFG_PHY_STOP_WAIT_TIME_SHIFT       (8U)
#define MIPI_DSI_PHY_IF_CFG_PHY_STOP_WAIT_TIME_MASK        (0xFFU << MIPI_DSI_PHY_IF_CFG_PHY_STOP_WAIT_TIME_SHIFT)      /* 0x0000FF00 */
/* PHY_ULPS_CTRL */
#define MIPI_DSI_PHY_ULPS_CTRL_OFFSET                      (0xA8U)
#define MIPI_DSI_PHY_ULPS_CTRL_PHY_TXREQULPSCLK_SHIFT      (0U)
#define MIPI_DSI_PHY_ULPS_CTRL_PHY_TXREQULPSCLK_MASK       (0x1U << MIPI_DSI_PHY_ULPS_CTRL_PHY_TXREQULPSCLK_SHIFT)      /* 0x00000001 */
#define MIPI_DSI_PHY_ULPS_CTRL_PHY_TXEXITULPSCLK_SHIFT     (1U)
#define MIPI_DSI_PHY_ULPS_CTRL_PHY_TXEXITULPSCLK_MASK      (0x1U << MIPI_DSI_PHY_ULPS_CTRL_PHY_TXEXITULPSCLK_SHIFT)     /* 0x00000002 */
#define MIPI_DSI_PHY_ULPS_CTRL_PHY_TXREQULPSLAN_SHIFT      (2U)
#define MIPI_DSI_PHY_ULPS_CTRL_PHY_TXREQULPSLAN_MASK       (0x1U << MIPI_DSI_PHY_ULPS_CTRL_PHY_TXREQULPSLAN_SHIFT)      /* 0x00000004 */
#define MIPI_DSI_PHY_ULPS_CTRL_PHY_TXEXITULPSLAN_SHIFT     (3U)
#define MIPI_DSI_PHY_ULPS_CTRL_PHY_TXEXITULPSLAN_MASK      (0x1U << MIPI_DSI_PHY_ULPS_CTRL_PHY_TXEXITULPSLAN_SHIFT)     /* 0x00000008 */
/* PHY_TX_TRIGGERS */
#define MIPI_DSI_PHY_TX_TRIGGERS_OFFSET                    (0xACU)
#define MIPI_DSI_PHY_TX_TRIGGERS_PHY_TX_TRIGGERS_SHIFT     (0U)
#define MIPI_DSI_PHY_TX_TRIGGERS_PHY_TX_TRIGGERS_MASK      (0xFU << MIPI_DSI_PHY_TX_TRIGGERS_PHY_TX_TRIGGERS_SHIFT)     /* 0x0000000F */
/* PHY_STATUS */
#define MIPI_DSI_PHY_STATUS_OFFSET                         (0xB0U)
#define MIPI_DSI_PHY_STATUS                                (0x1528U)
#define MIPI_DSI_PHY_STATUS_PHY_LOCK_SHIFT                 (0U)
#define MIPI_DSI_PHY_STATUS_PHY_LOCK_MASK                  (0x1U << MIPI_DSI_PHY_STATUS_PHY_LOCK_SHIFT)                 /* 0x00000001 */
#define MIPI_DSI_PHY_STATUS_PHY_DIRECTION_SHIFT            (1U)
#define MIPI_DSI_PHY_STATUS_PHY_DIRECTION_MASK             (0x1U << MIPI_DSI_PHY_STATUS_PHY_DIRECTION_SHIFT)            /* 0x00000002 */
#define MIPI_DSI_PHY_STATUS_PHY_STOPSTATECLKLANE_SHIFT     (2U)
#define MIPI_DSI_PHY_STATUS_PHY_STOPSTATECLKLANE_MASK      (0x1U << MIPI_DSI_PHY_STATUS_PHY_STOPSTATECLKLANE_SHIFT)     /* 0x00000004 */
#define MIPI_DSI_PHY_STATUS_PHY_ULPSACTIVENOTCLK_SHIFT     (3U)
#define MIPI_DSI_PHY_STATUS_PHY_ULPSACTIVENOTCLK_MASK      (0x1U << MIPI_DSI_PHY_STATUS_PHY_ULPSACTIVENOTCLK_SHIFT)     /* 0x00000008 */
#define MIPI_DSI_PHY_STATUS_PHY_STOPSTATE0LANE_SHIFT       (4U)
#define MIPI_DSI_PHY_STATUS_PHY_STOPSTATE0LANE_MASK        (0x1U << MIPI_DSI_PHY_STATUS_PHY_STOPSTATE0LANE_SHIFT)       /* 0x00000010 */
#define MIPI_DSI_PHY_STATUS_PHY_ULPSACTIVENOT0LANE_SHIFT   (5U)
#define MIPI_DSI_PHY_STATUS_PHY_ULPSACTIVENOT0LANE_MASK    (0x1U << MIPI_DSI_PHY_STATUS_PHY_ULPSACTIVENOT0LANE_SHIFT)   /* 0x00000020 */
#define MIPI_DSI_PHY_STATUS_PHY_RXULPSESC0LANE_SHIFT       (6U)
#define MIPI_DSI_PHY_STATUS_PHY_RXULPSESC0LANE_MASK        (0x1U << MIPI_DSI_PHY_STATUS_PHY_RXULPSESC0LANE_SHIFT)       /* 0x00000040 */
#define MIPI_DSI_PHY_STATUS_PHY_STOPSTATE1LANE_SHIFT       (7U)
#define MIPI_DSI_PHY_STATUS_PHY_STOPSTATE1LANE_MASK        (0x1U << MIPI_DSI_PHY_STATUS_PHY_STOPSTATE1LANE_SHIFT)       /* 0x00000080 */
#define MIPI_DSI_PHY_STATUS_PHY_ULPSACTIVENOT1LANE_SHIFT   (8U)
#define MIPI_DSI_PHY_STATUS_PHY_ULPSACTIVENOT1LANE_MASK    (0x1U << MIPI_DSI_PHY_STATUS_PHY_ULPSACTIVENOT1LANE_SHIFT)   /* 0x00000100 */
#define MIPI_DSI_PHY_STATUS_PHY_STOPSTATE2LANE_SHIFT       (9U)
#define MIPI_DSI_PHY_STATUS_PHY_STOPSTATE2LANE_MASK        (0x1U << MIPI_DSI_PHY_STATUS_PHY_STOPSTATE2LANE_SHIFT)       /* 0x00000200 */
#define MIPI_DSI_PHY_STATUS_PHY_ULPSACTIVENOT2LANE_SHIFT   (10U)
#define MIPI_DSI_PHY_STATUS_PHY_ULPSACTIVENOT2LANE_MASK    (0x1U << MIPI_DSI_PHY_STATUS_PHY_ULPSACTIVENOT2LANE_SHIFT)   /* 0x00000400 */
#define MIPI_DSI_PHY_STATUS_PHY_STOPSTATELANE_SHIFT        (11U)
#define MIPI_DSI_PHY_STATUS_PHY_STOPSTATELANE_MASK         (0x1U << MIPI_DSI_PHY_STATUS_PHY_STOPSTATELANE_SHIFT)        /* 0x00000800 */
#define MIPI_DSI_PHY_STATUS_PHY_ULPSACTIVENOT3LANE_SHIFT   (12U)
#define MIPI_DSI_PHY_STATUS_PHY_ULPSACTIVENOT3LANE_MASK    (0x1U << MIPI_DSI_PHY_STATUS_PHY_ULPSACTIVENOT3LANE_SHIFT)   /* 0x00001000 */
/* PHY_TST_CTRL0 */
#define MIPI_DSI_PHY_TST_CTRL0_OFFSET                      (0xB4U)
#define MIPI_DSI_PHY_TST_CTRL0_PHY_TESTCLK_SHIFT           (0U)
#define MIPI_DSI_PHY_TST_CTRL0_PHY_TESTCLK_MASK            (0x1U << MIPI_DSI_PHY_TST_CTRL0_PHY_TESTCLK_SHIFT)           /* 0x00000001 */
#define MIPI_DSI_PHY_TST_CTRL0_PHY_TESTCLR_SHIFT           (1U)
#define MIPI_DSI_PHY_TST_CTRL0_PHY_TESTCLR_MASK            (0x1U << MIPI_DSI_PHY_TST_CTRL0_PHY_TESTCLR_SHIFT)           /* 0x00000002 */
/* PHY_TST_CTRL1 */
#define MIPI_DSI_PHY_TST_CTRL1_OFFSET                      (0xB8U)
#define MIPI_DSI_PHY_TST_CTRL1_PHY_TESTDIN_SHIFT           (0U)
#define MIPI_DSI_PHY_TST_CTRL1_PHY_TESTDIN_MASK            (0xFFU << MIPI_DSI_PHY_TST_CTRL1_PHY_TESTDIN_SHIFT)          /* 0x000000FF */
#define MIPI_DSI_PHY_TST_CTRL1_PHT_TESTDOUT_SHIFT          (8U)
#define MIPI_DSI_PHY_TST_CTRL1_PHT_TESTDOUT_MASK           (0xFFU << MIPI_DSI_PHY_TST_CTRL1_PHT_TESTDOUT_SHIFT)         /* 0x0000FF00 */
#define MIPI_DSI_PHY_TST_CTRL1_PHY_TESTEN_SHIFT            (16U)
#define MIPI_DSI_PHY_TST_CTRL1_PHY_TESTEN_MASK             (0x1U << MIPI_DSI_PHY_TST_CTRL1_PHY_TESTEN_SHIFT)            /* 0x00010000 */
/* INT_ST0 */
#define MIPI_DSI_INT_ST0_OFFSET                            (0xBCU)
#define MIPI_DSI_INT_ST0                                   (0x0U)
#define MIPI_DSI_INT_ST0_ACK_WITH_ERR_0_SHIFT              (0U)
#define MIPI_DSI_INT_ST0_ACK_WITH_ERR_0_MASK               (0x1U << MIPI_DSI_INT_ST0_ACK_WITH_ERR_0_SHIFT)              /* 0x00000001 */
#define MIPI_DSI_INT_ST0_ACK_WITH_ERR_1_SHIFT              (1U)
#define MIPI_DSI_INT_ST0_ACK_WITH_ERR_1_MASK               (0x1U << MIPI_DSI_INT_ST0_ACK_WITH_ERR_1_SHIFT)              /* 0x00000002 */
#define MIPI_DSI_INT_ST0_ACK_WITH_ERR_2_SHIFT              (2U)
#define MIPI_DSI_INT_ST0_ACK_WITH_ERR_2_MASK               (0x1U << MIPI_DSI_INT_ST0_ACK_WITH_ERR_2_SHIFT)              /* 0x00000004 */
#define MIPI_DSI_INT_ST0_ACK_WITH_ERR_3_SHIFT              (3U)
#define MIPI_DSI_INT_ST0_ACK_WITH_ERR_3_MASK               (0x1U << MIPI_DSI_INT_ST0_ACK_WITH_ERR_3_SHIFT)              /* 0x00000008 */
#define MIPI_DSI_INT_ST0_ACK_WITH_ERR_4_SHIFT              (4U)
#define MIPI_DSI_INT_ST0_ACK_WITH_ERR_4_MASK               (0x1U << MIPI_DSI_INT_ST0_ACK_WITH_ERR_4_SHIFT)              /* 0x00000010 */
#define MIPI_DSI_INT_ST0_ACK_WITH_ERR_5_SHIFT              (5U)
#define MIPI_DSI_INT_ST0_ACK_WITH_ERR_5_MASK               (0x1U << MIPI_DSI_INT_ST0_ACK_WITH_ERR_5_SHIFT)              /* 0x00000020 */
#define MIPI_DSI_INT_ST0_ACK_WITH_ERR_6_SHIFT              (6U)
#define MIPI_DSI_INT_ST0_ACK_WITH_ERR_6_MASK               (0x1U << MIPI_DSI_INT_ST0_ACK_WITH_ERR_6_SHIFT)              /* 0x00000040 */
#define MIPI_DSI_INT_ST0_ACK_WITH_ERR_7_SHIFT              (7U)
#define MIPI_DSI_INT_ST0_ACK_WITH_ERR_7_MASK               (0x1U << MIPI_DSI_INT_ST0_ACK_WITH_ERR_7_SHIFT)              /* 0x00000080 */
#define MIPI_DSI_INT_ST0_ACK_WITH_ERR_8_SHIFT              (8U)
#define MIPI_DSI_INT_ST0_ACK_WITH_ERR_8_MASK               (0x1U << MIPI_DSI_INT_ST0_ACK_WITH_ERR_8_SHIFT)              /* 0x00000100 */
#define MIPI_DSI_INT_ST0_ACK_WITH_ERR_9_SHIFT              (9U)
#define MIPI_DSI_INT_ST0_ACK_WITH_ERR_9_MASK               (0x1U << MIPI_DSI_INT_ST0_ACK_WITH_ERR_9_SHIFT)              /* 0x00000200 */
#define MIPI_DSI_INT_ST0_ACK_WITH_ERR_10_SHIFT             (10U)
#define MIPI_DSI_INT_ST0_ACK_WITH_ERR_10_MASK              (0x1U << MIPI_DSI_INT_ST0_ACK_WITH_ERR_10_SHIFT)             /* 0x00000400 */
#define MIPI_DSI_INT_ST0_ACK_WITH_ERR_11_SHIFT             (11U)
#define MIPI_DSI_INT_ST0_ACK_WITH_ERR_11_MASK              (0x1U << MIPI_DSI_INT_ST0_ACK_WITH_ERR_11_SHIFT)             /* 0x00000800 */
#define MIPI_DSI_INT_ST0_ACK_WITH_ERR_12_SHIFT             (12U)
#define MIPI_DSI_INT_ST0_ACK_WITH_ERR_12_MASK              (0x1U << MIPI_DSI_INT_ST0_ACK_WITH_ERR_12_SHIFT)             /* 0x00001000 */
#define MIPI_DSI_INT_ST0_ACK_WITH_ERR_13_SHIFT             (13U)
#define MIPI_DSI_INT_ST0_ACK_WITH_ERR_13_MASK              (0x1U << MIPI_DSI_INT_ST0_ACK_WITH_ERR_13_SHIFT)             /* 0x00002000 */
#define MIPI_DSI_INT_ST0_ACK_WITH_ERR_14_SHIFT             (14U)
#define MIPI_DSI_INT_ST0_ACK_WITH_ERR_14_MASK              (0x1U << MIPI_DSI_INT_ST0_ACK_WITH_ERR_14_SHIFT)             /* 0x00004000 */
#define MIPI_DSI_INT_ST0_ACK_WITH_ERR_15_SHIFT             (15U)
#define MIPI_DSI_INT_ST0_ACK_WITH_ERR_15_MASK              (0x1U << MIPI_DSI_INT_ST0_ACK_WITH_ERR_15_SHIFT)             /* 0x00008000 */
#define MIPI_DSI_INT_ST0_DPHY_ERRORS_0_SHIFT               (16U)
#define MIPI_DSI_INT_ST0_DPHY_ERRORS_0_MASK                (0x1U << MIPI_DSI_INT_ST0_DPHY_ERRORS_0_SHIFT)               /* 0x00010000 */
#define MIPI_DSI_INT_ST0_DPHY_ERRORS_1_SHIFT               (17U)
#define MIPI_DSI_INT_ST0_DPHY_ERRORS_1_MASK                (0x1U << MIPI_DSI_INT_ST0_DPHY_ERRORS_1_SHIFT)               /* 0x00020000 */
#define MIPI_DSI_INT_ST0_DPHY_ERRORS_2_SHIFT               (18U)
#define MIPI_DSI_INT_ST0_DPHY_ERRORS_2_MASK                (0x1U << MIPI_DSI_INT_ST0_DPHY_ERRORS_2_SHIFT)               /* 0x00040000 */
#define MIPI_DSI_INT_ST0_DPHY_ERRORS_3_SHIFT               (19U)
#define MIPI_DSI_INT_ST0_DPHY_ERRORS_3_MASK                (0x1U << MIPI_DSI_INT_ST0_DPHY_ERRORS_3_SHIFT)               /* 0x00080000 */
#define MIPI_DSI_INT_ST0_DPHY_ERRORS_4_SHIFT               (20U)
#define MIPI_DSI_INT_ST0_DPHY_ERRORS_4_MASK                (0x1U << MIPI_DSI_INT_ST0_DPHY_ERRORS_4_SHIFT)               /* 0x00100000 */
/* INT_ST1 */
#define MIPI_DSI_INT_ST1_OFFSET                            (0xC0U)
#define MIPI_DSI_INT_ST1                                   (0x0U)
#define MIPI_DSI_INT_ST1_TO_HS_TX_SHIFT                    (0U)
#define MIPI_DSI_INT_ST1_TO_HS_TX_MASK                     (0x1U << MIPI_DSI_INT_ST1_TO_HS_TX_SHIFT)                    /* 0x00000001 */
#define MIPI_DSI_INT_ST1_TO_LP_RX_SHIFT                    (1U)
#define MIPI_DSI_INT_ST1_TO_LP_RX_MASK                     (0x1U << MIPI_DSI_INT_ST1_TO_LP_RX_SHIFT)                    /* 0x00000002 */
#define MIPI_DSI_INT_ST1_ECC_SINGLE_ERR_SHIFT              (2U)
#define MIPI_DSI_INT_ST1_ECC_SINGLE_ERR_MASK               (0x1U << MIPI_DSI_INT_ST1_ECC_SINGLE_ERR_SHIFT)              /* 0x00000004 */
#define MIPI_DSI_INT_ST1_ECC_MULTI_ERR_SHIFT               (3U)
#define MIPI_DSI_INT_ST1_ECC_MULTI_ERR_MASK                (0x1U << MIPI_DSI_INT_ST1_ECC_MULTI_ERR_SHIFT)               /* 0x00000008 */
#define MIPI_DSI_INT_ST1_CRC_ERR_SHIFT                     (4U)
#define MIPI_DSI_INT_ST1_CRC_ERR_MASK                      (0x1U << MIPI_DSI_INT_ST1_CRC_ERR_SHIFT)                     /* 0x00000010 */
#define MIPI_DSI_INT_ST1_PKT_SIZE_ERR_SHIFT                (5U)
#define MIPI_DSI_INT_ST1_PKT_SIZE_ERR_MASK                 (0x1U << MIPI_DSI_INT_ST1_PKT_SIZE_ERR_SHIFT)                /* 0x00000020 */
#define MIPI_DSI_INT_ST1_EOPT_ERR_SHIFT                    (6U)
#define MIPI_DSI_INT_ST1_EOPT_ERR_MASK                     (0x1U << MIPI_DSI_INT_ST1_EOPT_ERR_SHIFT)                    /* 0x00000040 */
#define MIPI_DSI_INT_ST1_DPI_PLD_WR_ERR_SHIFT              (7U)
#define MIPI_DSI_INT_ST1_DPI_PLD_WR_ERR_MASK               (0x1U << MIPI_DSI_INT_ST1_DPI_PLD_WR_ERR_SHIFT)              /* 0x00000080 */
#define MIPI_DSI_INT_ST1_GEN_CMD_WR_ERR_SHIFT              (8U)
#define MIPI_DSI_INT_ST1_GEN_CMD_WR_ERR_MASK               (0x1U << MIPI_DSI_INT_ST1_GEN_CMD_WR_ERR_SHIFT)              /* 0x00000100 */
#define MIPI_DSI_INT_ST1_GEN_PLD_WR_ERR_SHIFT              (9U)
#define MIPI_DSI_INT_ST1_GEN_PLD_WR_ERR_MASK               (0x1U << MIPI_DSI_INT_ST1_GEN_PLD_WR_ERR_SHIFT)              /* 0x00000200 */
#define MIPI_DSI_INT_ST1_GEN_PLD_SEND_ERR_SHIFT            (10U)
#define MIPI_DSI_INT_ST1_GEN_PLD_SEND_ERR_MASK             (0x1U << MIPI_DSI_INT_ST1_GEN_PLD_SEND_ERR_SHIFT)            /* 0x00000400 */
#define MIPI_DSI_INT_ST1_GEN_PLD_RD_ERR_SHIFT              (11U)
#define MIPI_DSI_INT_ST1_GEN_PLD_RD_ERR_MASK               (0x1U << MIPI_DSI_INT_ST1_GEN_PLD_RD_ERR_SHIFT)              /* 0x00000800 */
#define MIPI_DSI_INT_ST1_GEN_PLD_RECEV_ERR_SHIFT           (12U)
#define MIPI_DSI_INT_ST1_GEN_PLD_RECEV_ERR_MASK            (0x1U << MIPI_DSI_INT_ST1_GEN_PLD_RECEV_ERR_SHIFT)           /* 0x00001000 */
#define MIPI_DSI_INT_ST1_DBI_CMD_WR_ERR_SHIFT              (13U)
#define MIPI_DSI_INT_ST1_DBI_CMD_WR_ERR_MASK               (0x1U << MIPI_DSI_INT_ST1_DBI_CMD_WR_ERR_SHIFT)              /* 0x00002000 */
#define MIPI_DSI_INT_ST1_DBI_PLD_WR_ERR_SHIFT              (14U)
#define MIPI_DSI_INT_ST1_DBI_PLD_WR_ERR_MASK               (0x1U << MIPI_DSI_INT_ST1_DBI_PLD_WR_ERR_SHIFT)              /* 0x00004000 */
#define MIPI_DSI_INT_ST1_DBI_PLD_RD_ERR_SHIFT              (15U)
#define MIPI_DSI_INT_ST1_DBI_PLD_RD_ERR_MASK               (0x1U << MIPI_DSI_INT_ST1_DBI_PLD_RD_ERR_SHIFT)              /* 0x00008000 */
#define MIPI_DSI_INT_ST1_DBI_PLD_RECV_ERR_SHIFT            (16U)
#define MIPI_DSI_INT_ST1_DBI_PLD_RECV_ERR_MASK             (0x1U << MIPI_DSI_INT_ST1_DBI_PLD_RECV_ERR_SHIFT)            /* 0x00010000 */
#define MIPI_DSI_INT_ST1_DBI_ILEGAL_COMM_ERR_SHIFT         (17U)
#define MIPI_DSI_INT_ST1_DBI_ILEGAL_COMM_ERR_MASK          (0x1U << MIPI_DSI_INT_ST1_DBI_ILEGAL_COMM_ERR_SHIFT)         /* 0x00020000 */
/* INT_MSK0 */
#define MIPI_DSI_INT_MSK0_OFFSET                           (0xC4U)
#define MIPI_DSI_INT_MSK0_ACK_WITH_ERR_0_SHIFT             (0U)
#define MIPI_DSI_INT_MSK0_ACK_WITH_ERR_0_MASK              (0x1U << MIPI_DSI_INT_MSK0_ACK_WITH_ERR_0_SHIFT)             /* 0x00000001 */
#define MIPI_DSI_INT_MSK0_ACK_WITH_ERR_1_SHIFT             (1U)
#define MIPI_DSI_INT_MSK0_ACK_WITH_ERR_1_MASK              (0x1U << MIPI_DSI_INT_MSK0_ACK_WITH_ERR_1_SHIFT)             /* 0x00000002 */
#define MIPI_DSI_INT_MSK0_ACK_WITH_ERR_2_SHIFT             (2U)
#define MIPI_DSI_INT_MSK0_ACK_WITH_ERR_2_MASK              (0x1U << MIPI_DSI_INT_MSK0_ACK_WITH_ERR_2_SHIFT)             /* 0x00000004 */
#define MIPI_DSI_INT_MSK0_ACK_WITH_ERR_3_SHIFT             (3U)
#define MIPI_DSI_INT_MSK0_ACK_WITH_ERR_3_MASK              (0x1U << MIPI_DSI_INT_MSK0_ACK_WITH_ERR_3_SHIFT)             /* 0x00000008 */
#define MIPI_DSI_INT_MSK0_ACK_WITH_ERR_4_SHIFT             (4U)
#define MIPI_DSI_INT_MSK0_ACK_WITH_ERR_4_MASK              (0x1U << MIPI_DSI_INT_MSK0_ACK_WITH_ERR_4_SHIFT)             /* 0x00000010 */
#define MIPI_DSI_INT_MSK0_ACK_WITH_ERR_5_SHIFT             (5U)
#define MIPI_DSI_INT_MSK0_ACK_WITH_ERR_5_MASK              (0x1U << MIPI_DSI_INT_MSK0_ACK_WITH_ERR_5_SHIFT)             /* 0x00000020 */
#define MIPI_DSI_INT_MSK0_ACK_WITH_ERR_6_SHIFT             (6U)
#define MIPI_DSI_INT_MSK0_ACK_WITH_ERR_6_MASK              (0x1U << MIPI_DSI_INT_MSK0_ACK_WITH_ERR_6_SHIFT)             /* 0x00000040 */
#define MIPI_DSI_INT_MSK0_ACK_WITH_ERR_7_SHIFT             (7U)
#define MIPI_DSI_INT_MSK0_ACK_WITH_ERR_7_MASK              (0x1U << MIPI_DSI_INT_MSK0_ACK_WITH_ERR_7_SHIFT)             /* 0x00000080 */
#define MIPI_DSI_INT_MSK0_ACK_WITH_ERR_8_SHIFT             (8U)
#define MIPI_DSI_INT_MSK0_ACK_WITH_ERR_8_MASK              (0x1U << MIPI_DSI_INT_MSK0_ACK_WITH_ERR_8_SHIFT)             /* 0x00000100 */
#define MIPI_DSI_INT_MSK0_ACK_WITH_ERR_9_SHIFT             (9U)
#define MIPI_DSI_INT_MSK0_ACK_WITH_ERR_9_MASK              (0x1U << MIPI_DSI_INT_MSK0_ACK_WITH_ERR_9_SHIFT)             /* 0x00000200 */
#define MIPI_DSI_INT_MSK0_ACK_WITH_ERR_10_SHIFT            (10U)
#define MIPI_DSI_INT_MSK0_ACK_WITH_ERR_10_MASK             (0x1U << MIPI_DSI_INT_MSK0_ACK_WITH_ERR_10_SHIFT)            /* 0x00000400 */
#define MIPI_DSI_INT_MSK0_ACK_WITH_ERR_11_SHIFT            (11U)
#define MIPI_DSI_INT_MSK0_ACK_WITH_ERR_11_MASK             (0x1U << MIPI_DSI_INT_MSK0_ACK_WITH_ERR_11_SHIFT)            /* 0x00000800 */
#define MIPI_DSI_INT_MSK0_ACK_WITH_ERR_12_SHIFT            (12U)
#define MIPI_DSI_INT_MSK0_ACK_WITH_ERR_12_MASK             (0x1U << MIPI_DSI_INT_MSK0_ACK_WITH_ERR_12_SHIFT)            /* 0x00001000 */
#define MIPI_DSI_INT_MSK0_ACK_WITH_ERR_13_SHIFT            (13U)
#define MIPI_DSI_INT_MSK0_ACK_WITH_ERR_13_MASK             (0x1U << MIPI_DSI_INT_MSK0_ACK_WITH_ERR_13_SHIFT)            /* 0x00002000 */
#define MIPI_DSI_INT_MSK0_ACK_WITH_ERR_14_SHIFT            (14U)
#define MIPI_DSI_INT_MSK0_ACK_WITH_ERR_14_MASK             (0x1U << MIPI_DSI_INT_MSK0_ACK_WITH_ERR_14_SHIFT)            /* 0x00004000 */
#define MIPI_DSI_INT_MSK0_ACK_WITH_ERR_15_SHIFT            (15U)
#define MIPI_DSI_INT_MSK0_ACK_WITH_ERR_15_MASK             (0x1U << MIPI_DSI_INT_MSK0_ACK_WITH_ERR_15_SHIFT)            /* 0x00008000 */
#define MIPI_DSI_INT_MSK0_DPHY_ERRORS_0_SHIFT              (16U)
#define MIPI_DSI_INT_MSK0_DPHY_ERRORS_0_MASK               (0x1U << MIPI_DSI_INT_MSK0_DPHY_ERRORS_0_SHIFT)              /* 0x00010000 */
#define MIPI_DSI_INT_MSK0_DPHY_ERRORS_1_SHIFT              (17U)
#define MIPI_DSI_INT_MSK0_DPHY_ERRORS_1_MASK               (0x1U << MIPI_DSI_INT_MSK0_DPHY_ERRORS_1_SHIFT)              /* 0x00020000 */
#define MIPI_DSI_INT_MSK0_DPHY_ERRORS_2_SHIFT              (18U)
#define MIPI_DSI_INT_MSK0_DPHY_ERRORS_2_MASK               (0x1U << MIPI_DSI_INT_MSK0_DPHY_ERRORS_2_SHIFT)              /* 0x00040000 */
#define MIPI_DSI_INT_MSK0_DPHY_ERRORS_3_SHIFT              (19U)
#define MIPI_DSI_INT_MSK0_DPHY_ERRORS_3_MASK               (0x1U << MIPI_DSI_INT_MSK0_DPHY_ERRORS_3_SHIFT)              /* 0x00080000 */
#define MIPI_DSI_INT_MSK0_DPHY_ERRORS_4_SHIFT              (20U)
#define MIPI_DSI_INT_MSK0_DPHY_ERRORS_4_MASK               (0x1U << MIPI_DSI_INT_MSK0_DPHY_ERRORS_4_SHIFT)              /* 0x00100000 */
/* INT_MSK1 */
#define MIPI_DSI_INT_MSK1_OFFSET                           (0xC8U)
#define MIPI_DSI_INT_MSK1_TO_HS_TX_SHIFT                   (0U)
#define MIPI_DSI_INT_MSK1_TO_HS_TX_MASK                    (0x1U << MIPI_DSI_INT_MSK1_TO_HS_TX_SHIFT)                   /* 0x00000001 */
#define MIPI_DSI_INT_MSK1_TO_LP_RX_SHIFT                   (1U)
#define MIPI_DSI_INT_MSK1_TO_LP_RX_MASK                    (0x1U << MIPI_DSI_INT_MSK1_TO_LP_RX_SHIFT)                   /* 0x00000002 */
#define MIPI_DSI_INT_MSK1_ECC_SINGLE_ERR_SHIFT             (2U)
#define MIPI_DSI_INT_MSK1_ECC_SINGLE_ERR_MASK              (0x1U << MIPI_DSI_INT_MSK1_ECC_SINGLE_ERR_SHIFT)             /* 0x00000004 */
#define MIPI_DSI_INT_MSK1_ECC_MILTI_ERR_SHIFT              (3U)
#define MIPI_DSI_INT_MSK1_ECC_MILTI_ERR_MASK               (0x1U << MIPI_DSI_INT_MSK1_ECC_MILTI_ERR_SHIFT)              /* 0x00000008 */
#define MIPI_DSI_INT_MSK1_CRC_ERR_SHIFT                    (4U)
#define MIPI_DSI_INT_MSK1_CRC_ERR_MASK                     (0x1U << MIPI_DSI_INT_MSK1_CRC_ERR_SHIFT)                    /* 0x00000010 */
#define MIPI_DSI_INT_MSK1_PKT_SIZE_ERR_SHIFT               (5U)
#define MIPI_DSI_INT_MSK1_PKT_SIZE_ERR_MASK                (0x1U << MIPI_DSI_INT_MSK1_PKT_SIZE_ERR_SHIFT)               /* 0x00000020 */
#define MIPI_DSI_INT_MSK1_EOPT_ERR_SHIFT                   (6U)
#define MIPI_DSI_INT_MSK1_EOPT_ERR_MASK                    (0x1U << MIPI_DSI_INT_MSK1_EOPT_ERR_SHIFT)                   /* 0x00000040 */
#define MIPI_DSI_INT_MSK1_DPI_PLD_WR_ERR_SHIFT             (7U)
#define MIPI_DSI_INT_MSK1_DPI_PLD_WR_ERR_MASK              (0x1U << MIPI_DSI_INT_MSK1_DPI_PLD_WR_ERR_SHIFT)             /* 0x00000080 */
#define MIPI_DSI_INT_MSK1_GEN_CMD_WR_ERR_SHIFT             (8U)
#define MIPI_DSI_INT_MSK1_GEN_CMD_WR_ERR_MASK              (0x1U << MIPI_DSI_INT_MSK1_GEN_CMD_WR_ERR_SHIFT)             /* 0x00000100 */
#define MIPI_DSI_INT_MSK1_GEN_PLD_WR_ERR_SHIFT             (9U)
#define MIPI_DSI_INT_MSK1_GEN_PLD_WR_ERR_MASK              (0x1U << MIPI_DSI_INT_MSK1_GEN_PLD_WR_ERR_SHIFT)             /* 0x00000200 */
#define MIPI_DSI_INT_MSK1_GEN_PLD_SEND_ERR_SHIFT           (10U)
#define MIPI_DSI_INT_MSK1_GEN_PLD_SEND_ERR_MASK            (0x1U << MIPI_DSI_INT_MSK1_GEN_PLD_SEND_ERR_SHIFT)           /* 0x00000400 */
#define MIPI_DSI_INT_MSK1_GEN_PLD_RD_ERR_SHIFT             (11U)
#define MIPI_DSI_INT_MSK1_GEN_PLD_RD_ERR_MASK              (0x1U << MIPI_DSI_INT_MSK1_GEN_PLD_RD_ERR_SHIFT)             /* 0x00000800 */
#define MIPI_DSI_INT_MSK1_GEN_PLD_REVEV_ERR_SHIFT          (12U)
#define MIPI_DSI_INT_MSK1_GEN_PLD_REVEV_ERR_MASK           (0x1U << MIPI_DSI_INT_MSK1_GEN_PLD_REVEV_ERR_SHIFT)          /* 0x00001000 */
#define MIPI_DSI_INT_MSK1_DBI_CMD_WR_ERR_SHIFT             (13U)
#define MIPI_DSI_INT_MSK1_DBI_CMD_WR_ERR_MASK              (0x1U << MIPI_DSI_INT_MSK1_DBI_CMD_WR_ERR_SHIFT)             /* 0x00002000 */
#define MIPI_DSI_INT_MSK1_DBI_PLD_WR_ERR_SHIFT             (14U)
#define MIPI_DSI_INT_MSK1_DBI_PLD_WR_ERR_MASK              (0x1U << MIPI_DSI_INT_MSK1_DBI_PLD_WR_ERR_SHIFT)             /* 0x00004000 */
#define MIPI_DSI_INT_MSK1_DBI_PLD_RD_ERR_SHIFT             (15U)
#define MIPI_DSI_INT_MSK1_DBI_PLD_RD_ERR_MASK              (0x1U << MIPI_DSI_INT_MSK1_DBI_PLD_RD_ERR_SHIFT)             /* 0x00008000 */
#define MIPI_DSI_INT_MSK1_DBI_PLD_RECV_ERR_SHIFT           (16U)
#define MIPI_DSI_INT_MSK1_DBI_PLD_RECV_ERR_MASK            (0x1U << MIPI_DSI_INT_MSK1_DBI_PLD_RECV_ERR_SHIFT)           /* 0x00010000 */
#define MIPI_DSI_INT_MSK1_DBI_ILEGAL_COMM_ERR_SHIFT        (17U)
#define MIPI_DSI_INT_MSK1_DBI_ILEGAL_COMM_ERR_MASK         (0x1U << MIPI_DSI_INT_MSK1_DBI_ILEGAL_COMM_ERR_SHIFT)        /* 0x00020000 */
/* INT_FORCE0 */
#define MIPI_DSI_INT_FORCE0_OFFSET                         (0xD8U)
#define MIPI_DSI_INT_FORCE0_ACK_WITH_ERR_0_SHIFT           (0U)
#define MIPI_DSI_INT_FORCE0_ACK_WITH_ERR_0_MASK            (0x1U << MIPI_DSI_INT_FORCE0_ACK_WITH_ERR_0_SHIFT)           /* 0x00000001 */
#define MIPI_DSI_INT_FORCE0_ACK_WITH_ERR_1_SHIFT           (1U)
#define MIPI_DSI_INT_FORCE0_ACK_WITH_ERR_1_MASK            (0x1U << MIPI_DSI_INT_FORCE0_ACK_WITH_ERR_1_SHIFT)           /* 0x00000002 */
#define MIPI_DSI_INT_FORCE0_ACK_WITH_ERR_2_SHIFT           (2U)
#define MIPI_DSI_INT_FORCE0_ACK_WITH_ERR_2_MASK            (0x1U << MIPI_DSI_INT_FORCE0_ACK_WITH_ERR_2_SHIFT)           /* 0x00000004 */
#define MIPI_DSI_INT_FORCE0_ACK_WITH_ERR_3_SHIFT           (3U)
#define MIPI_DSI_INT_FORCE0_ACK_WITH_ERR_3_MASK            (0x1U << MIPI_DSI_INT_FORCE0_ACK_WITH_ERR_3_SHIFT)           /* 0x00000008 */
#define MIPI_DSI_INT_FORCE0_ACK_WITH_ERR_4_SHIFT           (4U)
#define MIPI_DSI_INT_FORCE0_ACK_WITH_ERR_4_MASK            (0x1U << MIPI_DSI_INT_FORCE0_ACK_WITH_ERR_4_SHIFT)           /* 0x00000010 */
#define MIPI_DSI_INT_FORCE0_ACK_WITH_ERR_5_SHIFT           (5U)
#define MIPI_DSI_INT_FORCE0_ACK_WITH_ERR_5_MASK            (0x1U << MIPI_DSI_INT_FORCE0_ACK_WITH_ERR_5_SHIFT)           /* 0x00000020 */
#define MIPI_DSI_INT_FORCE0_ACK_WITH_ERR_6_SHIFT           (6U)
#define MIPI_DSI_INT_FORCE0_ACK_WITH_ERR_6_MASK            (0x1U << MIPI_DSI_INT_FORCE0_ACK_WITH_ERR_6_SHIFT)           /* 0x00000040 */
#define MIPI_DSI_INT_FORCE0_ACK_WITH_ERR_7_SHIFT           (7U)
#define MIPI_DSI_INT_FORCE0_ACK_WITH_ERR_7_MASK            (0x1U << MIPI_DSI_INT_FORCE0_ACK_WITH_ERR_7_SHIFT)           /* 0x00000080 */
#define MIPI_DSI_INT_FORCE0_ACK_WITH_ERR_8_SHIFT           (8U)
#define MIPI_DSI_INT_FORCE0_ACK_WITH_ERR_8_MASK            (0x1U << MIPI_DSI_INT_FORCE0_ACK_WITH_ERR_8_SHIFT)           /* 0x00000100 */
#define MIPI_DSI_INT_FORCE0_ACK_WITH_ERR_9_SHIFT           (9U)
#define MIPI_DSI_INT_FORCE0_ACK_WITH_ERR_9_MASK            (0x1U << MIPI_DSI_INT_FORCE0_ACK_WITH_ERR_9_SHIFT)           /* 0x00000200 */
#define MIPI_DSI_INT_FORCE0_ACK_WITH_ERR_10_SHIFT          (10U)
#define MIPI_DSI_INT_FORCE0_ACK_WITH_ERR_10_MASK           (0x1U << MIPI_DSI_INT_FORCE0_ACK_WITH_ERR_10_SHIFT)          /* 0x00000400 */
#define MIPI_DSI_INT_FORCE0_ACK_WITH_ERR_11_SHIFT          (11U)
#define MIPI_DSI_INT_FORCE0_ACK_WITH_ERR_11_MASK           (0x1U << MIPI_DSI_INT_FORCE0_ACK_WITH_ERR_11_SHIFT)          /* 0x00000800 */
#define MIPI_DSI_INT_FORCE0_ACK_WITH_ERR_12_SHIFT          (12U)
#define MIPI_DSI_INT_FORCE0_ACK_WITH_ERR_12_MASK           (0x1U << MIPI_DSI_INT_FORCE0_ACK_WITH_ERR_12_SHIFT)          /* 0x00001000 */
#define MIPI_DSI_INT_FORCE0_ACK_WITH_ERR_13_SHIFT          (13U)
#define MIPI_DSI_INT_FORCE0_ACK_WITH_ERR_13_MASK           (0x1U << MIPI_DSI_INT_FORCE0_ACK_WITH_ERR_13_SHIFT)          /* 0x00002000 */
#define MIPI_DSI_INT_FORCE0_ACK_WITH_ERR_14_SHIFT          (14U)
#define MIPI_DSI_INT_FORCE0_ACK_WITH_ERR_14_MASK           (0x1U << MIPI_DSI_INT_FORCE0_ACK_WITH_ERR_14_SHIFT)          /* 0x00004000 */
#define MIPI_DSI_INT_FORCE0_ACK_WITH_ERR_15_SHIFT          (15U)
#define MIPI_DSI_INT_FORCE0_ACK_WITH_ERR_15_MASK           (0x1U << MIPI_DSI_INT_FORCE0_ACK_WITH_ERR_15_SHIFT)          /* 0x00008000 */
#define MIPI_DSI_INT_FORCE0_DPHY_ERRORS_0_SHIFT            (16U)
#define MIPI_DSI_INT_FORCE0_DPHY_ERRORS_0_MASK             (0x1U << MIPI_DSI_INT_FORCE0_DPHY_ERRORS_0_SHIFT)            /* 0x00010000 */
#define MIPI_DSI_INT_FORCE0_DPHY_ERRORS_1_SHIFT            (17U)
#define MIPI_DSI_INT_FORCE0_DPHY_ERRORS_1_MASK             (0x1U << MIPI_DSI_INT_FORCE0_DPHY_ERRORS_1_SHIFT)            /* 0x00020000 */
#define MIPI_DSI_INT_FORCE0_DPHY_ERRORS_2_SHIFT            (18U)
#define MIPI_DSI_INT_FORCE0_DPHY_ERRORS_2_MASK             (0x1U << MIPI_DSI_INT_FORCE0_DPHY_ERRORS_2_SHIFT)            /* 0x00040000 */
#define MIPI_DSI_INT_FORCE0_DPHY_ERRORS_3_SHIFT            (19U)
#define MIPI_DSI_INT_FORCE0_DPHY_ERRORS_3_MASK             (0x1U << MIPI_DSI_INT_FORCE0_DPHY_ERRORS_3_SHIFT)            /* 0x00080000 */
#define MIPI_DSI_INT_FORCE0_DPHY_ERRORS_4_SHIFT            (20U)
#define MIPI_DSI_INT_FORCE0_DPHY_ERRORS_4_MASK             (0x1U << MIPI_DSI_INT_FORCE0_DPHY_ERRORS_4_SHIFT)            /* 0x00100000 */
/* INT_FORCE1 */
#define MIPI_DSI_INT_FORCE1_OFFSET                         (0xDCU)
#define MIPI_DSI_INT_FORCE1_TO_HS_TX_SHIFT                 (0U)
#define MIPI_DSI_INT_FORCE1_TO_HS_TX_MASK                  (0x1U << MIPI_DSI_INT_FORCE1_TO_HS_TX_SHIFT)                 /* 0x00000001 */
#define MIPI_DSI_INT_FORCE1_TO_LP_RX_SHIFT                 (1U)
#define MIPI_DSI_INT_FORCE1_TO_LP_RX_MASK                  (0x1U << MIPI_DSI_INT_FORCE1_TO_LP_RX_SHIFT)                 /* 0x00000002 */
#define MIPI_DSI_INT_FORCE1_ECC_SINGLE_ERR_SHIFT           (2U)
#define MIPI_DSI_INT_FORCE1_ECC_SINGLE_ERR_MASK            (0x1U << MIPI_DSI_INT_FORCE1_ECC_SINGLE_ERR_SHIFT)           /* 0x00000004 */
#define MIPI_DSI_INT_FORCE1_ECC_MILTI_ERR_SHIFT            (3U)
#define MIPI_DSI_INT_FORCE1_ECC_MILTI_ERR_MASK             (0x1U << MIPI_DSI_INT_FORCE1_ECC_MILTI_ERR_SHIFT)            /* 0x00000008 */
#define MIPI_DSI_INT_FORCE1_CRC_ERR_OR_RESERVED_SHIFT      (4U)
#define MIPI_DSI_INT_FORCE1_CRC_ERR_OR_RESERVED_MASK       (0x1U << MIPI_DSI_INT_FORCE1_CRC_ERR_OR_RESERVED_SHIFT)      /* 0x00000010 */
#define MIPI_DSI_INT_FORCE1_PKT_SIZE_ERR_SHIFT             (5U)
#define MIPI_DSI_INT_FORCE1_PKT_SIZE_ERR_MASK              (0x1U << MIPI_DSI_INT_FORCE1_PKT_SIZE_ERR_SHIFT)             /* 0x00000020 */
#define MIPI_DSI_INT_FORCE1_EOPT_ERR_SHIFT                 (6U)
#define MIPI_DSI_INT_FORCE1_EOPT_ERR_MASK                  (0x1U << MIPI_DSI_INT_FORCE1_EOPT_ERR_SHIFT)                 /* 0x00000040 */
#define MIPI_DSI_INT_FORCE1_DPI_PLD_WR_ERR_OR_RESERVED_SHIFT (7U)
#define MIPI_DSI_INT_FORCE1_DPI_PLD_WR_ERR_OR_RESERVED_MASK (0x1U << MIPI_DSI_INT_FORCE1_DPI_PLD_WR_ERR_OR_RESERVED_SHIFT) /* 0x00000080 */
#define MIPI_DSI_INT_FORCE1_GEN_CMD_WR_ERR_OR_RESERVED_SHIFT (8U)
#define MIPI_DSI_INT_FORCE1_GEN_CMD_WR_ERR_OR_RESERVED_MASK (0x1U << MIPI_DSI_INT_FORCE1_GEN_CMD_WR_ERR_OR_RESERVED_SHIFT) /* 0x00000100 */
#define MIPI_DSI_INT_FORCE1_GEN_PLD_WR_EN_OR_RESERVED_SHIFT (9U)
#define MIPI_DSI_INT_FORCE1_GEN_PLD_WR_EN_OR_RESERVED_MASK (0x1U << MIPI_DSI_INT_FORCE1_GEN_PLD_WR_EN_OR_RESERVED_SHIFT) /* 0x00000200 */
#define MIPI_DSI_INT_FORCE1_GEN_PLD_SEND_ERR_OR_RESERVE_SHIFT (10U)
#define MIPI_DSI_INT_FORCE1_GEN_PLD_SEND_ERR_OR_RESERVE_MASK (0x1U << MIPI_DSI_INT_FORCE1_GEN_PLD_SEND_ERR_OR_RESERVE_SHIFT) /* 0x00000400 */
#define MIPI_DSI_INT_FORCE1_GEN_PLD_RD_ERR_OR_RESERVED_SHIFT (11U)
#define MIPI_DSI_INT_FORCE1_GEN_PLD_RD_ERR_OR_RESERVED_MASK (0x1U << MIPI_DSI_INT_FORCE1_GEN_PLD_RD_ERR_OR_RESERVED_SHIFT) /* 0x00000800 */
#define MIPI_DSI_INT_FORCE1_GEN_PLD_RECEV_ERR_OR_RESERVED_SHIFT (12U)
#define MIPI_DSI_INT_FORCE1_GEN_PLD_RECEV_ERR_OR_RESERVED_MASK (0x1U << MIPI_DSI_INT_FORCE1_GEN_PLD_RECEV_ERR_OR_RESERVED_SHIFT) /* 0x00001000 */
#define MIPI_DSI_INT_FORCE1_DBI_CMD_WR_ERR_OR_RESERVED_SHIFT (13U)
#define MIPI_DSI_INT_FORCE1_DBI_CMD_WR_ERR_OR_RESERVED_MASK (0x1U << MIPI_DSI_INT_FORCE1_DBI_CMD_WR_ERR_OR_RESERVED_SHIFT) /* 0x00002000 */
#define MIPI_DSI_INT_FORCE1_DBI_PLD_WR_ERR_OR_RESERVED_SHIFT (14U)
#define MIPI_DSI_INT_FORCE1_DBI_PLD_WR_ERR_OR_RESERVED_MASK (0x1U << MIPI_DSI_INT_FORCE1_DBI_PLD_WR_ERR_OR_RESERVED_SHIFT) /* 0x00004000 */
#define MIPI_DSI_INT_FORCE1_DBI_PLD_RD_ERR_OR_RESERVED_SHIFT (15U)
#define MIPI_DSI_INT_FORCE1_DBI_PLD_RD_ERR_OR_RESERVED_MASK (0x1U << MIPI_DSI_INT_FORCE1_DBI_PLD_RD_ERR_OR_RESERVED_SHIFT) /* 0x00008000 */
#define MIPI_DSI_INT_FORCE1_DBI_PLD_RECV_ERR_OR_RESERVED_SHIFT (16U)
#define MIPI_DSI_INT_FORCE1_DBI_PLD_RECV_ERR_OR_RESERVED_MASK (0x1U << MIPI_DSI_INT_FORCE1_DBI_PLD_RECV_ERR_OR_RESERVED_SHIFT) /* 0x00010000 */
#define MIPI_DSI_INT_FORCE1_DBI_ILEGAL_COMM_ERR_OR_RESERVED_SHIFT (17U)
#define MIPI_DSI_INT_FORCE1_DBI_ILEGAL_COMM_ERR_OR_RESERVED_MASK (0x1U << MIPI_DSI_INT_FORCE1_DBI_ILEGAL_COMM_ERR_OR_RESERVED_SHIFT) /* 0x00020000 */
/* VID_SHADOW_CTRL */
#define MIPI_DSI_VID_SHADOW_CTRL_OFFSET                    (0x100U)
#define MIPI_DSI_VID_SHADOW_CTRL_VID_SHADOW_EN_SHIFT       (0U)
#define MIPI_DSI_VID_SHADOW_CTRL_VID_SHADOW_EN_MASK        (0x1U << MIPI_DSI_VID_SHADOW_CTRL_VID_SHADOW_EN_SHIFT)       /* 0x00000001 */
#define MIPI_DSI_VID_SHADOW_CTRL_VID_SHADOW_REQ_SHIFT      (8U)
#define MIPI_DSI_VID_SHADOW_CTRL_VID_SHADOW_REQ_MASK       (0x1U << MIPI_DSI_VID_SHADOW_CTRL_VID_SHADOW_REQ_SHIFT)      /* 0x00000100 */
#define MIPI_DSI_VID_SHADOW_CTRL_VID_SHADOW_PIN_REQ_SHIFT  (16U)
#define MIPI_DSI_VID_SHADOW_CTRL_VID_SHADOW_PIN_REQ_MASK   (0x1U << MIPI_DSI_VID_SHADOW_CTRL_VID_SHADOW_PIN_REQ_SHIFT)  /* 0x00010000 */
/* DPI_VCID_ACT */
#define MIPI_DSI_DPI_VCID_ACT_OFFSET                       (0x10CU)
#define MIPI_DSI_DPI_VCID_ACT                              (0x0U)
#define MIPI_DSI_DPI_VCID_ACT_DPI_VCID_SHIFT               (0U)
#define MIPI_DSI_DPI_VCID_ACT_DPI_VCID_MASK                (0x3U << MIPI_DSI_DPI_VCID_ACT_DPI_VCID_SHIFT)               /* 0x00000003 */
/* DPI_COLOR_CODING_ACT */
#define MIPI_DSI_DPI_COLOR_CODING_ACT_OFFSET               (0x110U)
#define MIPI_DSI_DPI_COLOR_CODING_ACT                      (0x0U)
#define MIPI_DSI_DPI_COLOR_CODING_ACT_DPI_COLOR_CODING_SHIFT (0U)
#define MIPI_DSI_DPI_COLOR_CODING_ACT_DPI_COLOR_CODING_MASK (0xFU << MIPI_DSI_DPI_COLOR_CODING_ACT_DPI_COLOR_CODING_SHIFT) /* 0x0000000F */
#define MIPI_DSI_DPI_COLOR_CODING_ACT_LOOSELY18_EN_SHIFT   (8U)
#define MIPI_DSI_DPI_COLOR_CODING_ACT_LOOSELY18_EN_MASK    (0x1U << MIPI_DSI_DPI_COLOR_CODING_ACT_LOOSELY18_EN_SHIFT)   /* 0x00000100 */
/* DPI_LP_CMD_TIM_ACT */
#define MIPI_DSI_DPI_LP_CMD_TIM_ACT_OFFSET                 (0x118U)
#define MIPI_DSI_DPI_LP_CMD_TIM_ACT                        (0x0U)
#define MIPI_DSI_DPI_LP_CMD_TIM_ACT_INVACT_LPCMD_TIME_SHIFT (0U)
#define MIPI_DSI_DPI_LP_CMD_TIM_ACT_INVACT_LPCMD_TIME_MASK (0xFFU << MIPI_DSI_DPI_LP_CMD_TIM_ACT_INVACT_LPCMD_TIME_SHIFT) /* 0x000000FF */
#define MIPI_DSI_DPI_LP_CMD_TIM_ACT_OUTVACT_LPCMD_TIME_SHIFT (16U)
#define MIPI_DSI_DPI_LP_CMD_TIM_ACT_OUTVACT_LPCMD_TIME_MASK (0xFFU << MIPI_DSI_DPI_LP_CMD_TIM_ACT_OUTVACT_LPCMD_TIME_SHIFT) /* 0x00FF0000 */
/* VID_MODE_CFG_ACT */
#define MIPI_DSI_VID_MODE_CFG_ACT_OFFSET                   (0x138U)
#define MIPI_DSI_VID_MODE_CFG_ACT                          (0x0U)
#define MIPI_DSI_VID_MODE_CFG_ACT_VID_MODE_TYPE_SHIFT      (0U)
#define MIPI_DSI_VID_MODE_CFG_ACT_VID_MODE_TYPE_MASK       (0x3U << MIPI_DSI_VID_MODE_CFG_ACT_VID_MODE_TYPE_SHIFT)      /* 0x00000003 */
#define MIPI_DSI_VID_MODE_CFG_ACT_LP_VSA_EN_SHIFT          (8U)
#define MIPI_DSI_VID_MODE_CFG_ACT_LP_VSA_EN_MASK           (0x1U << MIPI_DSI_VID_MODE_CFG_ACT_LP_VSA_EN_SHIFT)          /* 0x00000100 */
#define MIPI_DSI_VID_MODE_CFG_ACT_LP_VBP_EN_SHIFT          (9U)
#define MIPI_DSI_VID_MODE_CFG_ACT_LP_VBP_EN_MASK           (0x1U << MIPI_DSI_VID_MODE_CFG_ACT_LP_VBP_EN_SHIFT)          /* 0x00000200 */
#define MIPI_DSI_VID_MODE_CFG_ACT_LP_VFP_EN_SHIFT          (10U)
#define MIPI_DSI_VID_MODE_CFG_ACT_LP_VFP_EN_MASK           (0x1U << MIPI_DSI_VID_MODE_CFG_ACT_LP_VFP_EN_SHIFT)          /* 0x00000400 */
#define MIPI_DSI_VID_MODE_CFG_ACT_LP_VACT_EN_SHIFT         (11U)
#define MIPI_DSI_VID_MODE_CFG_ACT_LP_VACT_EN_MASK          (0x1U << MIPI_DSI_VID_MODE_CFG_ACT_LP_VACT_EN_SHIFT)         /* 0x00000800 */
#define MIPI_DSI_VID_MODE_CFG_ACT_LP_HBP_EN_SHIFT          (12U)
#define MIPI_DSI_VID_MODE_CFG_ACT_LP_HBP_EN_MASK           (0x1U << MIPI_DSI_VID_MODE_CFG_ACT_LP_HBP_EN_SHIFT)          /* 0x00001000 */
#define MIPI_DSI_VID_MODE_CFG_ACT_LP_HFP_EN_SHIFT          (13U)
#define MIPI_DSI_VID_MODE_CFG_ACT_LP_HFP_EN_MASK           (0x1U << MIPI_DSI_VID_MODE_CFG_ACT_LP_HFP_EN_SHIFT)          /* 0x00002000 */
#define MIPI_DSI_VID_MODE_CFG_ACT_FRAME_BTA_ACK_EN_SHIFT   (14U)
#define MIPI_DSI_VID_MODE_CFG_ACT_FRAME_BTA_ACK_EN_MASK    (0x1U << MIPI_DSI_VID_MODE_CFG_ACT_FRAME_BTA_ACK_EN_SHIFT)   /* 0x00004000 */
#define MIPI_DSI_VID_MODE_CFG_ACT_LP_CMD_EN_SHIFT          (15U)
#define MIPI_DSI_VID_MODE_CFG_ACT_LP_CMD_EN_MASK           (0x1U << MIPI_DSI_VID_MODE_CFG_ACT_LP_CMD_EN_SHIFT)          /* 0x00008000 */
/* VID_PKT_SIZE_ACT */
#define MIPI_DSI_VID_PKT_SIZE_ACT_OFFSET                   (0x13CU)
#define MIPI_DSI_VID_PKT_SIZE_ACT                          (0x0U)
#define MIPI_DSI_VID_PKT_SIZE_ACT_VID_PKT_SIZE_SHIFT       (0U)
#define MIPI_DSI_VID_PKT_SIZE_ACT_VID_PKT_SIZE_MASK        (0x3FFFU << MIPI_DSI_VID_PKT_SIZE_ACT_VID_PKT_SIZE_SHIFT)    /* 0x00003FFF */
/* VID_NUM_CHUNKS_ACT */
#define MIPI_DSI_VID_NUM_CHUNKS_ACT_OFFSET                 (0x140U)
#define MIPI_DSI_VID_NUM_CHUNKS_ACT                        (0x0U)
#define MIPI_DSI_VID_NUM_CHUNKS_ACT_VID_NUM_CHUNKS_SHIFT   (0U)
#define MIPI_DSI_VID_NUM_CHUNKS_ACT_VID_NUM_CHUNKS_MASK    (0x1FFFU << MIPI_DSI_VID_NUM_CHUNKS_ACT_VID_NUM_CHUNKS_SHIFT) /* 0x00001FFF */
/* VID_NULL_SIZE_ACT */
#define MIPI_DSI_VID_NULL_SIZE_ACT_OFFSET                  (0x144U)
#define MIPI_DSI_VID_NULL_SIZE_ACT                         (0x0U)
#define MIPI_DSI_VID_NULL_SIZE_ACT_VID_NULL_SIZE_SHIFT     (0U)
#define MIPI_DSI_VID_NULL_SIZE_ACT_VID_NULL_SIZE_MASK      (0x1FFFU << MIPI_DSI_VID_NULL_SIZE_ACT_VID_NULL_SIZE_SHIFT)  /* 0x00001FFF */
/* VID_HSA_TIME_ACT */
#define MIPI_DSI_VID_HSA_TIME_ACT_OFFSET                   (0x148U)
#define MIPI_DSI_VID_HSA_TIME_ACT                          (0x0U)
#define MIPI_DSI_VID_HSA_TIME_ACT_VID_HSA_TIME_SHIFT       (0U)
#define MIPI_DSI_VID_HSA_TIME_ACT_VID_HSA_TIME_MASK        (0xFFFU << MIPI_DSI_VID_HSA_TIME_ACT_VID_HSA_TIME_SHIFT)     /* 0x00000FFF */
/* VID_HBP_TIME_ACT */
#define MIPI_DSI_VID_HBP_TIME_ACT_OFFSET                   (0x14CU)
#define MIPI_DSI_VID_HBP_TIME_ACT                          (0x0U)
#define MIPI_DSI_VID_HBP_TIME_ACT_VID_HBP_TIME_SHIFT       (0U)
#define MIPI_DSI_VID_HBP_TIME_ACT_VID_HBP_TIME_MASK        (0xFFFU << MIPI_DSI_VID_HBP_TIME_ACT_VID_HBP_TIME_SHIFT)     /* 0x00000FFF */
/* VID_HLINE_TIME_ACT */
#define MIPI_DSI_VID_HLINE_TIME_ACT_OFFSET                 (0x150U)
#define MIPI_DSI_VID_HLINE_TIME_ACT                        (0x0U)
#define MIPI_DSI_VID_HLINE_TIME_ACT_VID_HLINE_TIME_SHIFT   (0U)
#define MIPI_DSI_VID_HLINE_TIME_ACT_VID_HLINE_TIME_MASK    (0x7FFFU << MIPI_DSI_VID_HLINE_TIME_ACT_VID_HLINE_TIME_SHIFT) /* 0x00007FFF */
/* VID_VSA_LINES_ACT */
#define MIPI_DSI_VID_VSA_LINES_ACT_OFFSET                  (0x154U)
#define MIPI_DSI_VID_VSA_LINES_ACT                         (0x0U)
#define MIPI_DSI_VID_VSA_LINES_ACT_VSA_LINES_SHIFT         (0U)
#define MIPI_DSI_VID_VSA_LINES_ACT_VSA_LINES_MASK          (0x3FFU << MIPI_DSI_VID_VSA_LINES_ACT_VSA_LINES_SHIFT)       /* 0x000003FF */
/* VID_VBP_LINES_ACT */
#define MIPI_DSI_VID_VBP_LINES_ACT_OFFSET                  (0x158U)
#define MIPI_DSI_VID_VBP_LINES_ACT                         (0x0U)
#define MIPI_DSI_VID_VBP_LINES_ACT_VBP_LINES_SHIFT         (0U)
#define MIPI_DSI_VID_VBP_LINES_ACT_VBP_LINES_MASK          (0x3FFU << MIPI_DSI_VID_VBP_LINES_ACT_VBP_LINES_SHIFT)       /* 0x000003FF */
/* VID_VFP_LINES_ACT */
#define MIPI_DSI_VID_VFP_LINES_ACT_OFFSET                  (0x15CU)
#define MIPI_DSI_VID_VFP_LINES_ACT                         (0x0U)
#define MIPI_DSI_VID_VFP_LINES_ACT_VFP_LINES_SHIFT         (0U)
#define MIPI_DSI_VID_VFP_LINES_ACT_VFP_LINES_MASK          (0x3FFU << MIPI_DSI_VID_VFP_LINES_ACT_VFP_LINES_SHIFT)       /* 0x000003FF */
/* VID_VACTIVE_LINES_ACT */
#define MIPI_DSI_VID_VACTIVE_LINES_ACT_OFFSET              (0x160U)
#define MIPI_DSI_VID_VACTIVE_LINES_ACT                     (0x0U)
#define MIPI_DSI_VID_VACTIVE_LINES_ACT_V_ACTIVE_LINES_SHIFT (0U)
#define MIPI_DSI_VID_VACTIVE_LINES_ACT_V_ACTIVE_LINES_MASK (0x3FFFU << MIPI_DSI_VID_VACTIVE_LINES_ACT_V_ACTIVE_LINES_SHIFT) /* 0x00003FFF */
/* SDF_3D_ACT */
#define MIPI_DSI_SDF_3D_ACT_OFFSET                         (0x190U)
#define MIPI_DSI_SDF_3D_ACT_MODE_3D_SHIFT                  (0U)
#define MIPI_DSI_SDF_3D_ACT_MODE_3D_MASK                   (0x3U << MIPI_DSI_SDF_3D_ACT_MODE_3D_SHIFT)                  /* 0x00000003 */
#define MIPI_DSI_SDF_3D_ACT_FORMAT_3D_SHIFT                (2U)
#define MIPI_DSI_SDF_3D_ACT_FORMAT_3D_MASK                 (0x3U << MIPI_DSI_SDF_3D_ACT_FORMAT_3D_SHIFT)                /* 0x0000000C */
#define MIPI_DSI_SDF_3D_ACT_SECOND_VSYNC_SHIFT             (4U)
#define MIPI_DSI_SDF_3D_ACT_SECOND_VSYNC_MASK              (0x1U << MIPI_DSI_SDF_3D_ACT_SECOND_VSYNC_SHIFT)             /* 0x00000010 */
#define MIPI_DSI_SDF_3D_ACT_RIGHT_FIRST_SHIFT              (5U)
#define MIPI_DSI_SDF_3D_ACT_RIGHT_FIRST_MASK               (0x1U << MIPI_DSI_SDF_3D_ACT_RIGHT_FIRST_SHIFT)              /* 0x00000020 */
#define MIPI_DSI_SDF_3D_ACT_SEND_3D_CFG_SHIFT              (16U)
#define MIPI_DSI_SDF_3D_ACT_SEND_3D_CFG_MASK               (0x1U << MIPI_DSI_SDF_3D_ACT_SEND_3D_CFG_SHIFT)              /* 0x00010000 */
/*****************************************TSADC******************************************/
/* USER_CON */
#define TSADC_USER_CON_OFFSET                              (0x0U)
#define TSADC_USER_CON_INPUT_SRC_SEL_SHIFT                 (0U)
#define TSADC_USER_CON_INPUT_SRC_SEL_MASK                  (0xFU << TSADC_USER_CON_INPUT_SRC_SEL_SHIFT)                 /* 0x0000000F */
#define TSADC_USER_CON_POWER_CONTROL_SHIFT                 (4U)
#define TSADC_USER_CON_POWER_CONTROL_MASK                  (0x1U << TSADC_USER_CON_POWER_CONTROL_SHIFT)                 /* 0x00000010 */
#define TSADC_USER_CON_START_MODE_SHIFT                    (5U)
#define TSADC_USER_CON_START_MODE_MASK                     (0x1U << TSADC_USER_CON_START_MODE_SHIFT)                    /* 0x00000020 */
#define TSADC_USER_CON_EOC_INTEN_SHIFT                     (6U)
#define TSADC_USER_CON_EOC_INTEN_MASK                      (0x1U << TSADC_USER_CON_EOC_INTEN_SHIFT)                     /* 0x00000040 */
#define TSADC_USER_CON_START_SHIFT                         (7U)
#define TSADC_USER_CON_START_MASK                          (0x1U << TSADC_USER_CON_START_SHIFT)                         /* 0x00000080 */
#define TSADC_USER_CON_ADC_STATUS_SHIFT                    (8U)
#define TSADC_USER_CON_ADC_STATUS_MASK                     (0x1U << TSADC_USER_CON_ADC_STATUS_SHIFT)                    /* 0x00000100 */
/* AUTO_CON */
#define TSADC_AUTO_CON_OFFSET                              (0x4U)
#define TSADC_AUTO_CON_AUTO_EN_SHIFT                       (0U)
#define TSADC_AUTO_CON_AUTO_EN_MASK                        (0x1U << TSADC_AUTO_CON_AUTO_EN_SHIFT)                       /* 0x00000001 */
#define TSADC_AUTO_CON_Q_SEL_SHIFT                         (1U)
#define TSADC_AUTO_CON_Q_SEL_MASK                          (0x1U << TSADC_AUTO_CON_Q_SEL_SHIFT)                         /* 0x00000002 */
#define TSADC_AUTO_CON_ROUND_INT_EN_SHIFT                  (2U)
#define TSADC_AUTO_CON_ROUND_INT_EN_MASK                   (0x1U << TSADC_AUTO_CON_ROUND_INT_EN_SHIFT)                  /* 0x00000004 */
#define TSADC_AUTO_CON_TSHUT_POLARITY_SHIFT                (8U)
#define TSADC_AUTO_CON_TSHUT_POLARITY_MASK                 (0x1U << TSADC_AUTO_CON_TSHUT_POLARITY_SHIFT)                /* 0x00000100 */
/* AUTO_STATUS */
#define TSADC_AUTO_STATUS_OFFSET                           (0x8U)
#define TSADC_AUTO_STATUS_LAST_TSHUT_GPIO_SHIFT            (0U)
#define TSADC_AUTO_STATUS_LAST_TSHUT_GPIO_MASK             (0x1U << TSADC_AUTO_STATUS_LAST_TSHUT_GPIO_SHIFT)            /* 0x00000001 */
#define TSADC_AUTO_STATUS_LAST_TSHUT_CRU_SHIFT             (1U)
#define TSADC_AUTO_STATUS_LAST_TSHUT_CRU_MASK              (0x1U << TSADC_AUTO_STATUS_LAST_TSHUT_CRU_SHIFT)             /* 0x00000002 */
#define TSADC_AUTO_STATUS_AUTO_STATUS_SHIFT                (2U)
#define TSADC_AUTO_STATUS_AUTO_STATUS_MASK                 (0x1U << TSADC_AUTO_STATUS_AUTO_STATUS_SHIFT)                /* 0x00000004 */
#define TSADC_AUTO_STATUS_HT_WRAM_SHIFT                    (3U)
#define TSADC_AUTO_STATUS_HT_WRAM_MASK                     (0x1U << TSADC_AUTO_STATUS_HT_WRAM_SHIFT)                    /* 0x00000008 */
/* AUTO_SRC */
#define TSADC_AUTO_SRC_OFFSET                              (0xCU)
#define TSADC_AUTO_SRC_AUTO_SRC_SHIFT                      (0U)
#define TSADC_AUTO_SRC_AUTO_SRC_MASK                       (0xFFFFU << TSADC_AUTO_SRC_AUTO_SRC_SHIFT)                   /* 0x0000FFFF */
/* LT_EN */
#define TSADC_LT_EN_OFFSET                                 (0x10U)
#define TSADC_LT_EN_LOW_TEMPERATURE_VIO_EN_SHIFT           (0U)
#define TSADC_LT_EN_LOW_TEMPERATURE_VIO_EN_MASK            (0xFFFFU << TSADC_LT_EN_LOW_TEMPERATURE_VIO_EN_SHIFT)        /* 0x0000FFFF */
/* HT_INT_EN */
#define TSADC_HT_INT_EN_OFFSET                             (0x14U)
#define TSADC_HT_INT_EN_HIGH_TEMPERATURE_INT_EN_SHIFT      (0U)
#define TSADC_HT_INT_EN_HIGH_TEMPERATURE_INT_EN_MASK       (0xFFFFU << TSADC_HT_INT_EN_HIGH_TEMPERATURE_INT_EN_SHIFT)   /* 0x0000FFFF */
/* GPIO_EN */
#define TSADC_GPIO_EN_OFFSET                               (0x18U)
#define TSADC_GPIO_EN_GPIO_EN_SHIFT                        (0U)
#define TSADC_GPIO_EN_GPIO_EN_MASK                         (0xFFFFU << TSADC_GPIO_EN_GPIO_EN_SHIFT)                     /* 0x0000FFFF */
/* CRU_EN */
#define TSADC_CRU_EN_OFFSET                                (0x1CU)
#define TSADC_CRU_EN_CRU_EN_SHIFT                          (0U)
#define TSADC_CRU_EN_CRU_EN_MASK                           (0xFFFFU << TSADC_CRU_EN_CRU_EN_SHIFT)                       /* 0x0000FFFF */
/* LT_INT_EN */
#define TSADC_LT_INT_EN_OFFSET                             (0x20U)
#define TSADC_LT_INT_EN_LOW_TEMPETURE_INT_EN_SHIFT         (0U)
#define TSADC_LT_INT_EN_LOW_TEMPETURE_INT_EN_MASK          (0xFFFFU << TSADC_LT_INT_EN_LOW_TEMPETURE_INT_EN_SHIFT)      /* 0x0000FFFF */
/* HLT_INT_PD */
#define TSADC_HLT_INT_PD_OFFSET                            (0x24U)
#define TSADC_HLT_INT_PD_HT_INT_STATUS_SHIFT               (0U)
#define TSADC_HLT_INT_PD_HT_INT_STATUS_MASK                (0xFFFFU << TSADC_HLT_INT_PD_HT_INT_STATUS_SHIFT)            /* 0x0000FFFF */
#define TSADC_HLT_INT_PD_LT_INT_STATUS_SHIFT               (16U)
#define TSADC_HLT_INT_PD_LT_INT_STATUS_MASK                (0xFFFFU << TSADC_HLT_INT_PD_LT_INT_STATUS_SHIFT)            /* 0xFFFF0000 */
/* EOC_HSHUT_PD */
#define TSADC_EOC_HSHUT_PD_OFFSET                          (0x28U)
#define TSADC_EOC_HSHUT_PD_HT_SHUT_PD_SHIFT                (0U)
#define TSADC_EOC_HSHUT_PD_HT_SHUT_PD_MASK                 (0xFFFFU << TSADC_EOC_HSHUT_PD_HT_SHUT_PD_SHIFT)             /* 0x0000FFFF */
#define TSADC_EOC_HSHUT_PD_USR_EOC_IRQ_PD_SHIFT            (16U)
#define TSADC_EOC_HSHUT_PD_USR_EOC_IRQ_PD_MASK             (0x1U << TSADC_EOC_HSHUT_PD_USR_EOC_IRQ_PD_SHIFT)            /* 0x00010000 */
#define TSADC_EOC_HSHUT_PD_ROUND_INT_PD_SHIFT              (17U)
#define TSADC_EOC_HSHUT_PD_ROUND_INT_PD_MASK               (0x1U << TSADC_EOC_HSHUT_PD_ROUND_INT_PD_SHIFT)              /* 0x00020000 */
/* DATA0 */
#define TSADC_DATA0_OFFSET                                 (0x2CU)
#define TSADC_DATA0                                        (0x0U)
#define TSADC_DATA0_ADC_DATA_SHIFT                         (0U)
#define TSADC_DATA0_ADC_DATA_MASK                          (0x3FFU << TSADC_DATA0_ADC_DATA_SHIFT)                       /* 0x000003FF */
/* DATA1 */
#define TSADC_DATA1_OFFSET                                 (0x30U)
#define TSADC_DATA1                                        (0x0U)
#define TSADC_DATA1_ADC_DATA_SHIFT                         (0U)
#define TSADC_DATA1_ADC_DATA_MASK                          (0x3FFU << TSADC_DATA1_ADC_DATA_SHIFT)                       /* 0x000003FF */
/* DATA2 */
#define TSADC_DATA2_OFFSET                                 (0x34U)
#define TSADC_DATA2                                        (0x0U)
#define TSADC_DATA2_ADC_DATA_SHIFT                         (0U)
#define TSADC_DATA2_ADC_DATA_MASK                          (0x3FFU << TSADC_DATA2_ADC_DATA_SHIFT)                       /* 0x000003FF */
/* DATA3 */
#define TSADC_DATA3_OFFSET                                 (0x38U)
#define TSADC_DATA3                                        (0x0U)
#define TSADC_DATA3_ADC_DATA_SHIFT                         (0U)
#define TSADC_DATA3_ADC_DATA_MASK                          (0x3FFU << TSADC_DATA3_ADC_DATA_SHIFT)                       /* 0x000003FF */
/* DATA4 */
#define TSADC_DATA4_OFFSET                                 (0x3CU)
#define TSADC_DATA4                                        (0x0U)
#define TSADC_DATA4_ADC_DATA_SHIFT                         (0U)
#define TSADC_DATA4_ADC_DATA_MASK                          (0x3FFU << TSADC_DATA4_ADC_DATA_SHIFT)                       /* 0x000003FF */
/* DATA5 */
#define TSADC_DATA5_OFFSET                                 (0x40U)
#define TSADC_DATA5                                        (0x0U)
#define TSADC_DATA5_ADC_DATA_SHIFT                         (0U)
#define TSADC_DATA5_ADC_DATA_MASK                          (0x3FFU << TSADC_DATA5_ADC_DATA_SHIFT)                       /* 0x000003FF */
/* DATA6 */
#define TSADC_DATA6_OFFSET                                 (0x44U)
#define TSADC_DATA6                                        (0x0U)
#define TSADC_DATA6_ADC_DATA_SHIFT                         (0U)
#define TSADC_DATA6_ADC_DATA_MASK                          (0x3FFU << TSADC_DATA6_ADC_DATA_SHIFT)                       /* 0x000003FF */
/* DATA7 */
#define TSADC_DATA7_OFFSET                                 (0x48U)
#define TSADC_DATA7                                        (0x0U)
#define TSADC_DATA7_ADC_DATA_SHIFT                         (0U)
#define TSADC_DATA7_ADC_DATA_MASK                          (0x3FFU << TSADC_DATA7_ADC_DATA_SHIFT)                       /* 0x000003FF */
/* DATA8 */
#define TSADC_DATA8_OFFSET                                 (0x4CU)
#define TSADC_DATA8                                        (0x0U)
#define TSADC_DATA8_ADC_DATA_SHIFT                         (0U)
#define TSADC_DATA8_ADC_DATA_MASK                          (0x3FFU << TSADC_DATA8_ADC_DATA_SHIFT)                       /* 0x000003FF */
/* DATA9 */
#define TSADC_DATA9_OFFSET                                 (0x50U)
#define TSADC_DATA9                                        (0x0U)
#define TSADC_DATA9_ADC_DATA_SHIFT                         (0U)
#define TSADC_DATA9_ADC_DATA_MASK                          (0x3FFU << TSADC_DATA9_ADC_DATA_SHIFT)                       /* 0x000003FF */
/* DATA10 */
#define TSADC_DATA10_OFFSET                                (0x54U)
#define TSADC_DATA10                                       (0x0U)
#define TSADC_DATA10_ADC_DATA_SHIFT                        (0U)
#define TSADC_DATA10_ADC_DATA_MASK                         (0x3FFU << TSADC_DATA10_ADC_DATA_SHIFT)                      /* 0x000003FF */
/* DATA11 */
#define TSADC_DATA11_OFFSET                                (0x58U)
#define TSADC_DATA11                                       (0x0U)
#define TSADC_DATA11_ADC_DATA_SHIFT                        (0U)
#define TSADC_DATA11_ADC_DATA_MASK                         (0x3FFU << TSADC_DATA11_ADC_DATA_SHIFT)                      /* 0x000003FF */
/* DATA12 */
#define TSADC_DATA12_OFFSET                                (0x5CU)
#define TSADC_DATA12                                       (0x0U)
#define TSADC_DATA12_ADC_DATA_SHIFT                        (0U)
#define TSADC_DATA12_ADC_DATA_MASK                         (0x3FFU << TSADC_DATA12_ADC_DATA_SHIFT)                      /* 0x000003FF */
/* DATA13 */
#define TSADC_DATA13_OFFSET                                (0x60U)
#define TSADC_DATA13                                       (0x0U)
#define TSADC_DATA13_ADC_DATA_SHIFT                        (0U)
#define TSADC_DATA13_ADC_DATA_MASK                         (0x3FFU << TSADC_DATA13_ADC_DATA_SHIFT)                      /* 0x000003FF */
/* DATA14 */
#define TSADC_DATA14_OFFSET                                (0x64U)
#define TSADC_DATA14                                       (0x0U)
#define TSADC_DATA14_ADC_DATA_SHIFT                        (0U)
#define TSADC_DATA14_ADC_DATA_MASK                         (0x3FFU << TSADC_DATA14_ADC_DATA_SHIFT)                      /* 0x000003FF */
/* DATA15 */
#define TSADC_DATA15_OFFSET                                (0x68U)
#define TSADC_DATA15                                       (0x0U)
#define TSADC_DATA15_ADC_DATA_SHIFT                        (0U)
#define TSADC_DATA15_ADC_DATA_MASK                         (0x3FFU << TSADC_DATA15_ADC_DATA_SHIFT)                      /* 0x000003FF */
/* COMP0_INT */
#define TSADC_COMP0_INT_OFFSET                             (0x6CU)
#define TSADC_COMP0_INT_TSADC_H_INT_COMP_SRC0_SHIFT        (0U)
#define TSADC_COMP0_INT_TSADC_H_INT_COMP_SRC0_MASK         (0x3FFU << TSADC_COMP0_INT_TSADC_H_INT_COMP_SRC0_SHIFT)      /* 0x000003FF */
/* COMP1_INT */
#define TSADC_COMP1_INT_OFFSET                             (0x70U)
#define TSADC_COMP1_INT_TSADC_H_INT_COMP_SRC1_SHIFT        (0U)
#define TSADC_COMP1_INT_TSADC_H_INT_COMP_SRC1_MASK         (0x3FFU << TSADC_COMP1_INT_TSADC_H_INT_COMP_SRC1_SHIFT)      /* 0x000003FF */
/* COMP2_INT */
#define TSADC_COMP2_INT_OFFSET                             (0x74U)
#define TSADC_COMP2_INT_TSADC_H_INT_COMP_SRC2_SHIFT        (0U)
#define TSADC_COMP2_INT_TSADC_H_INT_COMP_SRC2_MASK         (0x3FFU << TSADC_COMP2_INT_TSADC_H_INT_COMP_SRC2_SHIFT)      /* 0x000003FF */
/* COMP3_INT */
#define TSADC_COMP3_INT_OFFSET                             (0x78U)
#define TSADC_COMP3_INT_TSADC_H_INT_COMP_SRC3_SHIFT        (0U)
#define TSADC_COMP3_INT_TSADC_H_INT_COMP_SRC3_MASK         (0x3FFU << TSADC_COMP3_INT_TSADC_H_INT_COMP_SRC3_SHIFT)      /* 0x000003FF */
/* COMP4_INT */
#define TSADC_COMP4_INT_OFFSET                             (0x7CU)
#define TSADC_COMP4_INT_TSADC_H_INT_COMP_SRC4_SHIFT        (0U)
#define TSADC_COMP4_INT_TSADC_H_INT_COMP_SRC4_MASK         (0x3FFU << TSADC_COMP4_INT_TSADC_H_INT_COMP_SRC4_SHIFT)      /* 0x000003FF */
/* COMP5_INT */
#define TSADC_COMP5_INT_OFFSET                             (0x80U)
#define TSADC_COMP5_INT_TSADC_H_INT_COMP_SRC5_SHIFT        (0U)
#define TSADC_COMP5_INT_TSADC_H_INT_COMP_SRC5_MASK         (0x3FFU << TSADC_COMP5_INT_TSADC_H_INT_COMP_SRC5_SHIFT)      /* 0x000003FF */
/* COMP6_INT */
#define TSADC_COMP6_INT_OFFSET                             (0x84U)
#define TSADC_COMP6_INT_TSADC_H_INT_COMP_SRC6_SHIFT        (0U)
#define TSADC_COMP6_INT_TSADC_H_INT_COMP_SRC6_MASK         (0x3FFU << TSADC_COMP6_INT_TSADC_H_INT_COMP_SRC6_SHIFT)      /* 0x000003FF */
/* COMP7_INT */
#define TSADC_COMP7_INT_OFFSET                             (0x88U)
#define TSADC_COMP7_INT_TSADC_H_INT_COMP_SRC7_SHIFT        (0U)
#define TSADC_COMP7_INT_TSADC_H_INT_COMP_SRC7_MASK         (0x3FFU << TSADC_COMP7_INT_TSADC_H_INT_COMP_SRC7_SHIFT)      /* 0x000003FF */
/* COMP8_INT */
#define TSADC_COMP8_INT_OFFSET                             (0x8CU)
#define TSADC_COMP8_INT_TSADC_H_INT_COMP_SRC8_SHIFT        (0U)
#define TSADC_COMP8_INT_TSADC_H_INT_COMP_SRC8_MASK         (0x3FFU << TSADC_COMP8_INT_TSADC_H_INT_COMP_SRC8_SHIFT)      /* 0x000003FF */
/* COMP9_INT */
#define TSADC_COMP9_INT_OFFSET                             (0x90U)
#define TSADC_COMP9_INT_TSADC_H_INT_COMP_SRC9_SHIFT        (0U)
#define TSADC_COMP9_INT_TSADC_H_INT_COMP_SRC9_MASK         (0x3FFU << TSADC_COMP9_INT_TSADC_H_INT_COMP_SRC9_SHIFT)      /* 0x000003FF */
/* COMP10_INT */
#define TSADC_COMP10_INT_OFFSET                            (0x94U)
#define TSADC_COMP10_INT_TSADC_H_INT_COMP_SRC10_SHIFT      (0U)
#define TSADC_COMP10_INT_TSADC_H_INT_COMP_SRC10_MASK       (0x3FFU << TSADC_COMP10_INT_TSADC_H_INT_COMP_SRC10_SHIFT)    /* 0x000003FF */
/* COMP11_INT */
#define TSADC_COMP11_INT_OFFSET                            (0x98U)
#define TSADC_COMP11_INT_TSADC_H_INT_COMP_SRC11_SHIFT      (0U)
#define TSADC_COMP11_INT_TSADC_H_INT_COMP_SRC11_MASK       (0x3FFU << TSADC_COMP11_INT_TSADC_H_INT_COMP_SRC11_SHIFT)    /* 0x000003FF */
/* COMP12_INT */
#define TSADC_COMP12_INT_OFFSET                            (0x9CU)
#define TSADC_COMP12_INT_TSADC_H_INT_COMP_SRC12_SHIFT      (0U)
#define TSADC_COMP12_INT_TSADC_H_INT_COMP_SRC12_MASK       (0x3FFU << TSADC_COMP12_INT_TSADC_H_INT_COMP_SRC12_SHIFT)    /* 0x000003FF */
/* COMP13_INT */
#define TSADC_COMP13_INT_OFFSET                            (0x100U)
#define TSADC_COMP13_INT_TSADC_H_INT_COMP_SRC13_SHIFT      (0U)
#define TSADC_COMP13_INT_TSADC_H_INT_COMP_SRC13_MASK       (0x3FFU << TSADC_COMP13_INT_TSADC_H_INT_COMP_SRC13_SHIFT)    /* 0x000003FF */
/* COMP14_INT */
#define TSADC_COMP14_INT_OFFSET                            (0x104U)
#define TSADC_COMP14_INT_TSADC_H_INT_COMP_SRC14_SHIFT      (0U)
#define TSADC_COMP14_INT_TSADC_H_INT_COMP_SRC14_MASK       (0x3FFU << TSADC_COMP14_INT_TSADC_H_INT_COMP_SRC14_SHIFT)    /* 0x000003FF */
/* COMP15_INT */
#define TSADC_COMP15_INT_OFFSET                            (0x108U)
#define TSADC_COMP15_INT_TSADC_H_INT_COMP_SRC15_SHIFT      (0U)
#define TSADC_COMP15_INT_TSADC_H_INT_COMP_SRC15_MASK       (0x3FFU << TSADC_COMP15_INT_TSADC_H_INT_COMP_SRC15_SHIFT)    /* 0x000003FF */
/* COMP0_SHUT */
#define TSADC_COMP0_SHUT_OFFSET                            (0x10CU)
#define TSADC_COMP0_SHUT_TSADC_SHUT_COMP_SRC0_SHIFT        (0U)
#define TSADC_COMP0_SHUT_TSADC_SHUT_COMP_SRC0_MASK         (0x3FFU << TSADC_COMP0_SHUT_TSADC_SHUT_COMP_SRC0_SHIFT)      /* 0x000003FF */
/* COMP1_SHUT */
#define TSADC_COMP1_SHUT_OFFSET                            (0x110U)
#define TSADC_COMP1_SHUT_TSADC_SHUT_COMP_SRC1_SHIFT        (0U)
#define TSADC_COMP1_SHUT_TSADC_SHUT_COMP_SRC1_MASK         (0x3FFU << TSADC_COMP1_SHUT_TSADC_SHUT_COMP_SRC1_SHIFT)      /* 0x000003FF */
/* COMP2_SHUT */
#define TSADC_COMP2_SHUT_OFFSET                            (0x114U)
#define TSADC_COMP2_SHUT_TSADC_SHUT_COMP_SRC2_SHIFT        (0U)
#define TSADC_COMP2_SHUT_TSADC_SHUT_COMP_SRC2_MASK         (0x3FFU << TSADC_COMP2_SHUT_TSADC_SHUT_COMP_SRC2_SHIFT)      /* 0x000003FF */
/* COMP3_SHUT */
#define TSADC_COMP3_SHUT_OFFSET                            (0x118U)
#define TSADC_COMP3_SHUT_TSADC_SHUT_COMP_SRC3_SHIFT        (0U)
#define TSADC_COMP3_SHUT_TSADC_SHUT_COMP_SRC3_MASK         (0x3FFU << TSADC_COMP3_SHUT_TSADC_SHUT_COMP_SRC3_SHIFT)      /* 0x000003FF */
/* COMP4_SHUT */
#define TSADC_COMP4_SHUT_OFFSET                            (0x11CU)
#define TSADC_COMP4_SHUT_TSADC_SHUT_COMP_SRC4_SHIFT        (0U)
#define TSADC_COMP4_SHUT_TSADC_SHUT_COMP_SRC4_MASK         (0x3FFU << TSADC_COMP4_SHUT_TSADC_SHUT_COMP_SRC4_SHIFT)      /* 0x000003FF */
/* COMP5_SHUT */
#define TSADC_COMP5_SHUT_OFFSET                            (0x120U)
#define TSADC_COMP5_SHUT_TSADC_SHUT_COMP_SRC5_SHIFT        (0U)
#define TSADC_COMP5_SHUT_TSADC_SHUT_COMP_SRC5_MASK         (0x3FFU << TSADC_COMP5_SHUT_TSADC_SHUT_COMP_SRC5_SHIFT)      /* 0x000003FF */
/* COMP6_SHUT */
#define TSADC_COMP6_SHUT_OFFSET                            (0x124U)
#define TSADC_COMP6_SHUT_TSADC_SHUT_COMP_SRC6_SHIFT        (0U)
#define TSADC_COMP6_SHUT_TSADC_SHUT_COMP_SRC6_MASK         (0x3FFU << TSADC_COMP6_SHUT_TSADC_SHUT_COMP_SRC6_SHIFT)      /* 0x000003FF */
/* COMP7_SHUT */
#define TSADC_COMP7_SHUT_OFFSET                            (0x128U)
#define TSADC_COMP7_SHUT_TSADC_SHUT_COMP_SRC7_SHIFT        (0U)
#define TSADC_COMP7_SHUT_TSADC_SHUT_COMP_SRC7_MASK         (0x3FFU << TSADC_COMP7_SHUT_TSADC_SHUT_COMP_SRC7_SHIFT)      /* 0x000003FF */
/* COMP8_SHUT */
#define TSADC_COMP8_SHUT_OFFSET                            (0x12CU)
#define TSADC_COMP8_SHUT_TSADC_SHUT_COMP_SRC8_SHIFT        (0U)
#define TSADC_COMP8_SHUT_TSADC_SHUT_COMP_SRC8_MASK         (0x3FFU << TSADC_COMP8_SHUT_TSADC_SHUT_COMP_SRC8_SHIFT)      /* 0x000003FF */
/* COMP9_SHUT */
#define TSADC_COMP9_SHUT_OFFSET                            (0x130U)
#define TSADC_COMP9_SHUT_TSADC_SHUT_COMP_SRC9_SHIFT        (0U)
#define TSADC_COMP9_SHUT_TSADC_SHUT_COMP_SRC9_MASK         (0x3FFU << TSADC_COMP9_SHUT_TSADC_SHUT_COMP_SRC9_SHIFT)      /* 0x000003FF */
/* COMP10_SHUT */
#define TSADC_COMP10_SHUT_OFFSET                           (0x134U)
#define TSADC_COMP10_SHUT_TSADC_SHUT_COMP_SRC10_SHIFT      (0U)
#define TSADC_COMP10_SHUT_TSADC_SHUT_COMP_SRC10_MASK       (0x3FFU << TSADC_COMP10_SHUT_TSADC_SHUT_COMP_SRC10_SHIFT)    /* 0x000003FF */
/* COMP11_SHUT */
#define TSADC_COMP11_SHUT_OFFSET                           (0x138U)
#define TSADC_COMP11_SHUT_TSADC_SHUT_COMP_SRC11_SHIFT      (0U)
#define TSADC_COMP11_SHUT_TSADC_SHUT_COMP_SRC11_MASK       (0x3FFU << TSADC_COMP11_SHUT_TSADC_SHUT_COMP_SRC11_SHIFT)    /* 0x000003FF */
/* COMP12_SHUT */
#define TSADC_COMP12_SHUT_OFFSET                           (0x13CU)
#define TSADC_COMP12_SHUT_TSADC_SHUT_COMP_SRC12_SHIFT      (0U)
#define TSADC_COMP12_SHUT_TSADC_SHUT_COMP_SRC12_MASK       (0x3FFU << TSADC_COMP12_SHUT_TSADC_SHUT_COMP_SRC12_SHIFT)    /* 0x000003FF */
/* COMP13_SHUT */
#define TSADC_COMP13_SHUT_OFFSET                           (0x140U)
#define TSADC_COMP13_SHUT_TSADC_SHUT_COMP_SRC13_SHIFT      (0U)
#define TSADC_COMP13_SHUT_TSADC_SHUT_COMP_SRC13_MASK       (0x3FFU << TSADC_COMP13_SHUT_TSADC_SHUT_COMP_SRC13_SHIFT)    /* 0x000003FF */
/* COMP14_SHUT */
#define TSADC_COMP14_SHUT_OFFSET                           (0x144U)
#define TSADC_COMP14_SHUT_TSADC_SHUT_COMP_SRC14_SHIFT      (0U)
#define TSADC_COMP14_SHUT_TSADC_SHUT_COMP_SRC14_MASK       (0x3FFU << TSADC_COMP14_SHUT_TSADC_SHUT_COMP_SRC14_SHIFT)    /* 0x000003FF */
/* COMP15_SHUT */
#define TSADC_COMP15_SHUT_OFFSET                           (0x148U)
#define TSADC_COMP15_SHUT_TSADC_SHUT_COMP_SRC15_SHIFT      (0U)
#define TSADC_COMP15_SHUT_TSADC_SHUT_COMP_SRC15_MASK       (0x3FFU << TSADC_COMP15_SHUT_TSADC_SHUT_COMP_SRC15_SHIFT)    /* 0x000003FF */
/* HIGH_INT_DEBOUNCE */
#define TSADC_HIGH_INT_DEBOUNCE_OFFSET                     (0x14CU)
#define TSADC_HIGH_INT_DEBOUNCE_DEBOUNCE_SHIFT             (0U)
#define TSADC_HIGH_INT_DEBOUNCE_DEBOUNCE_MASK              (0xFFU << TSADC_HIGH_INT_DEBOUNCE_DEBOUNCE_SHIFT)            /* 0x000000FF */
/* HIGH_TSHUT_DEBOUNCE */
#define TSADC_HIGH_TSHUT_DEBOUNCE_OFFSET                   (0x150U)
#define TSADC_HIGH_TSHUT_DEBOUNCE_DEBOUNCE_SHIFT           (0U)
#define TSADC_HIGH_TSHUT_DEBOUNCE_DEBOUNCE_MASK            (0xFFU << TSADC_HIGH_TSHUT_DEBOUNCE_DEBOUNCE_SHIFT)          /* 0x000000FF */
/* AUTO_PERIOD */
#define TSADC_AUTO_PERIOD_OFFSET                           (0x154U)
#define TSADC_AUTO_PERIOD_AUTO_PERIOD_SHIFT                (0U)
#define TSADC_AUTO_PERIOD_AUTO_PERIOD_MASK                 (0xFFFFFFFFU << TSADC_AUTO_PERIOD_AUTO_PERIOD_SHIFT)         /* 0xFFFFFFFF */
/* AUTO_PERIOD_HT */
#define TSADC_AUTO_PERIOD_HT_OFFSET                        (0x158U)
#define TSADC_AUTO_PERIOD_HT_AUTO_PERIOD_SHIFT             (0U)
#define TSADC_AUTO_PERIOD_HT_AUTO_PERIOD_MASK              (0xFFFFFFFFU << TSADC_AUTO_PERIOD_HT_AUTO_PERIOD_SHIFT)      /* 0xFFFFFFFF */
/* COMP0_LOW_INT */
#define TSADC_COMP0_LOW_INT_OFFSET                         (0x15CU)
#define TSADC_COMP0_LOW_INT_TSADC_L_INT_COMP_SRC0_SHIFT    (0U)
#define TSADC_COMP0_LOW_INT_TSADC_L_INT_COMP_SRC0_MASK     (0x3FFU << TSADC_COMP0_LOW_INT_TSADC_L_INT_COMP_SRC0_SHIFT)  /* 0x000003FF */
/* COMP1_LOW_INT */
#define TSADC_COMP1_LOW_INT_OFFSET                         (0x160U)
#define TSADC_COMP1_LOW_INT_TSADC_L_INT_COMP_SRC1_SHIFT    (0U)
#define TSADC_COMP1_LOW_INT_TSADC_L_INT_COMP_SRC1_MASK     (0x3FFU << TSADC_COMP1_LOW_INT_TSADC_L_INT_COMP_SRC1_SHIFT)  /* 0x000003FF */
/* COMP2_LOW_INT */
#define TSADC_COMP2_LOW_INT_OFFSET                         (0x164U)
#define TSADC_COMP2_LOW_INT_TSADC_L_INT_COMP_SRC2_SHIFT    (0U)
#define TSADC_COMP2_LOW_INT_TSADC_L_INT_COMP_SRC2_MASK     (0x3FFU << TSADC_COMP2_LOW_INT_TSADC_L_INT_COMP_SRC2_SHIFT)  /* 0x000003FF */
/* COMP3_LOW_INT */
#define TSADC_COMP3_LOW_INT_OFFSET                         (0x168U)
#define TSADC_COMP3_LOW_INT_TSADC_L_INT_COMP_SRC3_SHIFT    (0U)
#define TSADC_COMP3_LOW_INT_TSADC_L_INT_COMP_SRC3_MASK     (0x3FFU << TSADC_COMP3_LOW_INT_TSADC_L_INT_COMP_SRC3_SHIFT)  /* 0x000003FF */
/* COMP4_LOW_INT */
#define TSADC_COMP4_LOW_INT_OFFSET                         (0x16CU)
#define TSADC_COMP4_LOW_INT_TSADC_L_INT_COMP_SRC4_SHIFT    (0U)
#define TSADC_COMP4_LOW_INT_TSADC_L_INT_COMP_SRC4_MASK     (0x3FFU << TSADC_COMP4_LOW_INT_TSADC_L_INT_COMP_SRC4_SHIFT)  /* 0x000003FF */
/* COMP5_LOW_INT */
#define TSADC_COMP5_LOW_INT_OFFSET                         (0x170U)
#define TSADC_COMP5_LOW_INT_TSADC_L_INT_COMP_SRC5_SHIFT    (0U)
#define TSADC_COMP5_LOW_INT_TSADC_L_INT_COMP_SRC5_MASK     (0x3FFU << TSADC_COMP5_LOW_INT_TSADC_L_INT_COMP_SRC5_SHIFT)  /* 0x000003FF */
/* COMP6_LOW_INT */
#define TSADC_COMP6_LOW_INT_OFFSET                         (0x174U)
#define TSADC_COMP6_LOW_INT_TSADC_L_INT_COMP_SRC6_SHIFT    (0U)
#define TSADC_COMP6_LOW_INT_TSADC_L_INT_COMP_SRC6_MASK     (0x3FFU << TSADC_COMP6_LOW_INT_TSADC_L_INT_COMP_SRC6_SHIFT)  /* 0x000003FF */
/* COMP7_LOW_INT */
#define TSADC_COMP7_LOW_INT_OFFSET                         (0x178U)
#define TSADC_COMP7_LOW_INT_TSADC_L_INT_COMP_SRC7_SHIFT    (0U)
#define TSADC_COMP7_LOW_INT_TSADC_L_INT_COMP_SRC7_MASK     (0x3FFU << TSADC_COMP7_LOW_INT_TSADC_L_INT_COMP_SRC7_SHIFT)  /* 0x000003FF */
/* COMP8_LOW_INT */
#define TSADC_COMP8_LOW_INT_OFFSET                         (0x17CU)
#define TSADC_COMP8_LOW_INT_TSADC_L_INT_COMP_SRC8_SHIFT    (0U)
#define TSADC_COMP8_LOW_INT_TSADC_L_INT_COMP_SRC8_MASK     (0x3FFU << TSADC_COMP8_LOW_INT_TSADC_L_INT_COMP_SRC8_SHIFT)  /* 0x000003FF */
/* COMP9_LOW_INT */
#define TSADC_COMP9_LOW_INT_OFFSET                         (0x180U)
#define TSADC_COMP9_LOW_INT_TSADC_L_INT_COMP_SRC9_SHIFT    (0U)
#define TSADC_COMP9_LOW_INT_TSADC_L_INT_COMP_SRC9_MASK     (0x3FFU << TSADC_COMP9_LOW_INT_TSADC_L_INT_COMP_SRC9_SHIFT)  /* 0x000003FF */
/* COMP10_LOW_INT */
#define TSADC_COMP10_LOW_INT_OFFSET                        (0x184U)
#define TSADC_COMP10_LOW_INT_TSADC_L_INT_COMP_SRC10_SHIFT  (0U)
#define TSADC_COMP10_LOW_INT_TSADC_L_INT_COMP_SRC10_MASK   (0x3FFU << TSADC_COMP10_LOW_INT_TSADC_L_INT_COMP_SRC10_SHIFT) /* 0x000003FF */
/* COMP11_LOW_INT */
#define TSADC_COMP11_LOW_INT_OFFSET                        (0x188U)
#define TSADC_COMP11_LOW_INT_TSADC_L_INT_COMP_SRC11_SHIFT  (0U)
#define TSADC_COMP11_LOW_INT_TSADC_L_INT_COMP_SRC11_MASK   (0x3FFU << TSADC_COMP11_LOW_INT_TSADC_L_INT_COMP_SRC11_SHIFT) /* 0x000003FF */
/* COMP12_LOW_INT */
#define TSADC_COMP12_LOW_INT_OFFSET                        (0x18CU)
#define TSADC_COMP12_LOW_INT_TSADC_L_INT_COMP_SRC12_SHIFT  (0U)
#define TSADC_COMP12_LOW_INT_TSADC_L_INT_COMP_SRC12_MASK   (0x3FFU << TSADC_COMP12_LOW_INT_TSADC_L_INT_COMP_SRC12_SHIFT) /* 0x000003FF */
/* COMP13_LOW_INT */
#define TSADC_COMP13_LOW_INT_OFFSET                        (0x190U)
#define TSADC_COMP13_LOW_INT_TSADC_L_INT_COMP_SRC13_SHIFT  (0U)
#define TSADC_COMP13_LOW_INT_TSADC_L_INT_COMP_SRC13_MASK   (0x3FFU << TSADC_COMP13_LOW_INT_TSADC_L_INT_COMP_SRC13_SHIFT) /* 0x000003FF */
/* COMP14_LOW_INT */
#define TSADC_COMP14_LOW_INT_OFFSET                        (0x194U)
#define TSADC_COMP14_LOW_INT_TSADC_L_INT_COMP_SRC14_SHIFT  (0U)
#define TSADC_COMP14_LOW_INT_TSADC_L_INT_COMP_SRC14_MASK   (0x3FFU << TSADC_COMP14_LOW_INT_TSADC_L_INT_COMP_SRC14_SHIFT) /* 0x000003FF */
/* COMP15_LOW_INT */
#define TSADC_COMP15_LOW_INT_OFFSET                        (0x198U)
#define TSADC_COMP15_LOW_INT_TSADC_L_INT_COMP_SRC15_SHIFT  (0U)
#define TSADC_COMP15_LOW_INT_TSADC_L_INT_COMP_SRC15_MASK   (0x3FFU << TSADC_COMP15_LOW_INT_TSADC_L_INT_COMP_SRC15_SHIFT) /* 0x000003FF */
/* T_SETUP */
#define TSADC_T_SETUP_OFFSET                               (0x19CU)
#define TSADC_T_SETUP_T_SETUP_SHIFT                        (0U)
#define TSADC_T_SETUP_T_SETUP_MASK                         (0xFFFFU << TSADC_T_SETUP_T_SETUP_SHIFT)                     /* 0x0000FFFF */
/* T_PW_EN */
#define TSADC_T_PW_EN_OFFSET                               (0x200U)
#define TSADC_T_PW_EN_T_PW_EN_SHIFT                        (0U)
#define TSADC_T_PW_EN_T_PW_EN_MASK                         (0xFFFFU << TSADC_T_PW_EN_T_PW_EN_SHIFT)                     /* 0x0000FFFF */
/* T_EN_CLK */
#define TSADC_T_EN_CLK_OFFSET                              (0x204U)
#define TSADC_T_EN_CLK_T_EN_CLK_SHIFT                      (0U)
#define TSADC_T_EN_CLK_T_EN_CLK_MASK                       (0xFFU << TSADC_T_EN_CLK_T_EN_CLK_SHIFT)                     /* 0x000000FF */
/* T_NON_OV */
#define TSADC_T_NON_OV_OFFSET                              (0x208U)
#define TSADC_T_NON_OV_T_NON_OV_SHIFT                      (0U)
#define TSADC_T_NON_OV_T_NON_OV_MASK                       (0xFFU << TSADC_T_NON_OV_T_NON_OV_SHIFT)                     /* 0x000000FF */
/* T_HOLD */
#define TSADC_T_HOLD_OFFSET                                (0x20CU)
#define TSADC_T_HOLD_T_HOLD_SHIFT                          (0U)
#define TSADC_T_HOLD_T_HOLD_MASK                           (0xFFFFU << TSADC_T_HOLD_T_HOLD_SHIFT)                       /* 0x0000FFFF */
/* Q_MAX */
#define TSADC_Q_MAX_OFFSET                                 (0x210U)
#define TSADC_Q_MAX_Q_MAX_SHIFT                            (0U)
#define TSADC_Q_MAX_Q_MAX_MASK                             (0x7FFU << TSADC_Q_MAX_Q_MAX_SHIFT)                          /* 0x000007FF */
/* STATIC_CON */
#define TSADC_STATIC_CON_OFFSET                            (0x214U)
#define TSADC_STATIC_CON_EN_CH_SHIFT                       (0U)
#define TSADC_STATIC_CON_EN_CH_MASK                        (0x1U << TSADC_STATIC_CON_EN_CH_SHIFT)                       /* 0x00000001 */
#define TSADC_STATIC_CON_EN_DEM_SHIFT                      (1U)
#define TSADC_STATIC_CON_EN_DEM_MASK                       (0x1U << TSADC_STATIC_CON_EN_DEM_SHIFT)                      /* 0x00000002 */
#define TSADC_STATIC_CON_AVG_MODE_SHIFT                    (2U)
#define TSADC_STATIC_CON_AVG_MODE_MASK                     (0x7U << TSADC_STATIC_CON_AVG_MODE_SHIFT)                    /* 0x0000001C */
#define TSADC_STATIC_CON_BGR_I_TRIM_SHIFT                  (5U)
#define TSADC_STATIC_CON_BGR_I_TRIM_MASK                   (0xFU << TSADC_STATIC_CON_BGR_I_TRIM_SHIFT)                  /* 0x000001E0 */
#define TSADC_STATIC_CON_BGR_R_TRIM_SHIFT                  (9U)
#define TSADC_STATIC_CON_BGR_R_TRIM_MASK                   (0xFU << TSADC_STATIC_CON_BGR_R_TRIM_SHIFT)                  /* 0x00001E00 */
#define TSADC_STATIC_CON_VERF_TRIM_SHIFT                   (13U)
#define TSADC_STATIC_CON_VERF_TRIM_MASK                    (0xFU << TSADC_STATIC_CON_VERF_TRIM_SHIFT)                   /* 0x0001E000 */
#define TSADC_STATIC_CON_VBE_I_TRM_SHIFT                   (17U)
#define TSADC_STATIC_CON_VBE_I_TRM_MASK                    (0xFU << TSADC_STATIC_CON_VBE_I_TRM_SHIFT)                   /* 0x001E0000 */
#define TSADC_STATIC_CON_COMP_I_TRIM_SHIFT                 (21U)
#define TSADC_STATIC_CON_COMP_I_TRIM_MASK                  (0x3U << TSADC_STATIC_CON_COMP_I_TRIM_SHIFT)                 /* 0x00600000 */
#define TSADC_STATIC_CON_BUF_SLOPE_SEL_SHIFT               (23U)
#define TSADC_STATIC_CON_BUF_SLOPE_SEL_MASK                (0xFU << TSADC_STATIC_CON_BUF_SLOPE_SEL_SHIFT)               /* 0x07800000 */
#define TSADC_STATIC_CON_BUF_VREF_SEL_SHIFT                (27U)
#define TSADC_STATIC_CON_BUF_VREF_SEL_MASK                 (0x1FU << TSADC_STATIC_CON_BUF_VREF_SEL_SHIFT)               /* 0xF8000000 */
/* CLK_CH_PERIOD */
#define TSADC_CLK_CH_PERIOD_OFFSET                         (0x21CU)
#define TSADC_CLK_CH_PERIOD_CLK_CH_PERIOD_SHIFT            (0U)
#define TSADC_CLK_CH_PERIOD_CLK_CH_PERIOD_MASK             (0xFFFFFFFFU << TSADC_CLK_CH_PERIOD_CLK_CH_PERIOD_SHIFT)     /* 0xFFFFFFFF */
/* T_PW_CLK */
#define TSADC_T_PW_CLK_OFFSET                              (0x220U)
#define TSADC_T_PW_CLK_T_PW_CLK_SHIFT                      (0U)
#define TSADC_T_PW_CLK_T_PW_CLK_MASK                       (0xFFFFU << TSADC_T_PW_CLK_T_PW_CLK_SHIFT)                   /* 0x0000FFFF */
/***************************************GPIO1_IOC****************************************/
/* GPIO1A_IOMUX_SEL_0 */
#define GPIO1_IOC_GPIO1A_IOMUX_SEL_0_OFFSET                (0x20U)
#define GPIO1_IOC_GPIO1A_IOMUX_SEL_0_GPIO1A0_SEL_SHIFT     (0U)
#define GPIO1_IOC_GPIO1A_IOMUX_SEL_0_GPIO1A0_SEL_MASK      (0xFU << GPIO1_IOC_GPIO1A_IOMUX_SEL_0_GPIO1A0_SEL_SHIFT)     /* 0x0000000F */
#define GPIO1_IOC_GPIO1A_IOMUX_SEL_0_GPIO1A1_SEL_SHIFT     (4U)
#define GPIO1_IOC_GPIO1A_IOMUX_SEL_0_GPIO1A1_SEL_MASK      (0xFU << GPIO1_IOC_GPIO1A_IOMUX_SEL_0_GPIO1A1_SEL_SHIFT)     /* 0x000000F0 */
#define GPIO1_IOC_GPIO1A_IOMUX_SEL_0_GPIO1A2_SEL_SHIFT     (8U)
#define GPIO1_IOC_GPIO1A_IOMUX_SEL_0_GPIO1A2_SEL_MASK      (0xFU << GPIO1_IOC_GPIO1A_IOMUX_SEL_0_GPIO1A2_SEL_SHIFT)     /* 0x00000F00 */
#define GPIO1_IOC_GPIO1A_IOMUX_SEL_0_GPIO1A3_SEL_SHIFT     (12U)
#define GPIO1_IOC_GPIO1A_IOMUX_SEL_0_GPIO1A3_SEL_MASK      (0xFU << GPIO1_IOC_GPIO1A_IOMUX_SEL_0_GPIO1A3_SEL_SHIFT)     /* 0x0000F000 */
/* GPIO1A_IOMUX_SEL_1 */
#define GPIO1_IOC_GPIO1A_IOMUX_SEL_1_OFFSET                (0x24U)
#define GPIO1_IOC_GPIO1A_IOMUX_SEL_1_GPIO1A4_SEL_SHIFT     (0U)
#define GPIO1_IOC_GPIO1A_IOMUX_SEL_1_GPIO1A4_SEL_MASK      (0xFU << GPIO1_IOC_GPIO1A_IOMUX_SEL_1_GPIO1A4_SEL_SHIFT)     /* 0x0000000F */
#define GPIO1_IOC_GPIO1A_IOMUX_SEL_1_GPIO1A5_SEL_SHIFT     (4U)
#define GPIO1_IOC_GPIO1A_IOMUX_SEL_1_GPIO1A5_SEL_MASK      (0xFU << GPIO1_IOC_GPIO1A_IOMUX_SEL_1_GPIO1A5_SEL_SHIFT)     /* 0x000000F0 */
#define GPIO1_IOC_GPIO1A_IOMUX_SEL_1_GPIO1A6_SEL_SHIFT     (8U)
#define GPIO1_IOC_GPIO1A_IOMUX_SEL_1_GPIO1A6_SEL_MASK      (0xFU << GPIO1_IOC_GPIO1A_IOMUX_SEL_1_GPIO1A6_SEL_SHIFT)     /* 0x00000F00 */
#define GPIO1_IOC_GPIO1A_IOMUX_SEL_1_GPIO1A7_SEL_SHIFT     (12U)
#define GPIO1_IOC_GPIO1A_IOMUX_SEL_1_GPIO1A7_SEL_MASK      (0xFU << GPIO1_IOC_GPIO1A_IOMUX_SEL_1_GPIO1A7_SEL_SHIFT)     /* 0x0000F000 */
/* GPIO1B_IOMUX_SEL_0 */
#define GPIO1_IOC_GPIO1B_IOMUX_SEL_0_OFFSET                (0x28U)
#define GPIO1_IOC_GPIO1B_IOMUX_SEL_0_GPIO1B0_SEL_SHIFT     (0U)
#define GPIO1_IOC_GPIO1B_IOMUX_SEL_0_GPIO1B0_SEL_MASK      (0xFU << GPIO1_IOC_GPIO1B_IOMUX_SEL_0_GPIO1B0_SEL_SHIFT)     /* 0x0000000F */
#define GPIO1_IOC_GPIO1B_IOMUX_SEL_0_GPIO1B1_SEL_SHIFT     (4U)
#define GPIO1_IOC_GPIO1B_IOMUX_SEL_0_GPIO1B1_SEL_MASK      (0xFU << GPIO1_IOC_GPIO1B_IOMUX_SEL_0_GPIO1B1_SEL_SHIFT)     /* 0x000000F0 */
#define GPIO1_IOC_GPIO1B_IOMUX_SEL_0_GPIO1B2_SEL_SHIFT     (8U)
#define GPIO1_IOC_GPIO1B_IOMUX_SEL_0_GPIO1B2_SEL_MASK      (0xFU << GPIO1_IOC_GPIO1B_IOMUX_SEL_0_GPIO1B2_SEL_SHIFT)     /* 0x00000F00 */
#define GPIO1_IOC_GPIO1B_IOMUX_SEL_0_GPIO1B3_SEL_SHIFT     (12U)
#define GPIO1_IOC_GPIO1B_IOMUX_SEL_0_GPIO1B3_SEL_MASK      (0xFU << GPIO1_IOC_GPIO1B_IOMUX_SEL_0_GPIO1B3_SEL_SHIFT)     /* 0x0000F000 */
/* GPIO1B_IOMUX_SEL_1 */
#define GPIO1_IOC_GPIO1B_IOMUX_SEL_1_OFFSET                (0x2CU)
#define GPIO1_IOC_GPIO1B_IOMUX_SEL_1_GPIO1B4_SEL_SHIFT     (0U)
#define GPIO1_IOC_GPIO1B_IOMUX_SEL_1_GPIO1B4_SEL_MASK      (0xFU << GPIO1_IOC_GPIO1B_IOMUX_SEL_1_GPIO1B4_SEL_SHIFT)     /* 0x0000000F */
#define GPIO1_IOC_GPIO1B_IOMUX_SEL_1_GPIO1B5_SEL_SHIFT     (4U)
#define GPIO1_IOC_GPIO1B_IOMUX_SEL_1_GPIO1B5_SEL_MASK      (0xFU << GPIO1_IOC_GPIO1B_IOMUX_SEL_1_GPIO1B5_SEL_SHIFT)     /* 0x000000F0 */
#define GPIO1_IOC_GPIO1B_IOMUX_SEL_1_GPIO1B6_SEL_SHIFT     (8U)
#define GPIO1_IOC_GPIO1B_IOMUX_SEL_1_GPIO1B6_SEL_MASK      (0xFU << GPIO1_IOC_GPIO1B_IOMUX_SEL_1_GPIO1B6_SEL_SHIFT)     /* 0x00000F00 */
#define GPIO1_IOC_GPIO1B_IOMUX_SEL_1_GPIO1B7_SEL_SHIFT     (12U)
#define GPIO1_IOC_GPIO1B_IOMUX_SEL_1_GPIO1B7_SEL_MASK      (0xFU << GPIO1_IOC_GPIO1B_IOMUX_SEL_1_GPIO1B7_SEL_SHIFT)     /* 0x0000F000 */
/* GPIO1C_IOMUX_SEL_0 */
#define GPIO1_IOC_GPIO1C_IOMUX_SEL_0_OFFSET                (0x30U)
#define GPIO1_IOC_GPIO1C_IOMUX_SEL_0_GPIO1C0_SEL_SHIFT     (0U)
#define GPIO1_IOC_GPIO1C_IOMUX_SEL_0_GPIO1C0_SEL_MASK      (0xFU << GPIO1_IOC_GPIO1C_IOMUX_SEL_0_GPIO1C0_SEL_SHIFT)     /* 0x0000000F */
#define GPIO1_IOC_GPIO1C_IOMUX_SEL_0_GPIO1C1_SEL_SHIFT     (4U)
#define GPIO1_IOC_GPIO1C_IOMUX_SEL_0_GPIO1C1_SEL_MASK      (0xFU << GPIO1_IOC_GPIO1C_IOMUX_SEL_0_GPIO1C1_SEL_SHIFT)     /* 0x000000F0 */
#define GPIO1_IOC_GPIO1C_IOMUX_SEL_0_GPIO1C2_SEL_SHIFT     (8U)
#define GPIO1_IOC_GPIO1C_IOMUX_SEL_0_GPIO1C2_SEL_MASK      (0xFU << GPIO1_IOC_GPIO1C_IOMUX_SEL_0_GPIO1C2_SEL_SHIFT)     /* 0x00000F00 */
#define GPIO1_IOC_GPIO1C_IOMUX_SEL_0_GPIO1C3_SEL_SHIFT     (12U)
#define GPIO1_IOC_GPIO1C_IOMUX_SEL_0_GPIO1C3_SEL_MASK      (0xFU << GPIO1_IOC_GPIO1C_IOMUX_SEL_0_GPIO1C3_SEL_SHIFT)     /* 0x0000F000 */
/* GPIO1C_IOMUX_SEL_1 */
#define GPIO1_IOC_GPIO1C_IOMUX_SEL_1_OFFSET                (0x34U)
#define GPIO1_IOC_GPIO1C_IOMUX_SEL_1_GPIO1C4_SEL_SHIFT     (0U)
#define GPIO1_IOC_GPIO1C_IOMUX_SEL_1_GPIO1C4_SEL_MASK      (0xFU << GPIO1_IOC_GPIO1C_IOMUX_SEL_1_GPIO1C4_SEL_SHIFT)     /* 0x0000000F */
#define GPIO1_IOC_GPIO1C_IOMUX_SEL_1_GPIO1C5_SEL_SHIFT     (4U)
#define GPIO1_IOC_GPIO1C_IOMUX_SEL_1_GPIO1C5_SEL_MASK      (0xFU << GPIO1_IOC_GPIO1C_IOMUX_SEL_1_GPIO1C5_SEL_SHIFT)     /* 0x000000F0 */
#define GPIO1_IOC_GPIO1C_IOMUX_SEL_1_GPIO1C6_SEL_SHIFT     (8U)
#define GPIO1_IOC_GPIO1C_IOMUX_SEL_1_GPIO1C6_SEL_MASK      (0xFU << GPIO1_IOC_GPIO1C_IOMUX_SEL_1_GPIO1C6_SEL_SHIFT)     /* 0x00000F00 */
#define GPIO1_IOC_GPIO1C_IOMUX_SEL_1_GPIO1C7_SEL_SHIFT     (12U)
#define GPIO1_IOC_GPIO1C_IOMUX_SEL_1_GPIO1C7_SEL_MASK      (0xFU << GPIO1_IOC_GPIO1C_IOMUX_SEL_1_GPIO1C7_SEL_SHIFT)     /* 0x0000F000 */
/* GPIO1D_IOMUX_SEL_0 */
#define GPIO1_IOC_GPIO1D_IOMUX_SEL_0_OFFSET                (0x38U)
#define GPIO1_IOC_GPIO1D_IOMUX_SEL_0_GPIO1D0_SEL_SHIFT     (0U)
#define GPIO1_IOC_GPIO1D_IOMUX_SEL_0_GPIO1D0_SEL_MASK      (0xFU << GPIO1_IOC_GPIO1D_IOMUX_SEL_0_GPIO1D0_SEL_SHIFT)     /* 0x0000000F */
#define GPIO1_IOC_GPIO1D_IOMUX_SEL_0_GPIO1D1_SEL_SHIFT     (4U)
#define GPIO1_IOC_GPIO1D_IOMUX_SEL_0_GPIO1D1_SEL_MASK      (0xFU << GPIO1_IOC_GPIO1D_IOMUX_SEL_0_GPIO1D1_SEL_SHIFT)     /* 0x000000F0 */
#define GPIO1_IOC_GPIO1D_IOMUX_SEL_0_GPIO1D2_SEL_SHIFT     (8U)
#define GPIO1_IOC_GPIO1D_IOMUX_SEL_0_GPIO1D2_SEL_MASK      (0xFU << GPIO1_IOC_GPIO1D_IOMUX_SEL_0_GPIO1D2_SEL_SHIFT)     /* 0x00000F00 */
#define GPIO1_IOC_GPIO1D_IOMUX_SEL_0_GPIO1D3_SEL_SHIFT     (12U)
#define GPIO1_IOC_GPIO1D_IOMUX_SEL_0_GPIO1D3_SEL_MASK      (0xFU << GPIO1_IOC_GPIO1D_IOMUX_SEL_0_GPIO1D3_SEL_SHIFT)     /* 0x0000F000 */
/* GPIO1A_DS_0 */
#define GPIO1_IOC_GPIO1A_DS_0_OFFSET                       (0x140U)
#define GPIO1_IOC_GPIO1A_DS_0_GPIO1A0_DS_SHIFT             (0U)
#define GPIO1_IOC_GPIO1A_DS_0_GPIO1A0_DS_MASK              (0x3FU << GPIO1_IOC_GPIO1A_DS_0_GPIO1A0_DS_SHIFT)            /* 0x0000003F */
#define GPIO1_IOC_GPIO1A_DS_0_GPIO1A1_DS_SHIFT             (8U)
#define GPIO1_IOC_GPIO1A_DS_0_GPIO1A1_DS_MASK              (0x3FU << GPIO1_IOC_GPIO1A_DS_0_GPIO1A1_DS_SHIFT)            /* 0x00003F00 */
/* GPIO1A_DS_1 */
#define GPIO1_IOC_GPIO1A_DS_1_OFFSET                       (0x144U)
#define GPIO1_IOC_GPIO1A_DS_1_GPIO1A2_DS_SHIFT             (0U)
#define GPIO1_IOC_GPIO1A_DS_1_GPIO1A2_DS_MASK              (0x3FU << GPIO1_IOC_GPIO1A_DS_1_GPIO1A2_DS_SHIFT)            /* 0x0000003F */
#define GPIO1_IOC_GPIO1A_DS_1_GPIO1A3_DS_SHIFT             (8U)
#define GPIO1_IOC_GPIO1A_DS_1_GPIO1A3_DS_MASK              (0x3FU << GPIO1_IOC_GPIO1A_DS_1_GPIO1A3_DS_SHIFT)            /* 0x00003F00 */
/* GPIO1A_DS_2 */
#define GPIO1_IOC_GPIO1A_DS_2_OFFSET                       (0x148U)
#define GPIO1_IOC_GPIO1A_DS_2_GPIO1A4_DS_SHIFT             (0U)
#define GPIO1_IOC_GPIO1A_DS_2_GPIO1A4_DS_MASK              (0x3FU << GPIO1_IOC_GPIO1A_DS_2_GPIO1A4_DS_SHIFT)            /* 0x0000003F */
#define GPIO1_IOC_GPIO1A_DS_2_GPIO1A5_DS_SHIFT             (8U)
#define GPIO1_IOC_GPIO1A_DS_2_GPIO1A5_DS_MASK              (0x3FU << GPIO1_IOC_GPIO1A_DS_2_GPIO1A5_DS_SHIFT)            /* 0x00003F00 */
/* GPIO1A_DS_3 */
#define GPIO1_IOC_GPIO1A_DS_3_OFFSET                       (0x14CU)
#define GPIO1_IOC_GPIO1A_DS_3_GPIO1A6_DS_SHIFT             (0U)
#define GPIO1_IOC_GPIO1A_DS_3_GPIO1A6_DS_MASK              (0x3FU << GPIO1_IOC_GPIO1A_DS_3_GPIO1A6_DS_SHIFT)            /* 0x0000003F */
#define GPIO1_IOC_GPIO1A_DS_3_GPIO1A7_DS_SHIFT             (8U)
#define GPIO1_IOC_GPIO1A_DS_3_GPIO1A7_DS_MASK              (0x3FU << GPIO1_IOC_GPIO1A_DS_3_GPIO1A7_DS_SHIFT)            /* 0x00003F00 */
/* GPIO1B_DS_0 */
#define GPIO1_IOC_GPIO1B_DS_0_OFFSET                       (0x150U)
#define GPIO1_IOC_GPIO1B_DS_0_GPIO1B0_DS_SHIFT             (0U)
#define GPIO1_IOC_GPIO1B_DS_0_GPIO1B0_DS_MASK              (0x3FU << GPIO1_IOC_GPIO1B_DS_0_GPIO1B0_DS_SHIFT)            /* 0x0000003F */
#define GPIO1_IOC_GPIO1B_DS_0_GPIO1B1_DS_SHIFT             (8U)
#define GPIO1_IOC_GPIO1B_DS_0_GPIO1B1_DS_MASK              (0x3FU << GPIO1_IOC_GPIO1B_DS_0_GPIO1B1_DS_SHIFT)            /* 0x00003F00 */
/* GPIO1B_DS_1 */
#define GPIO1_IOC_GPIO1B_DS_1_OFFSET                       (0x154U)
#define GPIO1_IOC_GPIO1B_DS_1_GPIO1B2_DS_SHIFT             (0U)
#define GPIO1_IOC_GPIO1B_DS_1_GPIO1B2_DS_MASK              (0x3FU << GPIO1_IOC_GPIO1B_DS_1_GPIO1B2_DS_SHIFT)            /* 0x0000003F */
#define GPIO1_IOC_GPIO1B_DS_1_GPIO1B3_DS_SHIFT             (8U)
#define GPIO1_IOC_GPIO1B_DS_1_GPIO1B3_DS_MASK              (0x3FU << GPIO1_IOC_GPIO1B_DS_1_GPIO1B3_DS_SHIFT)            /* 0x00003F00 */
/* GPIO1B_DS_2 */
#define GPIO1_IOC_GPIO1B_DS_2_OFFSET                       (0x158U)
#define GPIO1_IOC_GPIO1B_DS_2_GPIO1B4_DS_SHIFT             (0U)
#define GPIO1_IOC_GPIO1B_DS_2_GPIO1B4_DS_MASK              (0x3FU << GPIO1_IOC_GPIO1B_DS_2_GPIO1B4_DS_SHIFT)            /* 0x0000003F */
#define GPIO1_IOC_GPIO1B_DS_2_GPIO1B5_DS_SHIFT             (8U)
#define GPIO1_IOC_GPIO1B_DS_2_GPIO1B5_DS_MASK              (0x3FU << GPIO1_IOC_GPIO1B_DS_2_GPIO1B5_DS_SHIFT)            /* 0x00003F00 */
/* GPIO1B_DS_3 */
#define GPIO1_IOC_GPIO1B_DS_3_OFFSET                       (0x15CU)
#define GPIO1_IOC_GPIO1B_DS_3_GPIO1B6_DS_SHIFT             (0U)
#define GPIO1_IOC_GPIO1B_DS_3_GPIO1B6_DS_MASK              (0x3FU << GPIO1_IOC_GPIO1B_DS_3_GPIO1B6_DS_SHIFT)            /* 0x0000003F */
#define GPIO1_IOC_GPIO1B_DS_3_GPIO1B7_DS_SHIFT             (8U)
#define GPIO1_IOC_GPIO1B_DS_3_GPIO1B7_DS_MASK              (0x3FU << GPIO1_IOC_GPIO1B_DS_3_GPIO1B7_DS_SHIFT)            /* 0x00003F00 */
/* GPIO1C_DS_0 */
#define GPIO1_IOC_GPIO1C_DS_0_OFFSET                       (0x160U)
#define GPIO1_IOC_GPIO1C_DS_0_GPIO1C0_DS_SHIFT             (0U)
#define GPIO1_IOC_GPIO1C_DS_0_GPIO1C0_DS_MASK              (0x3FU << GPIO1_IOC_GPIO1C_DS_0_GPIO1C0_DS_SHIFT)            /* 0x0000003F */
#define GPIO1_IOC_GPIO1C_DS_0_GPIO1C1_DS_SHIFT             (8U)
#define GPIO1_IOC_GPIO1C_DS_0_GPIO1C1_DS_MASK              (0x3FU << GPIO1_IOC_GPIO1C_DS_0_GPIO1C1_DS_SHIFT)            /* 0x00003F00 */
/* GPIO1C_DS_1 */
#define GPIO1_IOC_GPIO1C_DS_1_OFFSET                       (0x164U)
#define GPIO1_IOC_GPIO1C_DS_1_GPIO1C2_DS_SHIFT             (0U)
#define GPIO1_IOC_GPIO1C_DS_1_GPIO1C2_DS_MASK              (0x3FU << GPIO1_IOC_GPIO1C_DS_1_GPIO1C2_DS_SHIFT)            /* 0x0000003F */
#define GPIO1_IOC_GPIO1C_DS_1_GPIO1C3_DS_SHIFT             (8U)
#define GPIO1_IOC_GPIO1C_DS_1_GPIO1C3_DS_MASK              (0x3FU << GPIO1_IOC_GPIO1C_DS_1_GPIO1C3_DS_SHIFT)            /* 0x00003F00 */
/* GPIO1C_DS_2 */
#define GPIO1_IOC_GPIO1C_DS_2_OFFSET                       (0x168U)
#define GPIO1_IOC_GPIO1C_DS_2_GPIO1C4_DS_SHIFT             (0U)
#define GPIO1_IOC_GPIO1C_DS_2_GPIO1C4_DS_MASK              (0x3FU << GPIO1_IOC_GPIO1C_DS_2_GPIO1C4_DS_SHIFT)            /* 0x0000003F */
#define GPIO1_IOC_GPIO1C_DS_2_GPIO1C5_DS_SHIFT             (8U)
#define GPIO1_IOC_GPIO1C_DS_2_GPIO1C5_DS_MASK              (0x3FU << GPIO1_IOC_GPIO1C_DS_2_GPIO1C5_DS_SHIFT)            /* 0x00003F00 */
/* GPIO1C_DS_3 */
#define GPIO1_IOC_GPIO1C_DS_3_OFFSET                       (0x16CU)
#define GPIO1_IOC_GPIO1C_DS_3_GPIO1C6_DS_SHIFT             (0U)
#define GPIO1_IOC_GPIO1C_DS_3_GPIO1C6_DS_MASK              (0x3FU << GPIO1_IOC_GPIO1C_DS_3_GPIO1C6_DS_SHIFT)            /* 0x0000003F */
#define GPIO1_IOC_GPIO1C_DS_3_GPIO1C7_DS_SHIFT             (8U)
#define GPIO1_IOC_GPIO1C_DS_3_GPIO1C7_DS_MASK              (0x3FU << GPIO1_IOC_GPIO1C_DS_3_GPIO1C7_DS_SHIFT)            /* 0x00003F00 */
/* GPIO1D_DS_0 */
#define GPIO1_IOC_GPIO1D_DS_0_OFFSET                       (0x170U)
#define GPIO1_IOC_GPIO1D_DS_0_GPIO1D0_DS_SHIFT             (0U)
#define GPIO1_IOC_GPIO1D_DS_0_GPIO1D0_DS_MASK              (0x3FU << GPIO1_IOC_GPIO1D_DS_0_GPIO1D0_DS_SHIFT)            /* 0x0000003F */
#define GPIO1_IOC_GPIO1D_DS_0_GPIO1D1_DS_SHIFT             (8U)
#define GPIO1_IOC_GPIO1D_DS_0_GPIO1D1_DS_MASK              (0x3FU << GPIO1_IOC_GPIO1D_DS_0_GPIO1D1_DS_SHIFT)            /* 0x00003F00 */
/* GPIO1D_DS_1 */
#define GPIO1_IOC_GPIO1D_DS_1_OFFSET                       (0x174U)
#define GPIO1_IOC_GPIO1D_DS_1_GPIO1D2_DS_SHIFT             (0U)
#define GPIO1_IOC_GPIO1D_DS_1_GPIO1D2_DS_MASK              (0x3FU << GPIO1_IOC_GPIO1D_DS_1_GPIO1D2_DS_SHIFT)            /* 0x0000003F */
#define GPIO1_IOC_GPIO1D_DS_1_GPIO1D3_DS_SHIFT             (8U)
#define GPIO1_IOC_GPIO1D_DS_1_GPIO1D3_DS_MASK              (0x3FU << GPIO1_IOC_GPIO1D_DS_1_GPIO1D3_DS_SHIFT)            /* 0x00003F00 */
/* GPIO1A_PULL */
#define GPIO1_IOC_GPIO1A_PULL_OFFSET                       (0x210U)
#define GPIO1_IOC_GPIO1A_PULL_GPIO1A0_PULL_SHIFT           (0U)
#define GPIO1_IOC_GPIO1A_PULL_GPIO1A0_PULL_MASK            (0x3U << GPIO1_IOC_GPIO1A_PULL_GPIO1A0_PULL_SHIFT)           /* 0x00000003 */
#define GPIO1_IOC_GPIO1A_PULL_GPIO1A1_PULL_SHIFT           (2U)
#define GPIO1_IOC_GPIO1A_PULL_GPIO1A1_PULL_MASK            (0x3U << GPIO1_IOC_GPIO1A_PULL_GPIO1A1_PULL_SHIFT)           /* 0x0000000C */
#define GPIO1_IOC_GPIO1A_PULL_GPIO1A2_PULL_SHIFT           (4U)
#define GPIO1_IOC_GPIO1A_PULL_GPIO1A2_PULL_MASK            (0x3U << GPIO1_IOC_GPIO1A_PULL_GPIO1A2_PULL_SHIFT)           /* 0x00000030 */
#define GPIO1_IOC_GPIO1A_PULL_GPIO1A3_PULL_SHIFT           (6U)
#define GPIO1_IOC_GPIO1A_PULL_GPIO1A3_PULL_MASK            (0x3U << GPIO1_IOC_GPIO1A_PULL_GPIO1A3_PULL_SHIFT)           /* 0x000000C0 */
#define GPIO1_IOC_GPIO1A_PULL_GPIO1A4_PULL_SHIFT           (8U)
#define GPIO1_IOC_GPIO1A_PULL_GPIO1A4_PULL_MASK            (0x3U << GPIO1_IOC_GPIO1A_PULL_GPIO1A4_PULL_SHIFT)           /* 0x00000300 */
#define GPIO1_IOC_GPIO1A_PULL_GPIO1A5_PULL_SHIFT           (10U)
#define GPIO1_IOC_GPIO1A_PULL_GPIO1A5_PULL_MASK            (0x3U << GPIO1_IOC_GPIO1A_PULL_GPIO1A5_PULL_SHIFT)           /* 0x00000C00 */
#define GPIO1_IOC_GPIO1A_PULL_GPIO1A6_PULL_SHIFT           (12U)
#define GPIO1_IOC_GPIO1A_PULL_GPIO1A6_PULL_MASK            (0x3U << GPIO1_IOC_GPIO1A_PULL_GPIO1A6_PULL_SHIFT)           /* 0x00003000 */
#define GPIO1_IOC_GPIO1A_PULL_GPIO1A7_PULL_SHIFT           (14U)
#define GPIO1_IOC_GPIO1A_PULL_GPIO1A7_PULL_MASK            (0x3U << GPIO1_IOC_GPIO1A_PULL_GPIO1A7_PULL_SHIFT)           /* 0x0000C000 */
/* GPIO1B_PULL */
#define GPIO1_IOC_GPIO1B_PULL_OFFSET                       (0x214U)
#define GPIO1_IOC_GPIO1B_PULL_GPIO1B0_PULL_SHIFT           (0U)
#define GPIO1_IOC_GPIO1B_PULL_GPIO1B0_PULL_MASK            (0x3U << GPIO1_IOC_GPIO1B_PULL_GPIO1B0_PULL_SHIFT)           /* 0x00000003 */
#define GPIO1_IOC_GPIO1B_PULL_GPIO1B1_PULL_SHIFT           (2U)
#define GPIO1_IOC_GPIO1B_PULL_GPIO1B1_PULL_MASK            (0x3U << GPIO1_IOC_GPIO1B_PULL_GPIO1B1_PULL_SHIFT)           /* 0x0000000C */
#define GPIO1_IOC_GPIO1B_PULL_GPIO1B2_PULL_SHIFT           (4U)
#define GPIO1_IOC_GPIO1B_PULL_GPIO1B2_PULL_MASK            (0x3U << GPIO1_IOC_GPIO1B_PULL_GPIO1B2_PULL_SHIFT)           /* 0x00000030 */
#define GPIO1_IOC_GPIO1B_PULL_GPIO1B3_PULL_SHIFT           (6U)
#define GPIO1_IOC_GPIO1B_PULL_GPIO1B3_PULL_MASK            (0x3U << GPIO1_IOC_GPIO1B_PULL_GPIO1B3_PULL_SHIFT)           /* 0x000000C0 */
#define GPIO1_IOC_GPIO1B_PULL_GPIO1B4_PULL_SHIFT           (8U)
#define GPIO1_IOC_GPIO1B_PULL_GPIO1B4_PULL_MASK            (0x3U << GPIO1_IOC_GPIO1B_PULL_GPIO1B4_PULL_SHIFT)           /* 0x00000300 */
#define GPIO1_IOC_GPIO1B_PULL_GPIO1B5_PULL_SHIFT           (10U)
#define GPIO1_IOC_GPIO1B_PULL_GPIO1B5_PULL_MASK            (0x3U << GPIO1_IOC_GPIO1B_PULL_GPIO1B5_PULL_SHIFT)           /* 0x00000C00 */
#define GPIO1_IOC_GPIO1B_PULL_GPIO1B6_PULL_SHIFT           (12U)
#define GPIO1_IOC_GPIO1B_PULL_GPIO1B6_PULL_MASK            (0x3U << GPIO1_IOC_GPIO1B_PULL_GPIO1B6_PULL_SHIFT)           /* 0x00003000 */
#define GPIO1_IOC_GPIO1B_PULL_GPIO1B7_PULL_SHIFT           (14U)
#define GPIO1_IOC_GPIO1B_PULL_GPIO1B7_PULL_MASK            (0x3U << GPIO1_IOC_GPIO1B_PULL_GPIO1B7_PULL_SHIFT)           /* 0x0000C000 */
/* GPIO1C_PULL */
#define GPIO1_IOC_GPIO1C_PULL_OFFSET                       (0x218U)
#define GPIO1_IOC_GPIO1C_PULL_GPIO1C0_PULL_SHIFT           (0U)
#define GPIO1_IOC_GPIO1C_PULL_GPIO1C0_PULL_MASK            (0x3U << GPIO1_IOC_GPIO1C_PULL_GPIO1C0_PULL_SHIFT)           /* 0x00000003 */
#define GPIO1_IOC_GPIO1C_PULL_GPIO1C1_PULL_SHIFT           (2U)
#define GPIO1_IOC_GPIO1C_PULL_GPIO1C1_PULL_MASK            (0x3U << GPIO1_IOC_GPIO1C_PULL_GPIO1C1_PULL_SHIFT)           /* 0x0000000C */
#define GPIO1_IOC_GPIO1C_PULL_GPIO1C2_PULL_SHIFT           (4U)
#define GPIO1_IOC_GPIO1C_PULL_GPIO1C2_PULL_MASK            (0x3U << GPIO1_IOC_GPIO1C_PULL_GPIO1C2_PULL_SHIFT)           /* 0x00000030 */
#define GPIO1_IOC_GPIO1C_PULL_GPIO1C3_PULL_SHIFT           (6U)
#define GPIO1_IOC_GPIO1C_PULL_GPIO1C3_PULL_MASK            (0x3U << GPIO1_IOC_GPIO1C_PULL_GPIO1C3_PULL_SHIFT)           /* 0x000000C0 */
#define GPIO1_IOC_GPIO1C_PULL_GPIO1C4_PULL_SHIFT           (8U)
#define GPIO1_IOC_GPIO1C_PULL_GPIO1C4_PULL_MASK            (0x3U << GPIO1_IOC_GPIO1C_PULL_GPIO1C4_PULL_SHIFT)           /* 0x00000300 */
#define GPIO1_IOC_GPIO1C_PULL_GPIO1C5_PULL_SHIFT           (10U)
#define GPIO1_IOC_GPIO1C_PULL_GPIO1C5_PULL_MASK            (0x3U << GPIO1_IOC_GPIO1C_PULL_GPIO1C5_PULL_SHIFT)           /* 0x00000C00 */
#define GPIO1_IOC_GPIO1C_PULL_GPIO1C6_PULL_SHIFT           (12U)
#define GPIO1_IOC_GPIO1C_PULL_GPIO1C6_PULL_MASK            (0x3U << GPIO1_IOC_GPIO1C_PULL_GPIO1C6_PULL_SHIFT)           /* 0x00003000 */
#define GPIO1_IOC_GPIO1C_PULL_GPIO1C7_PULL_SHIFT           (14U)
#define GPIO1_IOC_GPIO1C_PULL_GPIO1C7_PULL_MASK            (0x3U << GPIO1_IOC_GPIO1C_PULL_GPIO1C7_PULL_SHIFT)           /* 0x0000C000 */
/* GPIO1D_PULL */
#define GPIO1_IOC_GPIO1D_PULL_OFFSET                       (0x21CU)
#define GPIO1_IOC_GPIO1D_PULL_GPIO1D0_PULL_SHIFT           (0U)
#define GPIO1_IOC_GPIO1D_PULL_GPIO1D0_PULL_MASK            (0x3U << GPIO1_IOC_GPIO1D_PULL_GPIO1D0_PULL_SHIFT)           /* 0x00000003 */
#define GPIO1_IOC_GPIO1D_PULL_GPIO1D1_PULL_SHIFT           (2U)
#define GPIO1_IOC_GPIO1D_PULL_GPIO1D1_PULL_MASK            (0x3U << GPIO1_IOC_GPIO1D_PULL_GPIO1D1_PULL_SHIFT)           /* 0x0000000C */
#define GPIO1_IOC_GPIO1D_PULL_GPIO1D2_PULL_SHIFT           (4U)
#define GPIO1_IOC_GPIO1D_PULL_GPIO1D2_PULL_MASK            (0x3U << GPIO1_IOC_GPIO1D_PULL_GPIO1D2_PULL_SHIFT)           /* 0x00000030 */
#define GPIO1_IOC_GPIO1D_PULL_GPIO1D3_PULL_SHIFT           (6U)
#define GPIO1_IOC_GPIO1D_PULL_GPIO1D3_PULL_MASK            (0x3U << GPIO1_IOC_GPIO1D_PULL_GPIO1D3_PULL_SHIFT)           /* 0x000000C0 */
/* GPIO1A_IE */
#define GPIO1_IOC_GPIO1A_IE_OFFSET                         (0x310U)
#define GPIO1_IOC_GPIO1A_IE_GPIO1A0_IE_SHIFT               (0U)
#define GPIO1_IOC_GPIO1A_IE_GPIO1A0_IE_MASK                (0x1U << GPIO1_IOC_GPIO1A_IE_GPIO1A0_IE_SHIFT)               /* 0x00000001 */
#define GPIO1_IOC_GPIO1A_IE_GPIO1A1_IE_SHIFT               (1U)
#define GPIO1_IOC_GPIO1A_IE_GPIO1A1_IE_MASK                (0x1U << GPIO1_IOC_GPIO1A_IE_GPIO1A1_IE_SHIFT)               /* 0x00000002 */
#define GPIO1_IOC_GPIO1A_IE_GPIO1A2_IE_SHIFT               (2U)
#define GPIO1_IOC_GPIO1A_IE_GPIO1A2_IE_MASK                (0x1U << GPIO1_IOC_GPIO1A_IE_GPIO1A2_IE_SHIFT)               /* 0x00000004 */
#define GPIO1_IOC_GPIO1A_IE_GPIO1A3_IE_SHIFT               (3U)
#define GPIO1_IOC_GPIO1A_IE_GPIO1A3_IE_MASK                (0x1U << GPIO1_IOC_GPIO1A_IE_GPIO1A3_IE_SHIFT)               /* 0x00000008 */
#define GPIO1_IOC_GPIO1A_IE_GPIO1A4_IE_SHIFT               (4U)
#define GPIO1_IOC_GPIO1A_IE_GPIO1A4_IE_MASK                (0x1U << GPIO1_IOC_GPIO1A_IE_GPIO1A4_IE_SHIFT)               /* 0x00000010 */
#define GPIO1_IOC_GPIO1A_IE_GPIO1A5_IE_SHIFT               (5U)
#define GPIO1_IOC_GPIO1A_IE_GPIO1A5_IE_MASK                (0x1U << GPIO1_IOC_GPIO1A_IE_GPIO1A5_IE_SHIFT)               /* 0x00000020 */
#define GPIO1_IOC_GPIO1A_IE_GPIO1A6_IE_SHIFT               (6U)
#define GPIO1_IOC_GPIO1A_IE_GPIO1A6_IE_MASK                (0x1U << GPIO1_IOC_GPIO1A_IE_GPIO1A6_IE_SHIFT)               /* 0x00000040 */
#define GPIO1_IOC_GPIO1A_IE_GPIO1A7_IE_SHIFT               (7U)
#define GPIO1_IOC_GPIO1A_IE_GPIO1A7_IE_MASK                (0x1U << GPIO1_IOC_GPIO1A_IE_GPIO1A7_IE_SHIFT)               /* 0x00000080 */
/* GPIO1B_IE */
#define GPIO1_IOC_GPIO1B_IE_OFFSET                         (0x314U)
#define GPIO1_IOC_GPIO1B_IE_GPIO1B0_IE_SHIFT               (0U)
#define GPIO1_IOC_GPIO1B_IE_GPIO1B0_IE_MASK                (0x1U << GPIO1_IOC_GPIO1B_IE_GPIO1B0_IE_SHIFT)               /* 0x00000001 */
#define GPIO1_IOC_GPIO1B_IE_GPIO1B1_IE_SHIFT               (1U)
#define GPIO1_IOC_GPIO1B_IE_GPIO1B1_IE_MASK                (0x1U << GPIO1_IOC_GPIO1B_IE_GPIO1B1_IE_SHIFT)               /* 0x00000002 */
#define GPIO1_IOC_GPIO1B_IE_GPIO1B2_IE_SHIFT               (2U)
#define GPIO1_IOC_GPIO1B_IE_GPIO1B2_IE_MASK                (0x1U << GPIO1_IOC_GPIO1B_IE_GPIO1B2_IE_SHIFT)               /* 0x00000004 */
#define GPIO1_IOC_GPIO1B_IE_GPIO1B3_IE_SHIFT               (3U)
#define GPIO1_IOC_GPIO1B_IE_GPIO1B3_IE_MASK                (0x1U << GPIO1_IOC_GPIO1B_IE_GPIO1B3_IE_SHIFT)               /* 0x00000008 */
#define GPIO1_IOC_GPIO1B_IE_GPIO1B4_IE_SHIFT               (4U)
#define GPIO1_IOC_GPIO1B_IE_GPIO1B4_IE_MASK                (0x1U << GPIO1_IOC_GPIO1B_IE_GPIO1B4_IE_SHIFT)               /* 0x00000010 */
#define GPIO1_IOC_GPIO1B_IE_GPIO1B5_IE_SHIFT               (5U)
#define GPIO1_IOC_GPIO1B_IE_GPIO1B5_IE_MASK                (0x1U << GPIO1_IOC_GPIO1B_IE_GPIO1B5_IE_SHIFT)               /* 0x00000020 */
#define GPIO1_IOC_GPIO1B_IE_GPIO1B6_IE_SHIFT               (6U)
#define GPIO1_IOC_GPIO1B_IE_GPIO1B6_IE_MASK                (0x1U << GPIO1_IOC_GPIO1B_IE_GPIO1B6_IE_SHIFT)               /* 0x00000040 */
#define GPIO1_IOC_GPIO1B_IE_GPIO1B7_IE_SHIFT               (7U)
#define GPIO1_IOC_GPIO1B_IE_GPIO1B7_IE_MASK                (0x1U << GPIO1_IOC_GPIO1B_IE_GPIO1B7_IE_SHIFT)               /* 0x00000080 */
/* GPIO1C_IE */
#define GPIO1_IOC_GPIO1C_IE_OFFSET                         (0x318U)
#define GPIO1_IOC_GPIO1C_IE_GPIO1C0_IE_SHIFT               (0U)
#define GPIO1_IOC_GPIO1C_IE_GPIO1C0_IE_MASK                (0x1U << GPIO1_IOC_GPIO1C_IE_GPIO1C0_IE_SHIFT)               /* 0x00000001 */
#define GPIO1_IOC_GPIO1C_IE_GPIO1C1_IE_SHIFT               (1U)
#define GPIO1_IOC_GPIO1C_IE_GPIO1C1_IE_MASK                (0x1U << GPIO1_IOC_GPIO1C_IE_GPIO1C1_IE_SHIFT)               /* 0x00000002 */
#define GPIO1_IOC_GPIO1C_IE_GPIO1C2_IE_SHIFT               (2U)
#define GPIO1_IOC_GPIO1C_IE_GPIO1C2_IE_MASK                (0x1U << GPIO1_IOC_GPIO1C_IE_GPIO1C2_IE_SHIFT)               /* 0x00000004 */
#define GPIO1_IOC_GPIO1C_IE_GPIO1C3_IE_SHIFT               (3U)
#define GPIO1_IOC_GPIO1C_IE_GPIO1C3_IE_MASK                (0x1U << GPIO1_IOC_GPIO1C_IE_GPIO1C3_IE_SHIFT)               /* 0x00000008 */
#define GPIO1_IOC_GPIO1C_IE_GPIO1C4_IE_SHIFT               (4U)
#define GPIO1_IOC_GPIO1C_IE_GPIO1C4_IE_MASK                (0x1U << GPIO1_IOC_GPIO1C_IE_GPIO1C4_IE_SHIFT)               /* 0x00000010 */
#define GPIO1_IOC_GPIO1C_IE_GPIO1C5_IE_SHIFT               (5U)
#define GPIO1_IOC_GPIO1C_IE_GPIO1C5_IE_MASK                (0x1U << GPIO1_IOC_GPIO1C_IE_GPIO1C5_IE_SHIFT)               /* 0x00000020 */
#define GPIO1_IOC_GPIO1C_IE_GPIO1C6_IE_SHIFT               (6U)
#define GPIO1_IOC_GPIO1C_IE_GPIO1C6_IE_MASK                (0x1U << GPIO1_IOC_GPIO1C_IE_GPIO1C6_IE_SHIFT)               /* 0x00000040 */
#define GPIO1_IOC_GPIO1C_IE_GPIO1C7_IE_SHIFT               (7U)
#define GPIO1_IOC_GPIO1C_IE_GPIO1C7_IE_MASK                (0x1U << GPIO1_IOC_GPIO1C_IE_GPIO1C7_IE_SHIFT)               /* 0x00000080 */
/* GPIO1D_IE */
#define GPIO1_IOC_GPIO1D_IE_OFFSET                         (0x31CU)
#define GPIO1_IOC_GPIO1D_IE_GPIO1D0_IE_SHIFT               (0U)
#define GPIO1_IOC_GPIO1D_IE_GPIO1D0_IE_MASK                (0x1U << GPIO1_IOC_GPIO1D_IE_GPIO1D0_IE_SHIFT)               /* 0x00000001 */
#define GPIO1_IOC_GPIO1D_IE_GPIO1D1_IE_SHIFT               (1U)
#define GPIO1_IOC_GPIO1D_IE_GPIO1D1_IE_MASK                (0x1U << GPIO1_IOC_GPIO1D_IE_GPIO1D1_IE_SHIFT)               /* 0x00000002 */
#define GPIO1_IOC_GPIO1D_IE_GPIO1D2_IE_SHIFT               (2U)
#define GPIO1_IOC_GPIO1D_IE_GPIO1D2_IE_MASK                (0x1U << GPIO1_IOC_GPIO1D_IE_GPIO1D2_IE_SHIFT)               /* 0x00000004 */
#define GPIO1_IOC_GPIO1D_IE_GPIO1D3_IE_SHIFT               (3U)
#define GPIO1_IOC_GPIO1D_IE_GPIO1D3_IE_MASK                (0x1U << GPIO1_IOC_GPIO1D_IE_GPIO1D3_IE_SHIFT)               /* 0x00000008 */
/* GPIO1A_SMT */
#define GPIO1_IOC_GPIO1A_SMT_OFFSET                        (0x410U)
#define GPIO1_IOC_GPIO1A_SMT_GPIO1A0_SMT_SHIFT             (0U)
#define GPIO1_IOC_GPIO1A_SMT_GPIO1A0_SMT_MASK              (0x1U << GPIO1_IOC_GPIO1A_SMT_GPIO1A0_SMT_SHIFT)             /* 0x00000001 */
#define GPIO1_IOC_GPIO1A_SMT_GPIO1A1_SMT_SHIFT             (1U)
#define GPIO1_IOC_GPIO1A_SMT_GPIO1A1_SMT_MASK              (0x1U << GPIO1_IOC_GPIO1A_SMT_GPIO1A1_SMT_SHIFT)             /* 0x00000002 */
#define GPIO1_IOC_GPIO1A_SMT_GPIO1A2_SMT_SHIFT             (2U)
#define GPIO1_IOC_GPIO1A_SMT_GPIO1A2_SMT_MASK              (0x1U << GPIO1_IOC_GPIO1A_SMT_GPIO1A2_SMT_SHIFT)             /* 0x00000004 */
#define GPIO1_IOC_GPIO1A_SMT_GPIO1A3_SMT_SHIFT             (3U)
#define GPIO1_IOC_GPIO1A_SMT_GPIO1A3_SMT_MASK              (0x1U << GPIO1_IOC_GPIO1A_SMT_GPIO1A3_SMT_SHIFT)             /* 0x00000008 */
#define GPIO1_IOC_GPIO1A_SMT_GPIO1A4_SMT_SHIFT             (4U)
#define GPIO1_IOC_GPIO1A_SMT_GPIO1A4_SMT_MASK              (0x1U << GPIO1_IOC_GPIO1A_SMT_GPIO1A4_SMT_SHIFT)             /* 0x00000010 */
#define GPIO1_IOC_GPIO1A_SMT_GPIO1A5_SMT_SHIFT             (5U)
#define GPIO1_IOC_GPIO1A_SMT_GPIO1A5_SMT_MASK              (0x1U << GPIO1_IOC_GPIO1A_SMT_GPIO1A5_SMT_SHIFT)             /* 0x00000020 */
#define GPIO1_IOC_GPIO1A_SMT_GPIO1A6_SMT_SHIFT             (6U)
#define GPIO1_IOC_GPIO1A_SMT_GPIO1A6_SMT_MASK              (0x1U << GPIO1_IOC_GPIO1A_SMT_GPIO1A6_SMT_SHIFT)             /* 0x00000040 */
#define GPIO1_IOC_GPIO1A_SMT_GPIO1A7_SMT_SHIFT             (7U)
#define GPIO1_IOC_GPIO1A_SMT_GPIO1A7_SMT_MASK              (0x1U << GPIO1_IOC_GPIO1A_SMT_GPIO1A7_SMT_SHIFT)             /* 0x00000080 */
/* GPIO1B_SMT */
#define GPIO1_IOC_GPIO1B_SMT_OFFSET                        (0x414U)
#define GPIO1_IOC_GPIO1B_SMT_GPIO1B0_SMT_SHIFT             (0U)
#define GPIO1_IOC_GPIO1B_SMT_GPIO1B0_SMT_MASK              (0x1U << GPIO1_IOC_GPIO1B_SMT_GPIO1B0_SMT_SHIFT)             /* 0x00000001 */
#define GPIO1_IOC_GPIO1B_SMT_GPIO1B1_SMT_SHIFT             (1U)
#define GPIO1_IOC_GPIO1B_SMT_GPIO1B1_SMT_MASK              (0x1U << GPIO1_IOC_GPIO1B_SMT_GPIO1B1_SMT_SHIFT)             /* 0x00000002 */
#define GPIO1_IOC_GPIO1B_SMT_GPIO1B2_SMT_SHIFT             (2U)
#define GPIO1_IOC_GPIO1B_SMT_GPIO1B2_SMT_MASK              (0x1U << GPIO1_IOC_GPIO1B_SMT_GPIO1B2_SMT_SHIFT)             /* 0x00000004 */
#define GPIO1_IOC_GPIO1B_SMT_GPIO1B3_SMT_SHIFT             (3U)
#define GPIO1_IOC_GPIO1B_SMT_GPIO1B3_SMT_MASK              (0x1U << GPIO1_IOC_GPIO1B_SMT_GPIO1B3_SMT_SHIFT)             /* 0x00000008 */
#define GPIO1_IOC_GPIO1B_SMT_GPIO1B4_SMT_SHIFT             (4U)
#define GPIO1_IOC_GPIO1B_SMT_GPIO1B4_SMT_MASK              (0x1U << GPIO1_IOC_GPIO1B_SMT_GPIO1B4_SMT_SHIFT)             /* 0x00000010 */
#define GPIO1_IOC_GPIO1B_SMT_GPIO1B5_SMT_SHIFT             (5U)
#define GPIO1_IOC_GPIO1B_SMT_GPIO1B5_SMT_MASK              (0x1U << GPIO1_IOC_GPIO1B_SMT_GPIO1B5_SMT_SHIFT)             /* 0x00000020 */
#define GPIO1_IOC_GPIO1B_SMT_GPIO1B6_SMT_SHIFT             (6U)
#define GPIO1_IOC_GPIO1B_SMT_GPIO1B6_SMT_MASK              (0x1U << GPIO1_IOC_GPIO1B_SMT_GPIO1B6_SMT_SHIFT)             /* 0x00000040 */
#define GPIO1_IOC_GPIO1B_SMT_GPIO1B7_SMT_SHIFT             (7U)
#define GPIO1_IOC_GPIO1B_SMT_GPIO1B7_SMT_MASK              (0x1U << GPIO1_IOC_GPIO1B_SMT_GPIO1B7_SMT_SHIFT)             /* 0x00000080 */
/* GPIO1C_SMT */
#define GPIO1_IOC_GPIO1C_SMT_OFFSET                        (0x418U)
#define GPIO1_IOC_GPIO1C_SMT_GPIO1C0_SMT_SHIFT             (0U)
#define GPIO1_IOC_GPIO1C_SMT_GPIO1C0_SMT_MASK              (0x1U << GPIO1_IOC_GPIO1C_SMT_GPIO1C0_SMT_SHIFT)             /* 0x00000001 */
#define GPIO1_IOC_GPIO1C_SMT_GPIO1C1_SMT_SHIFT             (1U)
#define GPIO1_IOC_GPIO1C_SMT_GPIO1C1_SMT_MASK              (0x1U << GPIO1_IOC_GPIO1C_SMT_GPIO1C1_SMT_SHIFT)             /* 0x00000002 */
#define GPIO1_IOC_GPIO1C_SMT_GPIO1C2_SMT_SHIFT             (2U)
#define GPIO1_IOC_GPIO1C_SMT_GPIO1C2_SMT_MASK              (0x1U << GPIO1_IOC_GPIO1C_SMT_GPIO1C2_SMT_SHIFT)             /* 0x00000004 */
#define GPIO1_IOC_GPIO1C_SMT_GPIO1C3_SMT_SHIFT             (3U)
#define GPIO1_IOC_GPIO1C_SMT_GPIO1C3_SMT_MASK              (0x1U << GPIO1_IOC_GPIO1C_SMT_GPIO1C3_SMT_SHIFT)             /* 0x00000008 */
#define GPIO1_IOC_GPIO1C_SMT_GPIO1C4_SMT_SHIFT             (4U)
#define GPIO1_IOC_GPIO1C_SMT_GPIO1C4_SMT_MASK              (0x1U << GPIO1_IOC_GPIO1C_SMT_GPIO1C4_SMT_SHIFT)             /* 0x00000010 */
#define GPIO1_IOC_GPIO1C_SMT_GPIO1C5_SMT_SHIFT             (5U)
#define GPIO1_IOC_GPIO1C_SMT_GPIO1C5_SMT_MASK              (0x1U << GPIO1_IOC_GPIO1C_SMT_GPIO1C5_SMT_SHIFT)             /* 0x00000020 */
#define GPIO1_IOC_GPIO1C_SMT_GPIO1C6_SMT_SHIFT             (6U)
#define GPIO1_IOC_GPIO1C_SMT_GPIO1C6_SMT_MASK              (0x1U << GPIO1_IOC_GPIO1C_SMT_GPIO1C6_SMT_SHIFT)             /* 0x00000040 */
#define GPIO1_IOC_GPIO1C_SMT_GPIO1C7_SMT_SHIFT             (7U)
#define GPIO1_IOC_GPIO1C_SMT_GPIO1C7_SMT_MASK              (0x1U << GPIO1_IOC_GPIO1C_SMT_GPIO1C7_SMT_SHIFT)             /* 0x00000080 */
/* GPIO1D_SMT */
#define GPIO1_IOC_GPIO1D_SMT_OFFSET                        (0x41CU)
#define GPIO1_IOC_GPIO1D_SMT_GPIO1D0_SMT_SHIFT             (0U)
#define GPIO1_IOC_GPIO1D_SMT_GPIO1D0_SMT_MASK              (0x1U << GPIO1_IOC_GPIO1D_SMT_GPIO1D0_SMT_SHIFT)             /* 0x00000001 */
#define GPIO1_IOC_GPIO1D_SMT_GPIO1D1_SMT_SHIFT             (1U)
#define GPIO1_IOC_GPIO1D_SMT_GPIO1D1_SMT_MASK              (0x1U << GPIO1_IOC_GPIO1D_SMT_GPIO1D1_SMT_SHIFT)             /* 0x00000002 */
#define GPIO1_IOC_GPIO1D_SMT_GPIO1D2_SMT_SHIFT             (2U)
#define GPIO1_IOC_GPIO1D_SMT_GPIO1D2_SMT_MASK              (0x1U << GPIO1_IOC_GPIO1D_SMT_GPIO1D2_SMT_SHIFT)             /* 0x00000004 */
#define GPIO1_IOC_GPIO1D_SMT_GPIO1D3_SMT_SHIFT             (3U)
#define GPIO1_IOC_GPIO1D_SMT_GPIO1D3_SMT_MASK              (0x1U << GPIO1_IOC_GPIO1D_SMT_GPIO1D3_SMT_SHIFT)             /* 0x00000008 */
/* GPIO1A_SUS */
#define GPIO1_IOC_GPIO1A_SUS_OFFSET                        (0x510U)
#define GPIO1_IOC_GPIO1A_SUS_GPIO1A0_SUS_SHIFT             (0U)
#define GPIO1_IOC_GPIO1A_SUS_GPIO1A0_SUS_MASK              (0x1U << GPIO1_IOC_GPIO1A_SUS_GPIO1A0_SUS_SHIFT)             /* 0x00000001 */
#define GPIO1_IOC_GPIO1A_SUS_GPIO1A1_SUS_SHIFT             (1U)
#define GPIO1_IOC_GPIO1A_SUS_GPIO1A1_SUS_MASK              (0x1U << GPIO1_IOC_GPIO1A_SUS_GPIO1A1_SUS_SHIFT)             /* 0x00000002 */
#define GPIO1_IOC_GPIO1A_SUS_GPIO1A2_SUS_SHIFT             (2U)
#define GPIO1_IOC_GPIO1A_SUS_GPIO1A2_SUS_MASK              (0x1U << GPIO1_IOC_GPIO1A_SUS_GPIO1A2_SUS_SHIFT)             /* 0x00000004 */
#define GPIO1_IOC_GPIO1A_SUS_GPIO1A3_SUS_SHIFT             (3U)
#define GPIO1_IOC_GPIO1A_SUS_GPIO1A3_SUS_MASK              (0x1U << GPIO1_IOC_GPIO1A_SUS_GPIO1A3_SUS_SHIFT)             /* 0x00000008 */
#define GPIO1_IOC_GPIO1A_SUS_GPIO1A4_SUS_SHIFT             (4U)
#define GPIO1_IOC_GPIO1A_SUS_GPIO1A4_SUS_MASK              (0x1U << GPIO1_IOC_GPIO1A_SUS_GPIO1A4_SUS_SHIFT)             /* 0x00000010 */
#define GPIO1_IOC_GPIO1A_SUS_GPIO1A5_SUS_SHIFT             (5U)
#define GPIO1_IOC_GPIO1A_SUS_GPIO1A5_SUS_MASK              (0x1U << GPIO1_IOC_GPIO1A_SUS_GPIO1A5_SUS_SHIFT)             /* 0x00000020 */
#define GPIO1_IOC_GPIO1A_SUS_GPIO1A6_SUS_SHIFT             (6U)
#define GPIO1_IOC_GPIO1A_SUS_GPIO1A6_SUS_MASK              (0x1U << GPIO1_IOC_GPIO1A_SUS_GPIO1A6_SUS_SHIFT)             /* 0x00000040 */
#define GPIO1_IOC_GPIO1A_SUS_GPIO1A7_SUS_SHIFT             (7U)
#define GPIO1_IOC_GPIO1A_SUS_GPIO1A7_SUS_MASK              (0x1U << GPIO1_IOC_GPIO1A_SUS_GPIO1A7_SUS_SHIFT)             /* 0x00000080 */
/* GPIO1B_SUS */
#define GPIO1_IOC_GPIO1B_SUS_OFFSET                        (0x514U)
#define GPIO1_IOC_GPIO1B_SUS_GPIO1B0_SUS_SHIFT             (0U)
#define GPIO1_IOC_GPIO1B_SUS_GPIO1B0_SUS_MASK              (0x1U << GPIO1_IOC_GPIO1B_SUS_GPIO1B0_SUS_SHIFT)             /* 0x00000001 */
#define GPIO1_IOC_GPIO1B_SUS_GPIO1B1_SUS_SHIFT             (1U)
#define GPIO1_IOC_GPIO1B_SUS_GPIO1B1_SUS_MASK              (0x1U << GPIO1_IOC_GPIO1B_SUS_GPIO1B1_SUS_SHIFT)             /* 0x00000002 */
#define GPIO1_IOC_GPIO1B_SUS_GPIO1B2_SUS_SHIFT             (2U)
#define GPIO1_IOC_GPIO1B_SUS_GPIO1B2_SUS_MASK              (0x1U << GPIO1_IOC_GPIO1B_SUS_GPIO1B2_SUS_SHIFT)             /* 0x00000004 */
#define GPIO1_IOC_GPIO1B_SUS_GPIO1B3_SUS_SHIFT             (3U)
#define GPIO1_IOC_GPIO1B_SUS_GPIO1B3_SUS_MASK              (0x1U << GPIO1_IOC_GPIO1B_SUS_GPIO1B3_SUS_SHIFT)             /* 0x00000008 */
#define GPIO1_IOC_GPIO1B_SUS_GPIO1B4_SUS_SHIFT             (4U)
#define GPIO1_IOC_GPIO1B_SUS_GPIO1B4_SUS_MASK              (0x1U << GPIO1_IOC_GPIO1B_SUS_GPIO1B4_SUS_SHIFT)             /* 0x00000010 */
#define GPIO1_IOC_GPIO1B_SUS_GPIO1B5_SUS_SHIFT             (5U)
#define GPIO1_IOC_GPIO1B_SUS_GPIO1B5_SUS_MASK              (0x1U << GPIO1_IOC_GPIO1B_SUS_GPIO1B5_SUS_SHIFT)             /* 0x00000020 */
#define GPIO1_IOC_GPIO1B_SUS_GPIO1B6_SUS_SHIFT             (6U)
#define GPIO1_IOC_GPIO1B_SUS_GPIO1B6_SUS_MASK              (0x1U << GPIO1_IOC_GPIO1B_SUS_GPIO1B6_SUS_SHIFT)             /* 0x00000040 */
#define GPIO1_IOC_GPIO1B_SUS_GPIO1B7_SUS_SHIFT             (7U)
#define GPIO1_IOC_GPIO1B_SUS_GPIO1B7_SUS_MASK              (0x1U << GPIO1_IOC_GPIO1B_SUS_GPIO1B7_SUS_SHIFT)             /* 0x00000080 */
/* GPIO1C_SUS */
#define GPIO1_IOC_GPIO1C_SUS_OFFSET                        (0x518U)
#define GPIO1_IOC_GPIO1C_SUS_GPIO1C0_SUS_SHIFT             (0U)
#define GPIO1_IOC_GPIO1C_SUS_GPIO1C0_SUS_MASK              (0x1U << GPIO1_IOC_GPIO1C_SUS_GPIO1C0_SUS_SHIFT)             /* 0x00000001 */
#define GPIO1_IOC_GPIO1C_SUS_GPIO1C1_SUS_SHIFT             (1U)
#define GPIO1_IOC_GPIO1C_SUS_GPIO1C1_SUS_MASK              (0x1U << GPIO1_IOC_GPIO1C_SUS_GPIO1C1_SUS_SHIFT)             /* 0x00000002 */
#define GPIO1_IOC_GPIO1C_SUS_GPIO1C2_SUS_SHIFT             (2U)
#define GPIO1_IOC_GPIO1C_SUS_GPIO1C2_SUS_MASK              (0x1U << GPIO1_IOC_GPIO1C_SUS_GPIO1C2_SUS_SHIFT)             /* 0x00000004 */
#define GPIO1_IOC_GPIO1C_SUS_GPIO1C3_SUS_SHIFT             (3U)
#define GPIO1_IOC_GPIO1C_SUS_GPIO1C3_SUS_MASK              (0x1U << GPIO1_IOC_GPIO1C_SUS_GPIO1C3_SUS_SHIFT)             /* 0x00000008 */
#define GPIO1_IOC_GPIO1C_SUS_GPIO1C4_SUS_SHIFT             (4U)
#define GPIO1_IOC_GPIO1C_SUS_GPIO1C4_SUS_MASK              (0x1U << GPIO1_IOC_GPIO1C_SUS_GPIO1C4_SUS_SHIFT)             /* 0x00000010 */
#define GPIO1_IOC_GPIO1C_SUS_GPIO1C5_SUS_SHIFT             (5U)
#define GPIO1_IOC_GPIO1C_SUS_GPIO1C5_SUS_MASK              (0x1U << GPIO1_IOC_GPIO1C_SUS_GPIO1C5_SUS_SHIFT)             /* 0x00000020 */
#define GPIO1_IOC_GPIO1C_SUS_GPIO1C6_SUS_SHIFT             (6U)
#define GPIO1_IOC_GPIO1C_SUS_GPIO1C6_SUS_MASK              (0x1U << GPIO1_IOC_GPIO1C_SUS_GPIO1C6_SUS_SHIFT)             /* 0x00000040 */
#define GPIO1_IOC_GPIO1C_SUS_GPIO1C7_SUS_SHIFT             (7U)
#define GPIO1_IOC_GPIO1C_SUS_GPIO1C7_SUS_MASK              (0x1U << GPIO1_IOC_GPIO1C_SUS_GPIO1C7_SUS_SHIFT)             /* 0x00000080 */
/* GPIO1D_SUS */
#define GPIO1_IOC_GPIO1D_SUS_OFFSET                        (0x51CU)
#define GPIO1_IOC_GPIO1D_SUS_GPIO1D0_SUS_SHIFT             (0U)
#define GPIO1_IOC_GPIO1D_SUS_GPIO1D0_SUS_MASK              (0x1U << GPIO1_IOC_GPIO1D_SUS_GPIO1D0_SUS_SHIFT)             /* 0x00000001 */
#define GPIO1_IOC_GPIO1D_SUS_GPIO1D1_SUS_SHIFT             (1U)
#define GPIO1_IOC_GPIO1D_SUS_GPIO1D1_SUS_MASK              (0x1U << GPIO1_IOC_GPIO1D_SUS_GPIO1D1_SUS_SHIFT)             /* 0x00000002 */
#define GPIO1_IOC_GPIO1D_SUS_GPIO1D2_SUS_SHIFT             (2U)
#define GPIO1_IOC_GPIO1D_SUS_GPIO1D2_SUS_MASK              (0x1U << GPIO1_IOC_GPIO1D_SUS_GPIO1D2_SUS_SHIFT)             /* 0x00000004 */
#define GPIO1_IOC_GPIO1D_SUS_GPIO1D3_SUS_SHIFT             (3U)
#define GPIO1_IOC_GPIO1D_SUS_GPIO1D3_SUS_MASK              (0x1U << GPIO1_IOC_GPIO1D_SUS_GPIO1D3_SUS_SHIFT)             /* 0x00000008 */
/* GPIO1A_SL */
#define GPIO1_IOC_GPIO1A_SL_OFFSET                         (0x610U)
#define GPIO1_IOC_GPIO1A_SL_GPIO1A0_SL_SHIFT               (0U)
#define GPIO1_IOC_GPIO1A_SL_GPIO1A0_SL_MASK                (0x3U << GPIO1_IOC_GPIO1A_SL_GPIO1A0_SL_SHIFT)               /* 0x00000003 */
#define GPIO1_IOC_GPIO1A_SL_GPIO1A1_SL_SHIFT               (2U)
#define GPIO1_IOC_GPIO1A_SL_GPIO1A1_SL_MASK                (0x3U << GPIO1_IOC_GPIO1A_SL_GPIO1A1_SL_SHIFT)               /* 0x0000000C */
#define GPIO1_IOC_GPIO1A_SL_GPIO1A2_SL_SHIFT               (4U)
#define GPIO1_IOC_GPIO1A_SL_GPIO1A2_SL_MASK                (0x3U << GPIO1_IOC_GPIO1A_SL_GPIO1A2_SL_SHIFT)               /* 0x00000030 */
#define GPIO1_IOC_GPIO1A_SL_GPIO1A3_SL_SHIFT               (6U)
#define GPIO1_IOC_GPIO1A_SL_GPIO1A3_SL_MASK                (0x3U << GPIO1_IOC_GPIO1A_SL_GPIO1A3_SL_SHIFT)               /* 0x000000C0 */
#define GPIO1_IOC_GPIO1A_SL_GPIO1A4_SL_SHIFT               (8U)
#define GPIO1_IOC_GPIO1A_SL_GPIO1A4_SL_MASK                (0x3U << GPIO1_IOC_GPIO1A_SL_GPIO1A4_SL_SHIFT)               /* 0x00000300 */
#define GPIO1_IOC_GPIO1A_SL_GPIO1A5_SL_SHIFT               (10U)
#define GPIO1_IOC_GPIO1A_SL_GPIO1A5_SL_MASK                (0x3U << GPIO1_IOC_GPIO1A_SL_GPIO1A5_SL_SHIFT)               /* 0x00000C00 */
#define GPIO1_IOC_GPIO1A_SL_GPIO1A6_SL_SHIFT               (12U)
#define GPIO1_IOC_GPIO1A_SL_GPIO1A6_SL_MASK                (0x3U << GPIO1_IOC_GPIO1A_SL_GPIO1A6_SL_SHIFT)               /* 0x00003000 */
#define GPIO1_IOC_GPIO1A_SL_GPIO1A7_SL_SHIFT               (14U)
#define GPIO1_IOC_GPIO1A_SL_GPIO1A7_SL_MASK                (0x3U << GPIO1_IOC_GPIO1A_SL_GPIO1A7_SL_SHIFT)               /* 0x0000C000 */
/* GPIO1B_SL */
#define GPIO1_IOC_GPIO1B_SL_OFFSET                         (0x614U)
#define GPIO1_IOC_GPIO1B_SL_GPIO1B0_SL_SHIFT               (0U)
#define GPIO1_IOC_GPIO1B_SL_GPIO1B0_SL_MASK                (0x3U << GPIO1_IOC_GPIO1B_SL_GPIO1B0_SL_SHIFT)               /* 0x00000003 */
#define GPIO1_IOC_GPIO1B_SL_GPIO1B1_SL_SHIFT               (2U)
#define GPIO1_IOC_GPIO1B_SL_GPIO1B1_SL_MASK                (0x3U << GPIO1_IOC_GPIO1B_SL_GPIO1B1_SL_SHIFT)               /* 0x0000000C */
#define GPIO1_IOC_GPIO1B_SL_GPIO1B2_SL_SHIFT               (4U)
#define GPIO1_IOC_GPIO1B_SL_GPIO1B2_SL_MASK                (0x3U << GPIO1_IOC_GPIO1B_SL_GPIO1B2_SL_SHIFT)               /* 0x00000030 */
#define GPIO1_IOC_GPIO1B_SL_GPIO1B3_SL_SHIFT               (6U)
#define GPIO1_IOC_GPIO1B_SL_GPIO1B3_SL_MASK                (0x3U << GPIO1_IOC_GPIO1B_SL_GPIO1B3_SL_SHIFT)               /* 0x000000C0 */
#define GPIO1_IOC_GPIO1B_SL_GPIO1B4_SL_SHIFT               (8U)
#define GPIO1_IOC_GPIO1B_SL_GPIO1B4_SL_MASK                (0x3U << GPIO1_IOC_GPIO1B_SL_GPIO1B4_SL_SHIFT)               /* 0x00000300 */
#define GPIO1_IOC_GPIO1B_SL_GPIO1B5_SL_SHIFT               (10U)
#define GPIO1_IOC_GPIO1B_SL_GPIO1B5_SL_MASK                (0x3U << GPIO1_IOC_GPIO1B_SL_GPIO1B5_SL_SHIFT)               /* 0x00000C00 */
#define GPIO1_IOC_GPIO1B_SL_GPIO1B6_SL_SHIFT               (12U)
#define GPIO1_IOC_GPIO1B_SL_GPIO1B6_SL_MASK                (0x3U << GPIO1_IOC_GPIO1B_SL_GPIO1B6_SL_SHIFT)               /* 0x00003000 */
#define GPIO1_IOC_GPIO1B_SL_GPIO1B7_SL_SHIFT               (14U)
#define GPIO1_IOC_GPIO1B_SL_GPIO1B7_SL_MASK                (0x3U << GPIO1_IOC_GPIO1B_SL_GPIO1B7_SL_SHIFT)               /* 0x0000C000 */
/* GPIO1C_SL */
#define GPIO1_IOC_GPIO1C_SL_OFFSET                         (0x618U)
#define GPIO1_IOC_GPIO1C_SL_GPIO1C0_SL_SHIFT               (0U)
#define GPIO1_IOC_GPIO1C_SL_GPIO1C0_SL_MASK                (0x3U << GPIO1_IOC_GPIO1C_SL_GPIO1C0_SL_SHIFT)               /* 0x00000003 */
#define GPIO1_IOC_GPIO1C_SL_GPIO1C1_SL_SHIFT               (2U)
#define GPIO1_IOC_GPIO1C_SL_GPIO1C1_SL_MASK                (0x3U << GPIO1_IOC_GPIO1C_SL_GPIO1C1_SL_SHIFT)               /* 0x0000000C */
#define GPIO1_IOC_GPIO1C_SL_GPIO1C2_SL_SHIFT               (4U)
#define GPIO1_IOC_GPIO1C_SL_GPIO1C2_SL_MASK                (0x3U << GPIO1_IOC_GPIO1C_SL_GPIO1C2_SL_SHIFT)               /* 0x00000030 */
#define GPIO1_IOC_GPIO1C_SL_GPIO1C3_SL_SHIFT               (6U)
#define GPIO1_IOC_GPIO1C_SL_GPIO1C3_SL_MASK                (0x3U << GPIO1_IOC_GPIO1C_SL_GPIO1C3_SL_SHIFT)               /* 0x000000C0 */
#define GPIO1_IOC_GPIO1C_SL_GPIO1C4_SL_SHIFT               (8U)
#define GPIO1_IOC_GPIO1C_SL_GPIO1C4_SL_MASK                (0x3U << GPIO1_IOC_GPIO1C_SL_GPIO1C4_SL_SHIFT)               /* 0x00000300 */
#define GPIO1_IOC_GPIO1C_SL_GPIO1C5_SL_SHIFT               (10U)
#define GPIO1_IOC_GPIO1C_SL_GPIO1C5_SL_MASK                (0x3U << GPIO1_IOC_GPIO1C_SL_GPIO1C5_SL_SHIFT)               /* 0x00000C00 */
#define GPIO1_IOC_GPIO1C_SL_GPIO1C6_SL_SHIFT               (12U)
#define GPIO1_IOC_GPIO1C_SL_GPIO1C6_SL_MASK                (0x3U << GPIO1_IOC_GPIO1C_SL_GPIO1C6_SL_SHIFT)               /* 0x00003000 */
#define GPIO1_IOC_GPIO1C_SL_GPIO1C7_SL_SHIFT               (14U)
#define GPIO1_IOC_GPIO1C_SL_GPIO1C7_SL_MASK                (0x3U << GPIO1_IOC_GPIO1C_SL_GPIO1C7_SL_SHIFT)               /* 0x0000C000 */
/* GPIO1D_SL */
#define GPIO1_IOC_GPIO1D_SL_OFFSET                         (0x61CU)
#define GPIO1_IOC_GPIO1D_SL_GPIO1D0_SL_SHIFT               (0U)
#define GPIO1_IOC_GPIO1D_SL_GPIO1D0_SL_MASK                (0x3U << GPIO1_IOC_GPIO1D_SL_GPIO1D0_SL_SHIFT)               /* 0x00000003 */
#define GPIO1_IOC_GPIO1D_SL_GPIO1D1_SL_SHIFT               (2U)
#define GPIO1_IOC_GPIO1D_SL_GPIO1D1_SL_MASK                (0x3U << GPIO1_IOC_GPIO1D_SL_GPIO1D1_SL_SHIFT)               /* 0x0000000C */
#define GPIO1_IOC_GPIO1D_SL_GPIO1D2_SL_SHIFT               (4U)
#define GPIO1_IOC_GPIO1D_SL_GPIO1D2_SL_MASK                (0x3U << GPIO1_IOC_GPIO1D_SL_GPIO1D2_SL_SHIFT)               /* 0x00000030 */
#define GPIO1_IOC_GPIO1D_SL_GPIO1D3_SL_SHIFT               (6U)
#define GPIO1_IOC_GPIO1D_SL_GPIO1D3_SL_MASK                (0x3U << GPIO1_IOC_GPIO1D_SL_GPIO1D3_SL_SHIFT)               /* 0x000000C0 */
/* GPIO1A_OD */
#define GPIO1_IOC_GPIO1A_OD_OFFSET                         (0x710U)
#define GPIO1_IOC_GPIO1A_OD_GPIO1A0_OD_SHIFT               (0U)
#define GPIO1_IOC_GPIO1A_OD_GPIO1A0_OD_MASK                (0x1U << GPIO1_IOC_GPIO1A_OD_GPIO1A0_OD_SHIFT)               /* 0x00000001 */
#define GPIO1_IOC_GPIO1A_OD_GPIO1A1_OD_SHIFT               (1U)
#define GPIO1_IOC_GPIO1A_OD_GPIO1A1_OD_MASK                (0x1U << GPIO1_IOC_GPIO1A_OD_GPIO1A1_OD_SHIFT)               /* 0x00000002 */
#define GPIO1_IOC_GPIO1A_OD_GPIO1A2_OD_SHIFT               (2U)
#define GPIO1_IOC_GPIO1A_OD_GPIO1A2_OD_MASK                (0x1U << GPIO1_IOC_GPIO1A_OD_GPIO1A2_OD_SHIFT)               /* 0x00000004 */
#define GPIO1_IOC_GPIO1A_OD_GPIO1A3_OD_SHIFT               (3U)
#define GPIO1_IOC_GPIO1A_OD_GPIO1A3_OD_MASK                (0x1U << GPIO1_IOC_GPIO1A_OD_GPIO1A3_OD_SHIFT)               /* 0x00000008 */
#define GPIO1_IOC_GPIO1A_OD_GPIO1A4_OD_SHIFT               (4U)
#define GPIO1_IOC_GPIO1A_OD_GPIO1A4_OD_MASK                (0x1U << GPIO1_IOC_GPIO1A_OD_GPIO1A4_OD_SHIFT)               /* 0x00000010 */
#define GPIO1_IOC_GPIO1A_OD_GPIO1A5_OD_SHIFT               (5U)
#define GPIO1_IOC_GPIO1A_OD_GPIO1A5_OD_MASK                (0x1U << GPIO1_IOC_GPIO1A_OD_GPIO1A5_OD_SHIFT)               /* 0x00000020 */
#define GPIO1_IOC_GPIO1A_OD_GPIO1A6_OD_SHIFT               (6U)
#define GPIO1_IOC_GPIO1A_OD_GPIO1A6_OD_MASK                (0x1U << GPIO1_IOC_GPIO1A_OD_GPIO1A6_OD_SHIFT)               /* 0x00000040 */
#define GPIO1_IOC_GPIO1A_OD_GPIO1A7_OD_SHIFT               (7U)
#define GPIO1_IOC_GPIO1A_OD_GPIO1A7_OD_MASK                (0x1U << GPIO1_IOC_GPIO1A_OD_GPIO1A7_OD_SHIFT)               /* 0x00000080 */
/* GPIO1B_OD */
#define GPIO1_IOC_GPIO1B_OD_OFFSET                         (0x714U)
#define GPIO1_IOC_GPIO1B_OD_GPIO1B0_OD_SHIFT               (0U)
#define GPIO1_IOC_GPIO1B_OD_GPIO1B0_OD_MASK                (0x1U << GPIO1_IOC_GPIO1B_OD_GPIO1B0_OD_SHIFT)               /* 0x00000001 */
#define GPIO1_IOC_GPIO1B_OD_GPIO1B1_OD_SHIFT               (1U)
#define GPIO1_IOC_GPIO1B_OD_GPIO1B1_OD_MASK                (0x1U << GPIO1_IOC_GPIO1B_OD_GPIO1B1_OD_SHIFT)               /* 0x00000002 */
#define GPIO1_IOC_GPIO1B_OD_GPIO1B2_OD_SHIFT               (2U)
#define GPIO1_IOC_GPIO1B_OD_GPIO1B2_OD_MASK                (0x1U << GPIO1_IOC_GPIO1B_OD_GPIO1B2_OD_SHIFT)               /* 0x00000004 */
#define GPIO1_IOC_GPIO1B_OD_GPIO1B3_OD_SHIFT               (3U)
#define GPIO1_IOC_GPIO1B_OD_GPIO1B3_OD_MASK                (0x1U << GPIO1_IOC_GPIO1B_OD_GPIO1B3_OD_SHIFT)               /* 0x00000008 */
#define GPIO1_IOC_GPIO1B_OD_GPIO1B4_OD_SHIFT               (4U)
#define GPIO1_IOC_GPIO1B_OD_GPIO1B4_OD_MASK                (0x1U << GPIO1_IOC_GPIO1B_OD_GPIO1B4_OD_SHIFT)               /* 0x00000010 */
#define GPIO1_IOC_GPIO1B_OD_GPIO1B5_OD_SHIFT               (5U)
#define GPIO1_IOC_GPIO1B_OD_GPIO1B5_OD_MASK                (0x1U << GPIO1_IOC_GPIO1B_OD_GPIO1B5_OD_SHIFT)               /* 0x00000020 */
#define GPIO1_IOC_GPIO1B_OD_GPIO1B6_OD_SHIFT               (6U)
#define GPIO1_IOC_GPIO1B_OD_GPIO1B6_OD_MASK                (0x1U << GPIO1_IOC_GPIO1B_OD_GPIO1B6_OD_SHIFT)               /* 0x00000040 */
#define GPIO1_IOC_GPIO1B_OD_GPIO1B7_OD_SHIFT               (7U)
#define GPIO1_IOC_GPIO1B_OD_GPIO1B7_OD_MASK                (0x1U << GPIO1_IOC_GPIO1B_OD_GPIO1B7_OD_SHIFT)               /* 0x00000080 */
/* GPIO1C_OD */
#define GPIO1_IOC_GPIO1C_OD_OFFSET                         (0x718U)
#define GPIO1_IOC_GPIO1C_OD_GPIO1C0_OD_SHIFT               (0U)
#define GPIO1_IOC_GPIO1C_OD_GPIO1C0_OD_MASK                (0x1U << GPIO1_IOC_GPIO1C_OD_GPIO1C0_OD_SHIFT)               /* 0x00000001 */
#define GPIO1_IOC_GPIO1C_OD_GPIO1C1_OD_SHIFT               (1U)
#define GPIO1_IOC_GPIO1C_OD_GPIO1C1_OD_MASK                (0x1U << GPIO1_IOC_GPIO1C_OD_GPIO1C1_OD_SHIFT)               /* 0x00000002 */
#define GPIO1_IOC_GPIO1C_OD_GPIO1C2_OD_SHIFT               (2U)
#define GPIO1_IOC_GPIO1C_OD_GPIO1C2_OD_MASK                (0x1U << GPIO1_IOC_GPIO1C_OD_GPIO1C2_OD_SHIFT)               /* 0x00000004 */
#define GPIO1_IOC_GPIO1C_OD_GPIO1C3_OD_SHIFT               (3U)
#define GPIO1_IOC_GPIO1C_OD_GPIO1C3_OD_MASK                (0x1U << GPIO1_IOC_GPIO1C_OD_GPIO1C3_OD_SHIFT)               /* 0x00000008 */
#define GPIO1_IOC_GPIO1C_OD_GPIO1C4_OD_SHIFT               (4U)
#define GPIO1_IOC_GPIO1C_OD_GPIO1C4_OD_MASK                (0x1U << GPIO1_IOC_GPIO1C_OD_GPIO1C4_OD_SHIFT)               /* 0x00000010 */
#define GPIO1_IOC_GPIO1C_OD_GPIO1C5_OD_SHIFT               (5U)
#define GPIO1_IOC_GPIO1C_OD_GPIO1C5_OD_MASK                (0x1U << GPIO1_IOC_GPIO1C_OD_GPIO1C5_OD_SHIFT)               /* 0x00000020 */
#define GPIO1_IOC_GPIO1C_OD_GPIO1C6_OD_SHIFT               (6U)
#define GPIO1_IOC_GPIO1C_OD_GPIO1C6_OD_MASK                (0x1U << GPIO1_IOC_GPIO1C_OD_GPIO1C6_OD_SHIFT)               /* 0x00000040 */
#define GPIO1_IOC_GPIO1C_OD_GPIO1C7_OD_SHIFT               (7U)
#define GPIO1_IOC_GPIO1C_OD_GPIO1C7_OD_MASK                (0x1U << GPIO1_IOC_GPIO1C_OD_GPIO1C7_OD_SHIFT)               /* 0x00000080 */
/* GPIO1D_OD */
#define GPIO1_IOC_GPIO1D_OD_OFFSET                         (0x71CU)
#define GPIO1_IOC_GPIO1D_OD_GPIO1D0_OD_SHIFT               (0U)
#define GPIO1_IOC_GPIO1D_OD_GPIO1D0_OD_MASK                (0x1U << GPIO1_IOC_GPIO1D_OD_GPIO1D0_OD_SHIFT)               /* 0x00000001 */
#define GPIO1_IOC_GPIO1D_OD_GPIO1D1_OD_SHIFT               (1U)
#define GPIO1_IOC_GPIO1D_OD_GPIO1D1_OD_MASK                (0x1U << GPIO1_IOC_GPIO1D_OD_GPIO1D1_OD_SHIFT)               /* 0x00000002 */
#define GPIO1_IOC_GPIO1D_OD_GPIO1D2_OD_SHIFT               (2U)
#define GPIO1_IOC_GPIO1D_OD_GPIO1D2_OD_MASK                (0x1U << GPIO1_IOC_GPIO1D_OD_GPIO1D2_OD_SHIFT)               /* 0x00000004 */
#define GPIO1_IOC_GPIO1D_OD_GPIO1D3_OD_SHIFT               (3U)
#define GPIO1_IOC_GPIO1D_OD_GPIO1D3_OD_MASK                (0x1U << GPIO1_IOC_GPIO1D_OD_GPIO1D3_OD_SHIFT)               /* 0x00000008 */
/* IDDQ_VCCIO1 */
#define GPIO1_IOC_IDDQ_VCCIO1_OFFSET                       (0x810U)
#define GPIO1_IOC_IDDQ_VCCIO1_VCCIO1_SHIFT                 (0U)
#define GPIO1_IOC_IDDQ_VCCIO1_VCCIO1_MASK                  (0x1U << GPIO1_IOC_IDDQ_VCCIO1_VCCIO1_SHIFT)                 /* 0x00000001 */
/**************************************MIPI_TX_PHY***************************************/
/* DPHY_CTRL_LANE_ENABLE */
#define MIPI_TX_PHY_DPHY_CTRL_LANE_ENABLE_OFFSET           (0x0U)
#define MIPI_TX_PHY_DPHY_CTRL_LANE_ENABLE_POWER_SHIFT      (0U)
#define MIPI_TX_PHY_DPHY_CTRL_LANE_ENABLE_POWER_MASK       (0x3U << MIPI_TX_PHY_DPHY_CTRL_LANE_ENABLE_POWER_SHIFT)      /* 0x00000003 */
#define MIPI_TX_PHY_DPHY_CTRL_LANE_ENABLE_LANE_EN_0_SHIFT  (2U)
#define MIPI_TX_PHY_DPHY_CTRL_LANE_ENABLE_LANE_EN_0_MASK   (0x1U << MIPI_TX_PHY_DPHY_CTRL_LANE_ENABLE_LANE_EN_0_SHIFT)  /* 0x00000004 */
#define MIPI_TX_PHY_DPHY_CTRL_LANE_ENABLE_LANE_EN_1_SHIFT  (3U)
#define MIPI_TX_PHY_DPHY_CTRL_LANE_ENABLE_LANE_EN_1_MASK   (0x1U << MIPI_TX_PHY_DPHY_CTRL_LANE_ENABLE_LANE_EN_1_SHIFT)  /* 0x00000008 */
#define MIPI_TX_PHY_DPHY_CTRL_LANE_ENABLE_LANE_EN_2_SHIFT  (4U)
#define MIPI_TX_PHY_DPHY_CTRL_LANE_ENABLE_LANE_EN_2_MASK   (0x1U << MIPI_TX_PHY_DPHY_CTRL_LANE_ENABLE_LANE_EN_2_SHIFT)  /* 0x00000010 */
#define MIPI_TX_PHY_DPHY_CTRL_LANE_ENABLE_LANE_EN_3_SHIFT  (5U)
#define MIPI_TX_PHY_DPHY_CTRL_LANE_ENABLE_LANE_EN_3_MASK   (0x1U << MIPI_TX_PHY_DPHY_CTRL_LANE_ENABLE_LANE_EN_3_SHIFT)  /* 0x00000020 */
#define MIPI_TX_PHY_DPHY_CTRL_LANE_ENABLE_LANE_EN_CK_SHIFT (6U)
#define MIPI_TX_PHY_DPHY_CTRL_LANE_ENABLE_LANE_EN_CK_MASK  (0x1U << MIPI_TX_PHY_DPHY_CTRL_LANE_ENABLE_LANE_EN_CK_SHIFT) /* 0x00000040 */
#define MIPI_TX_PHY_DPHY_CTRL_LANE_ENABLE_BANDGAP_POWER_SHIFT (7U)
#define MIPI_TX_PHY_DPHY_CTRL_LANE_ENABLE_BANDGAP_POWER_MASK (0x1U << MIPI_TX_PHY_DPHY_CTRL_LANE_ENABLE_BANDGAP_POWER_SHIFT) /* 0x00000080 */
/* DPHY_POWER_CTRL */
#define MIPI_TX_PHY_DPHY_POWER_CTRL_OFFSET                 (0x4U)
#define MIPI_TX_PHY_DPHY_POWER_CTRL_PLLPD_SHIFT            (0U)
#define MIPI_TX_PHY_DPHY_POWER_CTRL_PLLPD_MASK             (0x1U << MIPI_TX_PHY_DPHY_POWER_CTRL_PLLPD_SHIFT)            /* 0x00000001 */
#define MIPI_TX_PHY_DPHY_POWER_CTRL_LDOPD_SHIFT            (1U)
#define MIPI_TX_PHY_DPHY_POWER_CTRL_LDOPD_MASK             (0x1U << MIPI_TX_PHY_DPHY_POWER_CTRL_LDOPD_SHIFT)            /* 0x00000002 */
#define MIPI_TX_PHY_DPHY_POWER_CTRL_SYNCRST_SHIFT          (2U)
#define MIPI_TX_PHY_DPHY_POWER_CTRL_SYNCRST_MASK           (0x1U << MIPI_TX_PHY_DPHY_POWER_CTRL_SYNCRST_SHIFT)          /* 0x00000004 */
/* DPHY_PREDIV_CTRL */
#define MIPI_TX_PHY_DPHY_PREDIV_CTRL_OFFSET                (0xCU)
#define MIPI_TX_PHY_DPHY_PREDIV_CTRL_PLL_PREDIV_SHIFT      (0U)
#define MIPI_TX_PHY_DPHY_PREDIV_CTRL_PLL_PREDIV_MASK       (0x1FU << MIPI_TX_PHY_DPHY_PREDIV_CTRL_PLL_PREDIV_SHIFT)     /* 0x0000001F */
#define MIPI_TX_PHY_DPHY_PREDIV_CTRL_FBDIV_MSB_SHIFT       (5U)
#define MIPI_TX_PHY_DPHY_PREDIV_CTRL_FBDIV_MSB_MASK        (0x1U << MIPI_TX_PHY_DPHY_PREDIV_CTRL_FBDIV_MSB_SHIFT)       /* 0x00000020 */
/* DPHY_FBDIV_CTRL */
#define MIPI_TX_PHY_DPHY_FBDIV_CTRL_OFFSET                 (0x10U)
#define MIPI_TX_PHY_DPHY_FBDIV_CTRL_PLL_FBDIV_SHIFT        (0U)
#define MIPI_TX_PHY_DPHY_FBDIV_CTRL_PLL_FBDIV_MASK         (0xFFU << MIPI_TX_PHY_DPHY_FBDIV_CTRL_PLL_FBDIV_SHIFT)       /* 0x000000FF */
/* DPHY_CLK_LANE_SKEW_PHASE */
#define MIPI_TX_PHY_DPHY_CLK_LANE_SKEW_PHASE_OFFSET        (0x14U)
#define MIPI_TX_PHY_DPHY_CLK_LANE_SKEW_PHASE_CLOCK_SKEW_PHASE_SHIFT (0U)
#define MIPI_TX_PHY_DPHY_CLK_LANE_SKEW_PHASE_CLOCK_SKEW_PHASE_MASK (0x1U << MIPI_TX_PHY_DPHY_CLK_LANE_SKEW_PHASE_CLOCK_SKEW_PHASE_SHIFT) /* 0x00000001 */
/* DPHY_DATA_LANE23_SKEW_PHASE */
#define MIPI_TX_PHY_DPHY_DATA_LANE23_SKEW_PHASE_OFFSET     (0x18U)
#define MIPI_TX_PHY_DPHY_DATA_LANE23_SKEW_PHASE_LANE2_SKEW_PHASE_SHIFT (0U)
#define MIPI_TX_PHY_DPHY_DATA_LANE23_SKEW_PHASE_LANE2_SKEW_PHASE_MASK (0x7U << MIPI_TX_PHY_DPHY_DATA_LANE23_SKEW_PHASE_LANE2_SKEW_PHASE_SHIFT) /* 0x00000007 */
#define MIPI_TX_PHY_DPHY_DATA_LANE23_SKEW_PHASE_LDO_HS_VCOM_BIT0_SHIFT (3U)
#define MIPI_TX_PHY_DPHY_DATA_LANE23_SKEW_PHASE_LDO_HS_VCOM_BIT0_MASK (0x1U << MIPI_TX_PHY_DPHY_DATA_LANE23_SKEW_PHASE_LDO_HS_VCOM_BIT0_SHIFT) /* 0x00000008 */
#define MIPI_TX_PHY_DPHY_DATA_LANE23_SKEW_PHASE_LANE3_SKEW_PHASE_SHIFT (4U)
#define MIPI_TX_PHY_DPHY_DATA_LANE23_SKEW_PHASE_LANE3_SKEW_PHASE_MASK (0x7U << MIPI_TX_PHY_DPHY_DATA_LANE23_SKEW_PHASE_LANE3_SKEW_PHASE_SHIFT) /* 0x00000070 */
#define MIPI_TX_PHY_DPHY_DATA_LANE23_SKEW_PHASE_LDO_HS_VCOM_BIT1_SHIFT (7U)
#define MIPI_TX_PHY_DPHY_DATA_LANE23_SKEW_PHASE_LDO_HS_VCOM_BIT1_MASK (0x1U << MIPI_TX_PHY_DPHY_DATA_LANE23_SKEW_PHASE_LDO_HS_VCOM_BIT1_SHIFT) /* 0x00000080 */
/* DPHY_DATA_LANE01_SKEW_PHASE */
#define MIPI_TX_PHY_DPHY_DATA_LANE01_SKEW_PHASE_OFFSET     (0x1CU)
#define MIPI_TX_PHY_DPHY_DATA_LANE01_SKEW_PHASE_LANE0_SKEW_PHASE_SHIFT (0U)
#define MIPI_TX_PHY_DPHY_DATA_LANE01_SKEW_PHASE_LANE0_SKEW_PHASE_MASK (0x7U << MIPI_TX_PHY_DPHY_DATA_LANE01_SKEW_PHASE_LANE0_SKEW_PHASE_SHIFT) /* 0x00000007 */
#define MIPI_TX_PHY_DPHY_DATA_LANE01_SKEW_PHASE_LANE1_SKEW_PHASE_SHIFT (4U)
#define MIPI_TX_PHY_DPHY_DATA_LANE01_SKEW_PHASE_LANE1_SKEW_PHASE_MASK (0x7U << MIPI_TX_PHY_DPHY_DATA_LANE01_SKEW_PHASE_LANE1_SKEW_PHASE_SHIFT) /* 0x00000070 */
/* DPHY_DATA_LANE_VOD */
#define MIPI_TX_PHY_DPHY_DATA_LANE_VOD_OFFSET              (0x20U)
#define MIPI_TX_PHY_DPHY_DATA_LANE_VOD_DATA_LANE_VOD_SHIFT (0U)
#define MIPI_TX_PHY_DPHY_DATA_LANE_VOD_DATA_LANE_VOD_MASK  (0xFU << MIPI_TX_PHY_DPHY_DATA_LANE_VOD_DATA_LANE_VOD_SHIFT) /* 0x0000000F */
/* DPHY_CLK_LANE_VOD */
#define MIPI_TX_PHY_DPHY_CLK_LANE_VOD_OFFSET               (0x2CU)
#define MIPI_TX_PHY_DPHY_CLK_LANE_VOD_CLOCK_LANE_VOD_SHIFT (0U)
#define MIPI_TX_PHY_DPHY_CLK_LANE_VOD_CLOCK_LANE_VOD_MASK  (0xFU << MIPI_TX_PHY_DPHY_CLK_LANE_VOD_CLOCK_LANE_VOD_SHIFT) /* 0x0000000F */
/* DPHY_DATA_SAMPLE_PHASE */
#define MIPI_TX_PHY_DPHY_DATA_SAMPLE_PHASE_OFFSET          (0x44U)
#define MIPI_TX_PHY_DPHY_DATA_SAMPLE_PHASE_DATA_SAMPLE_PHASES_SHIFT (6U)
#define MIPI_TX_PHY_DPHY_DATA_SAMPLE_PHASE_DATA_SAMPLE_PHASES_MASK (0x3U << MIPI_TX_PHY_DPHY_DATA_SAMPLE_PHASE_DATA_SAMPLE_PHASES_SHIFT) /* 0x000000C0 */
/* DPHY_PRE_EMPHASIS */
#define MIPI_TX_PHY_DPHY_PRE_EMPHASIS_OFFSET               (0x60U)
#define MIPI_TX_PHY_DPHY_PRE_EMPHASIS_LANE1_PRE_EMPHASIS_EN_SHIFT (5U)
#define MIPI_TX_PHY_DPHY_PRE_EMPHASIS_LANE1_PRE_EMPHASIS_EN_MASK (0x1U << MIPI_TX_PHY_DPHY_PRE_EMPHASIS_LANE1_PRE_EMPHASIS_EN_SHIFT) /* 0x00000020 */
#define MIPI_TX_PHY_DPHY_PRE_EMPHASIS_LANE0_PRE_EMPHASIS_EN_SHIFT (6U)
#define MIPI_TX_PHY_DPHY_PRE_EMPHASIS_LANE0_PRE_EMPHASIS_EN_MASK (0x1U << MIPI_TX_PHY_DPHY_PRE_EMPHASIS_LANE0_PRE_EMPHASIS_EN_SHIFT) /* 0x00000040 */
#define MIPI_TX_PHY_DPHY_PRE_EMPHASIS_CLK_LANE_PRE_EMPHASIS_EN_SHIFT (7U)
#define MIPI_TX_PHY_DPHY_PRE_EMPHASIS_CLK_LANE_PRE_EMPHASIS_EN_MASK (0x1U << MIPI_TX_PHY_DPHY_PRE_EMPHASIS_CLK_LANE_PRE_EMPHASIS_EN_SHIFT) /* 0x00000080 */
/* DPHY_CLK_PRE_EMPHASIS_RANGE */
#define MIPI_TX_PHY_DPHY_CLK_PRE_EMPHASIS_RANGE_OFFSET     (0x64U)
#define MIPI_TX_PHY_DPHY_CLK_PRE_EMPHASIS_RANGE_CLK_LANE_PRE_EMPHASIS_RANGE_SHIFT (6U)
#define MIPI_TX_PHY_DPHY_CLK_PRE_EMPHASIS_RANGE_CLK_LANE_PRE_EMPHASIS_RANGE_MASK (0x3U << MIPI_TX_PHY_DPHY_CLK_PRE_EMPHASIS_RANGE_CLK_LANE_PRE_EMPHASIS_RANGE_SHIFT) /* 0x000000C0 */
/* DPHY_LANE0_PRE_EMPHASIS_RANGE */
#define MIPI_TX_PHY_DPHY_LANE0_PRE_EMPHASIS_RANGE_OFFSET   (0x68U)
#define MIPI_TX_PHY_DPHY_LANE0_PRE_EMPHASIS_RANGE_LANE0_PRE_EMPHASIS_RANGE_SHIFT (6U)
#define MIPI_TX_PHY_DPHY_LANE0_PRE_EMPHASIS_RANGE_LANE0_PRE_EMPHASIS_RANGE_MASK (0x3U << MIPI_TX_PHY_DPHY_LANE0_PRE_EMPHASIS_RANGE_LANE0_PRE_EMPHASIS_RANGE_SHIFT) /* 0x000000C0 */
/* DPHY_LANE1_PRE_EMPHASIS_RANGE */
#define MIPI_TX_PHY_DPHY_LANE1_PRE_EMPHASIS_RANGE_OFFSET   (0x6CU)
#define MIPI_TX_PHY_DPHY_LANE1_PRE_EMPHASIS_RANGE_LANE1_PRE_EMPHASIS_RANGE_SHIFT (6U)
#define MIPI_TX_PHY_DPHY_LANE1_PRE_EMPHASIS_RANGE_LANE1_PRE_EMPHASIS_RANGE_MASK (0x3U << MIPI_TX_PHY_DPHY_LANE1_PRE_EMPHASIS_RANGE_LANE1_PRE_EMPHASIS_RANGE_SHIFT) /* 0x000000C0 */
/* DPHY_DIGITAL_CTRL */
#define MIPI_TX_PHY_DPHY_DIGITAL_CTRL_OFFSET               (0x80U)
#define MIPI_TX_PHY_DPHY_DIGITAL_CTRL_DIG_RSTN_SHIFT       (0U)
#define MIPI_TX_PHY_DPHY_DIGITAL_CTRL_DIG_RSTN_MASK        (0x1U << MIPI_TX_PHY_DPHY_DIGITAL_CTRL_DIG_RSTN_SHIFT)       /* 0x00000001 */
/* DPHY_INVERT_CTRL */
#define MIPI_TX_PHY_DPHY_INVERT_CTRL_OFFSET                (0x84U)
#define MIPI_TX_PHY_DPHY_INVERT_CTRL_TXBYTECLK_REVERT_SHIFT (0U)
#define MIPI_TX_PHY_DPHY_INVERT_CTRL_TXBYTECLK_REVERT_MASK (0x1U << MIPI_TX_PHY_DPHY_INVERT_CTRL_TXBYTECLK_REVERT_SHIFT) /* 0x00000001 */
#define MIPI_TX_PHY_DPHY_INVERT_CTRL_TXCLKESC_REVERT_SHIFT (1U)
#define MIPI_TX_PHY_DPHY_INVERT_CTRL_TXCLKESC_REVERT_MASK  (0x1U << MIPI_TX_PHY_DPHY_INVERT_CTRL_TXCLKESC_REVERT_SHIFT) /* 0x00000002 */
/* DPHY_CLK_LANE_SWAP */
#define MIPI_TX_PHY_DPHY_CLK_LANE_SWAP_OFFSET              (0x100U)
#define MIPI_TX_PHY_DPHY_CLK_LANE_SWAP_DIFF_SIGNALS_SWAP_EN_SHIFT (4U)
#define MIPI_TX_PHY_DPHY_CLK_LANE_SWAP_DIFF_SIGNALS_SWAP_EN_MASK (0x1U << MIPI_TX_PHY_DPHY_CLK_LANE_SWAP_DIFF_SIGNALS_SWAP_EN_SHIFT) /* 0x00000010 */
/* DPHY_CLK_LANE_TLPX */
#define MIPI_TX_PHY_DPHY_CLK_LANE_TLPX_OFFSET              (0x114U)
#define MIPI_TX_PHY_DPHY_CLK_LANE_TLPX_HS_TLPX_SHIFT       (0U)
#define MIPI_TX_PHY_DPHY_CLK_LANE_TLPX_HS_TLPX_MASK        (0x3FU << MIPI_TX_PHY_DPHY_CLK_LANE_TLPX_HS_TLPX_SHIFT)      /* 0x0000003F */
/* DPHY_CLK_LANE_THSPREPARE */
#define MIPI_TX_PHY_DPHY_CLK_LANE_THSPREPARE_OFFSET        (0x118U)
#define MIPI_TX_PHY_DPHY_CLK_LANE_THSPREPARE_THS_PREPARE_SHIFT (0U)
#define MIPI_TX_PHY_DPHY_CLK_LANE_THSPREPARE_THS_PREPARE_MASK (0x7FU << MIPI_TX_PHY_DPHY_CLK_LANE_THSPREPARE_THS_PREPARE_SHIFT) /* 0x0000007F */
/* DPHY_CLK_LANE_THSZERO */
#define MIPI_TX_PHY_DPHY_CLK_LANE_THSZERO_OFFSET           (0x11CU)
#define MIPI_TX_PHY_DPHY_CLK_LANE_THSZERO_THS_ZERO_SHIFT   (0U)
#define MIPI_TX_PHY_DPHY_CLK_LANE_THSZERO_THS_ZERO_MASK    (0x3FU << MIPI_TX_PHY_DPHY_CLK_LANE_THSZERO_THS_ZERO_SHIFT)  /* 0x0000003F */
/* DPHY_CLK_LANE_THSTRAIL */
#define MIPI_TX_PHY_DPHY_CLK_LANE_THSTRAIL_OFFSET          (0x120U)
#define MIPI_TX_PHY_DPHY_CLK_LANE_THSTRAIL_THS_TRAIL_SHIFT (0U)
#define MIPI_TX_PHY_DPHY_CLK_LANE_THSTRAIL_THS_TRAIL_MASK  (0x7FU << MIPI_TX_PHY_DPHY_CLK_LANE_THSTRAIL_THS_TRAIL_SHIFT) /* 0x0000007F */
/* DPHY_CLK_LANE_THSEXIT */
#define MIPI_TX_PHY_DPHY_CLK_LANE_THSEXIT_OFFSET           (0x124U)
#define MIPI_TX_PHY_DPHY_CLK_LANE_THSEXIT_THS_EXIT_SHIFT   (0U)
#define MIPI_TX_PHY_DPHY_CLK_LANE_THSEXIT_THS_EXIT_MASK    (0x1FU << MIPI_TX_PHY_DPHY_CLK_LANE_THSEXIT_THS_EXIT_SHIFT)  /* 0x0000001F */
/* DPHY_CLK_LANE_TPOST */
#define MIPI_TX_PHY_DPHY_CLK_LANE_TPOST_OFFSET             (0x128U)
#define MIPI_TX_PHY_DPHY_CLK_LANE_TPOST_TCLK_POST_SHIFT    (0U)
#define MIPI_TX_PHY_DPHY_CLK_LANE_TPOST_TCLK_POST_MASK     (0xFU << MIPI_TX_PHY_DPHY_CLK_LANE_TPOST_TCLK_POST_SHIFT)    /* 0x0000000F */
/* DPHY_CLK_LANE_LPDT_EN */
#define MIPI_TX_PHY_DPHY_CLK_LANE_LPDT_EN_OFFSET           (0x130U)
#define MIPI_TX_PHY_DPHY_CLK_LANE_LPDT_EN_LPDT_PPI_ENABLE_SHIFT (2U)
#define MIPI_TX_PHY_DPHY_CLK_LANE_LPDT_EN_LPDT_PPI_ENABLE_MASK (0x1U << MIPI_TX_PHY_DPHY_CLK_LANE_LPDT_EN_LPDT_PPI_ENABLE_SHIFT) /* 0x00000004 */
/* DPHY_CLK_LANE_TPRE */
#define MIPI_TX_PHY_DPHY_CLK_LANE_TPRE_OFFSET              (0x138U)
#define MIPI_TX_PHY_DPHY_CLK_LANE_TPRE_TCLK_PRE_SHIFT      (0U)
#define MIPI_TX_PHY_DPHY_CLK_LANE_TPRE_TCLK_PRE_MASK       (0xFU << MIPI_TX_PHY_DPHY_CLK_LANE_TPRE_TCLK_PRE_SHIFT)      /* 0x0000000F */
/* DPHY_CLK_LANE_TTAGO */
#define MIPI_TX_PHY_DPHY_CLK_LANE_TTAGO_OFFSET             (0x140U)
#define MIPI_TX_PHY_DPHY_CLK_LANE_TTAGO_TTA_GO_SHIFT       (0U)
#define MIPI_TX_PHY_DPHY_CLK_LANE_TTAGO_TTA_GO_MASK        (0x3FU << MIPI_TX_PHY_DPHY_CLK_LANE_TTAGO_TTA_GO_SHIFT)      /* 0x0000003F */
#define MIPI_TX_PHY_DPHY_CLK_LANE_TTAGO_TCLK_POST_H2_SHIFT (6U)
#define MIPI_TX_PHY_DPHY_CLK_LANE_TTAGO_TCLK_POST_H2_MASK  (0x3U << MIPI_TX_PHY_DPHY_CLK_LANE_TTAGO_TCLK_POST_H2_SHIFT) /* 0x000000C0 */
/* DPHY_CLK_LANE_TTASURE */
#define MIPI_TX_PHY_DPHY_CLK_LANE_TTASURE_OFFSET           (0x144U)
#define MIPI_TX_PHY_DPHY_CLK_LANE_TTASURE_TTA_SURE_SHIFT   (0U)
#define MIPI_TX_PHY_DPHY_CLK_LANE_TTASURE_TTA_SURE_MASK    (0x3FU << MIPI_TX_PHY_DPHY_CLK_LANE_TTASURE_TTA_SURE_SHIFT)  /* 0x0000003F */
#define MIPI_TX_PHY_DPHY_CLK_LANE_TTASURE_THS_EXIT_H1_SHIFT (6U)
#define MIPI_TX_PHY_DPHY_CLK_LANE_TTASURE_THS_EXIT_H1_MASK (0x1U << MIPI_TX_PHY_DPHY_CLK_LANE_TTASURE_THS_EXIT_H1_SHIFT) /* 0x00000040 */
/* DPHY_CLK_LANE_TTAWAIT */
#define MIPI_TX_PHY_DPHY_CLK_LANE_TTAWAIT_OFFSET           (0x148U)
#define MIPI_TX_PHY_DPHY_CLK_LANE_TTAWAIT_TTA_WAIT_SHIFT   (0U)
#define MIPI_TX_PHY_DPHY_CLK_LANE_TTAWAIT_TTA_WAIT_MASK    (0x3FU << MIPI_TX_PHY_DPHY_CLK_LANE_TTAWAIT_TTA_WAIT_SHIFT)  /* 0x0000003F */
/* DPHY_DATA_LANE0_SWAP */
#define MIPI_TX_PHY_DPHY_DATA_LANE0_SWAP_OFFSET            (0x180U)
#define MIPI_TX_PHY_DPHY_DATA_LANE0_SWAP_DIFF_SIGNALS_SWAP_EN_SHIFT (4U)
#define MIPI_TX_PHY_DPHY_DATA_LANE0_SWAP_DIFF_SIGNALS_SWAP_EN_MASK (0x1U << MIPI_TX_PHY_DPHY_DATA_LANE0_SWAP_DIFF_SIGNALS_SWAP_EN_SHIFT) /* 0x00000010 */
/* DPHY_DATA_LANE0_THSLPX */
#define MIPI_TX_PHY_DPHY_DATA_LANE0_THSLPX_OFFSET          (0x194U)
#define MIPI_TX_PHY_DPHY_DATA_LANE0_THSLPX_HS_TLPX_SHIFT   (0U)
#define MIPI_TX_PHY_DPHY_DATA_LANE0_THSLPX_HS_TLPX_MASK    (0x3FU << MIPI_TX_PHY_DPHY_DATA_LANE0_THSLPX_HS_TLPX_SHIFT)  /* 0x0000003F */
/* DPHY_DATA_LANE0_THSPREPARE */
#define MIPI_TX_PHY_DPHY_DATA_LANE0_THSPREPARE_OFFSET      (0x198U)
#define MIPI_TX_PHY_DPHY_DATA_LANE0_THSPREPARE_THS_PREPARE_SHIFT (0U)
#define MIPI_TX_PHY_DPHY_DATA_LANE0_THSPREPARE_THS_PREPARE_MASK (0x7FU << MIPI_TX_PHY_DPHY_DATA_LANE0_THSPREPARE_THS_PREPARE_SHIFT) /* 0x0000007F */
/* DPHY_DATA_LANE0_THSZERO */
#define MIPI_TX_PHY_DPHY_DATA_LANE0_THSZERO_OFFSET         (0x19CU)
#define MIPI_TX_PHY_DPHY_DATA_LANE0_THSZERO_THS_ZERO_SHIFT (0U)
#define MIPI_TX_PHY_DPHY_DATA_LANE0_THSZERO_THS_ZERO_MASK  (0x3FU << MIPI_TX_PHY_DPHY_DATA_LANE0_THSZERO_THS_ZERO_SHIFT) /* 0x0000003F */
/* DPHY_DATA_LANE0_THSTRAIL */
#define MIPI_TX_PHY_DPHY_DATA_LANE0_THSTRAIL_OFFSET        (0x1A0U)
#define MIPI_TX_PHY_DPHY_DATA_LANE0_THSTRAIL_THS_TRAIL_SHIFT (0U)
#define MIPI_TX_PHY_DPHY_DATA_LANE0_THSTRAIL_THS_TRAIL_MASK (0x7FU << MIPI_TX_PHY_DPHY_DATA_LANE0_THSTRAIL_THS_TRAIL_SHIFT) /* 0x0000007F */
/* DPHY_DATA_LANE0_THSEXIT */
#define MIPI_TX_PHY_DPHY_DATA_LANE0_THSEXIT_OFFSET         (0x1A4U)
#define MIPI_TX_PHY_DPHY_DATA_LANE0_THSEXIT_THS_EXIT_SHIFT (0U)
#define MIPI_TX_PHY_DPHY_DATA_LANE0_THSEXIT_THS_EXIT_MASK  (0x1FU << MIPI_TX_PHY_DPHY_DATA_LANE0_THSEXIT_THS_EXIT_SHIFT) /* 0x0000001F */
/* DPHY_DATA_LANE0_TPOST */
#define MIPI_TX_PHY_DPHY_DATA_LANE0_TPOST_OFFSET           (0x1A8U)
#define MIPI_TX_PHY_DPHY_DATA_LANE0_TPOST_TCLK_POST_SHIFT  (0U)
#define MIPI_TX_PHY_DPHY_DATA_LANE0_TPOST_TCLK_POST_MASK   (0xFU << MIPI_TX_PHY_DPHY_DATA_LANE0_TPOST_TCLK_POST_SHIFT)  /* 0x0000000F */
/* DPHY_DATA0_LPDT_EN */
#define MIPI_TX_PHY_DPHY_DATA0_LPDT_EN_OFFSET              (0x1B0U)
#define MIPI_TX_PHY_DPHY_DATA0_LPDT_EN_LPDT_PPI_ENABLE_SHIFT (2U)
#define MIPI_TX_PHY_DPHY_DATA0_LPDT_EN_LPDT_PPI_ENABLE_MASK (0x1U << MIPI_TX_PHY_DPHY_DATA0_LPDT_EN_LPDT_PPI_ENABLE_SHIFT) /* 0x00000004 */
/* DPHY_DATA_LANE0_TPRE */
#define MIPI_TX_PHY_DPHY_DATA_LANE0_TPRE_OFFSET            (0x1B8U)
#define MIPI_TX_PHY_DPHY_DATA_LANE0_TPRE_TCLK_PRE_SHIFT    (0U)
#define MIPI_TX_PHY_DPHY_DATA_LANE0_TPRE_TCLK_PRE_MASK     (0xFU << MIPI_TX_PHY_DPHY_DATA_LANE0_TPRE_TCLK_PRE_SHIFT)    /* 0x0000000F */
/* DPHY_DATA_LANE0_TTAGO */
#define MIPI_TX_PHY_DPHY_DATA_LANE0_TTAGO_OFFSET           (0x1C0U)
#define MIPI_TX_PHY_DPHY_DATA_LANE0_TTAGO_TTA_GO_SHIFT     (0U)
#define MIPI_TX_PHY_DPHY_DATA_LANE0_TTAGO_TTA_GO_MASK      (0x3FU << MIPI_TX_PHY_DPHY_DATA_LANE0_TTAGO_TTA_GO_SHIFT)    /* 0x0000003F */
#define MIPI_TX_PHY_DPHY_DATA_LANE0_TTAGO_TCLK_POST_H2_SHIFT (6U)
#define MIPI_TX_PHY_DPHY_DATA_LANE0_TTAGO_TCLK_POST_H2_MASK (0x3U << MIPI_TX_PHY_DPHY_DATA_LANE0_TTAGO_TCLK_POST_H2_SHIFT) /* 0x000000C0 */
/* DPHY_DATA_LANE0_TTASURE */
#define MIPI_TX_PHY_DPHY_DATA_LANE0_TTASURE_OFFSET         (0x1C4U)
#define MIPI_TX_PHY_DPHY_DATA_LANE0_TTASURE_TTA_SURE_SHIFT (0U)
#define MIPI_TX_PHY_DPHY_DATA_LANE0_TTASURE_TTA_SURE_MASK  (0x3FU << MIPI_TX_PHY_DPHY_DATA_LANE0_TTASURE_TTA_SURE_SHIFT) /* 0x0000003F */
#define MIPI_TX_PHY_DPHY_DATA_LANE0_TTASURE_THS_EXIT_H1_SHIFT (6U)
#define MIPI_TX_PHY_DPHY_DATA_LANE0_TTASURE_THS_EXIT_H1_MASK (0x1U << MIPI_TX_PHY_DPHY_DATA_LANE0_TTASURE_THS_EXIT_H1_SHIFT) /* 0x00000040 */
/* DPHY_DATA_LANE0_TTAWAIT */
#define MIPI_TX_PHY_DPHY_DATA_LANE0_TTAWAIT_OFFSET         (0x1C8U)
#define MIPI_TX_PHY_DPHY_DATA_LANE0_TTAWAIT_TTA_WAIT_SHIFT (0U)
#define MIPI_TX_PHY_DPHY_DATA_LANE0_TTAWAIT_TTA_WAIT_MASK  (0x3FU << MIPI_TX_PHY_DPHY_DATA_LANE0_TTAWAIT_TTA_WAIT_SHIFT) /* 0x0000003F */
/* DPHY_DATA_LANE1_SWAP */
#define MIPI_TX_PHY_DPHY_DATA_LANE1_SWAP_OFFSET            (0x200U)
#define MIPI_TX_PHY_DPHY_DATA_LANE1_SWAP_DIFF_SIGNALS_SWAP_EN_SHIFT (4U)
#define MIPI_TX_PHY_DPHY_DATA_LANE1_SWAP_DIFF_SIGNALS_SWAP_EN_MASK (0x1U << MIPI_TX_PHY_DPHY_DATA_LANE1_SWAP_DIFF_SIGNALS_SWAP_EN_SHIFT) /* 0x00000010 */
/* DPHY_DATA_LANE1_THSLPX */
#define MIPI_TX_PHY_DPHY_DATA_LANE1_THSLPX_OFFSET          (0x214U)
#define MIPI_TX_PHY_DPHY_DATA_LANE1_THSLPX_HS_TLPX_SHIFT   (0U)
#define MIPI_TX_PHY_DPHY_DATA_LANE1_THSLPX_HS_TLPX_MASK    (0x3FU << MIPI_TX_PHY_DPHY_DATA_LANE1_THSLPX_HS_TLPX_SHIFT)  /* 0x0000003F */
/* DPHY_DATA_LANE1_THSPREPARE */
#define MIPI_TX_PHY_DPHY_DATA_LANE1_THSPREPARE_OFFSET      (0x218U)
#define MIPI_TX_PHY_DPHY_DATA_LANE1_THSPREPARE_THS_PREPARE_SHIFT (0U)
#define MIPI_TX_PHY_DPHY_DATA_LANE1_THSPREPARE_THS_PREPARE_MASK (0x7FU << MIPI_TX_PHY_DPHY_DATA_LANE1_THSPREPARE_THS_PREPARE_SHIFT) /* 0x0000007F */
/* DPHY_DATA_LANE1_THSZERO */
#define MIPI_TX_PHY_DPHY_DATA_LANE1_THSZERO_OFFSET         (0x21CU)
#define MIPI_TX_PHY_DPHY_DATA_LANE1_THSZERO_THS_ZERO_SHIFT (0U)
#define MIPI_TX_PHY_DPHY_DATA_LANE1_THSZERO_THS_ZERO_MASK  (0x3FU << MIPI_TX_PHY_DPHY_DATA_LANE1_THSZERO_THS_ZERO_SHIFT) /* 0x0000003F */
/* DPHY_DATA_LANE1_THSTRAIL */
#define MIPI_TX_PHY_DPHY_DATA_LANE1_THSTRAIL_OFFSET        (0x220U)
#define MIPI_TX_PHY_DPHY_DATA_LANE1_THSTRAIL_THS_TRAIL_SHIFT (0U)
#define MIPI_TX_PHY_DPHY_DATA_LANE1_THSTRAIL_THS_TRAIL_MASK (0x7FU << MIPI_TX_PHY_DPHY_DATA_LANE1_THSTRAIL_THS_TRAIL_SHIFT) /* 0x0000007F */
/* DPHY_DATA_LANE1_THSEXIT */
#define MIPI_TX_PHY_DPHY_DATA_LANE1_THSEXIT_OFFSET         (0x224U)
#define MIPI_TX_PHY_DPHY_DATA_LANE1_THSEXIT_THS_EXIT_SHIFT (0U)
#define MIPI_TX_PHY_DPHY_DATA_LANE1_THSEXIT_THS_EXIT_MASK  (0x1FU << MIPI_TX_PHY_DPHY_DATA_LANE1_THSEXIT_THS_EXIT_SHIFT) /* 0x0000001F */
/* DPHY_DATA_LANE1_TPOST */
#define MIPI_TX_PHY_DPHY_DATA_LANE1_TPOST_OFFSET           (0x228U)
#define MIPI_TX_PHY_DPHY_DATA_LANE1_TPOST_TCLK_POST_SHIFT  (0U)
#define MIPI_TX_PHY_DPHY_DATA_LANE1_TPOST_TCLK_POST_MASK   (0xFU << MIPI_TX_PHY_DPHY_DATA_LANE1_TPOST_TCLK_POST_SHIFT)  /* 0x0000000F */
/* DPHY_DATA1_LPDT_EN */
#define MIPI_TX_PHY_DPHY_DATA1_LPDT_EN_OFFSET              (0x230U)
#define MIPI_TX_PHY_DPHY_DATA1_LPDT_EN_LPDT_PPI_ENABLE_SHIFT (2U)
#define MIPI_TX_PHY_DPHY_DATA1_LPDT_EN_LPDT_PPI_ENABLE_MASK (0x1U << MIPI_TX_PHY_DPHY_DATA1_LPDT_EN_LPDT_PPI_ENABLE_SHIFT) /* 0x00000004 */
/* DPHY_DATA_LANE1_TPRE */
#define MIPI_TX_PHY_DPHY_DATA_LANE1_TPRE_OFFSET            (0x238U)
#define MIPI_TX_PHY_DPHY_DATA_LANE1_TPRE_TCLK_PRE_SHIFT    (0U)
#define MIPI_TX_PHY_DPHY_DATA_LANE1_TPRE_TCLK_PRE_MASK     (0xFU << MIPI_TX_PHY_DPHY_DATA_LANE1_TPRE_TCLK_PRE_SHIFT)    /* 0x0000000F */
/* DPHY_DATA_LANE1_TTAGO */
#define MIPI_TX_PHY_DPHY_DATA_LANE1_TTAGO_OFFSET           (0x240U)
#define MIPI_TX_PHY_DPHY_DATA_LANE1_TTAGO_TTA_GO_SHIFT     (0U)
#define MIPI_TX_PHY_DPHY_DATA_LANE1_TTAGO_TTA_GO_MASK      (0x3FU << MIPI_TX_PHY_DPHY_DATA_LANE1_TTAGO_TTA_GO_SHIFT)    /* 0x0000003F */
#define MIPI_TX_PHY_DPHY_DATA_LANE1_TTAGO_TCLK_POST_H2_SHIFT (6U)
#define MIPI_TX_PHY_DPHY_DATA_LANE1_TTAGO_TCLK_POST_H2_MASK (0x3U << MIPI_TX_PHY_DPHY_DATA_LANE1_TTAGO_TCLK_POST_H2_SHIFT) /* 0x000000C0 */
/* DPHY_DATA_LANE1_TTASURE */
#define MIPI_TX_PHY_DPHY_DATA_LANE1_TTASURE_OFFSET         (0x244U)
#define MIPI_TX_PHY_DPHY_DATA_LANE1_TTASURE_TTA_SURE_SHIFT (0U)
#define MIPI_TX_PHY_DPHY_DATA_LANE1_TTASURE_TTA_SURE_MASK  (0x3FU << MIPI_TX_PHY_DPHY_DATA_LANE1_TTASURE_TTA_SURE_SHIFT) /* 0x0000003F */
#define MIPI_TX_PHY_DPHY_DATA_LANE1_TTASURE_THS_EXIT_H1_SHIFT (6U)
#define MIPI_TX_PHY_DPHY_DATA_LANE1_TTASURE_THS_EXIT_H1_MASK (0x1U << MIPI_TX_PHY_DPHY_DATA_LANE1_TTASURE_THS_EXIT_H1_SHIFT) /* 0x00000040 */
/* DPHY_DATA_LANE1_TTAWAIT */
#define MIPI_TX_PHY_DPHY_DATA_LANE1_TTAWAIT_OFFSET         (0x248U)
#define MIPI_TX_PHY_DPHY_DATA_LANE1_TTAWAIT_TTA_WAIT_SHIFT (0U)
#define MIPI_TX_PHY_DPHY_DATA_LANE1_TTAWAIT_TTA_WAIT_MASK  (0x3FU << MIPI_TX_PHY_DPHY_DATA_LANE1_TTAWAIT_TTA_WAIT_SHIFT) /* 0x0000003F */
/* TTL_MODE_CTRL0 */
#define MIPI_TX_PHY_TTL_MODE_CTRL0_OFFSET                  (0x380U)
#define MIPI_TX_PHY_TTL_MODE_CTRL0_MSB_MODE_SHIFT          (0U)
#define MIPI_TX_PHY_TTL_MODE_CTRL0_MSB_MODE_MASK           (0x1U << MIPI_TX_PHY_TTL_MODE_CTRL0_MSB_MODE_SHIFT)          /* 0x00000001 */
#define MIPI_TX_PHY_TTL_MODE_CTRL0_LVDS_DIGITAL_RESET_SHIFT (2U)
#define MIPI_TX_PHY_TTL_MODE_CTRL0_LVDS_DIGITAL_RESET_MASK (0x1U << MIPI_TX_PHY_TTL_MODE_CTRL0_LVDS_DIGITAL_RESET_SHIFT) /* 0x00000004 */
/* TTL_MODE_CTRL1 */
#define MIPI_TX_PHY_TTL_MODE_CTRL1_OFFSET                  (0x384U)
#define MIPI_TX_PHY_TTL_MODE_CTRL1_LVDS_DIG_INTERNAL_ENABLE_SHIFT (7U)
#define MIPI_TX_PHY_TTL_MODE_CTRL1_LVDS_DIG_INTERNAL_ENABLE_MASK (0x1U << MIPI_TX_PHY_TTL_MODE_CTRL1_LVDS_DIG_INTERNAL_ENABLE_SHIFT) /* 0x00000080 */
/* TTL_MODE_CTRL2 */
#define MIPI_TX_PHY_TTL_MODE_CTRL2_OFFSET                  (0x38CU)
#define MIPI_TX_PHY_TTL_MODE_CTRL2_MIPI_MODE_ENABLE_SHIFT  (0U)
#define MIPI_TX_PHY_TTL_MODE_CTRL2_MIPI_MODE_ENABLE_MASK   (0x1U << MIPI_TX_PHY_TTL_MODE_CTRL2_MIPI_MODE_ENABLE_SHIFT)  /* 0x00000001 */
#define MIPI_TX_PHY_TTL_MODE_CTRL2_LVDS_MODE_ENABLE_SHIFT  (1U)
#define MIPI_TX_PHY_TTL_MODE_CTRL2_LVDS_MODE_ENABLE_MASK   (0x1U << MIPI_TX_PHY_TTL_MODE_CTRL2_LVDS_MODE_ENABLE_SHIFT)  /* 0x00000002 */
#define MIPI_TX_PHY_TTL_MODE_CTRL2_TTL_MODE_ENABLE_SHIFT   (2U)
#define MIPI_TX_PHY_TTL_MODE_CTRL2_TTL_MODE_ENABLE_MASK    (0x1U << MIPI_TX_PHY_TTL_MODE_CTRL2_TTL_MODE_ENABLE_SHIFT)   /* 0x00000004 */
/* TTL_MODE_CTRL3 */
#define MIPI_TX_PHY_TTL_MODE_CTRL3_OFFSET                  (0x394U)
#define MIPI_TX_PHY_TTL_MODE_CTRL3_DA_TTL_ZP_CK_SHIFT      (0U)
#define MIPI_TX_PHY_TTL_MODE_CTRL3_DA_TTL_ZP_CK_MASK       (0xFU << MIPI_TX_PHY_TTL_MODE_CTRL3_DA_TTL_ZP_CK_SHIFT)      /* 0x0000000F */
#define MIPI_TX_PHY_TTL_MODE_CTRL3_DA_TTL_ZN_CK_SHIFT      (4U)
#define MIPI_TX_PHY_TTL_MODE_CTRL3_DA_TTL_ZN_CK_MASK       (0xFU << MIPI_TX_PHY_TTL_MODE_CTRL3_DA_TTL_ZN_CK_SHIFT)      /* 0x000000F0 */
/* TTL_MODE_CTRL4 */
#define MIPI_TX_PHY_TTL_MODE_CTRL4_OFFSET                  (0x3ACU)
#define MIPI_TX_PHY_TTL_MODE_CTRL4_POWER_SHIFT             (2U)
#define MIPI_TX_PHY_TTL_MODE_CTRL4_POWER_MASK              (0x1U << MIPI_TX_PHY_TTL_MODE_CTRL4_POWER_SHIFT)             /* 0x00000004 */
#define MIPI_TX_PHY_TTL_MODE_CTRL4_LANE_EN_CK_SHIFT        (3U)
#define MIPI_TX_PHY_TTL_MODE_CTRL4_LANE_EN_CK_MASK         (0x1U << MIPI_TX_PHY_TTL_MODE_CTRL4_LANE_EN_CK_SHIFT)        /* 0x00000008 */
#define MIPI_TX_PHY_TTL_MODE_CTRL4_LANE_EN_3_SHIFT         (4U)
#define MIPI_TX_PHY_TTL_MODE_CTRL4_LANE_EN_3_MASK          (0x1U << MIPI_TX_PHY_TTL_MODE_CTRL4_LANE_EN_3_SHIFT)         /* 0x00000010 */
#define MIPI_TX_PHY_TTL_MODE_CTRL4_LANE_EN_2_SHIFT         (5U)
#define MIPI_TX_PHY_TTL_MODE_CTRL4_LANE_EN_2_MASK          (0x1U << MIPI_TX_PHY_TTL_MODE_CTRL4_LANE_EN_2_SHIFT)         /* 0x00000020 */
#define MIPI_TX_PHY_TTL_MODE_CTRL4_LANE_EN_1_SHIFT         (6U)
#define MIPI_TX_PHY_TTL_MODE_CTRL4_LANE_EN_1_MASK          (0x1U << MIPI_TX_PHY_TTL_MODE_CTRL4_LANE_EN_1_SHIFT)         /* 0x00000040 */
#define MIPI_TX_PHY_TTL_MODE_CTRL4_LANE_EN_0_SHIFT         (7U)
#define MIPI_TX_PHY_TTL_MODE_CTRL4_LANE_EN_0_MASK          (0x1U << MIPI_TX_PHY_TTL_MODE_CTRL4_LANE_EN_0_SHIFT)         /* 0x00000080 */
/* TTL_MODE_CTRL5 */
#define MIPI_TX_PHY_TTL_MODE_CTRL5_OFFSET                  (0x3B0U)
#define MIPI_TX_PHY_TTL_MODE_CTRL5_DA_TTL_ZP_D0_SHIFT      (0U)
#define MIPI_TX_PHY_TTL_MODE_CTRL5_DA_TTL_ZP_D0_MASK       (0xFU << MIPI_TX_PHY_TTL_MODE_CTRL5_DA_TTL_ZP_D0_SHIFT)      /* 0x0000000F */
#define MIPI_TX_PHY_TTL_MODE_CTRL5_DA_TTL_ZN_D0_SHIFT      (4U)
#define MIPI_TX_PHY_TTL_MODE_CTRL5_DA_TTL_ZN_D0_MASK       (0xFU << MIPI_TX_PHY_TTL_MODE_CTRL5_DA_TTL_ZN_D0_SHIFT)      /* 0x000000F0 */
/* TTL_MODE_CTRL6 */
#define MIPI_TX_PHY_TTL_MODE_CTRL6_OFFSET                  (0x3B4U)
#define MIPI_TX_PHY_TTL_MODE_CTRL6_DA_TTL_ZP_D1_SHIFT      (0U)
#define MIPI_TX_PHY_TTL_MODE_CTRL6_DA_TTL_ZP_D1_MASK       (0xFU << MIPI_TX_PHY_TTL_MODE_CTRL6_DA_TTL_ZP_D1_SHIFT)      /* 0x0000000F */
#define MIPI_TX_PHY_TTL_MODE_CTRL6_DA_TTL_ZN_D1_SHIFT      (4U)
#define MIPI_TX_PHY_TTL_MODE_CTRL6_DA_TTL_ZN_D1_MASK       (0xFU << MIPI_TX_PHY_TTL_MODE_CTRL6_DA_TTL_ZN_D1_SHIFT)      /* 0x000000F0 */
/*****************************************CRYPTO*****************************************/
/* CLK_CTL */
#define CRYPTO_CLK_CTL_OFFSET                              (0x0U)
#define CRYPTO_CLK_CTL_AUTO_CLKGATE_EN_SHIFT               (0U)
#define CRYPTO_CLK_CTL_AUTO_CLKGATE_EN_MASK                (0x1U << CRYPTO_CLK_CTL_AUTO_CLKGATE_EN_SHIFT)               /* 0x00000001 */
/* RST_CTL */
#define CRYPTO_RST_CTL_OFFSET                              (0x4U)
#define CRYPTO_RST_CTL_SW_CC_RESET_SHIFT                   (0U)
#define CRYPTO_RST_CTL_SW_CC_RESET_MASK                    (0x1U << CRYPTO_RST_CTL_SW_CC_RESET_SHIFT)                   /* 0x00000001 */
#define CRYPTO_RST_CTL_SW_PKA_RESET_SHIFT                  (2U)
#define CRYPTO_RST_CTL_SW_PKA_RESET_MASK                   (0x1U << CRYPTO_RST_CTL_SW_PKA_RESET_SHIFT)                  /* 0x00000004 */
/* DMA_INT_EN */
#define CRYPTO_DMA_INT_EN_OFFSET                           (0x8U)
#define CRYPTO_DMA_INT_EN_LIST_DONE_INT_EN_SHIFT           (0U)
#define CRYPTO_DMA_INT_EN_LIST_DONE_INT_EN_MASK            (0x1U << CRYPTO_DMA_INT_EN_LIST_DONE_INT_EN_SHIFT)           /* 0x00000001 */
#define CRYPTO_DMA_INT_EN_DST_ITEM_DONE_INT_EN_SHIFT       (1U)
#define CRYPTO_DMA_INT_EN_DST_ITEM_DONE_INT_EN_MASK        (0x1U << CRYPTO_DMA_INT_EN_DST_ITEM_DONE_INT_EN_SHIFT)       /* 0x00000002 */
#define CRYPTO_DMA_INT_EN_SRC_ITEM_DONE_INT_EN_SHIFT       (2U)
#define CRYPTO_DMA_INT_EN_SRC_ITEM_DONE_INT_EN_MASK        (0x1U << CRYPTO_DMA_INT_EN_SRC_ITEM_DONE_INT_EN_SHIFT)       /* 0x00000004 */
#define CRYPTO_DMA_INT_EN_DST_ERR_INT_EN_SHIFT             (3U)
#define CRYPTO_DMA_INT_EN_DST_ERR_INT_EN_MASK              (0x1U << CRYPTO_DMA_INT_EN_DST_ERR_INT_EN_SHIFT)             /* 0x00000008 */
#define CRYPTO_DMA_INT_EN_SRC_ERR_INT_EN_SHIFT             (4U)
#define CRYPTO_DMA_INT_EN_SRC_ERR_INT_EN_MASK              (0x1U << CRYPTO_DMA_INT_EN_SRC_ERR_INT_EN_SHIFT)             /* 0x00000010 */
#define CRYPTO_DMA_INT_EN_LIST_ERR_INT_EN_SHIFT            (5U)
#define CRYPTO_DMA_INT_EN_LIST_ERR_INT_EN_MASK             (0x1U << CRYPTO_DMA_INT_EN_LIST_ERR_INT_EN_SHIFT)            /* 0x00000020 */
#define CRYPTO_DMA_INT_EN_ZERO_LEN_INT_EN_SHIFT            (6U)
#define CRYPTO_DMA_INT_EN_ZERO_LEN_INT_EN_MASK             (0x1U << CRYPTO_DMA_INT_EN_ZERO_LEN_INT_EN_SHIFT)            /* 0x00000040 */
#define CRYPTO_DMA_INT_EN_LOCKSTEP_INT_EN_SHIFT            (7U)
#define CRYPTO_DMA_INT_EN_LOCKSTEP_INT_EN_MASK             (0x1U << CRYPTO_DMA_INT_EN_LOCKSTEP_INT_EN_SHIFT)            /* 0x00000080 */
#define CRYPTO_DMA_INT_EN_UNEQUAL_LEN_INT_EN_SHIFT         (9U)
#define CRYPTO_DMA_INT_EN_UNEQUAL_LEN_INT_EN_MASK          (0x1U << CRYPTO_DMA_INT_EN_UNEQUAL_LEN_INT_EN_SHIFT)         /* 0x00000200 */
/* DMA_INT_ST */
#define CRYPTO_DMA_INT_ST_OFFSET                           (0xCU)
#define CRYPTO_DMA_INT_ST_LIST_DONE_SHIFT                  (0U)
#define CRYPTO_DMA_INT_ST_LIST_DONE_MASK                   (0x1U << CRYPTO_DMA_INT_ST_LIST_DONE_SHIFT)                  /* 0x00000001 */
#define CRYPTO_DMA_INT_ST_DST_ITEM_DONE_SHIFT              (1U)
#define CRYPTO_DMA_INT_ST_DST_ITEM_DONE_MASK               (0x1U << CRYPTO_DMA_INT_ST_DST_ITEM_DONE_SHIFT)              /* 0x00000002 */
#define CRYPTO_DMA_INT_ST_SRC_ITEM_DONE_SHIFT              (2U)
#define CRYPTO_DMA_INT_ST_SRC_ITEM_DONE_MASK               (0x1U << CRYPTO_DMA_INT_ST_SRC_ITEM_DONE_SHIFT)              /* 0x00000004 */
#define CRYPTO_DMA_INT_ST_DST_ERR_SHIFT                    (3U)
#define CRYPTO_DMA_INT_ST_DST_ERR_MASK                     (0x1U << CRYPTO_DMA_INT_ST_DST_ERR_SHIFT)                    /* 0x00000008 */
#define CRYPTO_DMA_INT_ST_SRC_ERR_SHIFT                    (4U)
#define CRYPTO_DMA_INT_ST_SRC_ERR_MASK                     (0x1U << CRYPTO_DMA_INT_ST_SRC_ERR_SHIFT)                    /* 0x00000010 */
#define CRYPTO_DMA_INT_ST_LIST_ERR_SHIFT                   (5U)
#define CRYPTO_DMA_INT_ST_LIST_ERR_MASK                    (0x1U << CRYPTO_DMA_INT_ST_LIST_ERR_SHIFT)                   /* 0x00000020 */
#define CRYPTO_DMA_INT_ST_ZERO_LEN_SHIFT                   (6U)
#define CRYPTO_DMA_INT_ST_ZERO_LEN_MASK                    (0x1U << CRYPTO_DMA_INT_ST_ZERO_LEN_SHIFT)                   /* 0x00000040 */
#define CRYPTO_DMA_INT_ST_LOCKSTEP_FLAG_SHIFT              (7U)
#define CRYPTO_DMA_INT_ST_LOCKSTEP_FLAG_MASK               (0x1U << CRYPTO_DMA_INT_ST_LOCKSTEP_FLAG_SHIFT)              /* 0x00000080 */
#define CRYPTO_DMA_INT_ST_UNEQUAL_LEN_SHIFT                (9U)
#define CRYPTO_DMA_INT_ST_UNEQUAL_LEN_MASK                 (0x1U << CRYPTO_DMA_INT_ST_UNEQUAL_LEN_SHIFT)                /* 0x00000200 */
/* DMA_CTL */
#define CRYPTO_DMA_CTL_OFFSET                              (0x10U)
#define CRYPTO_DMA_CTL_DMA_START_SHIFT                     (0U)
#define CRYPTO_DMA_CTL_DMA_START_MASK                      (0x1U << CRYPTO_DMA_CTL_DMA_START_SHIFT)                     /* 0x00000001 */
#define CRYPTO_DMA_CTL_DMA_RESTART_SHIFT                   (1U)
#define CRYPTO_DMA_CTL_DMA_RESTART_MASK                    (0x1U << CRYPTO_DMA_CTL_DMA_RESTART_SHIFT)                   /* 0x00000002 */
/* DMA_LLI_ADDR */
#define CRYPTO_DMA_LLI_ADDR_OFFSET                         (0x14U)
#define CRYPTO_DMA_LLI_ADDR_DMA_LLI_ADDR_SHIFT             (0U)
#define CRYPTO_DMA_LLI_ADDR_DMA_LLI_ADDR_MASK              (0xFFFFFFFFU << CRYPTO_DMA_LLI_ADDR_DMA_LLI_ADDR_SHIFT)      /* 0xFFFFFFFF */
/* DMA_ST */
#define CRYPTO_DMA_ST_OFFSET                               (0x18U)
#define CRYPTO_DMA_ST                                      (0x0U)
#define CRYPTO_DMA_ST_DMA_BUSY_SHIFT                       (0U)
#define CRYPTO_DMA_ST_DMA_BUSY_MASK                        (0x1U << CRYPTO_DMA_ST_DMA_BUSY_SHIFT)                       /* 0x00000001 */
/* DMA_STATE */
#define CRYPTO_DMA_STATE_OFFSET                            (0x1CU)
#define CRYPTO_DMA_STATE                                   (0x0U)
#define CRYPTO_DMA_STATE_DMA_DST_STATE_SHIFT               (0U)
#define CRYPTO_DMA_STATE_DMA_DST_STATE_MASK                (0x3U << CRYPTO_DMA_STATE_DMA_DST_STATE_SHIFT)               /* 0x00000003 */
#define CRYPTO_DMA_STATE_DMA_SRC_STATE_SHIFT               (2U)
#define CRYPTO_DMA_STATE_DMA_SRC_STATE_MASK                (0x3U << CRYPTO_DMA_STATE_DMA_SRC_STATE_SHIFT)               /* 0x0000000C */
#define CRYPTO_DMA_STATE_DMA_LLI_STATE_SHIFT               (4U)
#define CRYPTO_DMA_STATE_DMA_LLI_STATE_MASK                (0x3U << CRYPTO_DMA_STATE_DMA_LLI_STATE_SHIFT)               /* 0x00000030 */
/* DMA_LLI_RADDR */
#define CRYPTO_DMA_LLI_RADDR_OFFSET                        (0x20U)
#define CRYPTO_DMA_LLI_RADDR                               (0x0U)
#define CRYPTO_DMA_LLI_RADDR_DMA_LLI_RADDR_SHIFT           (0U)
#define CRYPTO_DMA_LLI_RADDR_DMA_LLI_RADDR_MASK            (0xFFFFFFFFU << CRYPTO_DMA_LLI_RADDR_DMA_LLI_RADDR_SHIFT)    /* 0xFFFFFFFF */
/* DMA_SRC_RADDR */
#define CRYPTO_DMA_SRC_RADDR_OFFSET                        (0x24U)
#define CRYPTO_DMA_SRC_RADDR                               (0x0U)
#define CRYPTO_DMA_SRC_RADDR_DMA_SRC_RADDR_SHIFT           (0U)
#define CRYPTO_DMA_SRC_RADDR_DMA_SRC_RADDR_MASK            (0xFFFFFFFFU << CRYPTO_DMA_SRC_RADDR_DMA_SRC_RADDR_SHIFT)    /* 0xFFFFFFFF */
/* DMA_DST_WADDR */
#define CRYPTO_DMA_DST_WADDR_OFFSET                        (0x28U)
#define CRYPTO_DMA_DST_WADDR                               (0x0U)
#define CRYPTO_DMA_DST_WADDR_DMA_DST_WADDR_SHIFT           (0U)
#define CRYPTO_DMA_DST_WADDR_DMA_DST_WADDR_MASK            (0xFFFFFFFFU << CRYPTO_DMA_DST_WADDR_DMA_DST_WADDR_SHIFT)    /* 0xFFFFFFFF */
/* DMA_ITEM_ID */
#define CRYPTO_DMA_ITEM_ID_OFFSET                          (0x2CU)
#define CRYPTO_DMA_ITEM_ID                                 (0x0U)
#define CRYPTO_DMA_ITEM_ID_DMA_ITEM_ID_SHIFT               (0U)
#define CRYPTO_DMA_ITEM_ID_DMA_ITEM_ID_MASK                (0xFFU << CRYPTO_DMA_ITEM_ID_DMA_ITEM_ID_SHIFT)              /* 0x000000FF */
/* FIFO_CTL */
#define CRYPTO_FIFO_CTL_OFFSET                             (0x40U)
#define CRYPTO_FIFO_CTL_DIN_BYTESWAP_SHIFT                 (0U)
#define CRYPTO_FIFO_CTL_DIN_BYTESWAP_MASK                  (0x1U << CRYPTO_FIFO_CTL_DIN_BYTESWAP_SHIFT)                 /* 0x00000001 */
#define CRYPTO_FIFO_CTL_DOUT_BYTESWAP_SHIFT                (1U)
#define CRYPTO_FIFO_CTL_DOUT_BYTESWAP_MASK                 (0x1U << CRYPTO_FIFO_CTL_DOUT_BYTESWAP_SHIFT)                /* 0x00000002 */
/* BC_CTL */
#define CRYPTO_BC_CTL_OFFSET                               (0x44U)
#define CRYPTO_BC_CTL_BC_ENABLE_SHIFT                      (0U)
#define CRYPTO_BC_CTL_BC_ENABLE_MASK                       (0x1U << CRYPTO_BC_CTL_BC_ENABLE_SHIFT)                      /* 0x00000001 */
#define CRYPTO_BC_CTL_DECRYPT_SHIFT                        (1U)
#define CRYPTO_BC_CTL_DECRYPT_MASK                         (0x1U << CRYPTO_BC_CTL_DECRYPT_SHIFT)                        /* 0x00000002 */
#define CRYPTO_BC_CTL_KEY_SIZE_SHIFT                       (2U)
#define CRYPTO_BC_CTL_KEY_SIZE_MASK                        (0x3U << CRYPTO_BC_CTL_KEY_SIZE_SHIFT)                       /* 0x0000000C */
#define CRYPTO_BC_CTL_MODE_SHIFT                           (4U)
#define CRYPTO_BC_CTL_MODE_MASK                            (0xFU << CRYPTO_BC_CTL_MODE_SHIFT)                           /* 0x000000F0 */
#define CRYPTO_BC_CTL_BC_CIPHER_SEL_SHIFT                  (8U)
#define CRYPTO_BC_CTL_BC_CIPHER_SEL_MASK                   (0x3U << CRYPTO_BC_CTL_BC_CIPHER_SEL_SHIFT)                  /* 0x00000300 */
/* HASH_CTL */
#define CRYPTO_HASH_CTL_OFFSET                             (0x48U)
#define CRYPTO_HASH_CTL_HASH_ENABLE_SHIFT                  (0U)
#define CRYPTO_HASH_CTL_HASH_ENABLE_MASK                   (0x1U << CRYPTO_HASH_CTL_HASH_ENABLE_SHIFT)                  /* 0x00000001 */
#define CRYPTO_HASH_CTL_HASH_SRC_SEL_SHIFT                 (1U)
#define CRYPTO_HASH_CTL_HASH_SRC_SEL_MASK                  (0x1U << CRYPTO_HASH_CTL_HASH_SRC_SEL_SHIFT)                 /* 0x00000002 */
#define CRYPTO_HASH_CTL_HW_PAD_ENABLE_SHIFT                (2U)
#define CRYPTO_HASH_CTL_HW_PAD_ENABLE_MASK                 (0x1U << CRYPTO_HASH_CTL_HW_PAD_ENABLE_SHIFT)                /* 0x00000004 */
#define CRYPTO_HASH_CTL_HMAC_ENABLE_SHIFT                  (3U)
#define CRYPTO_HASH_CTL_HMAC_ENABLE_MASK                   (0x1U << CRYPTO_HASH_CTL_HMAC_ENABLE_SHIFT)                  /* 0x00000008 */
#define CRYPTO_HASH_CTL_HASH_CIPHER_SEL_SHIFT              (4U)
#define CRYPTO_HASH_CTL_HASH_CIPHER_SEL_MASK               (0xFU << CRYPTO_HASH_CTL_HASH_CIPHER_SEL_SHIFT)              /* 0x000000F0 */
/* CIPHER_ST */
#define CRYPTO_CIPHER_ST_OFFSET                            (0x4CU)
#define CRYPTO_CIPHER_ST                                   (0x0U)
#define CRYPTO_CIPHER_ST_BLOCK_CIPHER_BUSY_SHIFT           (0U)
#define CRYPTO_CIPHER_ST_BLOCK_CIPHER_BUSY_MASK            (0x1U << CRYPTO_CIPHER_ST_BLOCK_CIPHER_BUSY_SHIFT)           /* 0x00000001 */
#define CRYPTO_CIPHER_ST_HASH_BUSY_SHIFT                   (1U)
#define CRYPTO_CIPHER_ST_HASH_BUSY_MASK                    (0x1U << CRYPTO_CIPHER_ST_HASH_BUSY_SHIFT)                   /* 0x00000002 */
/* CIPHER_STATE */
#define CRYPTO_CIPHER_STATE_OFFSET                         (0x50U)
#define CRYPTO_CIPHER_STATE                                (0x400U)
#define CRYPTO_CIPHER_STATE_SERIAL_STATE_SHIFT             (0U)
#define CRYPTO_CIPHER_STATE_SERIAL_STATE_MASK              (0x3U << CRYPTO_CIPHER_STATE_SERIAL_STATE_SHIFT)             /* 0x00000003 */
#define CRYPTO_CIPHER_STATE_MAC_STATE_SHIFT                (2U)
#define CRYPTO_CIPHER_STATE_MAC_STATE_MASK                 (0x3U << CRYPTO_CIPHER_STATE_MAC_STATE_SHIFT)                /* 0x0000000C */
#define CRYPTO_CIPHER_STATE_PARALLEL_STATE_SHIFT           (4U)
#define CRYPTO_CIPHER_STATE_PARALLEL_STATE_MASK            (0x3U << CRYPTO_CIPHER_STATE_PARALLEL_STATE_SHIFT)           /* 0x00000030 */
#define CRYPTO_CIPHER_STATE_CCM_STATE_SHIFT                (6U)
#define CRYPTO_CIPHER_STATE_CCM_STATE_MASK                 (0x3U << CRYPTO_CIPHER_STATE_CCM_STATE_SHIFT)                /* 0x000000C0 */
#define CRYPTO_CIPHER_STATE_GCM_STATE_SHIFT                (8U)
#define CRYPTO_CIPHER_STATE_GCM_STATE_MASK                 (0x3U << CRYPTO_CIPHER_STATE_GCM_STATE_SHIFT)                /* 0x00000300 */
#define CRYPTO_CIPHER_STATE_HASH_STATE_SHIFT               (10U)
#define CRYPTO_CIPHER_STATE_HASH_STATE_MASK                (0x1FU << CRYPTO_CIPHER_STATE_HASH_STATE_SHIFT)              /* 0x00007C00 */
/* BC_MID_IV_0 */
#define CRYPTO_BC_MID_IV_0_OFFSET                          (0x60U)
#define CRYPTO_BC_MID_IV_0_BC_MID_IV_0_SHIFT               (0U)
#define CRYPTO_BC_MID_IV_0_BC_MID_IV_0_MASK                (0xFFFFFFFFU << CRYPTO_BC_MID_IV_0_BC_MID_IV_0_SHIFT)        /* 0xFFFFFFFF */
/* BC_MID_IV_1 */
#define CRYPTO_BC_MID_IV_1_OFFSET                          (0x64U)
#define CRYPTO_BC_MID_IV_1_BC_MID_IV_1_SHIFT               (0U)
#define CRYPTO_BC_MID_IV_1_BC_MID_IV_1_MASK                (0xFFFFFFFFU << CRYPTO_BC_MID_IV_1_BC_MID_IV_1_SHIFT)        /* 0xFFFFFFFF */
/* BC_MID_IV_2 */
#define CRYPTO_BC_MID_IV_2_OFFSET                          (0x68U)
#define CRYPTO_BC_MID_IV_2_BC_MID_IV_2_SHIFT               (0U)
#define CRYPTO_BC_MID_IV_2_BC_MID_IV_2_MASK                (0xFFFFFFFFU << CRYPTO_BC_MID_IV_2_BC_MID_IV_2_SHIFT)        /* 0xFFFFFFFF */
/* BC_MID_IV_3 */
#define CRYPTO_BC_MID_IV_3_OFFSET                          (0x6CU)
#define CRYPTO_BC_MID_IV_3_BC_MID_IV_3_SHIFT               (0U)
#define CRYPTO_BC_MID_IV_3_BC_MID_IV_3_MASK                (0xFFFFFFFFU << CRYPTO_BC_MID_IV_3_BC_MID_IV_3_SHIFT)        /* 0xFFFFFFFF */
/* BC_MID_IV_4 */
#define CRYPTO_BC_MID_IV_4_OFFSET                          (0x70U)
#define CRYPTO_BC_MID_IV_4_BC_MID_IV_4_SHIFT               (0U)
#define CRYPTO_BC_MID_IV_4_BC_MID_IV_4_MASK                (0xFFFFFFFFU << CRYPTO_BC_MID_IV_4_BC_MID_IV_4_SHIFT)        /* 0xFFFFFFFF */
/* BC_MID_IV_5 */
#define CRYPTO_BC_MID_IV_5_OFFSET                          (0x74U)
#define CRYPTO_BC_MID_IV_5_BC_MID_IV_5_SHIFT               (0U)
#define CRYPTO_BC_MID_IV_5_BC_MID_IV_5_MASK                (0xFFFFFFFFU << CRYPTO_BC_MID_IV_5_BC_MID_IV_5_SHIFT)        /* 0xFFFFFFFF */
/* CH0_IV_0 */
#define CRYPTO_CH0_IV_0_OFFSET                             (0x100U)
#define CRYPTO_CH0_IV_0_CH0_IV_0_SHIFT                     (0U)
#define CRYPTO_CH0_IV_0_CH0_IV_0_MASK                      (0xFFFFFFFFU << CRYPTO_CH0_IV_0_CH0_IV_0_SHIFT)              /* 0xFFFFFFFF */
/* CH0_IV_1 */
#define CRYPTO_CH0_IV_1_OFFSET                             (0x104U)
#define CRYPTO_CH0_IV_1_CH0_IV_1_SHIFT                     (0U)
#define CRYPTO_CH0_IV_1_CH0_IV_1_MASK                      (0xFFFFFFFFU << CRYPTO_CH0_IV_1_CH0_IV_1_SHIFT)              /* 0xFFFFFFFF */
/* CH0_IV_2 */
#define CRYPTO_CH0_IV_2_OFFSET                             (0x108U)
#define CRYPTO_CH0_IV_2_CH0_IV_2_SHIFT                     (0U)
#define CRYPTO_CH0_IV_2_CH0_IV_2_MASK                      (0xFFFFFFFFU << CRYPTO_CH0_IV_2_CH0_IV_2_SHIFT)              /* 0xFFFFFFFF */
/* CH0_IV_3 */
#define CRYPTO_CH0_IV_3_OFFSET                             (0x10CU)
#define CRYPTO_CH0_IV_3_CH0_IV_3_SHIFT                     (0U)
#define CRYPTO_CH0_IV_3_CH0_IV_3_MASK                      (0xFFFFFFFFU << CRYPTO_CH0_IV_3_CH0_IV_3_SHIFT)              /* 0xFFFFFFFF */
/* CH0_KEY_0 */
#define CRYPTO_CH0_KEY_0_OFFSET                            (0x180U)
#define CRYPTO_CH0_KEY_0_CH0_KEY_0_SHIFT                   (0U)
#define CRYPTO_CH0_KEY_0_CH0_KEY_0_MASK                    (0xFFFFFFFFU << CRYPTO_CH0_KEY_0_CH0_KEY_0_SHIFT)            /* 0xFFFFFFFF */
/* CH0_KEY_1 */
#define CRYPTO_CH0_KEY_1_OFFSET                            (0x184U)
#define CRYPTO_CH0_KEY_1_CH0_KEY_1_SHIFT                   (0U)
#define CRYPTO_CH0_KEY_1_CH0_KEY_1_MASK                    (0xFFFFFFFFU << CRYPTO_CH0_KEY_1_CH0_KEY_1_SHIFT)            /* 0xFFFFFFFF */
/* CH0_KEY_2 */
#define CRYPTO_CH0_KEY_2_OFFSET                            (0x188U)
#define CRYPTO_CH0_KEY_2_CH0_KEY_2_SHIFT                   (0U)
#define CRYPTO_CH0_KEY_2_CH0_KEY_2_MASK                    (0xFFFFFFFFU << CRYPTO_CH0_KEY_2_CH0_KEY_2_SHIFT)            /* 0xFFFFFFFF */
/* CH0_KEY_3 */
#define CRYPTO_CH0_KEY_3_OFFSET                            (0x18CU)
#define CRYPTO_CH0_KEY_3_CH0_KEY_3_SHIFT                   (0U)
#define CRYPTO_CH0_KEY_3_CH0_KEY_3_MASK                    (0xFFFFFFFFU << CRYPTO_CH0_KEY_3_CH0_KEY_3_SHIFT)            /* 0xFFFFFFFF */
/* CH1_KEY_0 */
#define CRYPTO_CH1_KEY_0_OFFSET                            (0x190U)
#define CRYPTO_CH1_KEY_0_CH1_KEY_0_SHIFT                   (0U)
#define CRYPTO_CH1_KEY_0_CH1_KEY_0_MASK                    (0xFFFFFFFFU << CRYPTO_CH1_KEY_0_CH1_KEY_0_SHIFT)            /* 0xFFFFFFFF */
/* CH1_KEY_1 */
#define CRYPTO_CH1_KEY_1_OFFSET                            (0x194U)
#define CRYPTO_CH1_KEY_1_CH1_KEY_1_SHIFT                   (0U)
#define CRYPTO_CH1_KEY_1_CH1_KEY_1_MASK                    (0xFFFFFFFFU << CRYPTO_CH1_KEY_1_CH1_KEY_1_SHIFT)            /* 0xFFFFFFFF */
/* CH1_KEY_2 */
#define CRYPTO_CH1_KEY_2_OFFSET                            (0x198U)
#define CRYPTO_CH1_KEY_2_CH1_KEY_2_SHIFT                   (0U)
#define CRYPTO_CH1_KEY_2_CH1_KEY_2_MASK                    (0xFFFFFFFFU << CRYPTO_CH1_KEY_2_CH1_KEY_2_SHIFT)            /* 0xFFFFFFFF */
/* CH1_KEY_3 */
#define CRYPTO_CH1_KEY_3_OFFSET                            (0x19CU)
#define CRYPTO_CH1_KEY_3_CH1_KEY_3_SHIFT                   (0U)
#define CRYPTO_CH1_KEY_3_CH1_KEY_3_MASK                    (0xFFFFFFFFU << CRYPTO_CH1_KEY_3_CH1_KEY_3_SHIFT)            /* 0xFFFFFFFF */
/* CH2_KEY_0 */
#define CRYPTO_CH2_KEY_0_OFFSET                            (0x1A0U)
#define CRYPTO_CH2_KEY_0_CH2_KEY_0_SHIFT                   (0U)
#define CRYPTO_CH2_KEY_0_CH2_KEY_0_MASK                    (0xFFFFFFFFU << CRYPTO_CH2_KEY_0_CH2_KEY_0_SHIFT)            /* 0xFFFFFFFF */
/* CH2_KEY_1 */
#define CRYPTO_CH2_KEY_1_OFFSET                            (0x1A4U)
#define CRYPTO_CH2_KEY_1_CH2_KEY_1_SHIFT                   (0U)
#define CRYPTO_CH2_KEY_1_CH2_KEY_1_MASK                    (0xFFFFFFFFU << CRYPTO_CH2_KEY_1_CH2_KEY_1_SHIFT)            /* 0xFFFFFFFF */
/* CH2_KEY_2 */
#define CRYPTO_CH2_KEY_2_OFFSET                            (0x1A8U)
#define CRYPTO_CH2_KEY_2_CH2_KEY_2_SHIFT                   (0U)
#define CRYPTO_CH2_KEY_2_CH2_KEY_2_MASK                    (0xFFFFFFFFU << CRYPTO_CH2_KEY_2_CH2_KEY_2_SHIFT)            /* 0xFFFFFFFF */
/* CH2_KEY_3 */
#define CRYPTO_CH2_KEY_3_OFFSET                            (0x1ACU)
#define CRYPTO_CH2_KEY_3_CH2_KEY_3_SHIFT                   (0U)
#define CRYPTO_CH2_KEY_3_CH2_KEY_3_MASK                    (0xFFFFFFFFU << CRYPTO_CH2_KEY_3_CH2_KEY_3_SHIFT)            /* 0xFFFFFFFF */
/* CH3_KEY_0 */
#define CRYPTO_CH3_KEY_0_OFFSET                            (0x1B0U)
#define CRYPTO_CH3_KEY_0_CH3_KEY_0_SHIFT                   (0U)
#define CRYPTO_CH3_KEY_0_CH3_KEY_0_MASK                    (0xFFFFFFFFU << CRYPTO_CH3_KEY_0_CH3_KEY_0_SHIFT)            /* 0xFFFFFFFF */
/* CH3_KEY_1 */
#define CRYPTO_CH3_KEY_1_OFFSET                            (0x1B4U)
#define CRYPTO_CH3_KEY_1_CH3_KEY_1_SHIFT                   (0U)
#define CRYPTO_CH3_KEY_1_CH3_KEY_1_MASK                    (0xFFFFFFFFU << CRYPTO_CH3_KEY_1_CH3_KEY_1_SHIFT)            /* 0xFFFFFFFF */
/* CH3_KEY_2 */
#define CRYPTO_CH3_KEY_2_OFFSET                            (0x1B8U)
#define CRYPTO_CH3_KEY_2_CH3_KEY_2_SHIFT                   (0U)
#define CRYPTO_CH3_KEY_2_CH3_KEY_2_MASK                    (0xFFFFFFFFU << CRYPTO_CH3_KEY_2_CH3_KEY_2_SHIFT)            /* 0xFFFFFFFF */
/* CH3_KEY_3 */
#define CRYPTO_CH3_KEY_3_OFFSET                            (0x1BCU)
#define CRYPTO_CH3_KEY_3_CH3_KEY_3_SHIFT                   (0U)
#define CRYPTO_CH3_KEY_3_CH3_KEY_3_MASK                    (0xFFFFFFFFU << CRYPTO_CH3_KEY_3_CH3_KEY_3_SHIFT)            /* 0xFFFFFFFF */
/* CH4_KEY_0 */
#define CRYPTO_CH4_KEY_0_OFFSET                            (0x1C0U)
#define CRYPTO_CH4_KEY_0_CH4_KEY_0_SHIFT                   (0U)
#define CRYPTO_CH4_KEY_0_CH4_KEY_0_MASK                    (0xFFFFFFFFU << CRYPTO_CH4_KEY_0_CH4_KEY_0_SHIFT)            /* 0xFFFFFFFF */
/* CH4_KEY_1 */
#define CRYPTO_CH4_KEY_1_OFFSET                            (0x1C4U)
#define CRYPTO_CH4_KEY_1_CH4_KEY_1_SHIFT                   (0U)
#define CRYPTO_CH4_KEY_1_CH4_KEY_1_MASK                    (0xFFFFFFFFU << CRYPTO_CH4_KEY_1_CH4_KEY_1_SHIFT)            /* 0xFFFFFFFF */
/* CH4_KEY_2 */
#define CRYPTO_CH4_KEY_2_OFFSET                            (0x1C8U)
#define CRYPTO_CH4_KEY_2_CH4_KEY_2_SHIFT                   (0U)
#define CRYPTO_CH4_KEY_2_CH4_KEY_2_MASK                    (0xFFFFFFFFU << CRYPTO_CH4_KEY_2_CH4_KEY_2_SHIFT)            /* 0xFFFFFFFF */
/* CH4_KEY_3 */
#define CRYPTO_CH4_KEY_3_OFFSET                            (0x1CCU)
#define CRYPTO_CH4_KEY_3_CH4_KEY_3_SHIFT                   (0U)
#define CRYPTO_CH4_KEY_3_CH4_KEY_3_MASK                    (0xFFFFFFFFU << CRYPTO_CH4_KEY_3_CH4_KEY_3_SHIFT)            /* 0xFFFFFFFF */
/* CH5_KEY_0 */
#define CRYPTO_CH5_KEY_0_OFFSET                            (0x1D0U)
#define CRYPTO_CH5_KEY_0_CH5_KEY_0_SHIFT                   (0U)
#define CRYPTO_CH5_KEY_0_CH5_KEY_0_MASK                    (0xFFFFFFFFU << CRYPTO_CH5_KEY_0_CH5_KEY_0_SHIFT)            /* 0xFFFFFFFF */
/* CH5_KEY_1 */
#define CRYPTO_CH5_KEY_1_OFFSET                            (0x1D4U)
#define CRYPTO_CH5_KEY_1_CH5_KEY_1_SHIFT                   (0U)
#define CRYPTO_CH5_KEY_1_CH5_KEY_1_MASK                    (0xFFFFFFFFU << CRYPTO_CH5_KEY_1_CH5_KEY_1_SHIFT)            /* 0xFFFFFFFF */
/* CH5_KEY_2 */
#define CRYPTO_CH5_KEY_2_OFFSET                            (0x1D8U)
#define CRYPTO_CH5_KEY_2_CH5_KEY_2_SHIFT                   (0U)
#define CRYPTO_CH5_KEY_2_CH5_KEY_2_MASK                    (0xFFFFFFFFU << CRYPTO_CH5_KEY_2_CH5_KEY_2_SHIFT)            /* 0xFFFFFFFF */
/* CH5_KEY_3 */
#define CRYPTO_CH5_KEY_3_OFFSET                            (0x1DCU)
#define CRYPTO_CH5_KEY_3_CH5_KEY_3_SHIFT                   (0U)
#define CRYPTO_CH5_KEY_3_CH5_KEY_3_MASK                    (0xFFFFFFFFU << CRYPTO_CH5_KEY_3_CH5_KEY_3_SHIFT)            /* 0xFFFFFFFF */
/* CH6_KEY_0 */
#define CRYPTO_CH6_KEY_0_OFFSET                            (0x1E0U)
#define CRYPTO_CH6_KEY_0_CH6_KEY_0_SHIFT                   (0U)
#define CRYPTO_CH6_KEY_0_CH6_KEY_0_MASK                    (0xFFFFFFFFU << CRYPTO_CH6_KEY_0_CH6_KEY_0_SHIFT)            /* 0xFFFFFFFF */
/* CH6_KEY_1 */
#define CRYPTO_CH6_KEY_1_OFFSET                            (0x1E4U)
#define CRYPTO_CH6_KEY_1_CH6_KEY_1_SHIFT                   (0U)
#define CRYPTO_CH6_KEY_1_CH6_KEY_1_MASK                    (0xFFFFFFFFU << CRYPTO_CH6_KEY_1_CH6_KEY_1_SHIFT)            /* 0xFFFFFFFF */
/* CH6_KEY_2 */
#define CRYPTO_CH6_KEY_2_OFFSET                            (0x1E8U)
#define CRYPTO_CH6_KEY_2_CH6_KEY_2_SHIFT                   (0U)
#define CRYPTO_CH6_KEY_2_CH6_KEY_2_MASK                    (0xFFFFFFFFU << CRYPTO_CH6_KEY_2_CH6_KEY_2_SHIFT)            /* 0xFFFFFFFF */
/* CH6_KEY_3 */
#define CRYPTO_CH6_KEY_3_OFFSET                            (0x1ECU)
#define CRYPTO_CH6_KEY_3_CH6_KEY_3_SHIFT                   (0U)
#define CRYPTO_CH6_KEY_3_CH6_KEY_3_MASK                    (0xFFFFFFFFU << CRYPTO_CH6_KEY_3_CH6_KEY_3_SHIFT)            /* 0xFFFFFFFF */
/* CH7_KEY_0 */
#define CRYPTO_CH7_KEY_0_OFFSET                            (0x1F0U)
#define CRYPTO_CH7_KEY_0_CH7_KEY_0_SHIFT                   (0U)
#define CRYPTO_CH7_KEY_0_CH7_KEY_0_MASK                    (0xFFFFFFFFU << CRYPTO_CH7_KEY_0_CH7_KEY_0_SHIFT)            /* 0xFFFFFFFF */
/* CH7_KEY_1 */
#define CRYPTO_CH7_KEY_1_OFFSET                            (0x1F4U)
#define CRYPTO_CH7_KEY_1_CH7_KEY_1_SHIFT                   (0U)
#define CRYPTO_CH7_KEY_1_CH7_KEY_1_MASK                    (0xFFFFFFFFU << CRYPTO_CH7_KEY_1_CH7_KEY_1_SHIFT)            /* 0xFFFFFFFF */
/* CH7_KEY_2 */
#define CRYPTO_CH7_KEY_2_OFFSET                            (0x1F8U)
#define CRYPTO_CH7_KEY_2_CH7_KEY_2_SHIFT                   (0U)
#define CRYPTO_CH7_KEY_2_CH7_KEY_2_MASK                    (0xFFFFFFFFU << CRYPTO_CH7_KEY_2_CH7_KEY_2_SHIFT)            /* 0xFFFFFFFF */
/* CH7_KEY_3 */
#define CRYPTO_CH7_KEY_3_OFFSET                            (0x1FCU)
#define CRYPTO_CH7_KEY_3_CH7_KEY_3_SHIFT                   (0U)
#define CRYPTO_CH7_KEY_3_CH7_KEY_3_MASK                    (0xFFFFFFFFU << CRYPTO_CH7_KEY_3_CH7_KEY_3_SHIFT)            /* 0xFFFFFFFF */
/* CH0_PC_LEN_0 */
#define CRYPTO_CH0_PC_LEN_0_OFFSET                         (0x280U)
#define CRYPTO_CH0_PC_LEN_0_CH0_PC_LEN_0_SHIFT             (0U)
#define CRYPTO_CH0_PC_LEN_0_CH0_PC_LEN_0_MASK              (0xFFFFFFFFU << CRYPTO_CH0_PC_LEN_0_CH0_PC_LEN_0_SHIFT)      /* 0xFFFFFFFF */
/* CH0_PC_LEN_1 */
#define CRYPTO_CH0_PC_LEN_1_OFFSET                         (0x284U)
#define CRYPTO_CH0_PC_LEN_1_CH0_PC_LEN_1_SHIFT             (0U)
#define CRYPTO_CH0_PC_LEN_1_CH0_PC_LEN_1_MASK              (0x1FFFFFFFU << CRYPTO_CH0_PC_LEN_1_CH0_PC_LEN_1_SHIFT)      /* 0x1FFFFFFF */
/* CH0_AAD_LEN_0 */
#define CRYPTO_CH0_AAD_LEN_0_OFFSET                        (0x2C0U)
#define CRYPTO_CH0_AAD_LEN_0_CH0_AAD_LEN_0_SHIFT           (0U)
#define CRYPTO_CH0_AAD_LEN_0_CH0_AAD_LEN_0_MASK            (0xFFFFFFFFU << CRYPTO_CH0_AAD_LEN_0_CH0_AAD_LEN_0_SHIFT)    /* 0xFFFFFFFF */
/* CH0_AAD_LEN_1 */
#define CRYPTO_CH0_AAD_LEN_1_OFFSET                        (0x2C4U)
#define CRYPTO_CH0_AAD_LEN_1_CH0_AAD_LEN_1_SHIFT           (0U)
#define CRYPTO_CH0_AAD_LEN_1_CH0_AAD_LEN_1_MASK            (0x1FFFFFFFU << CRYPTO_CH0_AAD_LEN_1_CH0_AAD_LEN_1_SHIFT)    /* 0x1FFFFFFF */
/* CH0_IV_LEN_0 */
#define CRYPTO_CH0_IV_LEN_0_OFFSET                         (0x300U)
#define CRYPTO_CH0_IV_LEN_0_CH0_IV_LEN_SHIFT               (0U)
#define CRYPTO_CH0_IV_LEN_0_CH0_IV_LEN_MASK                (0x1FU << CRYPTO_CH0_IV_LEN_0_CH0_IV_LEN_SHIFT)              /* 0x0000001F */
/* CH0_TAG_0 */
#define CRYPTO_CH0_TAG_0_OFFSET                            (0x320U)
#define CRYPTO_CH0_TAG_0                                   (0x0U)
#define CRYPTO_CH0_TAG_0_CH0_TAG_0_SHIFT                   (0U)
#define CRYPTO_CH0_TAG_0_CH0_TAG_0_MASK                    (0xFFFFFFFFU << CRYPTO_CH0_TAG_0_CH0_TAG_0_SHIFT)            /* 0xFFFFFFFF */
/* CH0_TAG_1 */
#define CRYPTO_CH0_TAG_1_OFFSET                            (0x324U)
#define CRYPTO_CH0_TAG_1                                   (0x0U)
#define CRYPTO_CH0_TAG_1_CH0_TAG_1_SHIFT                   (0U)
#define CRYPTO_CH0_TAG_1_CH0_TAG_1_MASK                    (0xFFFFFFFFU << CRYPTO_CH0_TAG_1_CH0_TAG_1_SHIFT)            /* 0xFFFFFFFF */
/* CH0_TAG_2 */
#define CRYPTO_CH0_TAG_2_OFFSET                            (0x328U)
#define CRYPTO_CH0_TAG_2                                   (0x0U)
#define CRYPTO_CH0_TAG_2_CH0_TAG_2_SHIFT                   (0U)
#define CRYPTO_CH0_TAG_2_CH0_TAG_2_MASK                    (0xFFFFFFFFU << CRYPTO_CH0_TAG_2_CH0_TAG_2_SHIFT)            /* 0xFFFFFFFF */
/* CH0_TAG_3 */
#define CRYPTO_CH0_TAG_3_OFFSET                            (0x32CU)
#define CRYPTO_CH0_TAG_3                                   (0x0U)
#define CRYPTO_CH0_TAG_3_CH0_TAG_3_SHIFT                   (0U)
#define CRYPTO_CH0_TAG_3_CH0_TAG_3_MASK                    (0xFFFFFFFFU << CRYPTO_CH0_TAG_3_CH0_TAG_3_SHIFT)            /* 0xFFFFFFFF */
/* HASH_DOUT_0 */
#define CRYPTO_HASH_DOUT_0_OFFSET                          (0x3A0U)
#define CRYPTO_HASH_DOUT_0                                 (0x0U)
#define CRYPTO_HASH_DOUT_0_HASH_DOUT_0_SHIFT               (0U)
#define CRYPTO_HASH_DOUT_0_HASH_DOUT_0_MASK                (0xFFFFFFFFU << CRYPTO_HASH_DOUT_0_HASH_DOUT_0_SHIFT)        /* 0xFFFFFFFF */
/* HASH_DOUT_1 */
#define CRYPTO_HASH_DOUT_1_OFFSET                          (0x3A4U)
#define CRYPTO_HASH_DOUT_1                                 (0x0U)
#define CRYPTO_HASH_DOUT_1_HASH_DOUT_1_SHIFT               (0U)
#define CRYPTO_HASH_DOUT_1_HASH_DOUT_1_MASK                (0xFFFFFFFFU << CRYPTO_HASH_DOUT_1_HASH_DOUT_1_SHIFT)        /* 0xFFFFFFFF */
/* HASH_DOUT_2 */
#define CRYPTO_HASH_DOUT_2_OFFSET                          (0x3A8U)
#define CRYPTO_HASH_DOUT_2                                 (0x0U)
#define CRYPTO_HASH_DOUT_2_HASH_DOUT_2_SHIFT               (0U)
#define CRYPTO_HASH_DOUT_2_HASH_DOUT_2_MASK                (0xFFFFFFFFU << CRYPTO_HASH_DOUT_2_HASH_DOUT_2_SHIFT)        /* 0xFFFFFFFF */
/* HASH_DOUT_3 */
#define CRYPTO_HASH_DOUT_3_OFFSET                          (0x3ACU)
#define CRYPTO_HASH_DOUT_3                                 (0x0U)
#define CRYPTO_HASH_DOUT_3_HASH_DOUT_3_SHIFT               (0U)
#define CRYPTO_HASH_DOUT_3_HASH_DOUT_3_MASK                (0xFFFFFFFFU << CRYPTO_HASH_DOUT_3_HASH_DOUT_3_SHIFT)        /* 0xFFFFFFFF */
/* HASH_DOUT_4 */
#define CRYPTO_HASH_DOUT_4_OFFSET                          (0x3B0U)
#define CRYPTO_HASH_DOUT_4                                 (0x0U)
#define CRYPTO_HASH_DOUT_4_HASH_DOUT_4_SHIFT               (0U)
#define CRYPTO_HASH_DOUT_4_HASH_DOUT_4_MASK                (0xFFFFFFFFU << CRYPTO_HASH_DOUT_4_HASH_DOUT_4_SHIFT)        /* 0xFFFFFFFF */
/* HASH_DOUT_5 */
#define CRYPTO_HASH_DOUT_5_OFFSET                          (0x3B4U)
#define CRYPTO_HASH_DOUT_5                                 (0x0U)
#define CRYPTO_HASH_DOUT_5_HASH_DOUT_5_SHIFT               (0U)
#define CRYPTO_HASH_DOUT_5_HASH_DOUT_5_MASK                (0xFFFFFFFFU << CRYPTO_HASH_DOUT_5_HASH_DOUT_5_SHIFT)        /* 0xFFFFFFFF */
/* HASH_DOUT_6 */
#define CRYPTO_HASH_DOUT_6_OFFSET                          (0x3B8U)
#define CRYPTO_HASH_DOUT_6                                 (0x0U)
#define CRYPTO_HASH_DOUT_6_HASH_DOUT_6_SHIFT               (0U)
#define CRYPTO_HASH_DOUT_6_HASH_DOUT_6_MASK                (0xFFFFFFFFU << CRYPTO_HASH_DOUT_6_HASH_DOUT_6_SHIFT)        /* 0xFFFFFFFF */
/* HASH_DOUT_7 */
#define CRYPTO_HASH_DOUT_7_OFFSET                          (0x3BCU)
#define CRYPTO_HASH_DOUT_7                                 (0x0U)
#define CRYPTO_HASH_DOUT_7_HASH_DOUT_7_SHIFT               (0U)
#define CRYPTO_HASH_DOUT_7_HASH_DOUT_7_MASK                (0xFFFFFFFFU << CRYPTO_HASH_DOUT_7_HASH_DOUT_7_SHIFT)        /* 0xFFFFFFFF */
/* TAG_VALID */
#define CRYPTO_TAG_VALID_OFFSET                            (0x3E0U)
#define CRYPTO_TAG_VALID_CH0_TAG_VALID_SHIFT               (0U)
#define CRYPTO_TAG_VALID_CH0_TAG_VALID_MASK                (0x1U << CRYPTO_TAG_VALID_CH0_TAG_VALID_SHIFT)               /* 0x00000001 */
#define CRYPTO_TAG_VALID_CH1_TAG_VALID_SHIFT               (1U)
#define CRYPTO_TAG_VALID_CH1_TAG_VALID_MASK                (0x1U << CRYPTO_TAG_VALID_CH1_TAG_VALID_SHIFT)               /* 0x00000002 */
#define CRYPTO_TAG_VALID_CH2_TAG_VALID_SHIFT               (2U)
#define CRYPTO_TAG_VALID_CH2_TAG_VALID_MASK                (0x1U << CRYPTO_TAG_VALID_CH2_TAG_VALID_SHIFT)               /* 0x00000004 */
#define CRYPTO_TAG_VALID_CH3_TAG_VALID_SHIFT               (3U)
#define CRYPTO_TAG_VALID_CH3_TAG_VALID_MASK                (0x1U << CRYPTO_TAG_VALID_CH3_TAG_VALID_SHIFT)               /* 0x00000008 */
#define CRYPTO_TAG_VALID_CH4_TAG_VALID_SHIFT               (4U)
#define CRYPTO_TAG_VALID_CH4_TAG_VALID_MASK                (0x1U << CRYPTO_TAG_VALID_CH4_TAG_VALID_SHIFT)               /* 0x00000010 */
#define CRYPTO_TAG_VALID_CH5_TAG_VALID_SHIFT               (5U)
#define CRYPTO_TAG_VALID_CH5_TAG_VALID_MASK                (0x1U << CRYPTO_TAG_VALID_CH5_TAG_VALID_SHIFT)               /* 0x00000020 */
#define CRYPTO_TAG_VALID_CH6_TAG_VALID_SHIFT               (6U)
#define CRYPTO_TAG_VALID_CH6_TAG_VALID_MASK                (0x1U << CRYPTO_TAG_VALID_CH6_TAG_VALID_SHIFT)               /* 0x00000040 */
#define CRYPTO_TAG_VALID_CH7_TAG_VALID_SHIFT               (7U)
#define CRYPTO_TAG_VALID_CH7_TAG_VALID_MASK                (0x1U << CRYPTO_TAG_VALID_CH7_TAG_VALID_SHIFT)               /* 0x00000080 */
/* HASH_VALID */
#define CRYPTO_HASH_VALID_OFFSET                           (0x3E4U)
#define CRYPTO_HASH_VALID_HASH_VALID_SHIFT                 (0U)
#define CRYPTO_HASH_VALID_HASH_VALID_MASK                  (0x1U << CRYPTO_HASH_VALID_HASH_VALID_SHIFT)                 /* 0x00000001 */
/* MID_VALID */
#define CRYPTO_MID_VALID_OFFSET                            (0x3E8U)
#define CRYPTO_MID_VALID_BC_MID_VALID_SHIFT                (0U)
#define CRYPTO_MID_VALID_BC_MID_VALID_MASK                 (0x1U << CRYPTO_MID_VALID_BC_MID_VALID_SHIFT)                /* 0x00000001 */
#define CRYPTO_MID_VALID_HASH_MID_VALID_SHIFT              (1U)
#define CRYPTO_MID_VALID_HASH_MID_VALID_MASK               (0x1U << CRYPTO_MID_VALID_HASH_MID_VALID_SHIFT)              /* 0x00000002 */
/* RAM_CTL */
#define CRYPTO_RAM_CTL_OFFSET                              (0x480U)
#define CRYPTO_RAM_CTL_RAM_PKA_RDY_SHIFT                   (0U)
#define CRYPTO_RAM_CTL_RAM_PKA_RDY_MASK                    (0x1U << CRYPTO_RAM_CTL_RAM_PKA_RDY_SHIFT)                   /* 0x00000001 */
/* RAM_ST */
#define CRYPTO_RAM_ST_OFFSET                               (0x484U)
#define CRYPTO_RAM_ST                                      (0x1U)
#define CRYPTO_RAM_ST_CLK_RAM_RDY_SHIFT                    (0U)
#define CRYPTO_RAM_ST_CLK_RAM_RDY_MASK                     (0x1U << CRYPTO_RAM_ST_CLK_RAM_RDY_SHIFT)                    /* 0x00000001 */
/* DEBUG_CTL */
#define CRYPTO_DEBUG_CTL_OFFSET                            (0x4A0U)
#define CRYPTO_DEBUG_CTL_PKA_DEBUG_MODE_SHIFT              (0U)
#define CRYPTO_DEBUG_CTL_PKA_DEBUG_MODE_MASK               (0x1U << CRYPTO_DEBUG_CTL_PKA_DEBUG_MODE_SHIFT)              /* 0x00000001 */
/* DEBUG_ST */
#define CRYPTO_DEBUG_ST_OFFSET                             (0x4A4U)
#define CRYPTO_DEBUG_ST                                    (0x1U)
#define CRYPTO_DEBUG_ST_PKA_DEBUG_CLK_EN_SHIFT             (0U)
#define CRYPTO_DEBUG_ST_PKA_DEBUG_CLK_EN_MASK              (0x1U << CRYPTO_DEBUG_ST_PKA_DEBUG_CLK_EN_SHIFT)             /* 0x00000001 */
/* DEBUG_MONITOR */
#define CRYPTO_DEBUG_MONITOR_OFFSET                        (0x4A8U)
#define CRYPTO_DEBUG_MONITOR                               (0xFEEFU)
#define CRYPTO_DEBUG_MONITOR_PKA_MONITOR_BUS_SHIFT         (0U)
#define CRYPTO_DEBUG_MONITOR_PKA_MONITOR_BUS_MASK          (0xFFFFFFFFU << CRYPTO_DEBUG_MONITOR_PKA_MONITOR_BUS_SHIFT)  /* 0xFFFFFFFF */
/* CRYPTO_KL_KEY_STATUS */
#define CRYPTO_CRYPTO_KL_KEY_STATUS_OFFSET                 (0x600U)
#define CRYPTO_CRYPTO_KL_KEY_STATUS                        (0x0U)
#define CRYPTO_CRYPTO_KL_KEY_STATUS_KL_KEY_FLAG_SHIFT      (0U)
#define CRYPTO_CRYPTO_KL_KEY_STATUS_KL_KEY_FLAG_MASK       (0xFFFFU << CRYPTO_CRYPTO_KL_KEY_STATUS_KL_KEY_FLAG_SHIFT)   /* 0x0000FFFF */
/* CRYPTO_KEY_SEL */
#define CRYPTO_CRYPTO_KEY_SEL_OFFSET                       (0x610U)
#define CRYPTO_CRYPTO_KEY_SEL_KEY_SELECT_SHIFT             (0U)
#define CRYPTO_CRYPTO_KEY_SEL_KEY_SELECT_MASK              (0x7FFFFFFFU << CRYPTO_CRYPTO_KEY_SEL_KEY_SELECT_SHIFT)      /* 0x7FFFFFFF */
#define CRYPTO_CRYPTO_KEY_SEL_KLAD_KL_HIGH_SEL_SHIFT       (31U)
#define CRYPTO_CRYPTO_KEY_SEL_KLAD_KL_HIGH_SEL_MASK        (0x1U << CRYPTO_CRYPTO_KEY_SEL_KLAD_KL_HIGH_SEL_SHIFT)       /* 0x80000000 */
/* CRYPTO_LOCKSTEP */
#define CRYPTO_CRYPTO_LOCKSTEP_OFFSET                      (0x618U)
#define CRYPTO_CRYPTO_LOCKSTEP                             (0x0U)
#define CRYPTO_CRYPTO_LOCKSTEP_LOCK_STEP_FLAG_SHIFT        (0U)
#define CRYPTO_CRYPTO_LOCKSTEP_LOCK_STEP_FLAG_MASK         (0x1U << CRYPTO_CRYPTO_LOCKSTEP_LOCK_STEP_FLAG_SHIFT)        /* 0x00000001 */
/* CRYPTO_LOCKSTEP_EN */
#define CRYPTO_CRYPTO_LOCKSTEP_EN_OFFSET                   (0x61CU)
#define CRYPTO_CRYPTO_LOCKSTEP_EN_LOCKSTEP_EN_SHIFT        (0U)
#define CRYPTO_CRYPTO_LOCKSTEP_EN_LOCKSTEP_EN_MASK         (0x1U << CRYPTO_CRYPTO_LOCKSTEP_EN_LOCKSTEP_EN_SHIFT)        /* 0x00000001 */
/* MID_VALID_SWITCH */
#define CRYPTO_MID_VALID_SWITCH_OFFSET                     (0x630U)
#define CRYPTO_MID_VALID_SWITCH_SWITCH_SHIFT               (0U)
#define CRYPTO_MID_VALID_SWITCH_SWITCH_MASK                (0x1U << CRYPTO_MID_VALID_SWITCH_SWITCH_SHIFT)               /* 0x00000001 */
/* AES_VERSION */
#define CRYPTO_AES_VERSION_OFFSET                          (0x680U)
#define CRYPTO_AES_VERSION                                 (0x717FFU)
#define CRYPTO_AES_VERSION_ECB_FLAG_SHIFT                  (0U)
#define CRYPTO_AES_VERSION_ECB_FLAG_MASK                   (0x1U << CRYPTO_AES_VERSION_ECB_FLAG_SHIFT)                  /* 0x00000001 */
#define CRYPTO_AES_VERSION_CBC_FLAG_SHIFT                  (1U)
#define CRYPTO_AES_VERSION_CBC_FLAG_MASK                   (0x1U << CRYPTO_AES_VERSION_CBC_FLAG_SHIFT)                  /* 0x00000002 */
#define CRYPTO_AES_VERSION_CTS_FLAG_SHIFT                  (2U)
#define CRYPTO_AES_VERSION_CTS_FLAG_MASK                   (0x1U << CRYPTO_AES_VERSION_CTS_FLAG_SHIFT)                  /* 0x00000004 */
#define CRYPTO_AES_VERSION_CTR_FLAG_SHIFT                  (3U)
#define CRYPTO_AES_VERSION_CTR_FLAG_MASK                   (0x1U << CRYPTO_AES_VERSION_CTR_FLAG_SHIFT)                  /* 0x00000008 */
#define CRYPTO_AES_VERSION_CFB_FLAG_SHIFT                  (4U)
#define CRYPTO_AES_VERSION_CFB_FLAG_MASK                   (0x1U << CRYPTO_AES_VERSION_CFB_FLAG_SHIFT)                  /* 0x00000010 */
#define CRYPTO_AES_VERSION_OFB_FLAG_SHIFT                  (5U)
#define CRYPTO_AES_VERSION_OFB_FLAG_MASK                   (0x1U << CRYPTO_AES_VERSION_OFB_FLAG_SHIFT)                  /* 0x00000020 */
#define CRYPTO_AES_VERSION_XTS_FLAG_SHIFT                  (6U)
#define CRYPTO_AES_VERSION_XTS_FLAG_MASK                   (0x1U << CRYPTO_AES_VERSION_XTS_FLAG_SHIFT)                  /* 0x00000040 */
#define CRYPTO_AES_VERSION_CCM_FLAG_SHIFT                  (7U)
#define CRYPTO_AES_VERSION_CCM_FLAG_MASK                   (0x1U << CRYPTO_AES_VERSION_CCM_FLAG_SHIFT)                  /* 0x00000080 */
#define CRYPTO_AES_VERSION_GCM_FLAG_SHIFT                  (8U)
#define CRYPTO_AES_VERSION_GCM_FLAG_MASK                   (0x1U << CRYPTO_AES_VERSION_GCM_FLAG_SHIFT)                  /* 0x00000100 */
#define CRYPTO_AES_VERSION_CMAC_FLAG_SHIFT                 (9U)
#define CRYPTO_AES_VERSION_CMAC_FLAG_MASK                  (0x1U << CRYPTO_AES_VERSION_CMAC_FLAG_SHIFT)                 /* 0x00000200 */
#define CRYPTO_AES_VERSION_CBC_MAC_FLAG_SHIFT              (10U)
#define CRYPTO_AES_VERSION_CBC_MAC_FLAG_MASK               (0x1U << CRYPTO_AES_VERSION_CBC_MAC_FLAG_SHIFT)              /* 0x00000400 */
#define CRYPTO_AES_VERSION_BYPASS_SHIFT                    (12U)
#define CRYPTO_AES_VERSION_BYPASS_MASK                     (0x1U << CRYPTO_AES_VERSION_BYPASS_SHIFT)                    /* 0x00001000 */
#define CRYPTO_AES_VERSION_AES128_FLAG_SHIFT               (16U)
#define CRYPTO_AES_VERSION_AES128_FLAG_MASK                (0x1U << CRYPTO_AES_VERSION_AES128_FLAG_SHIFT)               /* 0x00010000 */
#define CRYPTO_AES_VERSION_AES192_FLAG_SHIFT               (17U)
#define CRYPTO_AES_VERSION_AES192_FLAG_MASK                (0x1U << CRYPTO_AES_VERSION_AES192_FLAG_SHIFT)               /* 0x00020000 */
#define CRYPTO_AES_VERSION_AES256_FLAG_SHIFT               (18U)
#define CRYPTO_AES_VERSION_AES256_FLAG_MASK                (0x1U << CRYPTO_AES_VERSION_AES256_FLAG_SHIFT)               /* 0x00040000 */
#define CRYPTO_AES_VERSION_LOCKSTEP_FLAG_SHIFT             (20U)
#define CRYPTO_AES_VERSION_LOCKSTEP_FLAG_MASK              (0x1U << CRYPTO_AES_VERSION_LOCKSTEP_FLAG_SHIFT)             /* 0x00100000 */
#define CRYPTO_AES_VERSION_SECURE_FLAG_SHIFT               (21U)
#define CRYPTO_AES_VERSION_SECURE_FLAG_MASK                (0x1U << CRYPTO_AES_VERSION_SECURE_FLAG_SHIFT)               /* 0x00200000 */
#define CRYPTO_AES_VERSION_MULTICHANNEL_FLAG_SHIFT         (22U)
#define CRYPTO_AES_VERSION_MULTICHANNEL_FLAG_MASK          (0x1U << CRYPTO_AES_VERSION_MULTICHANNEL_FLAG_SHIFT)         /* 0x00400000 */
/* DES_VERSION */
#define CRYPTO_DES_VERSION_OFFSET                          (0x684U)
#define CRYPTO_DES_VERSION                                 (0x0U)
#define CRYPTO_DES_VERSION_ECB_FLAG_SHIFT                  (0U)
#define CRYPTO_DES_VERSION_ECB_FLAG_MASK                   (0x1U << CRYPTO_DES_VERSION_ECB_FLAG_SHIFT)                  /* 0x00000001 */
#define CRYPTO_DES_VERSION_CBC_FLAG_SHIFT                  (1U)
#define CRYPTO_DES_VERSION_CBC_FLAG_MASK                   (0x1U << CRYPTO_DES_VERSION_CBC_FLAG_SHIFT)                  /* 0x00000002 */
#define CRYPTO_DES_VERSION_CFB_FLAG_SHIFT                  (4U)
#define CRYPTO_DES_VERSION_CFB_FLAG_MASK                   (0x1U << CRYPTO_DES_VERSION_CFB_FLAG_SHIFT)                  /* 0x00000010 */
#define CRYPTO_DES_VERSION_OFB_FLAG_SHIFT                  (5U)
#define CRYPTO_DES_VERSION_OFB_FLAG_MASK                   (0x1U << CRYPTO_DES_VERSION_OFB_FLAG_SHIFT)                  /* 0x00000020 */
#define CRYPTO_DES_VERSION_TDES_FLAG_SHIFT                 (16U)
#define CRYPTO_DES_VERSION_TDES_FLAG_MASK                  (0x1U << CRYPTO_DES_VERSION_TDES_FLAG_SHIFT)                 /* 0x00010000 */
#define CRYPTO_DES_VERSION_EEE_FLAG_SHIFT                  (17U)
#define CRYPTO_DES_VERSION_EEE_FLAG_MASK                   (0x1U << CRYPTO_DES_VERSION_EEE_FLAG_SHIFT)                  /* 0x00020000 */
#define CRYPTO_DES_VERSION_EDE_FLAG_SHIFT                  (18U)
#define CRYPTO_DES_VERSION_EDE_FLAG_MASK                   (0x1U << CRYPTO_DES_VERSION_EDE_FLAG_SHIFT)                  /* 0x00040000 */
#define CRYPTO_DES_VERSION_LOCKSTEP_FLAG_SHIFT             (20U)
#define CRYPTO_DES_VERSION_LOCKSTEP_FLAG_MASK              (0x1U << CRYPTO_DES_VERSION_LOCKSTEP_FLAG_SHIFT)             /* 0x00100000 */
#define CRYPTO_DES_VERSION_SECURE_FLAG_SHIFT               (21U)
#define CRYPTO_DES_VERSION_SECURE_FLAG_MASK                (0x1U << CRYPTO_DES_VERSION_SECURE_FLAG_SHIFT)               /* 0x00200000 */
#define CRYPTO_DES_VERSION_MULTICHANNEL_FLAG_SHIFT         (22U)
#define CRYPTO_DES_VERSION_MULTICHANNEL_FLAG_MASK          (0x1U << CRYPTO_DES_VERSION_MULTICHANNEL_FLAG_SHIFT)         /* 0x00400000 */
/* SM4_VERSION */
#define CRYPTO_SM4_VERSION_OFFSET                          (0x688U)
#define CRYPTO_SM4_VERSION                                 (0x0U)
#define CRYPTO_SM4_VERSION_ECB_FLAG_SHIFT                  (0U)
#define CRYPTO_SM4_VERSION_ECB_FLAG_MASK                   (0x1U << CRYPTO_SM4_VERSION_ECB_FLAG_SHIFT)                  /* 0x00000001 */
#define CRYPTO_SM4_VERSION_CBC_FLAG_SHIFT                  (1U)
#define CRYPTO_SM4_VERSION_CBC_FLAG_MASK                   (0x1U << CRYPTO_SM4_VERSION_CBC_FLAG_SHIFT)                  /* 0x00000002 */
#define CRYPTO_SM4_VERSION_CTS_FLAG_SHIFT                  (2U)
#define CRYPTO_SM4_VERSION_CTS_FLAG_MASK                   (0x1U << CRYPTO_SM4_VERSION_CTS_FLAG_SHIFT)                  /* 0x00000004 */
#define CRYPTO_SM4_VERSION_CTR_FLAG_SHIFT                  (3U)
#define CRYPTO_SM4_VERSION_CTR_FLAG_MASK                   (0x1U << CRYPTO_SM4_VERSION_CTR_FLAG_SHIFT)                  /* 0x00000008 */
#define CRYPTO_SM4_VERSION_CFB_FLAG_SHIFT                  (4U)
#define CRYPTO_SM4_VERSION_CFB_FLAG_MASK                   (0x1U << CRYPTO_SM4_VERSION_CFB_FLAG_SHIFT)                  /* 0x00000010 */
#define CRYPTO_SM4_VERSION_OFB_FLAG_SHIFT                  (5U)
#define CRYPTO_SM4_VERSION_OFB_FLAG_MASK                   (0x1U << CRYPTO_SM4_VERSION_OFB_FLAG_SHIFT)                  /* 0x00000020 */
#define CRYPTO_SM4_VERSION_XTS_FLAG_SHIFT                  (6U)
#define CRYPTO_SM4_VERSION_XTS_FLAG_MASK                   (0x1U << CRYPTO_SM4_VERSION_XTS_FLAG_SHIFT)                  /* 0x00000040 */
#define CRYPTO_SM4_VERSION_CCM_FLAG_SHIFT                  (7U)
#define CRYPTO_SM4_VERSION_CCM_FLAG_MASK                   (0x1U << CRYPTO_SM4_VERSION_CCM_FLAG_SHIFT)                  /* 0x00000080 */
#define CRYPTO_SM4_VERSION_GCM_FLAG_SHIFT                  (8U)
#define CRYPTO_SM4_VERSION_GCM_FLAG_MASK                   (0x1U << CRYPTO_SM4_VERSION_GCM_FLAG_SHIFT)                  /* 0x00000100 */
#define CRYPTO_SM4_VERSION_CMAC_FLAG_SHIFT                 (9U)
#define CRYPTO_SM4_VERSION_CMAC_FLAG_MASK                  (0x1U << CRYPTO_SM4_VERSION_CMAC_FLAG_SHIFT)                 /* 0x00000200 */
#define CRYPTO_SM4_VERSION_CBC_MAC_FLAG_SHIFT              (10U)
#define CRYPTO_SM4_VERSION_CBC_MAC_FLAG_MASK               (0x1U << CRYPTO_SM4_VERSION_CBC_MAC_FLAG_SHIFT)              /* 0x00000400 */
#define CRYPTO_SM4_VERSION_LOCKSTEP_FLAG_SHIFT             (20U)
#define CRYPTO_SM4_VERSION_LOCKSTEP_FLAG_MASK              (0x1U << CRYPTO_SM4_VERSION_LOCKSTEP_FLAG_SHIFT)             /* 0x00100000 */
#define CRYPTO_SM4_VERSION_SECURE_FLAG_SHIFT               (21U)
#define CRYPTO_SM4_VERSION_SECURE_FLAG_MASK                (0x1U << CRYPTO_SM4_VERSION_SECURE_FLAG_SHIFT)               /* 0x00200000 */
#define CRYPTO_SM4_VERSION_MULTICHANNEL_FLAG_SHIFT         (22U)
#define CRYPTO_SM4_VERSION_MULTICHANNEL_FLAG_MASK          (0x1U << CRYPTO_SM4_VERSION_MULTICHANNEL_FLAG_SHIFT)         /* 0x00400000 */
/* HASH_VERSION */
#define CRYPTO_HASH_VERSION_OFFSET                         (0x68CU)
#define CRYPTO_HASH_VERSION                                (0x87U)
#define CRYPTO_HASH_VERSION_SHA1_FLAG_SHIFT                (0U)
#define CRYPTO_HASH_VERSION_SHA1_FLAG_MASK                 (0x1U << CRYPTO_HASH_VERSION_SHA1_FLAG_SHIFT)                /* 0x00000001 */
#define CRYPTO_HASH_VERSION_SHA224_FLAG_SHIFT              (1U)
#define CRYPTO_HASH_VERSION_SHA224_FLAG_MASK               (0x1U << CRYPTO_HASH_VERSION_SHA224_FLAG_SHIFT)              /* 0x00000002 */
#define CRYPTO_HASH_VERSION_SHA256_FLAG_SHIFT              (2U)
#define CRYPTO_HASH_VERSION_SHA256_FLAG_MASK               (0x1U << CRYPTO_HASH_VERSION_SHA256_FLAG_SHIFT)              /* 0x00000004 */
#define CRYPTO_HASH_VERSION_SHA384_FLAG_SHIFT              (3U)
#define CRYPTO_HASH_VERSION_SHA384_FLAG_MASK               (0x1U << CRYPTO_HASH_VERSION_SHA384_FLAG_SHIFT)              /* 0x00000008 */
#define CRYPTO_HASH_VERSION_SHA512_FLAG_SHIFT              (4U)
#define CRYPTO_HASH_VERSION_SHA512_FLAG_MASK               (0x1U << CRYPTO_HASH_VERSION_SHA512_FLAG_SHIFT)              /* 0x00000010 */
#define CRYPTO_HASH_VERSION_SHA512_224_FLAG_SHIFT          (5U)
#define CRYPTO_HASH_VERSION_SHA512_224_FLAG_MASK           (0x1U << CRYPTO_HASH_VERSION_SHA512_224_FLAG_SHIFT)          /* 0x00000020 */
#define CRYPTO_HASH_VERSION_SHA512_256_FLAG_SHIFT          (6U)
#define CRYPTO_HASH_VERSION_SHA512_256_FLAG_MASK           (0x1U << CRYPTO_HASH_VERSION_SHA512_256_FLAG_SHIFT)          /* 0x00000040 */
#define CRYPTO_HASH_VERSION_MD5_FLAG_SHIFT                 (7U)
#define CRYPTO_HASH_VERSION_MD5_FLAG_MASK                  (0x1U << CRYPTO_HASH_VERSION_MD5_FLAG_SHIFT)                 /* 0x00000080 */
#define CRYPTO_HASH_VERSION_SM3_FLAG_SHIFT                 (8U)
#define CRYPTO_HASH_VERSION_SM3_FLAG_MASK                  (0x1U << CRYPTO_HASH_VERSION_SM3_FLAG_SHIFT)                 /* 0x00000100 */
#define CRYPTO_HASH_VERSION_LOCKSTEP_FLAG_SHIFT            (20U)
#define CRYPTO_HASH_VERSION_LOCKSTEP_FLAG_MASK             (0x1U << CRYPTO_HASH_VERSION_LOCKSTEP_FLAG_SHIFT)            /* 0x00100000 */
/* HMAC_VERSION */
#define CRYPTO_HMAC_VERSION_OFFSET                         (0x690U)
#define CRYPTO_HMAC_VERSION                                (0xBU)
#define CRYPTO_HMAC_VERSION_SHA1_FLAG_SHIFT                (0U)
#define CRYPTO_HMAC_VERSION_SHA1_FLAG_MASK                 (0x1U << CRYPTO_HMAC_VERSION_SHA1_FLAG_SHIFT)                /* 0x00000001 */
#define CRYPTO_HMAC_VERSION_SHA256_FLAG_SHIFT              (1U)
#define CRYPTO_HMAC_VERSION_SHA256_FLAG_MASK               (0x1U << CRYPTO_HMAC_VERSION_SHA256_FLAG_SHIFT)              /* 0x00000002 */
#define CRYPTO_HMAC_VERSION_SHA512_FLAG_SHIFT              (2U)
#define CRYPTO_HMAC_VERSION_SHA512_FLAG_MASK               (0x1U << CRYPTO_HMAC_VERSION_SHA512_FLAG_SHIFT)              /* 0x00000004 */
#define CRYPTO_HMAC_VERSION_MD5_FLAG_SHIFT                 (3U)
#define CRYPTO_HMAC_VERSION_MD5_FLAG_MASK                  (0x1U << CRYPTO_HMAC_VERSION_MD5_FLAG_SHIFT)                 /* 0x00000008 */
#define CRYPTO_HMAC_VERSION_SM3_FLAG_SHIFT                 (4U)
#define CRYPTO_HMAC_VERSION_SM3_FLAG_MASK                  (0x1U << CRYPTO_HMAC_VERSION_SM3_FLAG_SHIFT)                 /* 0x00000010 */
#define CRYPTO_HMAC_VERSION_LOCKSTEP_FLAG_SHIFT            (20U)
#define CRYPTO_HMAC_VERSION_LOCKSTEP_FLAG_MASK             (0x1U << CRYPTO_HMAC_VERSION_LOCKSTEP_FLAG_SHIFT)            /* 0x00100000 */
#define CRYPTO_HMAC_VERSION_MULTICHANNEL_SHIFT             (22U)
#define CRYPTO_HMAC_VERSION_MULTICHANNEL_MASK              (0x1U << CRYPTO_HMAC_VERSION_MULTICHANNEL_SHIFT)             /* 0x00400000 */
/* PKA_VERSION */
#define CRYPTO_PKA_VERSION_OFFSET                          (0x698U)
#define CRYPTO_PKA_VERSION                                 (0x1000000U)
#define CRYPTO_PKA_VERSION_PKA_VERSION_CODE_SHIFT          (0U)
#define CRYPTO_PKA_VERSION_PKA_VERSION_CODE_MASK           (0xFFFFFFFFU << CRYPTO_PKA_VERSION_PKA_VERSION_CODE_SHIFT)   /* 0xFFFFFFFF */
/* EXTRA_FEATURE */
#define CRYPTO_EXTRA_FEATURE_OFFSET                        (0x69CU)
#define CRYPTO_EXTRA_FEATURE                               (0x0U)
#define CRYPTO_EXTRA_FEATURE_AXI_EXPAND_BIT_SHIFT          (0U)
#define CRYPTO_EXTRA_FEATURE_AXI_EXPAND_BIT_MASK           (0xFU << CRYPTO_EXTRA_FEATURE_AXI_EXPAND_BIT_SHIFT)          /* 0x0000000F */
/* CRYPTO_VERSION */
#define CRYPTO_CRYPTO_VERSION_OFFSET                       (0x6F0U)
#define CRYPTO_CRYPTO_VERSION                              (0x4000001U)
#define CRYPTO_CRYPTO_VERSION_CRYPTO_VERSION_CODE_SHIFT    (0U)
#define CRYPTO_CRYPTO_VERSION_CRYPTO_VERSION_CODE_MASK     (0xFFFFFFFFU << CRYPTO_CRYPTO_VERSION_CRYPTO_VERSION_CODE_SHIFT) /* 0xFFFFFFFF */
/* HASH_MID_DATA_0 */
#define CRYPTO_HASH_MID_DATA_0_OFFSET                      (0x700U)
#define CRYPTO_HASH_MID_DATA_0_HASH_MID_DATA_0_SHIFT       (0U)
#define CRYPTO_HASH_MID_DATA_0_HASH_MID_DATA_0_MASK        (0xFFFFFFFFU << CRYPTO_HASH_MID_DATA_0_HASH_MID_DATA_0_SHIFT) /* 0xFFFFFFFF */
/* HASH_MID_DATA_1 */
#define CRYPTO_HASH_MID_DATA_1_OFFSET                      (0x704U)
#define CRYPTO_HASH_MID_DATA_1_HASH_MID_DATA_1_SHIFT       (0U)
#define CRYPTO_HASH_MID_DATA_1_HASH_MID_DATA_1_MASK        (0xFFFFFFFFU << CRYPTO_HASH_MID_DATA_1_HASH_MID_DATA_1_SHIFT) /* 0xFFFFFFFF */
/* HASH_MID_DATA_2 */
#define CRYPTO_HASH_MID_DATA_2_OFFSET                      (0x708U)
#define CRYPTO_HASH_MID_DATA_2_HASH_MID_DATA_2_SHIFT       (0U)
#define CRYPTO_HASH_MID_DATA_2_HASH_MID_DATA_2_MASK        (0xFFFFFFFFU << CRYPTO_HASH_MID_DATA_2_HASH_MID_DATA_2_SHIFT) /* 0xFFFFFFFF */
/* HASH_MID_DATA_3 */
#define CRYPTO_HASH_MID_DATA_3_OFFSET                      (0x70CU)
#define CRYPTO_HASH_MID_DATA_3_HASH_MID_DATA_3_SHIFT       (0U)
#define CRYPTO_HASH_MID_DATA_3_HASH_MID_DATA_3_MASK        (0xFFFFFFFFU << CRYPTO_HASH_MID_DATA_3_HASH_MID_DATA_3_SHIFT) /* 0xFFFFFFFF */
/* HASH_MID_DATA_4 */
#define CRYPTO_HASH_MID_DATA_4_OFFSET                      (0x710U)
#define CRYPTO_HASH_MID_DATA_4_HASH_MID_DATA_4_SHIFT       (0U)
#define CRYPTO_HASH_MID_DATA_4_HASH_MID_DATA_4_MASK        (0xFFFFFFFFU << CRYPTO_HASH_MID_DATA_4_HASH_MID_DATA_4_SHIFT) /* 0xFFFFFFFF */
/* HASH_MID_DATA_5 */
#define CRYPTO_HASH_MID_DATA_5_OFFSET                      (0x714U)
#define CRYPTO_HASH_MID_DATA_5_HASH_MID_DATA_5_SHIFT       (0U)
#define CRYPTO_HASH_MID_DATA_5_HASH_MID_DATA_5_MASK        (0xFFFFFFFFU << CRYPTO_HASH_MID_DATA_5_HASH_MID_DATA_5_SHIFT) /* 0xFFFFFFFF */
/* HASH_MID_DATA_6 */
#define CRYPTO_HASH_MID_DATA_6_OFFSET                      (0x718U)
#define CRYPTO_HASH_MID_DATA_6_HASH_MID_DATA_6_SHIFT       (0U)
#define CRYPTO_HASH_MID_DATA_6_HASH_MID_DATA_6_MASK        (0xFFFFFFFFU << CRYPTO_HASH_MID_DATA_6_HASH_MID_DATA_6_SHIFT) /* 0xFFFFFFFF */
/* HASH_MID_DATA_7 */
#define CRYPTO_HASH_MID_DATA_7_OFFSET                      (0x71CU)
#define CRYPTO_HASH_MID_DATA_7_HASH_MID_DATA_7_SHIFT       (0U)
#define CRYPTO_HASH_MID_DATA_7_HASH_MID_DATA_7_MASK        (0xFFFFFFFFU << CRYPTO_HASH_MID_DATA_7_HASH_MID_DATA_7_SHIFT) /* 0xFFFFFFFF */
/* HASH_MID_DATA_8 */
#define CRYPTO_HASH_MID_DATA_8_OFFSET                      (0x720U)
#define CRYPTO_HASH_MID_DATA_8_HASH_MID_DATA_8_SHIFT       (0U)
#define CRYPTO_HASH_MID_DATA_8_HASH_MID_DATA_8_MASK        (0xFFFFFFFFU << CRYPTO_HASH_MID_DATA_8_HASH_MID_DATA_8_SHIFT) /* 0xFFFFFFFF */
/* HASH_MID_DATA_9 */
#define CRYPTO_HASH_MID_DATA_9_OFFSET                      (0x724U)
#define CRYPTO_HASH_MID_DATA_9_HASH_MID_DATA_9_SHIFT       (0U)
#define CRYPTO_HASH_MID_DATA_9_HASH_MID_DATA_9_MASK        (0xFFFFFFFFU << CRYPTO_HASH_MID_DATA_9_HASH_MID_DATA_9_SHIFT) /* 0xFFFFFFFF */
/* HASH_MID_DATA_10 */
#define CRYPTO_HASH_MID_DATA_10_OFFSET                     (0x728U)
#define CRYPTO_HASH_MID_DATA_10_HASH_MID_DATA_10_SHIFT     (0U)
#define CRYPTO_HASH_MID_DATA_10_HASH_MID_DATA_10_MASK      (0xFFFFFFFFU << CRYPTO_HASH_MID_DATA_10_HASH_MID_DATA_10_SHIFT) /* 0xFFFFFFFF */
/* HASH_MID_DATA_11 */
#define CRYPTO_HASH_MID_DATA_11_OFFSET                     (0x72CU)
#define CRYPTO_HASH_MID_DATA_11_HASH_MID_DATA_11_SHIFT     (0U)
#define CRYPTO_HASH_MID_DATA_11_HASH_MID_DATA_11_MASK      (0xFFFFFFFFU << CRYPTO_HASH_MID_DATA_11_HASH_MID_DATA_11_SHIFT) /* 0xFFFFFFFF */
/* HASH_MID_DATA_12 */
#define CRYPTO_HASH_MID_DATA_12_OFFSET                     (0x730U)
#define CRYPTO_HASH_MID_DATA_12_HASH_MID_DATA_12_SHIFT     (0U)
#define CRYPTO_HASH_MID_DATA_12_HASH_MID_DATA_12_MASK      (0xFFFFFFFFU << CRYPTO_HASH_MID_DATA_12_HASH_MID_DATA_12_SHIFT) /* 0xFFFFFFFF */
/* HASH_MID_DATA_13 */
#define CRYPTO_HASH_MID_DATA_13_OFFSET                     (0x734U)
#define CRYPTO_HASH_MID_DATA_13_HASH_MID_DATA_13_SHIFT     (0U)
#define CRYPTO_HASH_MID_DATA_13_HASH_MID_DATA_13_MASK      (0xFFFFFFFFU << CRYPTO_HASH_MID_DATA_13_HASH_MID_DATA_13_SHIFT) /* 0xFFFFFFFF */
/* HASH_MID_DATA_14 */
#define CRYPTO_HASH_MID_DATA_14_OFFSET                     (0x738U)
#define CRYPTO_HASH_MID_DATA_14_HASH_MID_DATA_14_SHIFT     (0U)
#define CRYPTO_HASH_MID_DATA_14_HASH_MID_DATA_14_MASK      (0xFFFFFFFFU << CRYPTO_HASH_MID_DATA_14_HASH_MID_DATA_14_SHIFT) /* 0xFFFFFFFF */
/* HASH_MID_DATA_15 */
#define CRYPTO_HASH_MID_DATA_15_OFFSET                     (0x73CU)
#define CRYPTO_HASH_MID_DATA_15_HASH_MID_DATA_15_SHIFT     (0U)
#define CRYPTO_HASH_MID_DATA_15_HASH_MID_DATA_15_MASK      (0xFFFFFFFFU << CRYPTO_HASH_MID_DATA_15_HASH_MID_DATA_15_SHIFT) /* 0xFFFFFFFF */
/* HASH_MID_DATA_16 */
#define CRYPTO_HASH_MID_DATA_16_OFFSET                     (0x740U)
#define CRYPTO_HASH_MID_DATA_16_HASH_MID_DATA_16_SHIFT     (0U)
#define CRYPTO_HASH_MID_DATA_16_HASH_MID_DATA_16_MASK      (0xFFFFFFFFU << CRYPTO_HASH_MID_DATA_16_HASH_MID_DATA_16_SHIFT) /* 0xFFFFFFFF */
/* HASH_MID_DATA_17 */
#define CRYPTO_HASH_MID_DATA_17_OFFSET                     (0x744U)
#define CRYPTO_HASH_MID_DATA_17_HASH_MID_DATA_17_SHIFT     (0U)
#define CRYPTO_HASH_MID_DATA_17_HASH_MID_DATA_17_MASK      (0xFFFFFFFFU << CRYPTO_HASH_MID_DATA_17_HASH_MID_DATA_17_SHIFT) /* 0xFFFFFFFF */
/* HASH_MID_DATA_18 */
#define CRYPTO_HASH_MID_DATA_18_OFFSET                     (0x748U)
#define CRYPTO_HASH_MID_DATA_18_HASH_MID_DATA_18_SHIFT     (0U)
#define CRYPTO_HASH_MID_DATA_18_HASH_MID_DATA_18_MASK      (0xFFFFFFFFU << CRYPTO_HASH_MID_DATA_18_HASH_MID_DATA_18_SHIFT) /* 0xFFFFFFFF */
/* HASH_MID_DATA_19 */
#define CRYPTO_HASH_MID_DATA_19_OFFSET                     (0x74CU)
#define CRYPTO_HASH_MID_DATA_19_HASH_MID_DATA_19_SHIFT     (0U)
#define CRYPTO_HASH_MID_DATA_19_HASH_MID_DATA_19_MASK      (0xFFFFFFFFU << CRYPTO_HASH_MID_DATA_19_HASH_MID_DATA_19_SHIFT) /* 0xFFFFFFFF */
/* HASH_MID_DATA_20 */
#define CRYPTO_HASH_MID_DATA_20_OFFSET                     (0x750U)
#define CRYPTO_HASH_MID_DATA_20_HASH_MID_DATA_20_SHIFT     (0U)
#define CRYPTO_HASH_MID_DATA_20_HASH_MID_DATA_20_MASK      (0xFFFFFFFFU << CRYPTO_HASH_MID_DATA_20_HASH_MID_DATA_20_SHIFT) /* 0xFFFFFFFF */
/* HASH_MID_DATA_21 */
#define CRYPTO_HASH_MID_DATA_21_OFFSET                     (0x754U)
#define CRYPTO_HASH_MID_DATA_21_HASH_MID_DATA_21_SHIFT     (0U)
#define CRYPTO_HASH_MID_DATA_21_HASH_MID_DATA_21_MASK      (0xFFFFFFFFU << CRYPTO_HASH_MID_DATA_21_HASH_MID_DATA_21_SHIFT) /* 0xFFFFFFFF */
/* HASH_MID_DATA_22 */
#define CRYPTO_HASH_MID_DATA_22_OFFSET                     (0x758U)
#define CRYPTO_HASH_MID_DATA_22_HASH_MID_DATA_22_SHIFT     (0U)
#define CRYPTO_HASH_MID_DATA_22_HASH_MID_DATA_22_MASK      (0xFFFFFFFFU << CRYPTO_HASH_MID_DATA_22_HASH_MID_DATA_22_SHIFT) /* 0xFFFFFFFF */
/* HASH_MID_DATA_23 */
#define CRYPTO_HASH_MID_DATA_23_OFFSET                     (0x75CU)
#define CRYPTO_HASH_MID_DATA_23_HASH_MID_DATA_23_SHIFT     (0U)
#define CRYPTO_HASH_MID_DATA_23_HASH_MID_DATA_23_MASK      (0xFFFFFFFFU << CRYPTO_HASH_MID_DATA_23_HASH_MID_DATA_23_SHIFT) /* 0xFFFFFFFF */
/* HASH_MID_DATA_24 */
#define CRYPTO_HASH_MID_DATA_24_OFFSET                     (0x760U)
#define CRYPTO_HASH_MID_DATA_24_HASH_MID_DATA_24_SHIFT     (0U)
#define CRYPTO_HASH_MID_DATA_24_HASH_MID_DATA_24_MASK      (0xFFFFFFFFU << CRYPTO_HASH_MID_DATA_24_HASH_MID_DATA_24_SHIFT) /* 0xFFFFFFFF */
/* HASH_MID_DATA_25 */
#define CRYPTO_HASH_MID_DATA_25_OFFSET                     (0x764U)
#define CRYPTO_HASH_MID_DATA_25_HASH_MID_DATA_25_SHIFT     (0U)
#define CRYPTO_HASH_MID_DATA_25_HASH_MID_DATA_25_MASK      (0xFFFFFFFFU << CRYPTO_HASH_MID_DATA_25_HASH_MID_DATA_25_SHIFT) /* 0xFFFFFFFF */
/* PKA_MEM_MAP0 */
#define CRYPTO_PKA_MEM_MAP0_OFFSET                         (0x800U)
#define CRYPTO_PKA_MEM_MAP0_MEMORY_MAP0_SHIFT              (2U)
#define CRYPTO_PKA_MEM_MAP0_MEMORY_MAP0_MASK               (0x3FFU << CRYPTO_PKA_MEM_MAP0_MEMORY_MAP0_SHIFT)            /* 0x00000FFC */
/* PKA_MEM_MAP1 */
#define CRYPTO_PKA_MEM_MAP1_OFFSET                         (0x804U)
#define CRYPTO_PKA_MEM_MAP1_MEMORY_MAP1_SHIFT              (2U)
#define CRYPTO_PKA_MEM_MAP1_MEMORY_MAP1_MASK               (0x3FFU << CRYPTO_PKA_MEM_MAP1_MEMORY_MAP1_SHIFT)            /* 0x00000FFC */
/* PKA_MEM_MAP2 */
#define CRYPTO_PKA_MEM_MAP2_OFFSET                         (0x808U)
#define CRYPTO_PKA_MEM_MAP2_MEMORY_MAP2_SHIFT              (2U)
#define CRYPTO_PKA_MEM_MAP2_MEMORY_MAP2_MASK               (0x3FFU << CRYPTO_PKA_MEM_MAP2_MEMORY_MAP2_SHIFT)            /* 0x00000FFC */
/* PKA_MEM_MAP3 */
#define CRYPTO_PKA_MEM_MAP3_OFFSET                         (0x80CU)
#define CRYPTO_PKA_MEM_MAP3_MEMORY_MAP3_SHIFT              (2U)
#define CRYPTO_PKA_MEM_MAP3_MEMORY_MAP3_MASK               (0x3FFU << CRYPTO_PKA_MEM_MAP3_MEMORY_MAP3_SHIFT)            /* 0x00000FFC */
/* PKA_MEM_MAP4 */
#define CRYPTO_PKA_MEM_MAP4_OFFSET                         (0x810U)
#define CRYPTO_PKA_MEM_MAP4_MEMORY_MAP4_SHIFT              (2U)
#define CRYPTO_PKA_MEM_MAP4_MEMORY_MAP4_MASK               (0x3FFU << CRYPTO_PKA_MEM_MAP4_MEMORY_MAP4_SHIFT)            /* 0x00000FFC */
/* PKA_MEM_MAP5 */
#define CRYPTO_PKA_MEM_MAP5_OFFSET                         (0x814U)
#define CRYPTO_PKA_MEM_MAP5_MEMORY_MAP5_SHIFT              (2U)
#define CRYPTO_PKA_MEM_MAP5_MEMORY_MAP5_MASK               (0x3FFU << CRYPTO_PKA_MEM_MAP5_MEMORY_MAP5_SHIFT)            /* 0x00000FFC */
/* PKA_MEM_MAP6 */
#define CRYPTO_PKA_MEM_MAP6_OFFSET                         (0x818U)
#define CRYPTO_PKA_MEM_MAP6_MEMORY_MAP6_SHIFT              (2U)
#define CRYPTO_PKA_MEM_MAP6_MEMORY_MAP6_MASK               (0x3FFU << CRYPTO_PKA_MEM_MAP6_MEMORY_MAP6_SHIFT)            /* 0x00000FFC */
/* PKA_MEM_MAP7 */
#define CRYPTO_PKA_MEM_MAP7_OFFSET                         (0x81CU)
#define CRYPTO_PKA_MEM_MAP7_MEMORY_MAP7_SHIFT              (2U)
#define CRYPTO_PKA_MEM_MAP7_MEMORY_MAP7_MASK               (0x3FFU << CRYPTO_PKA_MEM_MAP7_MEMORY_MAP7_SHIFT)            /* 0x00000FFC */
/* PKA_MEM_MAP8 */
#define CRYPTO_PKA_MEM_MAP8_OFFSET                         (0x820U)
#define CRYPTO_PKA_MEM_MAP8_MEMORY_MAP8_SHIFT              (2U)
#define CRYPTO_PKA_MEM_MAP8_MEMORY_MAP8_MASK               (0x3FFU << CRYPTO_PKA_MEM_MAP8_MEMORY_MAP8_SHIFT)            /* 0x00000FFC */
/* PKA_MEM_MAP9 */
#define CRYPTO_PKA_MEM_MAP9_OFFSET                         (0x824U)
#define CRYPTO_PKA_MEM_MAP9_MEMORY_MAP9_SHIFT              (2U)
#define CRYPTO_PKA_MEM_MAP9_MEMORY_MAP9_MASK               (0x3FFU << CRYPTO_PKA_MEM_MAP9_MEMORY_MAP9_SHIFT)            /* 0x00000FFC */
/* PKA_MEM_MAP10 */
#define CRYPTO_PKA_MEM_MAP10_OFFSET                        (0x828U)
#define CRYPTO_PKA_MEM_MAP10_MEMORY_MAP10_SHIFT            (2U)
#define CRYPTO_PKA_MEM_MAP10_MEMORY_MAP10_MASK             (0x3FFU << CRYPTO_PKA_MEM_MAP10_MEMORY_MAP10_SHIFT)          /* 0x00000FFC */
/* PKA_MEM_MAP11 */
#define CRYPTO_PKA_MEM_MAP11_OFFSET                        (0x82CU)
#define CRYPTO_PKA_MEM_MAP11_MEMORY_MAP11_SHIFT            (2U)
#define CRYPTO_PKA_MEM_MAP11_MEMORY_MAP11_MASK             (0x3FFU << CRYPTO_PKA_MEM_MAP11_MEMORY_MAP11_SHIFT)          /* 0x00000FFC */
/* PKA_MEM_MAP12 */
#define CRYPTO_PKA_MEM_MAP12_OFFSET                        (0x830U)
#define CRYPTO_PKA_MEM_MAP12_MEMORY_MAP12_SHIFT            (2U)
#define CRYPTO_PKA_MEM_MAP12_MEMORY_MAP12_MASK             (0x3FFU << CRYPTO_PKA_MEM_MAP12_MEMORY_MAP12_SHIFT)          /* 0x00000FFC */
/* PKA_MEM_MAP13 */
#define CRYPTO_PKA_MEM_MAP13_OFFSET                        (0x834U)
#define CRYPTO_PKA_MEM_MAP13_MEMORY_MAP13_SHIFT            (2U)
#define CRYPTO_PKA_MEM_MAP13_MEMORY_MAP13_MASK             (0x3FFU << CRYPTO_PKA_MEM_MAP13_MEMORY_MAP13_SHIFT)          /* 0x00000FFC */
/* PKA_MEM_MAP14 */
#define CRYPTO_PKA_MEM_MAP14_OFFSET                        (0x838U)
#define CRYPTO_PKA_MEM_MAP14_MEMORY_MAP14_SHIFT            (2U)
#define CRYPTO_PKA_MEM_MAP14_MEMORY_MAP14_MASK             (0x3FFU << CRYPTO_PKA_MEM_MAP14_MEMORY_MAP14_SHIFT)          /* 0x00000FFC */
/* PKA_MEM_MAP15 */
#define CRYPTO_PKA_MEM_MAP15_OFFSET                        (0x83CU)
#define CRYPTO_PKA_MEM_MAP15_MEMORY_MAP15_SHIFT            (2U)
#define CRYPTO_PKA_MEM_MAP15_MEMORY_MAP15_MASK             (0x3FFU << CRYPTO_PKA_MEM_MAP15_MEMORY_MAP15_SHIFT)          /* 0x00000FFC */
/* PKA_MEM_MAP16 */
#define CRYPTO_PKA_MEM_MAP16_OFFSET                        (0x840U)
#define CRYPTO_PKA_MEM_MAP16_MEMORY_MAP16_SHIFT            (2U)
#define CRYPTO_PKA_MEM_MAP16_MEMORY_MAP16_MASK             (0x3FFU << CRYPTO_PKA_MEM_MAP16_MEMORY_MAP16_SHIFT)          /* 0x00000FFC */
/* PKA_MEM_MAP17 */
#define CRYPTO_PKA_MEM_MAP17_OFFSET                        (0x844U)
#define CRYPTO_PKA_MEM_MAP17_MEMORY_MAP17_SHIFT            (2U)
#define CRYPTO_PKA_MEM_MAP17_MEMORY_MAP17_MASK             (0x3FFU << CRYPTO_PKA_MEM_MAP17_MEMORY_MAP17_SHIFT)          /* 0x00000FFC */
/* PKA_MEM_MAP18 */
#define CRYPTO_PKA_MEM_MAP18_OFFSET                        (0x848U)
#define CRYPTO_PKA_MEM_MAP18_MEMORY_MAP18_SHIFT            (2U)
#define CRYPTO_PKA_MEM_MAP18_MEMORY_MAP18_MASK             (0x3FFU << CRYPTO_PKA_MEM_MAP18_MEMORY_MAP18_SHIFT)          /* 0x00000FFC */
/* PKA_MEM_MAP19 */
#define CRYPTO_PKA_MEM_MAP19_OFFSET                        (0x84CU)
#define CRYPTO_PKA_MEM_MAP19_MEMORY_MAP19_SHIFT            (2U)
#define CRYPTO_PKA_MEM_MAP19_MEMORY_MAP19_MASK             (0x3FFU << CRYPTO_PKA_MEM_MAP19_MEMORY_MAP19_SHIFT)          /* 0x00000FFC */
/* PKA_MEM_MAP20 */
#define CRYPTO_PKA_MEM_MAP20_OFFSET                        (0x850U)
#define CRYPTO_PKA_MEM_MAP20_MEMORY_MAP20_SHIFT            (2U)
#define CRYPTO_PKA_MEM_MAP20_MEMORY_MAP20_MASK             (0x3FFU << CRYPTO_PKA_MEM_MAP20_MEMORY_MAP20_SHIFT)          /* 0x00000FFC */
/* PKA_MEM_MAP21 */
#define CRYPTO_PKA_MEM_MAP21_OFFSET                        (0x854U)
#define CRYPTO_PKA_MEM_MAP21_MEMORY_MAP21_SHIFT            (2U)
#define CRYPTO_PKA_MEM_MAP21_MEMORY_MAP21_MASK             (0x3FFU << CRYPTO_PKA_MEM_MAP21_MEMORY_MAP21_SHIFT)          /* 0x00000FFC */
/* PKA_MEM_MAP22 */
#define CRYPTO_PKA_MEM_MAP22_OFFSET                        (0x858U)
#define CRYPTO_PKA_MEM_MAP22_MEMORY_MAP22_SHIFT            (2U)
#define CRYPTO_PKA_MEM_MAP22_MEMORY_MAP22_MASK             (0x3FFU << CRYPTO_PKA_MEM_MAP22_MEMORY_MAP22_SHIFT)          /* 0x00000FFC */
/* PKA_MEM_MAP23 */
#define CRYPTO_PKA_MEM_MAP23_OFFSET                        (0x85CU)
#define CRYPTO_PKA_MEM_MAP23_MEMORY_MAP23_SHIFT            (2U)
#define CRYPTO_PKA_MEM_MAP23_MEMORY_MAP23_MASK             (0x3FFU << CRYPTO_PKA_MEM_MAP23_MEMORY_MAP23_SHIFT)          /* 0x00000FFC */
/* PKA_MEM_MAP24 */
#define CRYPTO_PKA_MEM_MAP24_OFFSET                        (0x860U)
#define CRYPTO_PKA_MEM_MAP24_MEMORY_MAP24_SHIFT            (2U)
#define CRYPTO_PKA_MEM_MAP24_MEMORY_MAP24_MASK             (0x3FFU << CRYPTO_PKA_MEM_MAP24_MEMORY_MAP24_SHIFT)          /* 0x00000FFC */
/* PKA_MEM_MAP25 */
#define CRYPTO_PKA_MEM_MAP25_OFFSET                        (0x864U)
#define CRYPTO_PKA_MEM_MAP25_MEMORY_MAP25_SHIFT            (2U)
#define CRYPTO_PKA_MEM_MAP25_MEMORY_MAP25_MASK             (0x3FFU << CRYPTO_PKA_MEM_MAP25_MEMORY_MAP25_SHIFT)          /* 0x00000FFC */
/* PKA_MEM_MAP26 */
#define CRYPTO_PKA_MEM_MAP26_OFFSET                        (0x868U)
#define CRYPTO_PKA_MEM_MAP26_MEMORY_MAP26_SHIFT            (2U)
#define CRYPTO_PKA_MEM_MAP26_MEMORY_MAP26_MASK             (0x3FFU << CRYPTO_PKA_MEM_MAP26_MEMORY_MAP26_SHIFT)          /* 0x00000FFC */
/* PKA_MEM_MAP27 */
#define CRYPTO_PKA_MEM_MAP27_OFFSET                        (0x86CU)
#define CRYPTO_PKA_MEM_MAP27_MEMORY_MAP27_SHIFT            (2U)
#define CRYPTO_PKA_MEM_MAP27_MEMORY_MAP27_MASK             (0x3FFU << CRYPTO_PKA_MEM_MAP27_MEMORY_MAP27_SHIFT)          /* 0x00000FFC */
/* PKA_MEM_MAP28 */
#define CRYPTO_PKA_MEM_MAP28_OFFSET                        (0x870U)
#define CRYPTO_PKA_MEM_MAP28_MEMORY_MAP28_SHIFT            (2U)
#define CRYPTO_PKA_MEM_MAP28_MEMORY_MAP28_MASK             (0x3FFU << CRYPTO_PKA_MEM_MAP28_MEMORY_MAP28_SHIFT)          /* 0x00000FFC */
/* PKA_MEM_MAP29 */
#define CRYPTO_PKA_MEM_MAP29_OFFSET                        (0x874U)
#define CRYPTO_PKA_MEM_MAP29_MEMORY_MAP29_SHIFT            (2U)
#define CRYPTO_PKA_MEM_MAP29_MEMORY_MAP29_MASK             (0x3FFU << CRYPTO_PKA_MEM_MAP29_MEMORY_MAP29_SHIFT)          /* 0x00000FFC */
/* PKA_MEM_MAP30 */
#define CRYPTO_PKA_MEM_MAP30_OFFSET                        (0x878U)
#define CRYPTO_PKA_MEM_MAP30_MEMORY_MAP30_SHIFT            (2U)
#define CRYPTO_PKA_MEM_MAP30_MEMORY_MAP30_MASK             (0x3FFU << CRYPTO_PKA_MEM_MAP30_MEMORY_MAP30_SHIFT)          /* 0x00000FFC */
/* PKA_MEM_MAP31 */
#define CRYPTO_PKA_MEM_MAP31_OFFSET                        (0x87CU)
#define CRYPTO_PKA_MEM_MAP31_MEMORY_MAP31_SHIFT            (2U)
#define CRYPTO_PKA_MEM_MAP31_MEMORY_MAP31_MASK             (0x3FFU << CRYPTO_PKA_MEM_MAP31_MEMORY_MAP31_SHIFT)          /* 0x00000FFC */
/* PKA_OPCODE */
#define CRYPTO_PKA_OPCODE_OFFSET                           (0x880U)
#define CRYPTO_PKA_OPCODE_TAG_SHIFT                        (0U)
#define CRYPTO_PKA_OPCODE_TAG_MASK                         (0x3FU << CRYPTO_PKA_OPCODE_TAG_SHIFT)                       /* 0x0000003F */
#define CRYPTO_PKA_OPCODE_REG_R_SHIFT                      (6U)
#define CRYPTO_PKA_OPCODE_REG_R_MASK                       (0x3FU << CRYPTO_PKA_OPCODE_REG_R_SHIFT)                     /* 0x00000FC0 */
#define CRYPTO_PKA_OPCODE_REG_B_SHIFT                      (12U)
#define CRYPTO_PKA_OPCODE_REG_B_MASK                       (0x3FU << CRYPTO_PKA_OPCODE_REG_B_SHIFT)                     /* 0x0003F000 */
#define CRYPTO_PKA_OPCODE_REG_A_SHIFT                      (18U)
#define CRYPTO_PKA_OPCODE_REG_A_MASK                       (0x3FU << CRYPTO_PKA_OPCODE_REG_A_SHIFT)                     /* 0x00FC0000 */
#define CRYPTO_PKA_OPCODE_LEN_SHIFT                        (24U)
#define CRYPTO_PKA_OPCODE_LEN_MASK                         (0x7U << CRYPTO_PKA_OPCODE_LEN_SHIFT)                        /* 0x07000000 */
#define CRYPTO_PKA_OPCODE_OPCODE_SHIFT                     (27U)
#define CRYPTO_PKA_OPCODE_OPCODE_MASK                      (0x1FU << CRYPTO_PKA_OPCODE_OPCODE_SHIFT)                    /* 0xF8000000 */
/* N_NP_T0_T1_ADDR */
#define CRYPTO_N_NP_T0_T1_ADDR_OFFSET                      (0x884U)
#define CRYPTO_N_NP_T0_T1_ADDR_REG_N_SHIFT                 (0U)
#define CRYPTO_N_NP_T0_T1_ADDR_REG_N_MASK                  (0x1FU << CRYPTO_N_NP_T0_T1_ADDR_REG_N_SHIFT)                /* 0x0000001F */
#define CRYPTO_N_NP_T0_T1_ADDR_REG_NP_SHIFT                (5U)
#define CRYPTO_N_NP_T0_T1_ADDR_REG_NP_MASK                 (0x1FU << CRYPTO_N_NP_T0_T1_ADDR_REG_NP_SHIFT)               /* 0x000003E0 */
#define CRYPTO_N_NP_T0_T1_ADDR_REG_T0_SHIFT                (10U)
#define CRYPTO_N_NP_T0_T1_ADDR_REG_T0_MASK                 (0x1FU << CRYPTO_N_NP_T0_T1_ADDR_REG_T0_SHIFT)               /* 0x00007C00 */
#define CRYPTO_N_NP_T0_T1_ADDR_REG_T1_SHIFT                (15U)
#define CRYPTO_N_NP_T0_T1_ADDR_REG_T1_MASK                 (0x1FU << CRYPTO_N_NP_T0_T1_ADDR_REG_T1_SHIFT)               /* 0x000F8000 */
/* PKA_STATUS */
#define CRYPTO_PKA_STATUS_OFFSET                           (0x888U)
#define CRYPTO_PKA_STATUS                                  (0x1U)
#define CRYPTO_PKA_STATUS_PIPE_IS_BUSY_SHIFT               (0U)
#define CRYPTO_PKA_STATUS_PIPE_IS_BUSY_MASK                (0x1U << CRYPTO_PKA_STATUS_PIPE_IS_BUSY_SHIFT)               /* 0x00000001 */
#define CRYPTO_PKA_STATUS_PKA_BUSY_SHIFT                   (1U)
#define CRYPTO_PKA_STATUS_PKA_BUSY_MASK                    (0x1U << CRYPTO_PKA_STATUS_PKA_BUSY_SHIFT)                   /* 0x00000002 */
#define CRYPTO_PKA_STATUS_ALU_OUT_ZERO_SHIFT               (2U)
#define CRYPTO_PKA_STATUS_ALU_OUT_ZERO_MASK                (0x1U << CRYPTO_PKA_STATUS_ALU_OUT_ZERO_SHIFT)               /* 0x00000004 */
#define CRYPTO_PKA_STATUS_ALU_MOD_OVFLW_SHIFT              (3U)
#define CRYPTO_PKA_STATUS_ALU_MOD_OVFLW_MASK               (0x1U << CRYPTO_PKA_STATUS_ALU_MOD_OVFLW_SHIFT)              /* 0x00000008 */
#define CRYPTO_PKA_STATUS_DIV_BY_ZERO_SHIFT                (4U)
#define CRYPTO_PKA_STATUS_DIV_BY_ZERO_MASK                 (0x1U << CRYPTO_PKA_STATUS_DIV_BY_ZERO_SHIFT)                /* 0x00000010 */
#define CRYPTO_PKA_STATUS_ALU_CARRY_SHIFT                  (5U)
#define CRYPTO_PKA_STATUS_ALU_CARRY_MASK                   (0x1U << CRYPTO_PKA_STATUS_ALU_CARRY_SHIFT)                  /* 0x00000020 */
#define CRYPTO_PKA_STATUS_ALU_SIGN_OUT_SHIFT               (6U)
#define CRYPTO_PKA_STATUS_ALU_SIGN_OUT_MASK                (0x1U << CRYPTO_PKA_STATUS_ALU_SIGN_OUT_SHIFT)               /* 0x00000040 */
#define CRYPTO_PKA_STATUS_MODINV_OF_ZERO_SHIFT             (7U)
#define CRYPTO_PKA_STATUS_MODINV_OF_ZERO_MASK              (0x1U << CRYPTO_PKA_STATUS_MODINV_OF_ZERO_SHIFT)             /* 0x00000080 */
#define CRYPTO_PKA_STATUS_PKA_CPU_BUSY_SHIFT               (8U)
#define CRYPTO_PKA_STATUS_PKA_CPU_BUSY_MASK                (0x1U << CRYPTO_PKA_STATUS_PKA_CPU_BUSY_SHIFT)               /* 0x00000100 */
#define CRYPTO_PKA_STATUS_OPCODE_SHIFT                     (9U)
#define CRYPTO_PKA_STATUS_OPCODE_MASK                      (0x1FU << CRYPTO_PKA_STATUS_OPCODE_SHIFT)                    /* 0x00003E00 */
#define CRYPTO_PKA_STATUS_TAG_SHIFT                        (14U)
#define CRYPTO_PKA_STATUS_TAG_MASK                         (0x3FU << CRYPTO_PKA_STATUS_TAG_SHIFT)                       /* 0x000FC000 */
/* PKA_SW_RESET */
#define CRYPTO_PKA_SW_RESET_OFFSET                         (0x88CU)
#define CRYPTO_PKA_SW_RESET_PKA_SW_RESET_SHIFT             (0U)
#define CRYPTO_PKA_SW_RESET_PKA_SW_RESET_MASK              (0x1U << CRYPTO_PKA_SW_RESET_PKA_SW_RESET_SHIFT)             /* 0x00000001 */
/* PKA_L0 */
#define CRYPTO_PKA_L0_OFFSET                               (0x890U)
#define CRYPTO_PKA_L0_PKA_L0_SHIFT                         (0U)
#define CRYPTO_PKA_L0_PKA_L0_MASK                          (0x1FFFU << CRYPTO_PKA_L0_PKA_L0_SHIFT)                      /* 0x00001FFF */
/* PKA_L1 */
#define CRYPTO_PKA_L1_OFFSET                               (0x894U)
#define CRYPTO_PKA_L1_PKA_L1_SHIFT                         (0U)
#define CRYPTO_PKA_L1_PKA_L1_MASK                          (0x1FFFU << CRYPTO_PKA_L1_PKA_L1_SHIFT)                      /* 0x00001FFF */
/* PKA_L2 */
#define CRYPTO_PKA_L2_OFFSET                               (0x898U)
#define CRYPTO_PKA_L2_PKA_L2_SHIFT                         (0U)
#define CRYPTO_PKA_L2_PKA_L2_MASK                          (0x1FFFU << CRYPTO_PKA_L2_PKA_L2_SHIFT)                      /* 0x00001FFF */
/* PKA_L3 */
#define CRYPTO_PKA_L3_OFFSET                               (0x89CU)
#define CRYPTO_PKA_L3_PKA_L3_SHIFT                         (0U)
#define CRYPTO_PKA_L3_PKA_L3_MASK                          (0x1FFFU << CRYPTO_PKA_L3_PKA_L3_SHIFT)                      /* 0x00001FFF */
/* PKA_L4 */
#define CRYPTO_PKA_L4_OFFSET                               (0x8A0U)
#define CRYPTO_PKA_L4_PKA_L4_SHIFT                         (0U)
#define CRYPTO_PKA_L4_PKA_L4_MASK                          (0x1FFFU << CRYPTO_PKA_L4_PKA_L4_SHIFT)                      /* 0x00001FFF */
/* PKA_L5 */
#define CRYPTO_PKA_L5_OFFSET                               (0x8A4U)
#define CRYPTO_PKA_L5_PKA_L5_SHIFT                         (0U)
#define CRYPTO_PKA_L5_PKA_L5_MASK                          (0x1FFFU << CRYPTO_PKA_L5_PKA_L5_SHIFT)                      /* 0x00001FFF */
/* PKA_L6 */
#define CRYPTO_PKA_L6_OFFSET                               (0x8A8U)
#define CRYPTO_PKA_L6_PKA_L6_SHIFT                         (0U)
#define CRYPTO_PKA_L6_PKA_L6_MASK                          (0x1FFFU << CRYPTO_PKA_L6_PKA_L6_SHIFT)                      /* 0x00001FFF */
/* PKA_L7 */
#define CRYPTO_PKA_L7_OFFSET                               (0x8ACU)
#define CRYPTO_PKA_L7_PKA_L7_SHIFT                         (0U)
#define CRYPTO_PKA_L7_PKA_L7_MASK                          (0x1FFFU << CRYPTO_PKA_L7_PKA_L7_SHIFT)                      /* 0x00001FFF */
/* PKA_PIPE_RDY */
#define CRYPTO_PKA_PIPE_RDY_OFFSET                         (0x8B0U)
#define CRYPTO_PKA_PIPE_RDY                                (0x1U)
#define CRYPTO_PKA_PIPE_RDY_PKA_PIPE_RDY_SHIFT             (0U)
#define CRYPTO_PKA_PIPE_RDY_PKA_PIPE_RDY_MASK              (0x1U << CRYPTO_PKA_PIPE_RDY_PKA_PIPE_RDY_SHIFT)             /* 0x00000001 */
/* PKA_DONE */
#define CRYPTO_PKA_DONE_OFFSET                             (0x8B4U)
#define CRYPTO_PKA_DONE                                    (0x1U)
#define CRYPTO_PKA_DONE_PKA_DONE_SHIFT                     (0U)
#define CRYPTO_PKA_DONE_PKA_DONE_MASK                      (0x1U << CRYPTO_PKA_DONE_PKA_DONE_SHIFT)                     /* 0x00000001 */
/* PKA_MON_SELECT */
#define CRYPTO_PKA_MON_SELECT_OFFSET                       (0x8B8U)
#define CRYPTO_PKA_MON_SELECT_PKA_MON_SELECT_SHIFT         (0U)
#define CRYPTO_PKA_MON_SELECT_PKA_MON_SELECT_MASK          (0xFU << CRYPTO_PKA_MON_SELECT_PKA_MON_SELECT_SHIFT)         /* 0x0000000F */
/* PKA_DEBUG_REG_EN */
#define CRYPTO_PKA_DEBUG_REG_EN_OFFSET                     (0x8BCU)
#define CRYPTO_PKA_DEBUG_REG_EN_PKA_DEBUG_REG_EN_SHIFT     (0U)
#define CRYPTO_PKA_DEBUG_REG_EN_PKA_DEBUG_REG_EN_MASK      (0x1U << CRYPTO_PKA_DEBUG_REG_EN_PKA_DEBUG_REG_EN_SHIFT)     /* 0x00000001 */
/* DEBUG_CNT_ADDR */
#define CRYPTO_DEBUG_CNT_ADDR_OFFSET                       (0x8C0U)
#define CRYPTO_DEBUG_CNT_ADDR_DEBUG_CNT_ADDR_SHIFT         (0U)
#define CRYPTO_DEBUG_CNT_ADDR_DEBUG_CNT_ADDR_MASK          (0xFFFFFU << CRYPTO_DEBUG_CNT_ADDR_DEBUG_CNT_ADDR_SHIFT)     /* 0x000FFFFF */
/* DEBUG_EXT_ADDR */
#define CRYPTO_DEBUG_EXT_ADDR_OFFSET                       (0x8C4U)
#define CRYPTO_DEBUG_EXT_ADDR_DEBUG_EXT_ADDR_SHIFT         (0U)
#define CRYPTO_DEBUG_EXT_ADDR_DEBUG_EXT_ADDR_MASK          (0x1U << CRYPTO_DEBUG_EXT_ADDR_DEBUG_EXT_ADDR_SHIFT)         /* 0x00000001 */
/* PKA_DEBUG_HALT */
#define CRYPTO_PKA_DEBUG_HALT_OFFSET                       (0x8C8U)
#define CRYPTO_PKA_DEBUG_HALT                              (0x0U)
#define CRYPTO_PKA_DEBUG_HALT_PKA_DEBUG_HALT_SHIFT         (0U)
#define CRYPTO_PKA_DEBUG_HALT_PKA_DEBUG_HALT_MASK          (0x1U << CRYPTO_PKA_DEBUG_HALT_PKA_DEBUG_HALT_SHIFT)         /* 0x00000001 */
/* PKA_MON_READ */
#define CRYPTO_PKA_MON_READ_OFFSET                         (0x8D0U)
#define CRYPTO_PKA_MON_READ                                (0xFEEFU)
#define CRYPTO_PKA_MON_READ_PKA_MON_READ_SHIFT             (0U)
#define CRYPTO_PKA_MON_READ_PKA_MON_READ_MASK              (0xFFFFFFFFU << CRYPTO_PKA_MON_READ_PKA_MON_READ_SHIFT)      /* 0xFFFFFFFF */
/* PKA_INT_ENA */
#define CRYPTO_PKA_INT_ENA_OFFSET                          (0x8D4U)
#define CRYPTO_PKA_INT_ENA_PKA_INT_ENA_SHIFT               (0U)
#define CRYPTO_PKA_INT_ENA_PKA_INT_ENA_MASK                (0x1U << CRYPTO_PKA_INT_ENA_PKA_INT_ENA_SHIFT)               /* 0x00000001 */
/* PKA_INT_ST */
#define CRYPTO_PKA_INT_ST_OFFSET                           (0x8D8U)
#define CRYPTO_PKA_INT_ST_PKA_INT_ST_SHIFT                 (0U)
#define CRYPTO_PKA_INT_ST_PKA_INT_ST_MASK                  (0x1U << CRYPTO_PKA_INT_ST_PKA_INT_ST_SHIFT)                 /* 0x00000001 */
/* SRAM_ADDR */
#define CRYPTO_SRAM_ADDR_OFFSET                            (0x1000U)
#define CRYPTO_SRAM_ADDR_SRAM_ADDR_SHIFT                   (0U)
#define CRYPTO_SRAM_ADDR_SRAM_ADDR_MASK                    (0xFFFFFFFFU << CRYPTO_SRAM_ADDR_SRAM_ADDR_SHIFT)            /* 0xFFFFFFFF */
/******************************************TRNG******************************************/
/* CFG */
#define TRNG_CFG_OFFSET                                    (0x0U)
#define TRNG_CFG_AES_KEY_SIZE_SHIFT                        (0U)
#define TRNG_CFG_AES_KEY_SIZE_MASK                         (0x3U << TRNG_CFG_AES_KEY_SIZE_SHIFT)                        /* 0x00000003 */
#define TRNG_CFG_PR_FLAG_SHIFT                             (2U)
#define TRNG_CFG_PR_FLAG_MASK                              (0x1U << TRNG_CFG_PR_FLAG_SHIFT)                             /* 0x00000004 */
#define TRNG_CFG_HASH_DF_SHIFT                             (3U)
#define TRNG_CFG_HASH_DF_MASK                              (0x1U << TRNG_CFG_HASH_DF_SHIFT)                             /* 0x00000008 */
/* NONCE_LEN */
#define TRNG_NONCE_LEN_OFFSET                              (0x8U)
#define TRNG_NONCE_LEN_NONCE_LEN_SHIFT                     (0U)
#define TRNG_NONCE_LEN_NONCE_LEN_MASK                      (0xFFFFFFFFU << TRNG_NONCE_LEN_NONCE_LEN_SHIFT)              /* 0xFFFFFFFF */
/* ADDITION_LEN */
#define TRNG_ADDITION_LEN_OFFSET                           (0xCU)
#define TRNG_ADDITION_LEN_ADDITION_LEN_SHIFT               (0U)
#define TRNG_ADDITION_LEN_ADDITION_LEN_MASK                (0xFFFFFFFFU << TRNG_ADDITION_LEN_ADDITION_LEN_SHIFT)        /* 0xFFFFFFFF */
/* CTRL */
#define TRNG_CTRL_OFFSET                                   (0x10U)
#define TRNG_CTRL_INST_REQ_SHIFT                           (0U)
#define TRNG_CTRL_INST_REQ_MASK                            (0x1U << TRNG_CTRL_INST_REQ_SHIFT)                           /* 0x00000001 */
#define TRNG_CTRL_RESEED_REQ_SHIFT                         (1U)
#define TRNG_CTRL_RESEED_REQ_MASK                          (0x1U << TRNG_CTRL_RESEED_REQ_SHIFT)                         /* 0x00000002 */
#define TRNG_CTRL_TEST_REQ_SHIFT                           (2U)
#define TRNG_CTRL_TEST_REQ_MASK                            (0x1U << TRNG_CTRL_TEST_REQ_SHIFT)                           /* 0x00000004 */
#define TRNG_CTRL_SW_DRNG_REQ_SHIFT                        (3U)
#define TRNG_CTRL_SW_DRNG_REQ_MASK                         (0x1U << TRNG_CTRL_SW_DRNG_REQ_SHIFT)                        /* 0x00000008 */
#define TRNG_CTRL_SW_TRNG_REQ_SHIFT                        (4U)
#define TRNG_CTRL_SW_TRNG_REQ_MASK                         (0x1U << TRNG_CTRL_SW_TRNG_REQ_SHIFT)                        /* 0x00000010 */
/* STATE */
#define TRNG_STATE_OFFSET                                  (0x14U)
#define TRNG_STATE_INST_ACK_SHIFT                          (0U)
#define TRNG_STATE_INST_ACK_MASK                           (0x1U << TRNG_STATE_INST_ACK_SHIFT)                          /* 0x00000001 */
#define TRNG_STATE_RESEED_ACK_SHIFT                        (1U)
#define TRNG_STATE_RESEED_ACK_MASK                         (0x1U << TRNG_STATE_RESEED_ACK_SHIFT)                        /* 0x00000002 */
#define TRNG_STATE_TEST_ACK_SHIFT                          (2U)
#define TRNG_STATE_TEST_ACK_MASK                           (0x1U << TRNG_STATE_TEST_ACK_SHIFT)                          /* 0x00000004 */
#define TRNG_STATE_SW_DRNG_ACK_SHIFT                       (3U)
#define TRNG_STATE_SW_DRNG_ACK_MASK                        (0x1U << TRNG_STATE_SW_DRNG_ACK_SHIFT)                       /* 0x00000008 */
#define TRNG_STATE_SW_TRNG_ACK_SHIFT                       (4U)
#define TRNG_STATE_SW_TRNG_ACK_MASK                        (0x1U << TRNG_STATE_SW_TRNG_ACK_SHIFT)                       /* 0x00000010 */
#define TRNG_STATE_DRNG_TEST_FAIL_SHIFT                    (5U)
#define TRNG_STATE_DRNG_TEST_FAIL_MASK                     (0x1U << TRNG_STATE_DRNG_TEST_FAIL_SHIFT)                    /* 0x00000020 */
#define TRNG_STATE_ALLAN_AVAR_OVERFLOW_SHIFT               (6U)
#define TRNG_STATE_ALLAN_AVAR_OVERFLOW_MASK                (0x1U << TRNG_STATE_ALLAN_AVAR_OVERFLOW_SHIFT)               /* 0x00000040 */
#define TRNG_STATE_WORK_CLK_ABNORMAL_SHIFT                 (7U)
#define TRNG_STATE_WORK_CLK_ABNORMAL_MASK                  (0x1U << TRNG_STATE_WORK_CLK_ABNORMAL_SHIFT)                 /* 0x00000080 */
/* INT_EN */
#define TRNG_INT_EN_OFFSET                                 (0x18U)
#define TRNG_INT_EN_INST_INT_EN_SHIFT                      (0U)
#define TRNG_INT_EN_INST_INT_EN_MASK                       (0x1U << TRNG_INT_EN_INST_INT_EN_SHIFT)                      /* 0x00000001 */
#define TRNG_INT_EN_RESEED_INT_EN_SHIFT                    (1U)
#define TRNG_INT_EN_RESEED_INT_EN_MASK                     (0x1U << TRNG_INT_EN_RESEED_INT_EN_SHIFT)                    /* 0x00000002 */
#define TRNG_INT_EN_TEST_INT_EN_SHIFT                      (2U)
#define TRNG_INT_EN_TEST_INT_EN_MASK                       (0x1U << TRNG_INT_EN_TEST_INT_EN_SHIFT)                      /* 0x00000004 */
#define TRNG_INT_EN_SW_DRNG_INT_EN_SHIFT                   (3U)
#define TRNG_INT_EN_SW_DRNG_INT_EN_MASK                    (0x1U << TRNG_INT_EN_SW_DRNG_INT_EN_SHIFT)                   /* 0x00000008 */
#define TRNG_INT_EN_SW_TRNG_INT_EN_SHIFT                   (4U)
#define TRNG_INT_EN_SW_TRNG_INT_EN_MASK                    (0x1U << TRNG_INT_EN_SW_TRNG_INT_EN_SHIFT)                   /* 0x00000010 */
#define TRNG_INT_EN_DRNG_TEST_FAIL_INT_EN_SHIFT            (5U)
#define TRNG_INT_EN_DRNG_TEST_FAIL_INT_EN_MASK             (0x1U << TRNG_INT_EN_DRNG_TEST_FAIL_INT_EN_SHIFT)            /* 0x00000020 */
#define TRNG_INT_EN_ALLAN_INT_EN_SHIFT                     (6U)
#define TRNG_INT_EN_ALLAN_INT_EN_MASK                      (0x1U << TRNG_INT_EN_ALLAN_INT_EN_SHIFT)                     /* 0x00000040 */
#define TRNG_INT_EN_WORK_CLK_ABNORMAL_INT_EN_SHIFT         (7U)
#define TRNG_INT_EN_WORK_CLK_ABNORMAL_INT_EN_MASK          (0x1U << TRNG_INT_EN_WORK_CLK_ABNORMAL_INT_EN_SHIFT)         /* 0x00000080 */
/* TEST_CNT */
#define TRNG_TEST_CNT_OFFSET                               (0x1CU)
#define TRNG_TEST_CNT_TEST_INTERVAL_SHIFT                  (0U)
#define TRNG_TEST_CNT_TEST_INTERVAL_MASK                   (0xFFFFFFFFU << TRNG_TEST_CNT_TEST_INTERVAL_SHIFT)           /* 0xFFFFFFFF */
/* RESEED_CNT */
#define TRNG_RESEED_CNT_OFFSET                             (0x20U)
#define TRNG_RESEED_CNT_RESEED_INTERVAL_SHIFT              (0U)
#define TRNG_RESEED_CNT_RESEED_INTERVAL_MASK               (0xFFFFFFFFU << TRNG_RESEED_CNT_RESEED_INTERVAL_SHIFT)       /* 0xFFFFFFFF */
/* UPDATE_CNT */
#define TRNG_UPDATE_CNT_OFFSET                             (0x24U)
#define TRNG_UPDATE_CNT_UPDATE_INTERVAL_SHIFT              (0U)
#define TRNG_UPDATE_CNT_UPDATE_INTERVAL_MASK               (0xFFFFFFFFU << TRNG_UPDATE_CNT_UPDATE_INTERVAL_SHIFT)       /* 0xFFFFFFFF */
/* ALLAN_ACC_NUM */
#define TRNG_ALLAN_ACC_NUM_OFFSET                          (0x28U)
#define TRNG_ALLAN_ACC_NUM_ALLAN_ACC_NUM_SHIFT             (0U)
#define TRNG_ALLAN_ACC_NUM_ALLAN_ACC_NUM_MASK              (0xFFFFU << TRNG_ALLAN_ACC_NUM_ALLAN_ACC_NUM_SHIFT)          /* 0x0000FFFF */
/* ALLAN_LIMIT_LOW */
#define TRNG_ALLAN_LIMIT_LOW_OFFSET                        (0x2CU)
#define TRNG_ALLAN_LIMIT_LOW_ALLAN_LIMIT_LOW_SHIFT         (0U)
#define TRNG_ALLAN_LIMIT_LOW_ALLAN_LIMIT_LOW_MASK          (0x7FFFFFU << TRNG_ALLAN_LIMIT_LOW_ALLAN_LIMIT_LOW_SHIFT)    /* 0x007FFFFF */
/* ALLAN_LIMIT_HIGH */
#define TRNG_ALLAN_LIMIT_HIGH_OFFSET                       (0x30U)
#define TRNG_ALLAN_LIMIT_HIGH_ALLAN_LIMIT_HIGH_SHIFT       (0U)
#define TRNG_ALLAN_LIMIT_HIGH_ALLAN_LIMIT_HIGH_MASK        (0x7FFFFFU << TRNG_ALLAN_LIMIT_HIGH_ALLAN_LIMIT_HIGH_SHIFT)  /* 0x007FFFFF */
/* ALLAN_AVAR_RESULT */
#define TRNG_ALLAN_AVAR_RESULT_OFFSET                      (0x34U)
#define TRNG_ALLAN_AVAR_RESULT_ALLAN_AVAR_RESULT_SHIFT     (0U)
#define TRNG_ALLAN_AVAR_RESULT_ALLAN_AVAR_RESULT_MASK      (0x7FFFFFU << TRNG_ALLAN_AVAR_RESULT_ALLAN_AVAR_RESULT_SHIFT) /* 0x007FFFFF */
/* AUTO_CLK_GATE */
#define TRNG_AUTO_CLK_GATE_OFFSET                          (0x38U)
#define TRNG_AUTO_CLK_GATE_AUTO_CLKGATE_EN_SHIFT           (0U)
#define TRNG_AUTO_CLK_GATE_AUTO_CLKGATE_EN_MASK            (0x1U << TRNG_AUTO_CLK_GATE_AUTO_CLKGATE_EN_SHIFT)           /* 0x00000001 */
/* VERSION */
#define TRNG_VERSION_OFFSET                                (0x44U)
#define TRNG_VERSION                                       (0x1U)
#define TRNG_VERSION_VERSION_CODE_SHIFT                    (0U)
#define TRNG_VERSION_VERSION_CODE_MASK                     (0xFFFFFFFFU << TRNG_VERSION_VERSION_CODE_SHIFT)             /* 0xFFFFFFFF */
/* TRNG_DATA_0 */
#define TRNG_TRNG_DATA_0_OFFSET                            (0x50U)
#define TRNG_TRNG_DATA_0                                   (0x0U)
#define TRNG_TRNG_DATA_0_TRNG_DATA_0_SHIFT                 (0U)
#define TRNG_TRNG_DATA_0_TRNG_DATA_0_MASK                  (0xFFFFFFFFU << TRNG_TRNG_DATA_0_TRNG_DATA_0_SHIFT)          /* 0xFFFFFFFF */
/* TRNG_DATA_1 */
#define TRNG_TRNG_DATA_1_OFFSET                            (0x54U)
#define TRNG_TRNG_DATA_1                                   (0x0U)
#define TRNG_TRNG_DATA_1_TRNG_DATA_1_SHIFT                 (0U)
#define TRNG_TRNG_DATA_1_TRNG_DATA_1_MASK                  (0xFFFFFFFFU << TRNG_TRNG_DATA_1_TRNG_DATA_1_SHIFT)          /* 0xFFFFFFFF */
/* TRNG_DATA_2 */
#define TRNG_TRNG_DATA_2_OFFSET                            (0x58U)
#define TRNG_TRNG_DATA_2                                   (0x0U)
#define TRNG_TRNG_DATA_2_TRNG_DATA_2_SHIFT                 (0U)
#define TRNG_TRNG_DATA_2_TRNG_DATA_2_MASK                  (0xFFFFFFFFU << TRNG_TRNG_DATA_2_TRNG_DATA_2_SHIFT)          /* 0xFFFFFFFF */
/* TRNG_DATA_3 */
#define TRNG_TRNG_DATA_3_OFFSET                            (0x5CU)
#define TRNG_TRNG_DATA_3                                   (0x0U)
#define TRNG_TRNG_DATA_3_TRNG_DATA_3_SHIFT                 (0U)
#define TRNG_TRNG_DATA_3_TRNG_DATA_3_MASK                  (0xFFFFFFFFU << TRNG_TRNG_DATA_3_TRNG_DATA_3_SHIFT)          /* 0xFFFFFFFF */
/* TRNG_DATA_4 */
#define TRNG_TRNG_DATA_4_OFFSET                            (0x60U)
#define TRNG_TRNG_DATA_4                                   (0x0U)
#define TRNG_TRNG_DATA_4_TRNG_DATA_4_SHIFT                 (0U)
#define TRNG_TRNG_DATA_4_TRNG_DATA_4_MASK                  (0xFFFFFFFFU << TRNG_TRNG_DATA_4_TRNG_DATA_4_SHIFT)          /* 0xFFFFFFFF */
/* TRNG_DATA_5 */
#define TRNG_TRNG_DATA_5_OFFSET                            (0x64U)
#define TRNG_TRNG_DATA_5                                   (0x0U)
#define TRNG_TRNG_DATA_5_TRNG_DATA_5_SHIFT                 (0U)
#define TRNG_TRNG_DATA_5_TRNG_DATA_5_MASK                  (0xFFFFFFFFU << TRNG_TRNG_DATA_5_TRNG_DATA_5_SHIFT)          /* 0xFFFFFFFF */
/* TRNG_DATA_6 */
#define TRNG_TRNG_DATA_6_OFFSET                            (0x68U)
#define TRNG_TRNG_DATA_6                                   (0x0U)
#define TRNG_TRNG_DATA_6_TRNG_DATA_6_SHIFT                 (0U)
#define TRNG_TRNG_DATA_6_TRNG_DATA_6_MASK                  (0xFFFFFFFFU << TRNG_TRNG_DATA_6_TRNG_DATA_6_SHIFT)          /* 0xFFFFFFFF */
/* TRNG_DATA_7 */
#define TRNG_TRNG_DATA_7_OFFSET                            (0x6CU)
#define TRNG_TRNG_DATA_7                                   (0x0U)
#define TRNG_TRNG_DATA_7_TRNG_DATA_7_SHIFT                 (0U)
#define TRNG_TRNG_DATA_7_TRNG_DATA_7_MASK                  (0xFFFFFFFFU << TRNG_TRNG_DATA_7_TRNG_DATA_7_SHIFT)          /* 0xFFFFFFFF */
/* DRNG_DATA_0 */
#define TRNG_DRNG_DATA_0_OFFSET                            (0x70U)
#define TRNG_DRNG_DATA_0                                   (0x0U)
#define TRNG_DRNG_DATA_0_DRNG_DATA_0_SHIFT                 (0U)
#define TRNG_DRNG_DATA_0_DRNG_DATA_0_MASK                  (0xFFFFFFFFU << TRNG_DRNG_DATA_0_DRNG_DATA_0_SHIFT)          /* 0xFFFFFFFF */
/* DRNG_DATA_1 */
#define TRNG_DRNG_DATA_1_OFFSET                            (0x74U)
#define TRNG_DRNG_DATA_1                                   (0x0U)
#define TRNG_DRNG_DATA_1_DRNG_DATA_1_SHIFT                 (0U)
#define TRNG_DRNG_DATA_1_DRNG_DATA_1_MASK                  (0xFFFFFFFFU << TRNG_DRNG_DATA_1_DRNG_DATA_1_SHIFT)          /* 0xFFFFFFFF */
/* DRNG_DATA_2 */
#define TRNG_DRNG_DATA_2_OFFSET                            (0x78U)
#define TRNG_DRNG_DATA_2                                   (0x0U)
#define TRNG_DRNG_DATA_2_DRNG_DATA_2_SHIFT                 (0U)
#define TRNG_DRNG_DATA_2_DRNG_DATA_2_MASK                  (0xFFFFFFFFU << TRNG_DRNG_DATA_2_DRNG_DATA_2_SHIFT)          /* 0xFFFFFFFF */
/* DRNG_DATA_3 */
#define TRNG_DRNG_DATA_3_OFFSET                            (0x7CU)
#define TRNG_DRNG_DATA_3                                   (0x0U)
#define TRNG_DRNG_DATA_3_DRNG_DATA_3_SHIFT                 (0U)
#define TRNG_DRNG_DATA_3_DRNG_DATA_3_MASK                  (0xFFFFFFFFU << TRNG_DRNG_DATA_3_DRNG_DATA_3_SHIFT)          /* 0xFFFFFFFF */
/* DRNG_DATA_4 */
#define TRNG_DRNG_DATA_4_OFFSET                            (0x80U)
#define TRNG_DRNG_DATA_4                                   (0x0U)
#define TRNG_DRNG_DATA_4_DRNG_DATA_4_SHIFT                 (0U)
#define TRNG_DRNG_DATA_4_DRNG_DATA_4_MASK                  (0xFFFFFFFFU << TRNG_DRNG_DATA_4_DRNG_DATA_4_SHIFT)          /* 0xFFFFFFFF */
/* DRNG_DATA_5 */
#define TRNG_DRNG_DATA_5_OFFSET                            (0x84U)
#define TRNG_DRNG_DATA_5                                   (0x0U)
#define TRNG_DRNG_DATA_5_DRNG_DATA_5_SHIFT                 (0U)
#define TRNG_DRNG_DATA_5_DRNG_DATA_5_MASK                  (0xFFFFFFFFU << TRNG_DRNG_DATA_5_DRNG_DATA_5_SHIFT)          /* 0xFFFFFFFF */
/* DRNG_DATA_6 */
#define TRNG_DRNG_DATA_6_OFFSET                            (0x88U)
#define TRNG_DRNG_DATA_6                                   (0x0U)
#define TRNG_DRNG_DATA_6_DRNG_DATA_6_SHIFT                 (0U)
#define TRNG_DRNG_DATA_6_DRNG_DATA_6_MASK                  (0xFFFFFFFFU << TRNG_DRNG_DATA_6_DRNG_DATA_6_SHIFT)          /* 0xFFFFFFFF */
/* DRNG_DATA_7 */
#define TRNG_DRNG_DATA_7_OFFSET                            (0x8CU)
#define TRNG_DRNG_DATA_7                                   (0x0U)
#define TRNG_DRNG_DATA_7_DRNG_DATA_7_SHIFT                 (0U)
#define TRNG_DRNG_DATA_7_DRNG_DATA_7_MASK                  (0xFFFFFFFFU << TRNG_DRNG_DATA_7_DRNG_DATA_7_SHIFT)          /* 0xFFFFFFFF */
/* WORK_CLK_EN */
#define TRNG_WORK_CLK_EN_OFFSET                            (0x90U)
#define TRNG_WORK_CLK_EN_WORK_CLK_EN_SHIFT                 (0U)
#define TRNG_WORK_CLK_EN_WORK_CLK_EN_MASK                  (0x1U << TRNG_WORK_CLK_EN_WORK_CLK_EN_SHIFT)                 /* 0x00000001 */
/* WORK_CLK_FLAG */
#define TRNG_WORK_CLK_FLAG_OFFSET                          (0x94U)
#define TRNG_WORK_CLK_FLAG_WORK_CLK_FLAG_SHIFT             (0U)
#define TRNG_WORK_CLK_FLAG_WORK_CLK_FLAG_MASK              (0x1U << TRNG_WORK_CLK_FLAG_WORK_CLK_FLAG_SHIFT)             /* 0x00000001 */
/* WORK_CLK_NUM_LIMIT */
#define TRNG_WORK_CLK_NUM_LIMIT_OFFSET                     (0x98U)
#define TRNG_WORK_CLK_NUM_LIMIT_WORK_CLK_NUM_LIMIT_SHIFT   (0U)
#define TRNG_WORK_CLK_NUM_LIMIT_WORK_CLK_NUM_LIMIT_MASK    (0xFFFFU << TRNG_WORK_CLK_NUM_LIMIT_WORK_CLK_NUM_LIMIT_SHIFT) /* 0x0000FFFF */
/* SOFT_RING_EN0 */
#define TRNG_SOFT_RING_EN0_OFFSET                          (0x9CU)
#define TRNG_SOFT_RING_EN0_SOFT_RING_EN0_SHIFT             (0U)
#define TRNG_SOFT_RING_EN0_SOFT_RING_EN0_MASK              (0xFFFFU << TRNG_SOFT_RING_EN0_SOFT_RING_EN0_SHIFT)          /* 0x0000FFFF */
/* SOFT_RING_EN2 */
#define TRNG_SOFT_RING_EN2_OFFSET                          (0xA4U)
#define TRNG_SOFT_RING_EN2_SOFT_RING_EN2_SHIFT             (0U)
#define TRNG_SOFT_RING_EN2_SOFT_RING_EN2_MASK              (0x1U << TRNG_SOFT_RING_EN2_SOFT_RING_EN2_SHIFT)             /* 0x00000001 */
/* STR1_0_INIT */
#define TRNG_STR1_0_INIT_OFFSET                            (0xACU)
#define TRNG_STR1_0_INIT_STR1_0_INIT_SHIFT                 (0U)
#define TRNG_STR1_0_INIT_STR1_0_INIT_MASK                  (0x7FFFFFFFU << TRNG_STR1_0_INIT_STR1_0_INIT_SHIFT)          /* 0x7FFFFFFF */
/* ENTROPY_EN_CTL */
#define TRNG_ENTROPY_EN_CTL_OFFSET                         (0xB8U)
#define TRNG_ENTROPY_EN_CTL_ENTROPY_EN_SHIFT               (0U)
#define TRNG_ENTROPY_EN_CTL_ENTROPY_EN_MASK                (0x1U << TRNG_ENTROPY_EN_CTL_ENTROPY_EN_SHIFT)               /* 0x00000001 */
#define TRNG_ENTROPY_EN_CTL_ENTROPY_DLY_NUM_SHIFT          (8U)
#define TRNG_ENTROPY_EN_CTL_ENTROPY_DLY_NUM_MASK           (0xFFU << TRNG_ENTROPY_EN_CTL_ENTROPY_DLY_NUM_SHIFT)         /* 0x0000FF00 */
#define TRNG_ENTROPY_EN_CTL_ENTROPY_CNT_NUM_SHIFT          (16U)
#define TRNG_ENTROPY_EN_CTL_ENTROPY_CNT_NUM_MASK           (0xFFFFU << TRNG_ENTROPY_EN_CTL_ENTROPY_CNT_NUM_SHIFT)       /* 0xFFFF0000 */
/* ENTROPY_MASK_CTL */
#define TRNG_ENTROPY_MASK_CTL_OFFSET                       (0xBCU)
#define TRNG_ENTROPY_MASK_CTL_ENTROPY_CK_MASK_SHIFT        (0U)
#define TRNG_ENTROPY_MASK_CTL_ENTROPY_CK_MASK_MASK         (0x3U << TRNG_ENTROPY_MASK_CTL_ENTROPY_CK_MASK_SHIFT)        /* 0x00000003 */
#define TRNG_ENTROPY_MASK_CTL_ENTROPY_XOR_MASK_SHIFT       (4U)
#define TRNG_ENTROPY_MASK_CTL_ENTROPY_XOR_MASK_MASK        (0x3U << TRNG_ENTROPY_MASK_CTL_ENTROPY_XOR_MASK_SHIFT)       /* 0x00000030 */
/* ENTROPY_POST_CTL */
#define TRNG_ENTROPY_POST_CTL_OFFSET                       (0xC0U)
#define TRNG_ENTROPY_POST_CTL_ENTROPY_POST_XOR_EN_SHIFT    (0U)
#define TRNG_ENTROPY_POST_CTL_ENTROPY_POST_XOR_EN_MASK     (0x1U << TRNG_ENTROPY_POST_CTL_ENTROPY_POST_XOR_EN_SHIFT)    /* 0x00000001 */
#define TRNG_ENTROPY_POST_CTL_ENTROPY_POST_JVN_EN_SHIFT    (1U)
#define TRNG_ENTROPY_POST_CTL_ENTROPY_POST_JVN_EN_MASK     (0x1U << TRNG_ENTROPY_POST_CTL_ENTROPY_POST_JVN_EN_SHIFT)    /* 0x00000002 */
#define TRNG_ENTROPY_POST_CTL_BYPASS_NUM_JVN_SHIFT         (2U)
#define TRNG_ENTROPY_POST_CTL_BYPASS_NUM_JVN_MASK          (0xFFU << TRNG_ENTROPY_POST_CTL_BYPASS_NUM_JVN_SHIFT)        /* 0x000003FC */
/* ENTROPY_CK_CTL */
#define TRNG_ENTROPY_CK_CTL_OFFSET                         (0xC4U)
#define TRNG_ENTROPY_CK_CTL_ENTROPY_FB_CHECK_EN_SHIFT      (0U)
#define TRNG_ENTROPY_CK_CTL_ENTROPY_FB_CHECK_EN_MASK       (0x1U << TRNG_ENTROPY_CK_CTL_ENTROPY_FB_CHECK_EN_SHIFT)      /* 0x00000001 */
#define TRNG_ENTROPY_CK_CTL_ENTROPY_FI_CHECK_EN_SHIFT      (1U)
#define TRNG_ENTROPY_CK_CTL_ENTROPY_FI_CHECK_EN_MASK       (0x1U << TRNG_ENTROPY_CK_CTL_ENTROPY_FI_CHECK_EN_SHIFT)      /* 0x00000002 */
#define TRNG_ENTROPY_CK_CTL_ENTROPY_BI_CHECK_EN_SHIFT      (2U)
#define TRNG_ENTROPY_CK_CTL_ENTROPY_BI_CHECK_EN_MASK       (0x1U << TRNG_ENTROPY_CK_CTL_ENTROPY_BI_CHECK_EN_SHIFT)      /* 0x00000004 */
#define TRNG_ENTROPY_CK_CTL_ENTROPY_CHECK_MUST_PASS_SHIFT  (3U)
#define TRNG_ENTROPY_CK_CTL_ENTROPY_CHECK_MUST_PASS_MASK   (0x1U << TRNG_ENTROPY_CK_CTL_ENTROPY_CHECK_MUST_PASS_SHIFT)  /* 0x00000008 */
#define TRNG_ENTROPY_CK_CTL_ENTROPY_ALWAYS_CHECK_SHIFT     (4U)
#define TRNG_ENTROPY_CK_CTL_ENTROPY_ALWAYS_CHECK_MASK      (0x1U << TRNG_ENTROPY_CK_CTL_ENTROPY_ALWAYS_CHECK_SHIFT)     /* 0x00000010 */
/* ENTROPY_FB_LIMIT0 */
#define TRNG_ENTROPY_FB_LIMIT0_OFFSET                      (0xC8U)
#define TRNG_ENTROPY_FB_LIMIT0_ENTROPY_FB_BIT8_LIMIT_SHIFT (0U)
#define TRNG_ENTROPY_FB_LIMIT0_ENTROPY_FB_BIT8_LIMIT_MASK  (0x7U << TRNG_ENTROPY_FB_LIMIT0_ENTROPY_FB_BIT8_LIMIT_SHIFT) /* 0x00000007 */
#define TRNG_ENTROPY_FB_LIMIT0_ENTROPY_FB_BIT16_LIMIT_SHIFT (8U)
#define TRNG_ENTROPY_FB_LIMIT0_ENTROPY_FB_BIT16_LIMIT_MASK (0xFU << TRNG_ENTROPY_FB_LIMIT0_ENTROPY_FB_BIT16_LIMIT_SHIFT) /* 0x00000F00 */
#define TRNG_ENTROPY_FB_LIMIT0_ENTROPY_FB_BIT32_LIMIT_SHIFT (16U)
#define TRNG_ENTROPY_FB_LIMIT0_ENTROPY_FB_BIT32_LIMIT_MASK (0x1FU << TRNG_ENTROPY_FB_LIMIT0_ENTROPY_FB_BIT32_LIMIT_SHIFT) /* 0x001F0000 */
#define TRNG_ENTROPY_FB_LIMIT0_ENTROPY_FB_BIT64_LIMIT_SHIFT (24U)
#define TRNG_ENTROPY_FB_LIMIT0_ENTROPY_FB_BIT64_LIMIT_MASK (0x3FU << TRNG_ENTROPY_FB_LIMIT0_ENTROPY_FB_BIT64_LIMIT_SHIFT) /* 0x3F000000 */
/* ENTROPY_FB_LIMIT1 */
#define TRNG_ENTROPY_FB_LIMIT1_OFFSET                      (0xCCU)
#define TRNG_ENTROPY_FB_LIMIT1_ENTROPY_FB_BIT128_LIMIT_SHIFT (0U)
#define TRNG_ENTROPY_FB_LIMIT1_ENTROPY_FB_BIT128_LIMIT_MASK (0x7FU << TRNG_ENTROPY_FB_LIMIT1_ENTROPY_FB_BIT128_LIMIT_SHIFT) /* 0x0000007F */
#define TRNG_ENTROPY_FB_LIMIT1_ENTROPY_FB_BIT_FULL_LIMIT_SHIFT (16U)
#define TRNG_ENTROPY_FB_LIMIT1_ENTROPY_FB_BIT_FULL_LIMIT_MASK (0x1FFU << TRNG_ENTROPY_FB_LIMIT1_ENTROPY_FB_BIT_FULL_LIMIT_SHIFT) /* 0x01FF0000 */
/* ENTROPY_FI_BIT_NUM */
#define TRNG_ENTROPY_FI_BIT_NUM_OFFSET                     (0xD0U)
#define TRNG_ENTROPY_FI_BIT_NUM_ENTROPY_FI_BIT_NUM_SHIFT   (0U)
#define TRNG_ENTROPY_FI_BIT_NUM_ENTROPY_FI_BIT_NUM_MASK    (0xFFFFU << TRNG_ENTROPY_FI_BIT_NUM_ENTROPY_FI_BIT_NUM_SHIFT) /* 0x0000FFFF */
/* ENTROPY_FI_LIMIT */
#define TRNG_ENTROPY_FI_LIMIT_OFFSET                       (0xD4U)
#define TRNG_ENTROPY_FI_LIMIT_ENTROPY_FI_LIMIT_LOW_SHIFT   (0U)
#define TRNG_ENTROPY_FI_LIMIT_ENTROPY_FI_LIMIT_LOW_MASK    (0xFFFFU << TRNG_ENTROPY_FI_LIMIT_ENTROPY_FI_LIMIT_LOW_SHIFT) /* 0x0000FFFF */
#define TRNG_ENTROPY_FI_LIMIT_ENTROPY_FI_LIMIT_HIGH_SHIFT  (16U)
#define TRNG_ENTROPY_FI_LIMIT_ENTROPY_FI_LIMIT_HIGH_MASK   (0xFFFFU << TRNG_ENTROPY_FI_LIMIT_ENTROPY_FI_LIMIT_HIGH_SHIFT) /* 0xFFFF0000 */
/* ENTROPY_BI_CTL */
#define TRNG_ENTROPY_BI_CTL_OFFSET                         (0xD8U)
#define TRNG_ENTROPY_BI_CTL_ENTROPY_BI_COUNT_SEL_SHIFT     (0U)
#define TRNG_ENTROPY_BI_CTL_ENTROPY_BI_COUNT_SEL_MASK      (0x3U << TRNG_ENTROPY_BI_CTL_ENTROPY_BI_COUNT_SEL_SHIFT)     /* 0x00000003 */
#define TRNG_ENTROPY_BI_CTL_ENTROPY_BI_BIT_NUM_SHIFT       (2U)
#define TRNG_ENTROPY_BI_CTL_ENTROPY_BI_BIT_NUM_MASK        (0xFFFFFU << TRNG_ENTROPY_BI_CTL_ENTROPY_BI_BIT_NUM_SHIFT)   /* 0x003FFFFC */
/* ENTROPY_BI_LIMIT_LOW0 */
#define TRNG_ENTROPY_BI_LIMIT_LOW0_OFFSET                  (0xDCU)
#define TRNG_ENTROPY_BI_LIMIT_LOW0_ENTROPY_BI_V0_LOW_SHIFT (0U)
#define TRNG_ENTROPY_BI_LIMIT_LOW0_ENTROPY_BI_V0_LOW_MASK  (0xFFU << TRNG_ENTROPY_BI_LIMIT_LOW0_ENTROPY_BI_V0_LOW_SHIFT) /* 0x000000FF */
#define TRNG_ENTROPY_BI_LIMIT_LOW0_ENTROPY_BI_V1_LOW_SHIFT (8U)
#define TRNG_ENTROPY_BI_LIMIT_LOW0_ENTROPY_BI_V1_LOW_MASK  (0xFFU << TRNG_ENTROPY_BI_LIMIT_LOW0_ENTROPY_BI_V1_LOW_SHIFT) /* 0x0000FF00 */
#define TRNG_ENTROPY_BI_LIMIT_LOW0_ENTROPY_BI_V2_LOW_SHIFT (16U)
#define TRNG_ENTROPY_BI_LIMIT_LOW0_ENTROPY_BI_V2_LOW_MASK  (0xFFU << TRNG_ENTROPY_BI_LIMIT_LOW0_ENTROPY_BI_V2_LOW_SHIFT) /* 0x00FF0000 */
#define TRNG_ENTROPY_BI_LIMIT_LOW0_ENTROPY_BI_V3_LOW_SHIFT (24U)
#define TRNG_ENTROPY_BI_LIMIT_LOW0_ENTROPY_BI_V3_LOW_MASK  (0xFFU << TRNG_ENTROPY_BI_LIMIT_LOW0_ENTROPY_BI_V3_LOW_SHIFT) /* 0xFF000000 */
/* ENTROPY_BI_LIMIT_LOW1 */
#define TRNG_ENTROPY_BI_LIMIT_LOW1_OFFSET                  (0xE0U)
#define TRNG_ENTROPY_BI_LIMIT_LOW1_ENTROPY_BI_V4_LOW_SHIFT (0U)
#define TRNG_ENTROPY_BI_LIMIT_LOW1_ENTROPY_BI_V4_LOW_MASK  (0xFFU << TRNG_ENTROPY_BI_LIMIT_LOW1_ENTROPY_BI_V4_LOW_SHIFT) /* 0x000000FF */
#define TRNG_ENTROPY_BI_LIMIT_LOW1_ENTROPY_BI_V5_LOW_SHIFT (8U)
#define TRNG_ENTROPY_BI_LIMIT_LOW1_ENTROPY_BI_V5_LOW_MASK  (0xFFU << TRNG_ENTROPY_BI_LIMIT_LOW1_ENTROPY_BI_V5_LOW_SHIFT) /* 0x0000FF00 */
#define TRNG_ENTROPY_BI_LIMIT_LOW1_ENTROPY_BI_V6_LOW_SHIFT (16U)
#define TRNG_ENTROPY_BI_LIMIT_LOW1_ENTROPY_BI_V6_LOW_MASK  (0xFFU << TRNG_ENTROPY_BI_LIMIT_LOW1_ENTROPY_BI_V6_LOW_SHIFT) /* 0x00FF0000 */
/* ENTROPY_BI_LIMITHIGH0 */
#define TRNG_ENTROPY_BI_LIMITHIGH0_OFFSET                  (0xE4U)
#define TRNG_ENTROPY_BI_LIMITHIGH0_ENTROPY_BI_V0_HIGH_SHIFT (0U)
#define TRNG_ENTROPY_BI_LIMITHIGH0_ENTROPY_BI_V0_HIGH_MASK (0xFFU << TRNG_ENTROPY_BI_LIMITHIGH0_ENTROPY_BI_V0_HIGH_SHIFT) /* 0x000000FF */
#define TRNG_ENTROPY_BI_LIMITHIGH0_ENTROPY_BI_V1_HIGH_SHIFT (8U)
#define TRNG_ENTROPY_BI_LIMITHIGH0_ENTROPY_BI_V1_HIGH_MASK (0xFFU << TRNG_ENTROPY_BI_LIMITHIGH0_ENTROPY_BI_V1_HIGH_SHIFT) /* 0x0000FF00 */
#define TRNG_ENTROPY_BI_LIMITHIGH0_ENTROPY_BI_V2_HIGH_SHIFT (16U)
#define TRNG_ENTROPY_BI_LIMITHIGH0_ENTROPY_BI_V2_HIGH_MASK (0xFFU << TRNG_ENTROPY_BI_LIMITHIGH0_ENTROPY_BI_V2_HIGH_SHIFT) /* 0x00FF0000 */
#define TRNG_ENTROPY_BI_LIMITHIGH0_ENTROPY_BI_V3_HIGH_SHIFT (24U)
#define TRNG_ENTROPY_BI_LIMITHIGH0_ENTROPY_BI_V3_HIGH_MASK (0xFFU << TRNG_ENTROPY_BI_LIMITHIGH0_ENTROPY_BI_V3_HIGH_SHIFT) /* 0xFF000000 */
/* ENTROPY_BI_LIMIT_HIGH1 */
#define TRNG_ENTROPY_BI_LIMIT_HIGH1_OFFSET                 (0xE8U)
#define TRNG_ENTROPY_BI_LIMIT_HIGH1_ENTROPY_BI_V4_HIGH_SHIFT (0U)
#define TRNG_ENTROPY_BI_LIMIT_HIGH1_ENTROPY_BI_V4_HIGH_MASK (0xFFU << TRNG_ENTROPY_BI_LIMIT_HIGH1_ENTROPY_BI_V4_HIGH_SHIFT) /* 0x000000FF */
#define TRNG_ENTROPY_BI_LIMIT_HIGH1_ENTROPY_BI_V5_HIGH_SHIFT (8U)
#define TRNG_ENTROPY_BI_LIMIT_HIGH1_ENTROPY_BI_V5_HIGH_MASK (0xFFU << TRNG_ENTROPY_BI_LIMIT_HIGH1_ENTROPY_BI_V5_HIGH_SHIFT) /* 0x0000FF00 */
#define TRNG_ENTROPY_BI_LIMIT_HIGH1_ENTROPY_BI_V6_HIGH_SHIFT (16U)
#define TRNG_ENTROPY_BI_LIMIT_HIGH1_ENTROPY_BI_V6_HIGH_MASK (0xFFU << TRNG_ENTROPY_BI_LIMIT_HIGH1_ENTROPY_BI_V6_HIGH_SHIFT) /* 0x00FF0000 */
/* TRAND_CK_CTL */
#define TRNG_TRAND_CK_CTL_OFFSET                           (0xECU)
#define TRNG_TRAND_CK_CTL_TRAND_FB_CHECK_EN_SHIFT          (0U)
#define TRNG_TRAND_CK_CTL_TRAND_FB_CHECK_EN_MASK           (0x1U << TRNG_TRAND_CK_CTL_TRAND_FB_CHECK_EN_SHIFT)          /* 0x00000001 */
#define TRNG_TRAND_CK_CTL_TRAND_FI_CHECK_EN_SHIFT          (1U)
#define TRNG_TRAND_CK_CTL_TRAND_FI_CHECK_EN_MASK           (0x1U << TRNG_TRAND_CK_CTL_TRAND_FI_CHECK_EN_SHIFT)          /* 0x00000002 */
#define TRNG_TRAND_CK_CTL_TRAND_BI_CHECK_EN_SHIFT          (2U)
#define TRNG_TRAND_CK_CTL_TRAND_BI_CHECK_EN_MASK           (0x1U << TRNG_TRAND_CK_CTL_TRAND_BI_CHECK_EN_SHIFT)          /* 0x00000004 */
#define TRNG_TRAND_CK_CTL_TRAND_CHECK_MUST_PASS_SHIFT      (3U)
#define TRNG_TRAND_CK_CTL_TRAND_CHECK_MUST_PASS_MASK       (0x1U << TRNG_TRAND_CK_CTL_TRAND_CHECK_MUST_PASS_SHIFT)      /* 0x00000008 */
/* TRAND_FB_LIMIT0 */
#define TRNG_TRAND_FB_LIMIT0_OFFSET                        (0xF0U)
#define TRNG_TRAND_FB_LIMIT0_TRAND_FB_BIT8_LIMIT_SHIFT     (0U)
#define TRNG_TRAND_FB_LIMIT0_TRAND_FB_BIT8_LIMIT_MASK      (0x7U << TRNG_TRAND_FB_LIMIT0_TRAND_FB_BIT8_LIMIT_SHIFT)     /* 0x00000007 */
#define TRNG_TRAND_FB_LIMIT0_TRAND_FB_BIT16_LIMIT_SHIFT    (8U)
#define TRNG_TRAND_FB_LIMIT0_TRAND_FB_BIT16_LIMIT_MASK     (0xFU << TRNG_TRAND_FB_LIMIT0_TRAND_FB_BIT16_LIMIT_SHIFT)    /* 0x00000F00 */
#define TRNG_TRAND_FB_LIMIT0_TRAND_FB_BIT32_LIMIT_SHIFT    (16U)
#define TRNG_TRAND_FB_LIMIT0_TRAND_FB_BIT32_LIMIT_MASK     (0x1FU << TRNG_TRAND_FB_LIMIT0_TRAND_FB_BIT32_LIMIT_SHIFT)   /* 0x001F0000 */
#define TRNG_TRAND_FB_LIMIT0_TRAND_FB_BIT64_LIMIT_SHIFT    (24U)
#define TRNG_TRAND_FB_LIMIT0_TRAND_FB_BIT64_LIMIT_MASK     (0x3FU << TRNG_TRAND_FB_LIMIT0_TRAND_FB_BIT64_LIMIT_SHIFT)   /* 0x3F000000 */
/* TRAND_FB_LIMIT1 */
#define TRNG_TRAND_FB_LIMIT1_OFFSET                        (0xF4U)
#define TRNG_TRAND_FB_LIMIT1_TRAND_FB_BIT128_LIMIT_SHIFT   (0U)
#define TRNG_TRAND_FB_LIMIT1_TRAND_FB_BIT128_LIMIT_MASK    (0x7FU << TRNG_TRAND_FB_LIMIT1_TRAND_FB_BIT128_LIMIT_SHIFT)  /* 0x0000007F */
#define TRNG_TRAND_FB_LIMIT1_TRAND_FB_BIT_FULL_LIMIT_SHIFT (16U)
#define TRNG_TRAND_FB_LIMIT1_TRAND_FB_BIT_FULL_LIMIT_MASK  (0x1FFU << TRNG_TRAND_FB_LIMIT1_TRAND_FB_BIT_FULL_LIMIT_SHIFT) /* 0x01FF0000 */
/* TRAND_FI_BIT_NUM */
#define TRNG_TRAND_FI_BIT_NUM_OFFSET                       (0xF8U)
#define TRNG_TRAND_FI_BIT_NUM_TRAND_FI_BIT_NUM_SHIFT       (0U)
#define TRNG_TRAND_FI_BIT_NUM_TRAND_FI_BIT_NUM_MASK        (0xFFFFU << TRNG_TRAND_FI_BIT_NUM_TRAND_FI_BIT_NUM_SHIFT)    /* 0x0000FFFF */
/* TRAND_FI_LIMIT */
#define TRNG_TRAND_FI_LIMIT_OFFSET                         (0xFCU)
#define TRNG_TRAND_FI_LIMIT_TRAND_FI_LIMIT_LOW_SHIFT       (0U)
#define TRNG_TRAND_FI_LIMIT_TRAND_FI_LIMIT_LOW_MASK        (0xFFFFU << TRNG_TRAND_FI_LIMIT_TRAND_FI_LIMIT_LOW_SHIFT)    /* 0x0000FFFF */
#define TRNG_TRAND_FI_LIMIT_TRAND_FI_LIMIT_HIGH_SHIFT      (16U)
#define TRNG_TRAND_FI_LIMIT_TRAND_FI_LIMIT_HIGH_MASK       (0xFFFFU << TRNG_TRAND_FI_LIMIT_TRAND_FI_LIMIT_HIGH_SHIFT)   /* 0xFFFF0000 */
/* TRAND_BI_CTL */
#define TRNG_TRAND_BI_CTL_OFFSET                           (0x100U)
#define TRNG_TRAND_BI_CTL_TRAND_BI_COUNT_SEL_SHIFT         (0U)
#define TRNG_TRAND_BI_CTL_TRAND_BI_COUNT_SEL_MASK          (0x3U << TRNG_TRAND_BI_CTL_TRAND_BI_COUNT_SEL_SHIFT)         /* 0x00000003 */
#define TRNG_TRAND_BI_CTL_TRAND_BI_BIT_NUM_SHIFT           (2U)
#define TRNG_TRAND_BI_CTL_TRAND_BI_BIT_NUM_MASK            (0xFFFFFU << TRNG_TRAND_BI_CTL_TRAND_BI_BIT_NUM_SHIFT)       /* 0x003FFFFC */
/* TRAND_BI_LIMIT_LOW0 */
#define TRNG_TRAND_BI_LIMIT_LOW0_OFFSET                    (0x104U)
#define TRNG_TRAND_BI_LIMIT_LOW0_TRAND_BI_V0_LOW_SHIFT     (0U)
#define TRNG_TRAND_BI_LIMIT_LOW0_TRAND_BI_V0_LOW_MASK      (0xFFU << TRNG_TRAND_BI_LIMIT_LOW0_TRAND_BI_V0_LOW_SHIFT)    /* 0x000000FF */
#define TRNG_TRAND_BI_LIMIT_LOW0_TRAND_BI_V1_LOW_SHIFT     (8U)
#define TRNG_TRAND_BI_LIMIT_LOW0_TRAND_BI_V1_LOW_MASK      (0xFFU << TRNG_TRAND_BI_LIMIT_LOW0_TRAND_BI_V1_LOW_SHIFT)    /* 0x0000FF00 */
#define TRNG_TRAND_BI_LIMIT_LOW0_TRAND_BI_V2_LOW_SHIFT     (16U)
#define TRNG_TRAND_BI_LIMIT_LOW0_TRAND_BI_V2_LOW_MASK      (0xFFU << TRNG_TRAND_BI_LIMIT_LOW0_TRAND_BI_V2_LOW_SHIFT)    /* 0x00FF0000 */
#define TRNG_TRAND_BI_LIMIT_LOW0_TRAND_BI_V3_LOW_SHIFT     (24U)
#define TRNG_TRAND_BI_LIMIT_LOW0_TRAND_BI_V3_LOW_MASK      (0xFFU << TRNG_TRAND_BI_LIMIT_LOW0_TRAND_BI_V3_LOW_SHIFT)    /* 0xFF000000 */
/* TRAND_BI_LIMIT_LOW1 */
#define TRNG_TRAND_BI_LIMIT_LOW1_OFFSET                    (0x108U)
#define TRNG_TRAND_BI_LIMIT_LOW1_TRAND_BI_V4_LOW_SHIFT     (0U)
#define TRNG_TRAND_BI_LIMIT_LOW1_TRAND_BI_V4_LOW_MASK      (0xFFU << TRNG_TRAND_BI_LIMIT_LOW1_TRAND_BI_V4_LOW_SHIFT)    /* 0x000000FF */
#define TRNG_TRAND_BI_LIMIT_LOW1_TRAND_BI_V5_LOW_SHIFT     (8U)
#define TRNG_TRAND_BI_LIMIT_LOW1_TRAND_BI_V5_LOW_MASK      (0xFFU << TRNG_TRAND_BI_LIMIT_LOW1_TRAND_BI_V5_LOW_SHIFT)    /* 0x0000FF00 */
#define TRNG_TRAND_BI_LIMIT_LOW1_TRAND_BI_V6_LOW_SHIFT     (16U)
#define TRNG_TRAND_BI_LIMIT_LOW1_TRAND_BI_V6_LOW_MASK      (0xFFU << TRNG_TRAND_BI_LIMIT_LOW1_TRAND_BI_V6_LOW_SHIFT)    /* 0x00FF0000 */
/* TRAND_BI_LIMIT_HIGH0 */
#define TRNG_TRAND_BI_LIMIT_HIGH0_OFFSET                   (0x10CU)
#define TRNG_TRAND_BI_LIMIT_HIGH0_TRAND_BI_V0_HIGH_SHIFT   (0U)
#define TRNG_TRAND_BI_LIMIT_HIGH0_TRAND_BI_V0_HIGH_MASK    (0xFFU << TRNG_TRAND_BI_LIMIT_HIGH0_TRAND_BI_V0_HIGH_SHIFT)  /* 0x000000FF */
#define TRNG_TRAND_BI_LIMIT_HIGH0_TRAND_BI_V1_HIGH_SHIFT   (8U)
#define TRNG_TRAND_BI_LIMIT_HIGH0_TRAND_BI_V1_HIGH_MASK    (0xFFU << TRNG_TRAND_BI_LIMIT_HIGH0_TRAND_BI_V1_HIGH_SHIFT)  /* 0x0000FF00 */
#define TRNG_TRAND_BI_LIMIT_HIGH0_TRAND_BI_V2_HIGH_SHIFT   (16U)
#define TRNG_TRAND_BI_LIMIT_HIGH0_TRAND_BI_V2_HIGH_MASK    (0xFFU << TRNG_TRAND_BI_LIMIT_HIGH0_TRAND_BI_V2_HIGH_SHIFT)  /* 0x00FF0000 */
#define TRNG_TRAND_BI_LIMIT_HIGH0_TRAND_BI_V3_HIGH_SHIFT   (24U)
#define TRNG_TRAND_BI_LIMIT_HIGH0_TRAND_BI_V3_HIGH_MASK    (0xFFU << TRNG_TRAND_BI_LIMIT_HIGH0_TRAND_BI_V3_HIGH_SHIFT)  /* 0xFF000000 */
/* TRAND_BI_LIMIT_HIGH1 */
#define TRNG_TRAND_BI_LIMIT_HIGH1_OFFSET                   (0x110U)
#define TRNG_TRAND_BI_LIMIT_HIGH1_TRAND_BI_V4_HIGH_SHIFT   (0U)
#define TRNG_TRAND_BI_LIMIT_HIGH1_TRAND_BI_V4_HIGH_MASK    (0xFFU << TRNG_TRAND_BI_LIMIT_HIGH1_TRAND_BI_V4_HIGH_SHIFT)  /* 0x000000FF */
#define TRNG_TRAND_BI_LIMIT_HIGH1_TRAND_BI_V5_HIGH_SHIFT   (8U)
#define TRNG_TRAND_BI_LIMIT_HIGH1_TRAND_BI_V5_HIGH_MASK    (0xFFU << TRNG_TRAND_BI_LIMIT_HIGH1_TRAND_BI_V5_HIGH_SHIFT)  /* 0x0000FF00 */
#define TRNG_TRAND_BI_LIMIT_HIGH1_TRAND_BI_V6_HIGH_SHIFT   (16U)
#define TRNG_TRAND_BI_LIMIT_HIGH1_TRAND_BI_V6_HIGH_MASK    (0xFFU << TRNG_TRAND_BI_LIMIT_HIGH1_TRAND_BI_V6_HIGH_SHIFT)  /* 0x00FF0000 */
/* BI_PASS_AUTO */
#define TRNG_BI_PASS_AUTO_OFFSET                           (0x114U)
#define TRNG_BI_PASS_AUTO_BI_PASS_AUTO_SHIFT               (0U)
#define TRNG_BI_PASS_AUTO_BI_PASS_AUTO_MASK                (0x1U << TRNG_BI_PASS_AUTO_BI_PASS_AUTO_SHIFT)               /* 0x00000001 */
/* SOFT_BI_RESULT_VLD */
#define TRNG_SOFT_BI_RESULT_VLD_OFFSET                     (0x118U)
#define TRNG_SOFT_BI_RESULT_VLD_SOFT_BI_RESULT_VLD_SHIFT   (0U)
#define TRNG_SOFT_BI_RESULT_VLD_SOFT_BI_RESULT_VLD_MASK    (0x1U << TRNG_SOFT_BI_RESULT_VLD_SOFT_BI_RESULT_VLD_SHIFT)   /* 0x00000001 */
/* SOFT_BI_RESULT_PASS */
#define TRNG_SOFT_BI_RESULT_PASS_OFFSET                    (0x11CU)
#define TRNG_SOFT_BI_RESULT_PASS_SOFT_BI_RESULT_PASS_SHIFT (0U)
#define TRNG_SOFT_BI_RESULT_PASS_SOFT_BI_RESULT_PASS_MASK  (0x1U << TRNG_SOFT_BI_RESULT_PASS_SOFT_BI_RESULT_PASS_SHIFT) /* 0x00000001 */
/* ENTROPY_CK_RESULT_VLD */
#define TRNG_ENTROPY_CK_RESULT_VLD_OFFSET                  (0x120U)
#define TRNG_ENTROPY_CK_RESULT_VLD_ENTROPY_FB_CK_VLD_SHIFT (0U)
#define TRNG_ENTROPY_CK_RESULT_VLD_ENTROPY_FB_CK_VLD_MASK  (0x1U << TRNG_ENTROPY_CK_RESULT_VLD_ENTROPY_FB_CK_VLD_SHIFT) /* 0x00000001 */
#define TRNG_ENTROPY_CK_RESULT_VLD_ENTROPY_FI_CK_VLD_SHIFT (1U)
#define TRNG_ENTROPY_CK_RESULT_VLD_ENTROPY_FI_CK_VLD_MASK  (0x1U << TRNG_ENTROPY_CK_RESULT_VLD_ENTROPY_FI_CK_VLD_SHIFT) /* 0x00000002 */
#define TRNG_ENTROPY_CK_RESULT_VLD_ENTROPY_BI_CK_VLD_SHIFT (2U)
#define TRNG_ENTROPY_CK_RESULT_VLD_ENTROPY_BI_CK_VLD_MASK  (0x1U << TRNG_ENTROPY_CK_RESULT_VLD_ENTROPY_BI_CK_VLD_SHIFT) /* 0x00000004 */
#define TRNG_ENTROPY_CK_RESULT_VLD_ENTROPY_AVAR_VLD_SHIFT  (3U)
#define TRNG_ENTROPY_CK_RESULT_VLD_ENTROPY_AVAR_VLD_MASK   (0x1U << TRNG_ENTROPY_CK_RESULT_VLD_ENTROPY_AVAR_VLD_SHIFT)  /* 0x00000008 */
/* ENTROPY_FB_CK_RESULT */
#define TRNG_ENTROPY_FB_CK_RESULT_OFFSET                   (0x124U)
#define TRNG_ENTROPY_FB_CK_RESULT_ENTROPY_FB_BIT8_RESULT_SHIFT (0U)
#define TRNG_ENTROPY_FB_CK_RESULT_ENTROPY_FB_BIT8_RESULT_MASK (0x1U << TRNG_ENTROPY_FB_CK_RESULT_ENTROPY_FB_BIT8_RESULT_SHIFT) /* 0x00000001 */
#define TRNG_ENTROPY_FB_CK_RESULT_ENTROPY_FB_BIT16_RESULT_SHIFT (1U)
#define TRNG_ENTROPY_FB_CK_RESULT_ENTROPY_FB_BIT16_RESULT_MASK (0x1U << TRNG_ENTROPY_FB_CK_RESULT_ENTROPY_FB_BIT16_RESULT_SHIFT) /* 0x00000002 */
#define TRNG_ENTROPY_FB_CK_RESULT_ENTROPY_FB_BIT32_RESULT_SHIFT (2U)
#define TRNG_ENTROPY_FB_CK_RESULT_ENTROPY_FB_BIT32_RESULT_MASK (0x1U << TRNG_ENTROPY_FB_CK_RESULT_ENTROPY_FB_BIT32_RESULT_SHIFT) /* 0x00000004 */
#define TRNG_ENTROPY_FB_CK_RESULT_ENTROPY_FB_BIT64_RESULT_SHIFT (3U)
#define TRNG_ENTROPY_FB_CK_RESULT_ENTROPY_FB_BIT64_RESULT_MASK (0x1U << TRNG_ENTROPY_FB_CK_RESULT_ENTROPY_FB_BIT64_RESULT_SHIFT) /* 0x00000008 */
#define TRNG_ENTROPY_FB_CK_RESULT_ENTROPY_FB_BIT128_RESULT_SHIFT (4U)
#define TRNG_ENTROPY_FB_CK_RESULT_ENTROPY_FB_BIT128_RESULT_MASK (0x1U << TRNG_ENTROPY_FB_CK_RESULT_ENTROPY_FB_BIT128_RESULT_SHIFT) /* 0x00000010 */
#define TRNG_ENTROPY_FB_CK_RESULT_ENTROPY_FB_BIT_FULL_RESULT_SHIFT (5U)
#define TRNG_ENTROPY_FB_CK_RESULT_ENTROPY_FB_BIT_FULL_RESULT_MASK (0x1U << TRNG_ENTROPY_FB_CK_RESULT_ENTROPY_FB_BIT_FULL_RESULT_SHIFT) /* 0x00000020 */
#define TRNG_ENTROPY_FB_CK_RESULT_ENTROPY_FB_BIT_GLOBAL_RESULT_SHIFT (6U)
#define TRNG_ENTROPY_FB_CK_RESULT_ENTROPY_FB_BIT_GLOBAL_RESULT_MASK (0x1U << TRNG_ENTROPY_FB_CK_RESULT_ENTROPY_FB_BIT_GLOBAL_RESULT_SHIFT) /* 0x00000040 */
/* ENTROPY_FI_CK_RESULT */
#define TRNG_ENTROPY_FI_CK_RESULT_OFFSET                   (0x128U)
#define TRNG_ENTROPY_FI_CK_RESULT_ENTROPY_FI_CHECK_RESULT_SHIFT (0U)
#define TRNG_ENTROPY_FI_CK_RESULT_ENTROPY_FI_CHECK_RESULT_MASK (0x1U << TRNG_ENTROPY_FI_CK_RESULT_ENTROPY_FI_CHECK_RESULT_SHIFT) /* 0x00000001 */
/* ENTROPY_BI_CK_RESULT0 */
#define TRNG_ENTROPY_BI_CK_RESULT0_OFFSET                  (0x12CU)
#define TRNG_ENTROPY_BI_CK_RESULT0_ENTROPY_BI_V0_RESULT_SHIFT (0U)
#define TRNG_ENTROPY_BI_CK_RESULT0_ENTROPY_BI_V0_RESULT_MASK (0xFFU << TRNG_ENTROPY_BI_CK_RESULT0_ENTROPY_BI_V0_RESULT_SHIFT) /* 0x000000FF */
#define TRNG_ENTROPY_BI_CK_RESULT0_ENTROPY_BI_V1_RESULT_SHIFT (8U)
#define TRNG_ENTROPY_BI_CK_RESULT0_ENTROPY_BI_V1_RESULT_MASK (0xFFU << TRNG_ENTROPY_BI_CK_RESULT0_ENTROPY_BI_V1_RESULT_SHIFT) /* 0x0000FF00 */
#define TRNG_ENTROPY_BI_CK_RESULT0_ENTROPY_BI_V2_RESULT_SHIFT (16U)
#define TRNG_ENTROPY_BI_CK_RESULT0_ENTROPY_BI_V2_RESULT_MASK (0xFFU << TRNG_ENTROPY_BI_CK_RESULT0_ENTROPY_BI_V2_RESULT_SHIFT) /* 0x00FF0000 */
#define TRNG_ENTROPY_BI_CK_RESULT0_ENTROPY_BI_V3_RESULT_SHIFT (24U)
#define TRNG_ENTROPY_BI_CK_RESULT0_ENTROPY_BI_V3_RESULT_MASK (0xFFU << TRNG_ENTROPY_BI_CK_RESULT0_ENTROPY_BI_V3_RESULT_SHIFT) /* 0xFF000000 */
/* ENTROPY_BI_CK_RESULT1 */
#define TRNG_ENTROPY_BI_CK_RESULT1_OFFSET                  (0x130U)
#define TRNG_ENTROPY_BI_CK_RESULT1_ENTROPY_BI_V4_RESULT_SHIFT (0U)
#define TRNG_ENTROPY_BI_CK_RESULT1_ENTROPY_BI_V4_RESULT_MASK (0xFFU << TRNG_ENTROPY_BI_CK_RESULT1_ENTROPY_BI_V4_RESULT_SHIFT) /* 0x000000FF */
#define TRNG_ENTROPY_BI_CK_RESULT1_ENTROPY_BI_V5_RESULT_SHIFT (8U)
#define TRNG_ENTROPY_BI_CK_RESULT1_ENTROPY_BI_V5_RESULT_MASK (0xFFU << TRNG_ENTROPY_BI_CK_RESULT1_ENTROPY_BI_V5_RESULT_SHIFT) /* 0x0000FF00 */
#define TRNG_ENTROPY_BI_CK_RESULT1_ENTROPY_BI_V6_RESULT_SHIFT (16U)
#define TRNG_ENTROPY_BI_CK_RESULT1_ENTROPY_BI_V6_RESULT_MASK (0xFFU << TRNG_ENTROPY_BI_CK_RESULT1_ENTROPY_BI_V6_RESULT_SHIFT) /* 0x00FF0000 */
/* TRAND_CK_RESULT_VLD */
#define TRNG_TRAND_CK_RESULT_VLD_OFFSET                    (0x134U)
#define TRNG_TRAND_CK_RESULT_VLD_TRAND_FB_CK_VLD_SHIFT     (0U)
#define TRNG_TRAND_CK_RESULT_VLD_TRAND_FB_CK_VLD_MASK      (0x1U << TRNG_TRAND_CK_RESULT_VLD_TRAND_FB_CK_VLD_SHIFT)     /* 0x00000001 */
#define TRNG_TRAND_CK_RESULT_VLD_TRAND_FI_CK_VLD_SHIFT     (1U)
#define TRNG_TRAND_CK_RESULT_VLD_TRAND_FI_CK_VLD_MASK      (0x1U << TRNG_TRAND_CK_RESULT_VLD_TRAND_FI_CK_VLD_SHIFT)     /* 0x00000002 */
#define TRNG_TRAND_CK_RESULT_VLD_TRAND_BI_CK_VLD_SHIFT     (2U)
#define TRNG_TRAND_CK_RESULT_VLD_TRAND_BI_CK_VLD_MASK      (0x1U << TRNG_TRAND_CK_RESULT_VLD_TRAND_BI_CK_VLD_SHIFT)     /* 0x00000004 */
#define TRNG_TRAND_CK_RESULT_VLD_TRAND_AVAR_VLD_SHIFT      (3U)
#define TRNG_TRAND_CK_RESULT_VLD_TRAND_AVAR_VLD_MASK       (0x1U << TRNG_TRAND_CK_RESULT_VLD_TRAND_AVAR_VLD_SHIFT)      /* 0x00000008 */
/* TRAND_FB_CK_RESULT */
#define TRNG_TRAND_FB_CK_RESULT_OFFSET                     (0x138U)
#define TRNG_TRAND_FB_CK_RESULT_TRAND_FB_BIT8_RESULT_SHIFT (0U)
#define TRNG_TRAND_FB_CK_RESULT_TRAND_FB_BIT8_RESULT_MASK  (0x1U << TRNG_TRAND_FB_CK_RESULT_TRAND_FB_BIT8_RESULT_SHIFT) /* 0x00000001 */
#define TRNG_TRAND_FB_CK_RESULT_TRAND_FB_BIT16_RESULT_SHIFT (1U)
#define TRNG_TRAND_FB_CK_RESULT_TRAND_FB_BIT16_RESULT_MASK (0x1U << TRNG_TRAND_FB_CK_RESULT_TRAND_FB_BIT16_RESULT_SHIFT) /* 0x00000002 */
#define TRNG_TRAND_FB_CK_RESULT_TRAND_FB_BIT32_RESULT_SHIFT (2U)
#define TRNG_TRAND_FB_CK_RESULT_TRAND_FB_BIT32_RESULT_MASK (0x1U << TRNG_TRAND_FB_CK_RESULT_TRAND_FB_BIT32_RESULT_SHIFT) /* 0x00000004 */
#define TRNG_TRAND_FB_CK_RESULT_TRAND_FB_BIT64_RESULT_SHIFT (3U)
#define TRNG_TRAND_FB_CK_RESULT_TRAND_FB_BIT64_RESULT_MASK (0x1U << TRNG_TRAND_FB_CK_RESULT_TRAND_FB_BIT64_RESULT_SHIFT) /* 0x00000008 */
#define TRNG_TRAND_FB_CK_RESULT_TRAND_FB_BIT128_RESULT_SHIFT (4U)
#define TRNG_TRAND_FB_CK_RESULT_TRAND_FB_BIT128_RESULT_MASK (0x1U << TRNG_TRAND_FB_CK_RESULT_TRAND_FB_BIT128_RESULT_SHIFT) /* 0x00000010 */
#define TRNG_TRAND_FB_CK_RESULT_TRAND_FB_BIT_FULL_RESULT_SHIFT (5U)
#define TRNG_TRAND_FB_CK_RESULT_TRAND_FB_BIT_FULL_RESULT_MASK (0x1U << TRNG_TRAND_FB_CK_RESULT_TRAND_FB_BIT_FULL_RESULT_SHIFT) /* 0x00000020 */
#define TRNG_TRAND_FB_CK_RESULT_TRAND_FB_BIT_GLOBAL_RESULT_SHIFT (6U)
#define TRNG_TRAND_FB_CK_RESULT_TRAND_FB_BIT_GLOBAL_RESULT_MASK (0x1U << TRNG_TRAND_FB_CK_RESULT_TRAND_FB_BIT_GLOBAL_RESULT_SHIFT) /* 0x00000040 */
/* TRAND_FI_CK_RESULT */
#define TRNG_TRAND_FI_CK_RESULT_OFFSET                     (0x13CU)
#define TRNG_TRAND_FI_CK_RESULT_TRAND_FI_CHECK_RESULT_SHIFT (0U)
#define TRNG_TRAND_FI_CK_RESULT_TRAND_FI_CHECK_RESULT_MASK (0x1U << TRNG_TRAND_FI_CK_RESULT_TRAND_FI_CHECK_RESULT_SHIFT) /* 0x00000001 */
/* TRAND_BI_CK_RESULT0 */
#define TRNG_TRAND_BI_CK_RESULT0_OFFSET                    (0x140U)
#define TRNG_TRAND_BI_CK_RESULT0_TRAND_BI_V0_RESULT_SHIFT  (0U)
#define TRNG_TRAND_BI_CK_RESULT0_TRAND_BI_V0_RESULT_MASK   (0xFFU << TRNG_TRAND_BI_CK_RESULT0_TRAND_BI_V0_RESULT_SHIFT) /* 0x000000FF */
#define TRNG_TRAND_BI_CK_RESULT0_TRAND_BI_V1_RESULT_SHIFT  (8U)
#define TRNG_TRAND_BI_CK_RESULT0_TRAND_BI_V1_RESULT_MASK   (0xFFU << TRNG_TRAND_BI_CK_RESULT0_TRAND_BI_V1_RESULT_SHIFT) /* 0x0000FF00 */
#define TRNG_TRAND_BI_CK_RESULT0_TRAND_BI_V2_RESULT_SHIFT  (16U)
#define TRNG_TRAND_BI_CK_RESULT0_TRAND_BI_V2_RESULT_MASK   (0xFFU << TRNG_TRAND_BI_CK_RESULT0_TRAND_BI_V2_RESULT_SHIFT) /* 0x00FF0000 */
#define TRNG_TRAND_BI_CK_RESULT0_TRAND_BI_V3_RESULT_SHIFT  (24U)
#define TRNG_TRAND_BI_CK_RESULT0_TRAND_BI_V3_RESULT_MASK   (0xFFU << TRNG_TRAND_BI_CK_RESULT0_TRAND_BI_V3_RESULT_SHIFT) /* 0xFF000000 */
/* TRAND_BI_CK_RESULT1 */
#define TRNG_TRAND_BI_CK_RESULT1_OFFSET                    (0x144U)
#define TRNG_TRAND_BI_CK_RESULT1_TRAND_BI_V4_RESULT_SHIFT  (0U)
#define TRNG_TRAND_BI_CK_RESULT1_TRAND_BI_V4_RESULT_MASK   (0xFFU << TRNG_TRAND_BI_CK_RESULT1_TRAND_BI_V4_RESULT_SHIFT) /* 0x000000FF */
#define TRNG_TRAND_BI_CK_RESULT1_TRAND_BI_V5_RESULT_SHIFT  (8U)
#define TRNG_TRAND_BI_CK_RESULT1_TRAND_BI_V5_RESULT_MASK   (0xFFU << TRNG_TRAND_BI_CK_RESULT1_TRAND_BI_V5_RESULT_SHIFT) /* 0x0000FF00 */
#define TRNG_TRAND_BI_CK_RESULT1_TRAND_BI_V6_RESULT_SHIFT  (16U)
#define TRNG_TRAND_BI_CK_RESULT1_TRAND_BI_V6_RESULT_MASK   (0xFFU << TRNG_TRAND_BI_CK_RESULT1_TRAND_BI_V6_RESULT_SHIFT) /* 0x00FF0000 */
/* NONCE_0 */
#define TRNG_NONCE_0_OFFSET                                (0x200U)
#define TRNG_NONCE_0_NONCE_0_SHIFT                         (0U)
#define TRNG_NONCE_0_NONCE_0_MASK                          (0xFFFFFFFFU << TRNG_NONCE_0_NONCE_0_SHIFT)                  /* 0xFFFFFFFF */
/* NONCE_1 */
#define TRNG_NONCE_1_OFFSET                                (0x204U)
#define TRNG_NONCE_1_NONCE_1_SHIFT                         (0U)
#define TRNG_NONCE_1_NONCE_1_MASK                          (0xFFFFFFFFU << TRNG_NONCE_1_NONCE_1_SHIFT)                  /* 0xFFFFFFFF */
/* NONCE_2 */
#define TRNG_NONCE_2_OFFSET                                (0x208U)
#define TRNG_NONCE_2_NONCE_2_SHIFT                         (0U)
#define TRNG_NONCE_2_NONCE_2_MASK                          (0xFFFFFFFFU << TRNG_NONCE_2_NONCE_2_SHIFT)                  /* 0xFFFFFFFF */
/* NONCE_3 */
#define TRNG_NONCE_3_OFFSET                                (0x20CU)
#define TRNG_NONCE_3_NONCE_3_SHIFT                         (0U)
#define TRNG_NONCE_3_NONCE_3_MASK                          (0xFFFFFFFFU << TRNG_NONCE_3_NONCE_3_SHIFT)                  /* 0xFFFFFFFF */
/* NONCE_4 */
#define TRNG_NONCE_4_OFFSET                                (0x210U)
#define TRNG_NONCE_4_NONCE_4_SHIFT                         (0U)
#define TRNG_NONCE_4_NONCE_4_MASK                          (0xFFFFFFFFU << TRNG_NONCE_4_NONCE_4_SHIFT)                  /* 0xFFFFFFFF */
/* NONCE_5 */
#define TRNG_NONCE_5_OFFSET                                (0x214U)
#define TRNG_NONCE_5_NONCE_5_SHIFT                         (0U)
#define TRNG_NONCE_5_NONCE_5_MASK                          (0xFFFFFFFFU << TRNG_NONCE_5_NONCE_5_SHIFT)                  /* 0xFFFFFFFF */
/* NONCE_6 */
#define TRNG_NONCE_6_OFFSET                                (0x218U)
#define TRNG_NONCE_6_NONCE_6_SHIFT                         (0U)
#define TRNG_NONCE_6_NONCE_6_MASK                          (0xFFFFFFFFU << TRNG_NONCE_6_NONCE_6_SHIFT)                  /* 0xFFFFFFFF */
/* NONCE_7 */
#define TRNG_NONCE_7_OFFSET                                (0x21CU)
#define TRNG_NONCE_7                                       (0x0U)
#define TRNG_NONCE_7_NONCE_7_SHIFT                         (0U)
#define TRNG_NONCE_7_NONCE_7_MASK                          (0xFFFFFFFFU << TRNG_NONCE_7_NONCE_7_SHIFT)                  /* 0xFFFFFFFF */
/* NONCE_8 */
#define TRNG_NONCE_8_OFFSET                                (0x220U)
#define TRNG_NONCE_8_NONCE_8_SHIFT                         (0U)
#define TRNG_NONCE_8_NONCE_8_MASK                          (0xFFFFFFFFU << TRNG_NONCE_8_NONCE_8_SHIFT)                  /* 0xFFFFFFFF */
/* NONCE_9 */
#define TRNG_NONCE_9_OFFSET                                (0x224U)
#define TRNG_NONCE_9_NONCE_9_SHIFT                         (0U)
#define TRNG_NONCE_9_NONCE_9_MASK                          (0xFFFFFFFFU << TRNG_NONCE_9_NONCE_9_SHIFT)                  /* 0xFFFFFFFF */
/* NONCE_10 */
#define TRNG_NONCE_10_OFFSET                               (0x228U)
#define TRNG_NONCE_10_NONCE_10_SHIFT                       (0U)
#define TRNG_NONCE_10_NONCE_10_MASK                        (0xFFFFFFFFU << TRNG_NONCE_10_NONCE_10_SHIFT)                /* 0xFFFFFFFF */
/* NONCE_11 */
#define TRNG_NONCE_11_OFFSET                               (0x22CU)
#define TRNG_NONCE_11_NONCE_11_SHIFT                       (0U)
#define TRNG_NONCE_11_NONCE_11_MASK                        (0xFFFFFFFFU << TRNG_NONCE_11_NONCE_11_SHIFT)                /* 0xFFFFFFFF */
/* ADDITION_0 */
#define TRNG_ADDITION_0_OFFSET                             (0x300U)
#define TRNG_ADDITION_0_ADDITION_0_SHIFT                   (0U)
#define TRNG_ADDITION_0_ADDITION_0_MASK                    (0xFFFFFFFFU << TRNG_ADDITION_0_ADDITION_0_SHIFT)            /* 0xFFFFFFFF */
/* ADDITION_1 */
#define TRNG_ADDITION_1_OFFSET                             (0x304U)
#define TRNG_ADDITION_1_ADDITION_1_SHIFT                   (0U)
#define TRNG_ADDITION_1_ADDITION_1_MASK                    (0xFFFFFFFFU << TRNG_ADDITION_1_ADDITION_1_SHIFT)            /* 0xFFFFFFFF */
/* ADDITION_2 */
#define TRNG_ADDITION_2_OFFSET                             (0x308U)
#define TRNG_ADDITION_2_ADDITION_2_SHIFT                   (0U)
#define TRNG_ADDITION_2_ADDITION_2_MASK                    (0xFFFFFFFFU << TRNG_ADDITION_2_ADDITION_2_SHIFT)            /* 0xFFFFFFFF */
/* ADDITION_3 */
#define TRNG_ADDITION_3_OFFSET                             (0x30CU)
#define TRNG_ADDITION_3_ADDITION_3_SHIFT                   (0U)
#define TRNG_ADDITION_3_ADDITION_3_MASK                    (0xFFFFFFFFU << TRNG_ADDITION_3_ADDITION_3_SHIFT)            /* 0xFFFFFFFF */
/* ADDITION_4 */
#define TRNG_ADDITION_4_OFFSET                             (0x310U)
#define TRNG_ADDITION_4_ADDITION_4_SHIFT                   (0U)
#define TRNG_ADDITION_4_ADDITION_4_MASK                    (0xFFFFFFFFU << TRNG_ADDITION_4_ADDITION_4_SHIFT)            /* 0xFFFFFFFF */
/* ADDITION_5 */
#define TRNG_ADDITION_5_OFFSET                             (0x314U)
#define TRNG_ADDITION_5_ADDITION_5_SHIFT                   (0U)
#define TRNG_ADDITION_5_ADDITION_5_MASK                    (0xFFFFFFFFU << TRNG_ADDITION_5_ADDITION_5_SHIFT)            /* 0xFFFFFFFF */
/* ADDITION_6 */
#define TRNG_ADDITION_6_OFFSET                             (0x318U)
#define TRNG_ADDITION_6_ADDITION_6_SHIFT                   (0U)
#define TRNG_ADDITION_6_ADDITION_6_MASK                    (0xFFFFFFFFU << TRNG_ADDITION_6_ADDITION_6_SHIFT)            /* 0xFFFFFFFF */
/* ADDITION_7 */
#define TRNG_ADDITION_7_OFFSET                             (0x31CU)
#define TRNG_ADDITION_7_ADDITION_7_SHIFT                   (0U)
#define TRNG_ADDITION_7_ADDITION_7_MASK                    (0xFFFFFFFFU << TRNG_ADDITION_7_ADDITION_7_SHIFT)            /* 0xFFFFFFFF */
/* ADDITION_8 */
#define TRNG_ADDITION_8_OFFSET                             (0x320U)
#define TRNG_ADDITION_8_ADDITION_8_SHIFT                   (0U)
#define TRNG_ADDITION_8_ADDITION_8_MASK                    (0xFFFFFFFFU << TRNG_ADDITION_8_ADDITION_8_SHIFT)            /* 0xFFFFFFFF */
/* ADDITION_9 */
#define TRNG_ADDITION_9_OFFSET                             (0x324U)
#define TRNG_ADDITION_9_ADDITION_9_SHIFT                   (0U)
#define TRNG_ADDITION_9_ADDITION_9_MASK                    (0xFFFFFFFFU << TRNG_ADDITION_9_ADDITION_9_SHIFT)            /* 0xFFFFFFFF */
/* ADDITION_10 */
#define TRNG_ADDITION_10_OFFSET                            (0x328U)
#define TRNG_ADDITION_10_ADDITION_10_SHIFT                 (0U)
#define TRNG_ADDITION_10_ADDITION_10_MASK                  (0xFFFFFFFFU << TRNG_ADDITION_10_ADDITION_10_SHIFT)          /* 0xFFFFFFFF */
/* ADDITION_11 */
#define TRNG_ADDITION_11_OFFSET                            (0x32CU)
#define TRNG_ADDITION_11_ADDITION_11_SHIFT                 (0U)
#define TRNG_ADDITION_11_ADDITION_11_MASK                  (0xFFFFFFFFU << TRNG_ADDITION_11_ADDITION_11_SHIFT)          /* 0xFFFFFFFF */
/****************************************GRF_CORE****************************************/
/* PVTPLL_CON0_L */
#define GRF_CORE_PVTPLL_CON0_L_OFFSET                      (0x0U)
#define GRF_CORE_PVTPLL_CON0_L_START_SHIFT                 (0U)
#define GRF_CORE_PVTPLL_CON0_L_START_MASK                  (0x1U << GRF_CORE_PVTPLL_CON0_L_START_SHIFT)                 /* 0x00000001 */
#define GRF_CORE_PVTPLL_CON0_L_OSC_EN_SHIFT                (1U)
#define GRF_CORE_PVTPLL_CON0_L_OSC_EN_MASK                 (0x1U << GRF_CORE_PVTPLL_CON0_L_OSC_EN_SHIFT)                /* 0x00000002 */
#define GRF_CORE_PVTPLL_CON0_L_OUT_POLAR_SHIFT             (2U)
#define GRF_CORE_PVTPLL_CON0_L_OUT_POLAR_MASK              (0x1U << GRF_CORE_PVTPLL_CON0_L_OUT_POLAR_SHIFT)             /* 0x00000004 */
#define GRF_CORE_PVTPLL_CON0_L_OSC_RING_SEL_SHIFT          (8U)
#define GRF_CORE_PVTPLL_CON0_L_OSC_RING_SEL_MASK           (0x7U << GRF_CORE_PVTPLL_CON0_L_OSC_RING_SEL_SHIFT)          /* 0x00000700 */
#define GRF_CORE_PVTPLL_CON0_L_CLK_DIV_REF_SHIFT           (11U)
#define GRF_CORE_PVTPLL_CON0_L_CLK_DIV_REF_MASK            (0x3U << GRF_CORE_PVTPLL_CON0_L_CLK_DIV_REF_SHIFT)           /* 0x00001800 */
#define GRF_CORE_PVTPLL_CON0_L_CLK_DIV_OSC_SHIFT           (13U)
#define GRF_CORE_PVTPLL_CON0_L_CLK_DIV_OSC_MASK            (0x3U << GRF_CORE_PVTPLL_CON0_L_CLK_DIV_OSC_SHIFT)           /* 0x00006000 */
#define GRF_CORE_PVTPLL_CON0_L_BYPASS_SHIFT                (15U)
#define GRF_CORE_PVTPLL_CON0_L_BYPASS_MASK                 (0x1U << GRF_CORE_PVTPLL_CON0_L_BYPASS_SHIFT)                /* 0x00008000 */
/* PVTPLL_CON0_H */
#define GRF_CORE_PVTPLL_CON0_H_OFFSET                      (0x4U)
#define GRF_CORE_PVTPLL_CON0_H_RING_LENGTH_SEL_SHIFT       (0U)
#define GRF_CORE_PVTPLL_CON0_H_RING_LENGTH_SEL_MASK        (0x7FU << GRF_CORE_PVTPLL_CON0_H_RING_LENGTH_SEL_SHIFT)      /* 0x0000007F */
#define GRF_CORE_PVTPLL_CON0_H_CLK_DIV_OUT_SHIFT           (7U)
#define GRF_CORE_PVTPLL_CON0_H_CLK_DIV_OUT_MASK            (0x7U << GRF_CORE_PVTPLL_CON0_H_CLK_DIV_OUT_SHIFT)           /* 0x00000380 */
#define GRF_CORE_PVTPLL_CON0_H_CLK_OUT_SEL_SHIFT           (10U)
#define GRF_CORE_PVTPLL_CON0_H_CLK_OUT_SEL_MASK            (0x1U << GRF_CORE_PVTPLL_CON0_H_CLK_OUT_SEL_SHIFT)           /* 0x00000400 */
#define GRF_CORE_PVTPLL_CON0_H_CLK_DIV_OUT_LOGIC_SHIFT     (11U)
#define GRF_CORE_PVTPLL_CON0_H_CLK_DIV_OUT_LOGIC_MASK      (0x1FU << GRF_CORE_PVTPLL_CON0_H_CLK_DIV_OUT_LOGIC_SHIFT)    /* 0x0000F800 */
/* PVTPLL_CON1 */
#define GRF_CORE_PVTPLL_CON1_OFFSET                        (0x8U)
#define GRF_CORE_PVTPLL_CON1_CAL_CNT_SHIFT                 (0U)
#define GRF_CORE_PVTPLL_CON1_CAL_CNT_MASK                  (0xFFFFFFFFU << GRF_CORE_PVTPLL_CON1_CAL_CNT_SHIFT)          /* 0xFFFFFFFF */
/* PVTPLL_CON2 */
#define GRF_CORE_PVTPLL_CON2_OFFSET                        (0xCU)
#define GRF_CORE_PVTPLL_CON2_THRESHOLD_SHIFT               (0U)
#define GRF_CORE_PVTPLL_CON2_THRESHOLD_MASK                (0xFFFFU << GRF_CORE_PVTPLL_CON2_THRESHOLD_SHIFT)            /* 0x0000FFFF */
#define GRF_CORE_PVTPLL_CON2_CKG_VAL_SHIFT                 (16U)
#define GRF_CORE_PVTPLL_CON2_CKG_VAL_MASK                  (0xFFFFU << GRF_CORE_PVTPLL_CON2_CKG_VAL_SHIFT)              /* 0xFFFF0000 */
/* PVTPLL_CON3 */
#define GRF_CORE_PVTPLL_CON3_OFFSET                        (0x10U)
#define GRF_CORE_PVTPLL_CON3_REF_CNT_SHIFT                 (0U)
#define GRF_CORE_PVTPLL_CON3_REF_CNT_MASK                  (0xFFFFFFFFU << GRF_CORE_PVTPLL_CON3_REF_CNT_SHIFT)          /* 0xFFFFFFFF */
/* PVTPLL_OSC_CNT */
#define GRF_CORE_PVTPLL_OSC_CNT_OFFSET                     (0x14U)
#define GRF_CORE_PVTPLL_OSC_CNT_OSC_CLK_CNT_VAL_SHIFT      (0U)
#define GRF_CORE_PVTPLL_OSC_CNT_OSC_CLK_CNT_VAL_MASK       (0xFFFFFFFFU << GRF_CORE_PVTPLL_OSC_CNT_OSC_CLK_CNT_VAL_SHIFT) /* 0xFFFFFFFF */
/* PVTPLL_OSC_CNT_AVG */
#define GRF_CORE_PVTPLL_OSC_CNT_AVG_OFFSET                 (0x18U)
#define GRF_CORE_PVTPLL_OSC_CNT_AVG_OSC_CLK_CNT_AVE_VALUE_SHIFT (0U)
#define GRF_CORE_PVTPLL_OSC_CNT_AVG_OSC_CLK_CNT_AVE_VALUE_MASK (0x1U << GRF_CORE_PVTPLL_OSC_CNT_AVG_OSC_CLK_CNT_AVE_VALUE_SHIFT) /* 0x00000001 */
/* CPU_STATUS */
#define GRF_CORE_CPU_STATUS_OFFSET                         (0x60U)
#define GRF_CORE_CPU_STATUS_STANDBYWFE_SHIFT               (0U)
#define GRF_CORE_CPU_STATUS_STANDBYWFE_MASK                (0x7U << GRF_CORE_CPU_STATUS_STANDBYWFE_SHIFT)               /* 0x00000007 */
#define GRF_CORE_CPU_STATUS_STANDBYWFI_SHIFT               (4U)
#define GRF_CORE_CPU_STATUS_STANDBYWFI_MASK                (0x7U << GRF_CORE_CPU_STATUS_STANDBYWFI_SHIFT)               /* 0x00000070 */
#define GRF_CORE_CPU_STATUS_SMPNAMP_SHIFT                  (8U)
#define GRF_CORE_CPU_STATUS_SMPNAMP_MASK                   (0x7U << GRF_CORE_CPU_STATUS_SMPNAMP_SHIFT)                  /* 0x00000700 */
#define GRF_CORE_CPU_STATUS_STANDBYWFIL2_SHIFT             (12U)
#define GRF_CORE_CPU_STATUS_STANDBYWFIL2_MASK              (0x1U << GRF_CORE_CPU_STATUS_STANDBYWFIL2_SHIFT)             /* 0x00001000 */
#define GRF_CORE_CPU_STATUS_EVENTO_RISING_EDGE_SHIFT       (13U)
#define GRF_CORE_CPU_STATUS_EVENTO_RISING_EDGE_MASK        (0x1U << GRF_CORE_CPU_STATUS_EVENTO_RISING_EDGE_SHIFT)       /* 0x00002000 */
#define GRF_CORE_CPU_STATUS_JTAGTOP_SHIFT                  (14U)
#define GRF_CORE_CPU_STATUS_JTAGTOP_MASK                   (0x1U << GRF_CORE_CPU_STATUS_JTAGTOP_SHIFT)                  /* 0x00004000 */
#define GRF_CORE_CPU_STATUS_JTAGNSW_SHIFT                  (15U)
#define GRF_CORE_CPU_STATUS_JTAGNSW_MASK                   (0x1U << GRF_CORE_CPU_STATUS_JTAGNSW_SHIFT)                  /* 0x00008000 */
/* CPU_CON0 */
#define GRF_CORE_CPU_CON0_OFFSET                           (0x64U)
#define GRF_CORE_CPU_CON0_VINITHI_SHIFT                    (0U)
#define GRF_CORE_CPU_CON0_VINITHI_MASK                     (0xFU << GRF_CORE_CPU_CON0_VINITHI_SHIFT)                    /* 0x0000000F */
#define GRF_CORE_CPU_CON0_CFGEND_SHIFT                     (4U)
#define GRF_CORE_CPU_CON0_CFGEND_MASK                      (0xFU << GRF_CORE_CPU_CON0_CFGEND_SHIFT)                     /* 0x000000F0 */
#define GRF_CORE_CPU_CON0_CFGTE_SHIFT                      (8U)
#define GRF_CORE_CPU_CON0_CFGTE_MASK                       (0xFU << GRF_CORE_CPU_CON0_CFGTE_SHIFT)                      /* 0x00000F00 */
#define GRF_CORE_CPU_CON0_EVENTI_SHIFT                     (12U)
#define GRF_CORE_CPU_CON0_EVENTI_MASK                      (0x1U << GRF_CORE_CPU_CON0_EVENTI_SHIFT)                     /* 0x00001000 */
#define GRF_CORE_CPU_CON0_EVENTO_CLR_SHIFT                 (13U)
#define GRF_CORE_CPU_CON0_EVENTO_CLR_MASK                  (0x1U << GRF_CORE_CPU_CON0_EVENTO_CLR_SHIFT)                 /* 0x00002000 */
/* CPU_CON1 */
#define GRF_CORE_CPU_CON1_OFFSET                           (0x68U)
#define GRF_CORE_CPU_CON1_L1RSTDISABLE_SHIFT               (0U)
#define GRF_CORE_CPU_CON1_L1RSTDISABLE_MASK                (0xFU << GRF_CORE_CPU_CON1_L1RSTDISABLE_SHIFT)               /* 0x0000000F */
#define GRF_CORE_CPU_CON1_L2RSTDISABLE_SHIFT               (4U)
#define GRF_CORE_CPU_CON1_L2RSTDISABLE_MASK                (0x1U << GRF_CORE_CPU_CON1_L2RSTDISABLE_SHIFT)               /* 0x00000010 */
#define GRF_CORE_CPU_CON1_DBGROMADDRV_SHIFT                (5U)
#define GRF_CORE_CPU_CON1_DBGROMADDRV_MASK                 (0x1U << GRF_CORE_CPU_CON1_DBGROMADDRV_SHIFT)                /* 0x00000020 */
#define GRF_CORE_CPU_CON1_DBGSELFADDRV_SHIFT               (6U)
#define GRF_CORE_CPU_CON1_DBGSELFADDRV_MASK                (0x1U << GRF_CORE_CPU_CON1_DBGSELFADDRV_SHIFT)               /* 0x00000040 */
#define GRF_CORE_CPU_CON1_CPU_EMA_DETECT_EN_SHIFT          (12U)
#define GRF_CORE_CPU_CON1_CPU_EMA_DETECT_EN_MASK           (0x1U << GRF_CORE_CPU_CON1_CPU_EMA_DETECT_EN_SHIFT)          /* 0x00001000 */
#define GRF_CORE_CPU_CON1_PVTPLL_OEN_TO_IO_SEL_SHIFT       (13U)
#define GRF_CORE_CPU_CON1_PVTPLL_OEN_TO_IO_SEL_MASK        (0x1U << GRF_CORE_CPU_CON1_PVTPLL_OEN_TO_IO_SEL_SHIFT)       /* 0x00002000 */
/* CPU_MEM_CON0 */
#define GRF_CORE_CPU_MEM_CON0_OFFSET                       (0x6CU)
#define GRF_CORE_CPU_MEM_CON0_RTSEL_SHIFT                  (0U)
#define GRF_CORE_CPU_MEM_CON0_RTSEL_MASK                   (0x3U << GRF_CORE_CPU_MEM_CON0_RTSEL_SHIFT)                  /* 0x00000003 */
#define GRF_CORE_CPU_MEM_CON0_WTSEL_SHIFT                  (2U)
#define GRF_CORE_CPU_MEM_CON0_WTSEL_MASK                   (0x3U << GRF_CORE_CPU_MEM_CON0_WTSEL_SHIFT)                  /* 0x0000000C */
#define GRF_CORE_CPU_MEM_CON0_RTSEL_HVT_MUX4_SHIFT         (8U)
#define GRF_CORE_CPU_MEM_CON0_RTSEL_HVT_MUX4_MASK          (0x3U << GRF_CORE_CPU_MEM_CON0_RTSEL_HVT_MUX4_SHIFT)         /* 0x00000300 */
#define GRF_CORE_CPU_MEM_CON0_WTSEL_HVT_MUX4_SHIFT         (10U)
#define GRF_CORE_CPU_MEM_CON0_WTSEL_HVT_MUX4_MASK          (0x3U << GRF_CORE_CPU_MEM_CON0_WTSEL_HVT_MUX4_SHIFT)         /* 0x00000C00 */
/* SOC_CON0 */
#define GRF_CORE_SOC_CON0_OFFSET                           (0x84U)
#define GRF_CORE_SOC_CON0_GRF_GPIO1_FILTER_EN_SHIFT        (0U)
#define GRF_CORE_SOC_CON0_GRF_GPIO1_FILTER_EN_MASK         (0xFU << GRF_CORE_SOC_CON0_GRF_GPIO1_FILTER_EN_SHIFT)        /* 0x0000000F */
#define GRF_CORE_SOC_CON0_GRF_GPIO1_FILTER_SEL0_SHIFT      (4U)
#define GRF_CORE_SOC_CON0_GRF_GPIO1_FILTER_SEL0_MASK       (0x1FU << GRF_CORE_SOC_CON0_GRF_GPIO1_FILTER_SEL0_SHIFT)     /* 0x000001F0 */
#define GRF_CORE_SOC_CON0_GRF_GPIO1_FILTER_SEL1_SHIFT      (10U)
#define GRF_CORE_SOC_CON0_GRF_GPIO1_FILTER_SEL1_MASK       (0x1FU << GRF_CORE_SOC_CON0_GRF_GPIO1_FILTER_SEL1_SHIFT)     /* 0x00007C00 */
/* SOC_CON1 */
#define GRF_CORE_SOC_CON1_OFFSET                           (0x88U)
#define GRF_CORE_SOC_CON1_GRF_GPIO1_FILTER_SEL2_SHIFT      (4U)
#define GRF_CORE_SOC_CON1_GRF_GPIO1_FILTER_SEL2_MASK       (0x1FU << GRF_CORE_SOC_CON1_GRF_GPIO1_FILTER_SEL2_SHIFT)     /* 0x000001F0 */
#define GRF_CORE_SOC_CON1_GRF_GPIO1_FILTER_SEL3_SHIFT      (10U)
#define GRF_CORE_SOC_CON1_GRF_GPIO1_FILTER_SEL3_MASK       (0x1FU << GRF_CORE_SOC_CON1_GRF_GPIO1_FILTER_SEL3_SHIFT)     /* 0x00007C00 */
/* SOC_CON2 */
#define GRF_CORE_SOC_CON2_OFFSET                           (0x8CU)
#define GRF_CORE_SOC_CON2_GRF_GPIO1_FILTER_COUNT0_SHIFT    (0U)
#define GRF_CORE_SOC_CON2_GRF_GPIO1_FILTER_COUNT0_MASK     (0xFFFFFU << GRF_CORE_SOC_CON2_GRF_GPIO1_FILTER_COUNT0_SHIFT) /* 0x000FFFFF */
/* SOC_CON3 */
#define GRF_CORE_SOC_CON3_OFFSET                           (0x90U)
#define GRF_CORE_SOC_CON3_GRF_GPIO1_FILTER_COUNT1_SHIFT    (0U)
#define GRF_CORE_SOC_CON3_GRF_GPIO1_FILTER_COUNT1_MASK     (0xFFFFFU << GRF_CORE_SOC_CON3_GRF_GPIO1_FILTER_COUNT1_SHIFT) /* 0x000FFFFF */
/* SOC_CON4 */
#define GRF_CORE_SOC_CON4_OFFSET                           (0x94U)
#define GRF_CORE_SOC_CON4_GRF_GPIO1_FILTER_COUNT2_SHIFT    (0U)
#define GRF_CORE_SOC_CON4_GRF_GPIO1_FILTER_COUNT2_MASK     (0xFFFFFU << GRF_CORE_SOC_CON4_GRF_GPIO1_FILTER_COUNT2_SHIFT) /* 0x000FFFFF */
/* SOC_CON5 */
#define GRF_CORE_SOC_CON5_OFFSET                           (0x98U)
#define GRF_CORE_SOC_CON5_GRF_GPIO1_FILTER_COUNT3_SHIFT    (0U)
#define GRF_CORE_SOC_CON5_GRF_GPIO1_FILTER_COUNT3_MASK     (0xFFFFFU << GRF_CORE_SOC_CON5_GRF_GPIO1_FILTER_COUNT3_SHIFT) /* 0x000FFFFF */
/****************************************FLEXBUS*****************************************/
/* ENR */
#define FLEXBUS_ENR_OFFSET                                 (0x0U)
#define FLEXBUS_ENR_TX_ENR_SHIFT                           (0U)
#define FLEXBUS_ENR_TX_ENR_MASK                            (0x1U << FLEXBUS_ENR_TX_ENR_SHIFT)                           /* 0x00000001 */
#define FLEXBUS_ENR_RX_ENR_SHIFT                           (1U)
#define FLEXBUS_ENR_RX_ENR_MASK                            (0x1U << FLEXBUS_ENR_RX_ENR_SHIFT)                           /* 0x00000002 */
/* FREE_SCLK */
#define FLEXBUS_FREE_SCLK_OFFSET                           (0x4U)
#define FLEXBUS_FREE_SCLK_TX_FREE_MODE_SHIFT               (0U)
#define FLEXBUS_FREE_SCLK_TX_FREE_MODE_MASK                (0x1U << FLEXBUS_FREE_SCLK_TX_FREE_MODE_SHIFT)               /* 0x00000001 */
#define FLEXBUS_FREE_SCLK_RX_FREE_MODE_SHIFT               (1U)
#define FLEXBUS_FREE_SCLK_RX_FREE_MODE_MASK                (0x1U << FLEXBUS_FREE_SCLK_RX_FREE_MODE_SHIFT)               /* 0x00000002 */
/* CSN_CFG */
#define FLEXBUS_CSN_CFG_OFFSET                             (0x8U)
#define FLEXBUS_CSN_CFG_TX_CSN_CFG_SHIFT                   (0U)
#define FLEXBUS_CSN_CFG_TX_CSN_CFG_MASK                    (0x1U << FLEXBUS_CSN_CFG_TX_CSN_CFG_SHIFT)                   /* 0x00000001 */
#define FLEXBUS_CSN_CFG_RX_CSN_CFG_SHIFT                   (1U)
#define FLEXBUS_CSN_CFG_RX_CSN_CFG_MASK                    (0x1U << FLEXBUS_CSN_CFG_RX_CSN_CFG_SHIFT)                   /* 0x00000002 */
/* COM_CTL */
#define FLEXBUS_COM_CTL_OFFSET                             (0xCU)
#define FLEXBUS_COM_CTL_TX_RX_MODE_SHIFT                   (0U)
#define FLEXBUS_COM_CTL_TX_RX_MODE_MASK                    (0x3U << FLEXBUS_COM_CTL_TX_RX_MODE_SHIFT)                   /* 0x00000003 */
#define FLEXBUS_COM_CTL_SCLK_SHARE_SHIFT                   (2U)
#define FLEXBUS_COM_CTL_SCLK_SHARE_MASK                    (0x1U << FLEXBUS_COM_CTL_SCLK_SHARE_SHIFT)                   /* 0x00000004 */
#define FLEXBUS_COM_CTL_TX_USE_RX_SHIFT                    (3U)
#define FLEXBUS_COM_CTL_TX_USE_RX_MASK                     (0x1U << FLEXBUS_COM_CTL_TX_USE_RX_SHIFT)                    /* 0x00000008 */
#define FLEXBUS_COM_CTL_TXFIFO_EXPAND_SHIFT                (4U)
#define FLEXBUS_COM_CTL_TXFIFO_EXPAND_MASK                 (0x1U << FLEXBUS_COM_CTL_TXFIFO_EXPAND_SHIFT)                /* 0x00000010 */
#define FLEXBUS_COM_CTL_RXFIFO_EXPAND_SHIFT                (5U)
#define FLEXBUS_COM_CTL_RXFIFO_EXPAND_MASK                 (0x1U << FLEXBUS_COM_CTL_RXFIFO_EXPAND_SHIFT)                /* 0x00000020 */
/* REMAP */
#define FLEXBUS_REMAP_OFFSET                               (0x10U)
#define FLEXBUS_REMAP_TX_DATA_REMAP_SHIFT                  (0U)
#define FLEXBUS_REMAP_TX_DATA_REMAP_MASK                   (0x7U << FLEXBUS_REMAP_TX_DATA_REMAP_SHIFT)                  /* 0x00000007 */
#define FLEXBUS_REMAP_RX_DATA_REMAP_SHIFT                  (4U)
#define FLEXBUS_REMAP_RX_DATA_REMAP_MASK                   (0x7U << FLEXBUS_REMAP_RX_DATA_REMAP_SHIFT)                  /* 0x00000070 */
/* STOP */
#define FLEXBUS_STOP_OFFSET                                (0x14U)
#define FLEXBUS_STOP_TX_STOP_SHIFT                         (0U)
#define FLEXBUS_STOP_TX_STOP_MASK                          (0x1U << FLEXBUS_STOP_TX_STOP_SHIFT)                         /* 0x00000001 */
#define FLEXBUS_STOP_RX_STOP_SHIFT                         (1U)
#define FLEXBUS_STOP_RX_STOP_MASK                          (0x1U << FLEXBUS_STOP_RX_STOP_SHIFT)                         /* 0x00000002 */
/* SLAVE_MODE */
#define FLEXBUS_SLAVE_MODE_OFFSET                          (0x18U)
#define FLEXBUS_SLAVE_MODE_CLK1_IN_SHIFT                   (0U)
#define FLEXBUS_SLAVE_MODE_CLK1_IN_MASK                    (0x1U << FLEXBUS_SLAVE_MODE_CLK1_IN_SHIFT)                   /* 0x00000001 */
#define FLEXBUS_SLAVE_MODE_DVP_SEL_SHIFT                   (1U)
#define FLEXBUS_SLAVE_MODE_DVP_SEL_MASK                    (0x1U << FLEXBUS_SLAVE_MODE_DVP_SEL_SHIFT)                   /* 0x00000002 */
/* DVP_POL */
#define FLEXBUS_DVP_POL_OFFSET                             (0x1CU)
#define FLEXBUS_DVP_POL_VSYNC_POL_SHIFT                    (0U)
#define FLEXBUS_DVP_POL_VSYNC_POL_MASK                     (0x1U << FLEXBUS_DVP_POL_VSYNC_POL_SHIFT)                    /* 0x00000001 */
#define FLEXBUS_DVP_POL_HREF_POL_SHIFT                     (1U)
#define FLEXBUS_DVP_POL_HREF_POL_MASK                      (0x1U << FLEXBUS_DVP_POL_HREF_POL_SHIFT)                     /* 0x00000002 */
/* DVP_CROP_SIZE */
#define FLEXBUS_DVP_CROP_SIZE_OFFSET                       (0x20U)
#define FLEXBUS_DVP_CROP_SIZE_SW_WIDTH_SHIFT               (0U)
#define FLEXBUS_DVP_CROP_SIZE_SW_WIDTH_MASK                (0xFFFFU << FLEXBUS_DVP_CROP_SIZE_SW_WIDTH_SHIFT)            /* 0x0000FFFF */
#define FLEXBUS_DVP_CROP_SIZE_SW_HEIGHT_SHIFT              (16U)
#define FLEXBUS_DVP_CROP_SIZE_SW_HEIGHT_MASK               (0xFFFFU << FLEXBUS_DVP_CROP_SIZE_SW_HEIGHT_SHIFT)           /* 0xFFFF0000 */
/* DVP_CROP_START */
#define FLEXBUS_DVP_CROP_START_OFFSET                      (0x24U)
#define FLEXBUS_DVP_CROP_START_SW_START_X_SHIFT            (0U)
#define FLEXBUS_DVP_CROP_START_SW_START_X_MASK             (0xFFFFU << FLEXBUS_DVP_CROP_START_SW_START_X_SHIFT)         /* 0x0000FFFF */
#define FLEXBUS_DVP_CROP_START_SW_START_Y_SHIFT            (16U)
#define FLEXBUS_DVP_CROP_START_SW_START_Y_MASK             (0xFFFFU << FLEXBUS_DVP_CROP_START_SW_START_Y_SHIFT)         /* 0xFFFF0000 */
/* DVP_ORDER */
#define FLEXBUS_DVP_ORDER_OFFSET                           (0x28U)
#define FLEXBUS_DVP_ORDER_IN_ORDER_SHIFT                   (0U)
#define FLEXBUS_DVP_ORDER_IN_ORDER_MASK                    (0x3U << FLEXBUS_DVP_ORDER_IN_ORDER_SHIFT)                   /* 0x00000003 */
#define FLEXBUS_DVP_ORDER_OUT_ORDER_SHIFT                  (2U)
#define FLEXBUS_DVP_ORDER_OUT_ORDER_MASK                   (0x3U << FLEXBUS_DVP_ORDER_OUT_ORDER_SHIFT)                  /* 0x0000000C */
/* DVP_YUV2RGB */
#define FLEXBUS_DVP_YUV2RGB_OFFSET                         (0x2CU)
#define FLEXBUS_DVP_YUV2RGB_ENABLE_SHIFT                   (0U)
#define FLEXBUS_DVP_YUV2RGB_ENABLE_MASK                    (0x1U << FLEXBUS_DVP_YUV2RGB_ENABLE_SHIFT)                   /* 0x00000001 */
#define FLEXBUS_DVP_YUV2RGB_MODE_SHIFT                     (1U)
#define FLEXBUS_DVP_YUV2RGB_MODE_MASK                      (0x3U << FLEXBUS_DVP_YUV2RGB_MODE_SHIFT)                     /* 0x00000006 */
#define FLEXBUS_DVP_YUV2RGB_RB_SWAP_SHIFT                  (3U)
#define FLEXBUS_DVP_YUV2RGB_RB_SWAP_MASK                   (0x1U << FLEXBUS_DVP_YUV2RGB_RB_SWAP_SHIFT)                  /* 0x00000008 */
/* TX_CTL */
#define FLEXBUS_TX_CTL_OFFSET                              (0x40U)
#define FLEXBUS_TX_CTL_CPHA_SHIFT                          (2U)
#define FLEXBUS_TX_CTL_CPHA_MASK                           (0x1U << FLEXBUS_TX_CTL_CPHA_SHIFT)                          /* 0x00000004 */
#define FLEXBUS_TX_CTL_CPOL_SHIFT                          (3U)
#define FLEXBUS_TX_CTL_CPOL_MASK                           (0x1U << FLEXBUS_TX_CTL_CPOL_SHIFT)                          /* 0x00000008 */
#define FLEXBUS_TX_CTL_CONTINUE_MODE_SHIFT                 (4U)
#define FLEXBUS_TX_CTL_CONTINUE_MODE_MASK                  (0x1U << FLEXBUS_TX_CTL_CONTINUE_MODE_SHIFT)                 /* 0x00000010 */
#define FLEXBUS_TX_CTL_1XCLK_MASK_SHIFT                    (5U)
#define FLEXBUS_TX_CTL_1XCLK_MASK_MASK                     (0x1U << FLEXBUS_TX_CTL_1XCLK_MASK_SHIFT)                    /* 0x00000020 */
#define FLEXBUS_TX_CTL_CUTOFF_CFG_SHIFT                    (6U)
#define FLEXBUS_TX_CTL_CUTOFF_CFG_MASK                     (0x1U << FLEXBUS_TX_CTL_CUTOFF_CFG_SHIFT)                    /* 0x00000040 */
#define FLEXBUS_TX_CTL_CSN_NEG_CNT_CFG_SHIFT               (7U)
#define FLEXBUS_TX_CTL_CSN_NEG_CNT_CFG_MASK                (0x3U << FLEXBUS_TX_CTL_CSN_NEG_CNT_CFG_SHIFT)               /* 0x00000180 */
#define FLEXBUS_TX_CTL_CSN_POS_CNT_CFG_SHIFT               (9U)
#define FLEXBUS_TX_CTL_CSN_POS_CNT_CFG_MASK                (0x3U << FLEXBUS_TX_CTL_CSN_POS_CNT_CFG_SHIFT)               /* 0x00000600 */
#define FLEXBUS_TX_CTL_MULTI_LINE_SHIFT                    (11U)
#define FLEXBUS_TX_CTL_MULTI_LINE_MASK                     (0x1U << FLEXBUS_TX_CTL_MULTI_LINE_SHIFT)                    /* 0x00000800 */
#define FLEXBUS_TX_CTL_CMD_WIDTH_SHIFT                     (12U)
#define FLEXBUS_TX_CTL_CMD_WIDTH_MASK                      (0x1U << FLEXBUS_TX_CTL_CMD_WIDTH_SHIFT)                     /* 0x00001000 */
#define FLEXBUS_TX_CTL_SHIFT_SHIFT                         (13U)
#define FLEXBUS_TX_CTL_SHIFT_MASK                          (0x1U << FLEXBUS_TX_CTL_SHIFT_SHIFT)                         /* 0x00002000 */
#define FLEXBUS_TX_CTL_DAT_UNIT_SHIFT                      (14U)
#define FLEXBUS_TX_CTL_DAT_UNIT_MASK                       (0x1U << FLEXBUS_TX_CTL_DAT_UNIT_SHIFT)                      /* 0x00004000 */
#define FLEXBUS_TX_CTL_OEN_DLY_SHIFT                       (15U)
#define FLEXBUS_TX_CTL_OEN_DLY_MASK                        (0x1U << FLEXBUS_TX_CTL_OEN_DLY_SHIFT)                       /* 0x00008000 */
#define FLEXBUS_TX_CTL_OEN_PRE_SHIFT                       (16U)
#define FLEXBUS_TX_CTL_OEN_PRE_MASK                        (0x1U << FLEXBUS_TX_CTL_OEN_PRE_SHIFT)                       /* 0x00010000 */
#define FLEXBUS_TX_CTL_DATA_WIDTH_SHIFT                    (29U)
#define FLEXBUS_TX_CTL_DATA_WIDTH_MASK                     (0x7U << FLEXBUS_TX_CTL_DATA_WIDTH_SHIFT)                    /* 0xE0000000 */
/* TX_NUM */
#define FLEXBUS_TX_NUM_OFFSET                              (0x44U)
#define FLEXBUS_TX_NUM_NUM_SHIFT                           (0U)
#define FLEXBUS_TX_NUM_NUM_MASK                            (0x7FFFFFFU << FLEXBUS_TX_NUM_NUM_SHIFT)                     /* 0x07FFFFFF */
/* TXWAT_START */
#define FLEXBUS_TXWAT_START_OFFSET                         (0x48U)
#define FLEXBUS_TXWAT_START_TXFIFO_WAT_START_SHIFT         (0U)
#define FLEXBUS_TXWAT_START_TXFIFO_WAT_START_MASK          (0x1FFU << FLEXBUS_TXWAT_START_TXFIFO_WAT_START_SHIFT)       /* 0x000001FF */
/* TXFIFO_DNUM */
#define FLEXBUS_TXFIFO_DNUM_OFFSET                         (0x4CU)
#define FLEXBUS_TXFIFO_DNUM                                (0x0U)
#define FLEXBUS_TXFIFO_DNUM_DNUM_SHIFT                     (0U)
#define FLEXBUS_TXFIFO_DNUM_DNUM_MASK                      (0x3FFU << FLEXBUS_TXFIFO_DNUM_DNUM_SHIFT)                   /* 0x000003FF */
/* TX_WIDTH */
#define FLEXBUS_TX_WIDTH_OFFSET                            (0x50U)
#define FLEXBUS_TX_WIDTH_WIDTH_SIZE_SHIFT                  (0U)
#define FLEXBUS_TX_WIDTH_WIDTH_SIZE_MASK                   (0xFFFU << FLEXBUS_TX_WIDTH_WIDTH_SIZE_SHIFT)                /* 0x00000FFF */
/* TX_CSN_DUMMY */
#define FLEXBUS_TX_CSN_DUMMY_OFFSET                        (0x54U)
#define FLEXBUS_TX_CSN_DUMMY_CSN_DUMMY_SHIFT               (0U)
#define FLEXBUS_TX_CSN_DUMMY_CSN_DUMMY_MASK                (0xFFFFU << FLEXBUS_TX_CSN_DUMMY_CSN_DUMMY_SHIFT)            /* 0x0000FFFF */
/* TX_CMD_LEN */
#define FLEXBUS_TX_CMD_LEN_OFFSET                          (0x58U)
#define FLEXBUS_TX_CMD_LEN_CMD_LEN_SHIFT                   (0U)
#define FLEXBUS_TX_CMD_LEN_CMD_LEN_MASK                    (0x7FU << FLEXBUS_TX_CMD_LEN_CMD_LEN_SHIFT)                  /* 0x0000007F */
/* TX_CMD0 */
#define FLEXBUS_TX_CMD0_OFFSET                             (0x5CU)
#define FLEXBUS_TX_CMD0_CMD0_SHIFT                         (0U)
#define FLEXBUS_TX_CMD0_CMD0_MASK                          (0xFFFFFFFFU << FLEXBUS_TX_CMD0_CMD0_SHIFT)                  /* 0xFFFFFFFF */
/* TX_CMD1 */
#define FLEXBUS_TX_CMD1_OFFSET                             (0x60U)
#define FLEXBUS_TX_CMD1_CMD1_SHIFT                         (0U)
#define FLEXBUS_TX_CMD1_CMD1_MASK                          (0xFFFFFFFFU << FLEXBUS_TX_CMD1_CMD1_SHIFT)                  /* 0xFFFFFFFF */
/* RX_CTL */
#define FLEXBUS_RX_CTL_OFFSET                              (0x80U)
#define FLEXBUS_RX_CTL_CPHA_SHIFT                          (2U)
#define FLEXBUS_RX_CTL_CPHA_MASK                           (0x1U << FLEXBUS_RX_CTL_CPHA_SHIFT)                          /* 0x00000004 */
#define FLEXBUS_RX_CTL_CPOL_SHIFT                          (3U)
#define FLEXBUS_RX_CTL_CPOL_MASK                           (0x1U << FLEXBUS_RX_CTL_CPOL_SHIFT)                          /* 0x00000008 */
#define FLEXBUS_RX_CTL_CONTINUE_MODE_SHIFT                 (4U)
#define FLEXBUS_RX_CTL_CONTINUE_MODE_MASK                  (0x1U << FLEXBUS_RX_CTL_CONTINUE_MODE_SHIFT)                 /* 0x00000010 */
#define FLEXBUS_RX_CTL_RXD_DY_SHIFT                        (5U)
#define FLEXBUS_RX_CTL_RXD_DY_MASK                         (0x1U << FLEXBUS_RX_CTL_RXD_DY_SHIFT)                        /* 0x00000020 */
#define FLEXBUS_RX_CTL_CUTOFF_CFG_SHIFT                    (6U)
#define FLEXBUS_RX_CTL_CUTOFF_CFG_MASK                     (0x1U << FLEXBUS_RX_CTL_CUTOFF_CFG_SHIFT)                    /* 0x00000040 */
#define FLEXBUS_RX_CTL_CSN_NEG_CNT_CFG_SHIFT               (7U)
#define FLEXBUS_RX_CTL_CSN_NEG_CNT_CFG_MASK                (0x3U << FLEXBUS_RX_CTL_CSN_NEG_CNT_CFG_SHIFT)               /* 0x00000180 */
#define FLEXBUS_RX_CTL_CSN_POS_CNT_CFG_SHIFT               (9U)
#define FLEXBUS_RX_CTL_CSN_POS_CNT_CFG_MASK                (0x1FU << FLEXBUS_RX_CTL_CSN_POS_CNT_CFG_SHIFT)              /* 0x00003E00 */
#define FLEXBUS_RX_CTL_AUTO_PAD_SHIFT                      (14U)
#define FLEXBUS_RX_CTL_AUTO_PAD_MASK                       (0x1U << FLEXBUS_RX_CTL_AUTO_PAD_SHIFT)                      /* 0x00004000 */
#define FLEXBUS_RX_CTL_SHIFT_SHIFT                         (15U)
#define FLEXBUS_RX_CTL_SHIFT_MASK                          (0x1U << FLEXBUS_RX_CTL_SHIFT_SHIFT)                         /* 0x00008000 */
#define FLEXBUS_RX_CTL_DAT_UNIT_SHIFT                      (16U)
#define FLEXBUS_RX_CTL_DAT_UNIT_MASK                       (0x1U << FLEXBUS_RX_CTL_DAT_UNIT_SHIFT)                      /* 0x00010000 */
#define FLEXBUS_RX_CTL_FILL_DUMMY_SHIFT                    (17U)
#define FLEXBUS_RX_CTL_FILL_DUMMY_MASK                     (0x1U << FLEXBUS_RX_CTL_FILL_DUMMY_SHIFT)                    /* 0x00020000 */
#define FLEXBUS_RX_CTL_DATA_WIDTH_SHIFT                    (29U)
#define FLEXBUS_RX_CTL_DATA_WIDTH_MASK                     (0x7U << FLEXBUS_RX_CTL_DATA_WIDTH_SHIFT)                    /* 0xE0000000 */
/* RX_NUM */
#define FLEXBUS_RX_NUM_OFFSET                              (0x84U)
#define FLEXBUS_RX_NUM_NUM_SHIFT                           (0U)
#define FLEXBUS_RX_NUM_NUM_MASK                            (0x7FFFFFFU << FLEXBUS_RX_NUM_NUM_SHIFT)                     /* 0x07FFFFFF */
/* RXFIFO_DNUM */
#define FLEXBUS_RXFIFO_DNUM_OFFSET                         (0x88U)
#define FLEXBUS_RXFIFO_DNUM                                (0x0U)
#define FLEXBUS_RXFIFO_DNUM_DNUM_SHIFT                     (0U)
#define FLEXBUS_RXFIFO_DNUM_DNUM_MASK                      (0x3FFU << FLEXBUS_RXFIFO_DNUM_DNUM_SHIFT)                   /* 0x000003FF */
/* DLL_EN */
#define FLEXBUS_DLL_EN_OFFSET                              (0x8CU)
#define FLEXBUS_DLL_EN_ENABLE_SHIFT                        (0U)
#define FLEXBUS_DLL_EN_ENABLE_MASK                         (0x1U << FLEXBUS_DLL_EN_ENABLE_SHIFT)                        /* 0x00000001 */
/* DLL_NUM */
#define FLEXBUS_DLL_NUM_OFFSET                             (0x90U)
#define FLEXBUS_DLL_NUM_NUM_SHIFT                          (0U)
#define FLEXBUS_DLL_NUM_NUM_MASK                           (0xFFU << FLEXBUS_DLL_NUM_NUM_SHIFT)                         /* 0x000000FF */
/* RXCLK_DUMMY */
#define FLEXBUS_RXCLK_DUMMY_OFFSET                         (0x94U)
#define FLEXBUS_RXCLK_DUMMY_RX_CLK_DUMMY_SHIFT             (0U)
#define FLEXBUS_RXCLK_DUMMY_RX_CLK_DUMMY_MASK              (0x1FU << FLEXBUS_RXCLK_DUMMY_RX_CLK_DUMMY_SHIFT)            /* 0x0000001F */
/* RXCLK_CAP_CNT */
#define FLEXBUS_RXCLK_CAP_CNT_OFFSET                       (0x98U)
#define FLEXBUS_RXCLK_CAP_CNT_RX_CAP_CNT_SHIFT             (0U)
#define FLEXBUS_RXCLK_CAP_CNT_RX_CAP_CNT_MASK              (0x1FU << FLEXBUS_RXCLK_CAP_CNT_RX_CAP_CNT_SHIFT)            /* 0x0000001F */
/* DMA_RD_OUTSTD */
#define FLEXBUS_DMA_RD_OUTSTD_OFFSET                       (0x100U)
#define FLEXBUS_DMA_RD_OUTSTD_READ_OUTSTANDING_SHIFT       (0U)
#define FLEXBUS_DMA_RD_OUTSTD_READ_OUTSTANDING_MASK        (0x3FU << FLEXBUS_DMA_RD_OUTSTD_READ_OUTSTANDING_SHIFT)      /* 0x0000003F */
/* DMA_WR_OUTSTD */
#define FLEXBUS_DMA_WR_OUTSTD_OFFSET                       (0x104U)
#define FLEXBUS_DMA_WR_OUTSTD_WRITE_OUTSTANDING_SHIFT      (0U)
#define FLEXBUS_DMA_WR_OUTSTD_WRITE_OUTSTANDING_MASK       (0x3FU << FLEXBUS_DMA_WR_OUTSTD_WRITE_OUTSTANDING_SHIFT)     /* 0x0000003F */
/* DMA_SRC_ADDR0 */
#define FLEXBUS_DMA_SRC_ADDR0_OFFSET                       (0x108U)
#define FLEXBUS_DMA_SRC_ADDR0_SRC_ADDR0_SHIFT              (0U)
#define FLEXBUS_DMA_SRC_ADDR0_SRC_ADDR0_MASK               (0x3FFFFFFFU << FLEXBUS_DMA_SRC_ADDR0_SRC_ADDR0_SHIFT)       /* 0x3FFFFFFF */
/* DMA_DST_ADDR0 */
#define FLEXBUS_DMA_DST_ADDR0_OFFSET                       (0x10CU)
#define FLEXBUS_DMA_DST_ADDR0_DST_ADDR0_SHIFT              (0U)
#define FLEXBUS_DMA_DST_ADDR0_DST_ADDR0_MASK               (0x3FFFFFFFU << FLEXBUS_DMA_DST_ADDR0_DST_ADDR0_SHIFT)       /* 0x3FFFFFFF */
/* DMA_SRC_ADDR1 */
#define FLEXBUS_DMA_SRC_ADDR1_OFFSET                       (0x110U)
#define FLEXBUS_DMA_SRC_ADDR1_SRC_ADDR1_SHIFT              (0U)
#define FLEXBUS_DMA_SRC_ADDR1_SRC_ADDR1_MASK               (0x3FFFFFFFU << FLEXBUS_DMA_SRC_ADDR1_SRC_ADDR1_SHIFT)       /* 0x3FFFFFFF */
/* DMA_DST_ADDR1 */
#define FLEXBUS_DMA_DST_ADDR1_OFFSET                       (0x114U)
#define FLEXBUS_DMA_DST_ADDR1_DST_ADDR1_SHIFT              (0U)
#define FLEXBUS_DMA_DST_ADDR1_DST_ADDR1_MASK               (0x3FFFFFFFU << FLEXBUS_DMA_DST_ADDR1_DST_ADDR1_SHIFT)       /* 0x3FFFFFFF */
/* DMA_SRC_LEN0 */
#define FLEXBUS_DMA_SRC_LEN0_OFFSET                        (0x118U)
#define FLEXBUS_DMA_SRC_LEN0_SRC_LEN0_SHIFT                (6U)
#define FLEXBUS_DMA_SRC_LEN0_SRC_LEN0_MASK                 (0x3FFFFFU << FLEXBUS_DMA_SRC_LEN0_SRC_LEN0_SHIFT)           /* 0x0FFFFFC0 */
/* DMA_DST_LEN0 */
#define FLEXBUS_DMA_DST_LEN0_OFFSET                        (0x11CU)
#define FLEXBUS_DMA_DST_LEN0_DST_LEN0_SHIFT                (6U)
#define FLEXBUS_DMA_DST_LEN0_DST_LEN0_MASK                 (0x3FFFFFU << FLEXBUS_DMA_DST_LEN0_DST_LEN0_SHIFT)           /* 0x0FFFFFC0 */
/* DMA_SRC_LEN1 */
#define FLEXBUS_DMA_SRC_LEN1_OFFSET                        (0x120U)
#define FLEXBUS_DMA_SRC_LEN1_SRC_LEN1_SHIFT                (6U)
#define FLEXBUS_DMA_SRC_LEN1_SRC_LEN1_MASK                 (0x3FFFFFU << FLEXBUS_DMA_SRC_LEN1_SRC_LEN1_SHIFT)           /* 0x0FFFFFC0 */
/* DMA_DST_LEN1 */
#define FLEXBUS_DMA_DST_LEN1_OFFSET                        (0x124U)
#define FLEXBUS_DMA_DST_LEN1_DST_LEN1_SHIFT                (6U)
#define FLEXBUS_DMA_DST_LEN1_DST_LEN1_MASK                 (0x3FFFFFU << FLEXBUS_DMA_DST_LEN1_DST_LEN1_SHIFT)           /* 0x0FFFFFC0 */
/* DMA_WAT_INT */
#define FLEXBUS_DMA_WAT_INT_OFFSET                         (0x128U)
#define FLEXBUS_DMA_WAT_INT_SRC_WAT_LVL_SHIFT              (2U)
#define FLEXBUS_DMA_WAT_INT_SRC_WAT_LVL_MASK               (0x3U << FLEXBUS_DMA_WAT_INT_SRC_WAT_LVL_SHIFT)              /* 0x0000000C */
#define FLEXBUS_DMA_WAT_INT_DST_WAT_LVL_SHIFT              (0U)
#define FLEXBUS_DMA_WAT_INT_DST_WAT_LVL_MASK               (0x3U << FLEXBUS_DMA_WAT_INT_DST_WAT_LVL_SHIFT)              /* 0x00000003 */
/* DMA_TIMEOUT */
#define FLEXBUS_DMA_TIMEOUT_OFFSET                         (0x12CU)
#define FLEXBUS_DMA_TIMEOUT_EN_SHIFT                       (0U)
#define FLEXBUS_DMA_TIMEOUT_EN_MASK                        (0x1U << FLEXBUS_DMA_TIMEOUT_EN_SHIFT)                       /* 0x00000001 */
#define FLEXBUS_DMA_TIMEOUT_COUNTER_SHIFT                  (1U)
#define FLEXBUS_DMA_TIMEOUT_COUNTER_MASK                   (0xFFFU << FLEXBUS_DMA_TIMEOUT_COUNTER_SHIFT)                /* 0x00001FFE */
/* DMA_RD_LEN */
#define FLEXBUS_DMA_RD_LEN_OFFSET                          (0x130U)
#define FLEXBUS_DMA_RD_LEN_BURST_LEN8_SHIFT                (0U)
#define FLEXBUS_DMA_RD_LEN_BURST_LEN8_MASK                 (0x1U << FLEXBUS_DMA_RD_LEN_BURST_LEN8_SHIFT)                /* 0x00000001 */
/* STATUS */
#define FLEXBUS_STATUS_OFFSET                              (0x160U)
#define FLEXBUS_STATUS                                     (0x0U)
#define FLEXBUS_STATUS_TX_BUSY_SHIFT                       (0U)
#define FLEXBUS_STATUS_TX_BUSY_MASK                        (0x1U << FLEXBUS_STATUS_TX_BUSY_SHIFT)                       /* 0x00000001 */
#define FLEXBUS_STATUS_RX_BUSY_SHIFT                       (1U)
#define FLEXBUS_STATUS_RX_BUSY_MASK                        (0x1U << FLEXBUS_STATUS_RX_BUSY_SHIFT)                       /* 0x00000002 */
#define FLEXBUS_STATUS_TX_FULL_SHIFT                       (2U)
#define FLEXBUS_STATUS_TX_FULL_MASK                        (0x1U << FLEXBUS_STATUS_TX_FULL_SHIFT)                       /* 0x00000004 */
#define FLEXBUS_STATUS_TX_EMPTY_SHIFT                      (3U)
#define FLEXBUS_STATUS_TX_EMPTY_MASK                       (0x1U << FLEXBUS_STATUS_TX_EMPTY_SHIFT)                      /* 0x00000008 */
#define FLEXBUS_STATUS_RX_FULL_SHIFT                       (4U)
#define FLEXBUS_STATUS_RX_FULL_MASK                        (0x1U << FLEXBUS_STATUS_RX_FULL_SHIFT)                       /* 0x00000010 */
#define FLEXBUS_STATUS_RX_EMPTY_SHIFT                      (5U)
#define FLEXBUS_STATUS_RX_EMPTY_MASK                       (0x1U << FLEXBUS_STATUS_RX_EMPTY_SHIFT)                      /* 0x00000020 */
/* IMR */
#define FLEXBUS_IMR_OFFSET                                 (0x164U)
#define FLEXBUS_IMR_TX_OVF_IM_SHIFT                        (0U)
#define FLEXBUS_IMR_TX_OVF_IM_MASK                         (0x1U << FLEXBUS_IMR_TX_OVF_IM_SHIFT)                        /* 0x00000001 */
#define FLEXBUS_IMR_TX_UDF_IM_SHIFT                        (1U)
#define FLEXBUS_IMR_TX_UDF_IM_MASK                         (0x1U << FLEXBUS_IMR_TX_UDF_IM_SHIFT)                        /* 0x00000002 */
#define FLEXBUS_IMR_TX_DONE_IM_SHIFT                       (2U)
#define FLEXBUS_IMR_TX_DONE_IM_MASK                        (0x1U << FLEXBUS_IMR_TX_DONE_IM_SHIFT)                       /* 0x00000004 */
#define FLEXBUS_IMR_RX_OVF_IM_SHIFT                        (3U)
#define FLEXBUS_IMR_RX_OVF_IM_MASK                         (0x1U << FLEXBUS_IMR_RX_OVF_IM_SHIFT)                        /* 0x00000008 */
#define FLEXBUS_IMR_RX_UDF_IM_SHIFT                        (4U)
#define FLEXBUS_IMR_RX_UDF_IM_MASK                         (0x1U << FLEXBUS_IMR_RX_UDF_IM_SHIFT)                        /* 0x00000010 */
#define FLEXBUS_IMR_RX_DONE_IM_SHIFT                       (5U)
#define FLEXBUS_IMR_RX_DONE_IM_MASK                        (0x1U << FLEXBUS_IMR_RX_DONE_IM_SHIFT)                       /* 0x00000020 */
#define FLEXBUS_IMR_DVP_FRAME_AB_SHIFT                     (6U)
#define FLEXBUS_IMR_DVP_FRAME_AB_MASK                      (0x1U << FLEXBUS_IMR_DVP_FRAME_AB_SHIFT)                     /* 0x00000040 */
#define FLEXBUS_IMR_DVP_FRAME_START_IM_SHIFT               (7U)
#define FLEXBUS_IMR_DVP_FRAME_START_IM_MASK                (0x1U << FLEXBUS_IMR_DVP_FRAME_START_IM_SHIFT)               /* 0x00000080 */
#define FLEXBUS_IMR_DMA_SRC0_IM_SHIFT                      (8U)
#define FLEXBUS_IMR_DMA_SRC0_IM_MASK                       (0x1U << FLEXBUS_IMR_DMA_SRC0_IM_SHIFT)                      /* 0x00000100 */
#define FLEXBUS_IMR_DMA_SRC1_IM_SHIFT                      (9U)
#define FLEXBUS_IMR_DMA_SRC1_IM_MASK                       (0x1U << FLEXBUS_IMR_DMA_SRC1_IM_SHIFT)                      /* 0x00000200 */
#define FLEXBUS_IMR_DMA_DST0_IM_SHIFT                      (10U)
#define FLEXBUS_IMR_DMA_DST0_IM_MASK                       (0x1U << FLEXBUS_IMR_DMA_DST0_IM_SHIFT)                      /* 0x00000400 */
#define FLEXBUS_IMR_DMA_DST1_IM_SHIFT                      (11U)
#define FLEXBUS_IMR_DMA_DST1_IM_MASK                       (0x1U << FLEXBUS_IMR_DMA_DST1_IM_SHIFT)                      /* 0x00000800 */
#define FLEXBUS_IMR_DMA_ERR_IM_SHIFT                       (12U)
#define FLEXBUS_IMR_DMA_ERR_IM_MASK                        (0x1U << FLEXBUS_IMR_DMA_ERR_IM_SHIFT)                       /* 0x00001000 */
#define FLEXBUS_IMR_DMA_TIMEOUT_IM_SHIFT                   (13U)
#define FLEXBUS_IMR_DMA_TIMEOUT_IM_MASK                    (0x1U << FLEXBUS_IMR_DMA_TIMEOUT_IM_SHIFT)                   /* 0x00002000 */
/* RISR */
#define FLEXBUS_RISR_OFFSET                                (0x168U)
#define FLEXBUS_RISR                                       (0x0U)
#define FLEXBUS_RISR_TX_OVF_RIS_SHIFT                      (0U)
#define FLEXBUS_RISR_TX_OVF_RIS_MASK                       (0x1U << FLEXBUS_RISR_TX_OVF_RIS_SHIFT)                      /* 0x00000001 */
#define FLEXBUS_RISR_TX_UDF_RIS_SHIFT                      (1U)
#define FLEXBUS_RISR_TX_UDF_RIS_MASK                       (0x1U << FLEXBUS_RISR_TX_UDF_RIS_SHIFT)                      /* 0x00000002 */
#define FLEXBUS_RISR_TX_DONE_RIS_SHIFT                     (2U)
#define FLEXBUS_RISR_TX_DONE_RIS_MASK                      (0x1U << FLEXBUS_RISR_TX_DONE_RIS_SHIFT)                     /* 0x00000004 */
#define FLEXBUS_RISR_RX_OVF_RIS_SHIFT                      (3U)
#define FLEXBUS_RISR_RX_OVF_RIS_MASK                       (0x1U << FLEXBUS_RISR_RX_OVF_RIS_SHIFT)                      /* 0x00000008 */
#define FLEXBUS_RISR_RX_UDF_RIS_SHIFT                      (4U)
#define FLEXBUS_RISR_RX_UDF_RIS_MASK                       (0x1U << FLEXBUS_RISR_RX_UDF_RIS_SHIFT)                      /* 0x00000010 */
#define FLEXBUS_RISR_RX_DONE_RIS_SHIFT                     (5U)
#define FLEXBUS_RISR_RX_DONE_RIS_MASK                      (0x1U << FLEXBUS_RISR_RX_DONE_RIS_SHIFT)                     /* 0x00000020 */
#define FLEXBUS_RISR_DVP_FRAME_AB_RIS_SHIFT                (6U)
#define FLEXBUS_RISR_DVP_FRAME_AB_RIS_MASK                 (0x1U << FLEXBUS_RISR_DVP_FRAME_AB_RIS_SHIFT)                /* 0x00000040 */
#define FLEXBUS_RISR_DVP_FRAME_START_RIS_SHIFT             (7U)
#define FLEXBUS_RISR_DVP_FRAME_START_RIS_MASK              (0x1U << FLEXBUS_RISR_DVP_FRAME_START_RIS_SHIFT)             /* 0x00000080 */
#define FLEXBUS_RISR_DMA_SRC0_RIS_SHIFT                    (8U)
#define FLEXBUS_RISR_DMA_SRC0_RIS_MASK                     (0x1U << FLEXBUS_RISR_DMA_SRC0_RIS_SHIFT)                    /* 0x00000100 */
#define FLEXBUS_RISR_DMA_SRC1_RIS_SHIFT                    (9U)
#define FLEXBUS_RISR_DMA_SRC1_RIS_MASK                     (0x1U << FLEXBUS_RISR_DMA_SRC1_RIS_SHIFT)                    /* 0x00000200 */
#define FLEXBUS_RISR_DMA_DST0_RIS_SHIFT                    (10U)
#define FLEXBUS_RISR_DMA_DST0_RIS_MASK                     (0x1U << FLEXBUS_RISR_DMA_DST0_RIS_SHIFT)                    /* 0x00000400 */
#define FLEXBUS_RISR_DMA_DST1_RIS_SHIFT                    (11U)
#define FLEXBUS_RISR_DMA_DST1_RIS_MASK                     (0x1U << FLEXBUS_RISR_DMA_DST1_RIS_SHIFT)                    /* 0x00000800 */
#define FLEXBUS_RISR_DMA_ERR_RIS_SHIFT                     (12U)
#define FLEXBUS_RISR_DMA_ERR_RIS_MASK                      (0x1U << FLEXBUS_RISR_DMA_ERR_RIS_SHIFT)                     /* 0x00001000 */
#define FLEXBUS_RISR_DMA_TIMEOUT_RIS_SHIFT                 (13U)
#define FLEXBUS_RISR_DMA_TIMEOUT_RIS_MASK                  (0x1U << FLEXBUS_RISR_DMA_TIMEOUT_RIS_SHIFT)                 /* 0x00002000 */
/* ISR */
#define FLEXBUS_ISR_OFFSET                                 (0x16CU)
#define FLEXBUS_ISR                                        (0x0U)
#define FLEXBUS_ISR_TX_OVF_IS_SHIFT                        (0U)
#define FLEXBUS_ISR_TX_OVF_IS_MASK                         (0x1U << FLEXBUS_ISR_TX_OVF_IS_SHIFT)                        /* 0x00000001 */
#define FLEXBUS_ISR_TX_UDF_IS_SHIFT                        (1U)
#define FLEXBUS_ISR_TX_UDF_IS_MASK                         (0x1U << FLEXBUS_ISR_TX_UDF_IS_SHIFT)                        /* 0x00000002 */
#define FLEXBUS_ISR_TX_DONE_IS_SHIFT                       (2U)
#define FLEXBUS_ISR_TX_DONE_IS_MASK                        (0x1U << FLEXBUS_ISR_TX_DONE_IS_SHIFT)                       /* 0x00000004 */
#define FLEXBUS_ISR_RX_OVF_IS_SHIFT                        (3U)
#define FLEXBUS_ISR_RX_OVF_IS_MASK                         (0x1U << FLEXBUS_ISR_RX_OVF_IS_SHIFT)                        /* 0x00000008 */
#define FLEXBUS_ISR_RX_UDF_IS_SHIFT                        (4U)
#define FLEXBUS_ISR_RX_UDF_IS_MASK                         (0x1U << FLEXBUS_ISR_RX_UDF_IS_SHIFT)                        /* 0x00000010 */
#define FLEXBUS_ISR_RX_DONE_IS_SHIFT                       (5U)
#define FLEXBUS_ISR_RX_DONE_IS_MASK                        (0x1U << FLEXBUS_ISR_RX_DONE_IS_SHIFT)                       /* 0x00000020 */
#define FLEXBUS_ISR_DVP_FRAME_AB_IS_SHIFT                  (6U)
#define FLEXBUS_ISR_DVP_FRAME_AB_IS_MASK                   (0x1U << FLEXBUS_ISR_DVP_FRAME_AB_IS_SHIFT)                  /* 0x00000040 */
#define FLEXBUS_ISR_DVP_FRAME_START_IS_SHIFT               (7U)
#define FLEXBUS_ISR_DVP_FRAME_START_IS_MASK                (0x1U << FLEXBUS_ISR_DVP_FRAME_START_IS_SHIFT)               /* 0x00000080 */
#define FLEXBUS_ISR_DMA_SRC0_IS_SHIFT                      (8U)
#define FLEXBUS_ISR_DMA_SRC0_IS_MASK                       (0x1U << FLEXBUS_ISR_DMA_SRC0_IS_SHIFT)                      /* 0x00000100 */
#define FLEXBUS_ISR_DMA_SRC1_IS_SHIFT                      (9U)
#define FLEXBUS_ISR_DMA_SRC1_IS_MASK                       (0x1U << FLEXBUS_ISR_DMA_SRC1_IS_SHIFT)                      /* 0x00000200 */
#define FLEXBUS_ISR_DMA_DST0_IS_SHIFT                      (10U)
#define FLEXBUS_ISR_DMA_DST0_IS_MASK                       (0x1U << FLEXBUS_ISR_DMA_DST0_IS_SHIFT)                      /* 0x00000400 */
#define FLEXBUS_ISR_DMA_DST1_IS_SHIFT                      (11U)
#define FLEXBUS_ISR_DMA_DST1_IS_MASK                       (0x1U << FLEXBUS_ISR_DMA_DST1_IS_SHIFT)                      /* 0x00000800 */
#define FLEXBUS_ISR_DMA_ERR_IS_SHIFT                       (12U)
#define FLEXBUS_ISR_DMA_ERR_IS_MASK                        (0x1U << FLEXBUS_ISR_DMA_ERR_IS_SHIFT)                       /* 0x00001000 */
#define FLEXBUS_ISR_DMA_TIMEOUT_IS_SHIFT                   (13U)
#define FLEXBUS_ISR_DMA_TIMEOUT_IS_MASK                    (0x1U << FLEXBUS_ISR_DMA_TIMEOUT_IS_SHIFT)                   /* 0x00002000 */
/* ICR */
#define FLEXBUS_ICR_OFFSET                                 (0x170U)
#define FLEXBUS_ICR_CTX_OVF_SHIFT                          (0U)
#define FLEXBUS_ICR_CTX_OVF_MASK                           (0x1U << FLEXBUS_ICR_CTX_OVF_SHIFT)                          /* 0x00000001 */
#define FLEXBUS_ICR_CTX_UDF_SHIFT                          (1U)
#define FLEXBUS_ICR_CTX_UDF_MASK                           (0x1U << FLEXBUS_ICR_CTX_UDF_SHIFT)                          /* 0x00000002 */
#define FLEXBUS_ICR_CTX_DONE_SHIFT                         (2U)
#define FLEXBUS_ICR_CTX_DONE_MASK                          (0x1U << FLEXBUS_ICR_CTX_DONE_SHIFT)                         /* 0x00000004 */
#define FLEXBUS_ICR_CRX_OVF_SHIFT                          (3U)
#define FLEXBUS_ICR_CRX_OVF_MASK                           (0x1U << FLEXBUS_ICR_CRX_OVF_SHIFT)                          /* 0x00000008 */
#define FLEXBUS_ICR_CRX_UDF_SHIFT                          (4U)
#define FLEXBUS_ICR_CRX_UDF_MASK                           (0x1U << FLEXBUS_ICR_CRX_UDF_SHIFT)                          /* 0x00000010 */
#define FLEXBUS_ICR_CRX_DONE_SHIFT                         (5U)
#define FLEXBUS_ICR_CRX_DONE_MASK                          (0x1U << FLEXBUS_ICR_CRX_DONE_SHIFT)                         /* 0x00000020 */
#define FLEXBUS_ICR_CRX_DVP_FRAME_AB_SHIFT                 (6U)
#define FLEXBUS_ICR_CRX_DVP_FRAME_AB_MASK                  (0x1U << FLEXBUS_ICR_CRX_DVP_FRAME_AB_SHIFT)                 /* 0x00000040 */
#define FLEXBUS_ICR_CFRAME_START_SHIFT                     (7U)
#define FLEXBUS_ICR_CFRAME_START_MASK                      (0x1U << FLEXBUS_ICR_CFRAME_START_SHIFT)                     /* 0x00000080 */
#define FLEXBUS_ICR_CSRC0_SHIFT                            (8U)
#define FLEXBUS_ICR_CSRC0_MASK                             (0x1U << FLEXBUS_ICR_CSRC0_SHIFT)                            /* 0x00000100 */
#define FLEXBUS_ICR_CSRC1_SHIFT                            (9U)
#define FLEXBUS_ICR_CSRC1_MASK                             (0x1U << FLEXBUS_ICR_CSRC1_SHIFT)                            /* 0x00000200 */
#define FLEXBUS_ICR_CDST0_SHIFT                            (10U)
#define FLEXBUS_ICR_CDST0_MASK                             (0x1U << FLEXBUS_ICR_CDST0_SHIFT)                            /* 0x00000400 */
#define FLEXBUS_ICR_CDST1_SHIFT                            (11U)
#define FLEXBUS_ICR_CDST1_MASK                             (0x1U << FLEXBUS_ICR_CDST1_SHIFT)                            /* 0x00000800 */
#define FLEXBUS_ICR_CDMA_ERR_SHIFT                         (12U)
#define FLEXBUS_ICR_CDMA_ERR_MASK                          (0x1U << FLEXBUS_ICR_CDMA_ERR_SHIFT)                         /* 0x00001000 */
#define FLEXBUS_ICR_CTIMEOUT_SHIFT                         (13U)
#define FLEXBUS_ICR_CTIMEOUT_MASK                          (0x1U << FLEXBUS_ICR_CTIMEOUT_SHIFT)                         /* 0x00002000 */
#define FLEXBUS_ICR_CCI_SHIFT                              (31U)
#define FLEXBUS_ICR_CCI_MASK                               (0x1U << FLEXBUS_ICR_CCI_SHIFT)                              /* 0x80000000 */
/* REVISION */
#define FLEXBUS_REVISION_OFFSET                            (0x1F0U)
#define FLEXBUS_REVISION                                   (0x10D0844U)
#define FLEXBUS_REVISION_SVN_SHIFT                         (0U)
#define FLEXBUS_REVISION_SVN_MASK                          (0xFFFFU << FLEXBUS_REVISION_SVN_SHIFT)                      /* 0x0000FFFF */
#define FLEXBUS_REVISION_REVISION_SHIFT                    (16U)
#define FLEXBUS_REVISION_REVISION_MASK                     (0xFFFFU << FLEXBUS_REVISION_REVISION_SHIFT)                 /* 0xFFFF0000 */
/*************************************LBC_SLAVE_CSR**************************************/
/* APP_CON0 */
#define LBC_SLAVE_CSR_APP_CON0_OFFSET                      (0x0U)
#define LBC_SLAVE_CSR_APP_CON0_APP_CON0_SHIFT              (0U)
#define LBC_SLAVE_CSR_APP_CON0_APP_CON0_MASK               (0xFFFFFFFFU << LBC_SLAVE_CSR_APP_CON0_APP_CON0_SHIFT)       /* 0xFFFFFFFF */
/* APP_CON1 */
#define LBC_SLAVE_CSR_APP_CON1_OFFSET                      (0x4U)
#define LBC_SLAVE_CSR_APP_CON1_APP_CON1_SHIFT              (0U)
#define LBC_SLAVE_CSR_APP_CON1_APP_CON1_MASK               (0xFFFFFFFFU << LBC_SLAVE_CSR_APP_CON1_APP_CON1_SHIFT)       /* 0xFFFFFFFF */
/* APP_CON2 */
#define LBC_SLAVE_CSR_APP_CON2_OFFSET                      (0x8U)
#define LBC_SLAVE_CSR_APP_CON2_APP_CON2_SHIFT              (0U)
#define LBC_SLAVE_CSR_APP_CON2_APP_CON2_MASK               (0xFFFFFFFFU << LBC_SLAVE_CSR_APP_CON2_APP_CON2_SHIFT)       /* 0xFFFFFFFF */
/* APP_CON3 */
#define LBC_SLAVE_CSR_APP_CON3_OFFSET                      (0xCU)
#define LBC_SLAVE_CSR_APP_CON3_APP_CON3_SHIFT              (0U)
#define LBC_SLAVE_CSR_APP_CON3_APP_CON3_MASK               (0xFFFFFFFFU << LBC_SLAVE_CSR_APP_CON3_APP_CON3_SHIFT)       /* 0xFFFFFFFF */
/* APP_CON4 */
#define LBC_SLAVE_CSR_APP_CON4_OFFSET                      (0x10U)
#define LBC_SLAVE_CSR_APP_CON4_APP_CON4_SHIFT              (0U)
#define LBC_SLAVE_CSR_APP_CON4_APP_CON4_MASK               (0xFFFFFFFFU << LBC_SLAVE_CSR_APP_CON4_APP_CON4_SHIFT)       /* 0xFFFFFFFF */
/* APP_CON5 */
#define LBC_SLAVE_CSR_APP_CON5_OFFSET                      (0x14U)
#define LBC_SLAVE_CSR_APP_CON5_APP_CON5_SHIFT              (0U)
#define LBC_SLAVE_CSR_APP_CON5_APP_CON5_MASK               (0xFFFFFFFFU << LBC_SLAVE_CSR_APP_CON5_APP_CON5_SHIFT)       /* 0xFFFFFFFF */
/* APP_CON6 */
#define LBC_SLAVE_CSR_APP_CON6_OFFSET                      (0x18U)
#define LBC_SLAVE_CSR_APP_CON6_APP_CON6_SHIFT              (0U)
#define LBC_SLAVE_CSR_APP_CON6_APP_CON6_MASK               (0xFFFFFFFFU << LBC_SLAVE_CSR_APP_CON6_APP_CON6_SHIFT)       /* 0xFFFFFFFF */
/* APP_CON7 */
#define LBC_SLAVE_CSR_APP_CON7_OFFSET                      (0x1CU)
#define LBC_SLAVE_CSR_APP_CON7_APP_CON7_SHIFT              (0U)
#define LBC_SLAVE_CSR_APP_CON7_APP_CON7_MASK               (0xFFFFFFFFU << LBC_SLAVE_CSR_APP_CON7_APP_CON7_SHIFT)       /* 0xFFFFFFFF */
/* APP_CON8 */
#define LBC_SLAVE_CSR_APP_CON8_OFFSET                      (0x20U)
#define LBC_SLAVE_CSR_APP_CON8_APP_CON8_SHIFT              (0U)
#define LBC_SLAVE_CSR_APP_CON8_APP_CON8_MASK               (0xFFFFFFFFU << LBC_SLAVE_CSR_APP_CON8_APP_CON8_SHIFT)       /* 0xFFFFFFFF */
/* APP_CON9 */
#define LBC_SLAVE_CSR_APP_CON9_OFFSET                      (0x24U)
#define LBC_SLAVE_CSR_APP_CON9_APP_CON9_SHIFT              (0U)
#define LBC_SLAVE_CSR_APP_CON9_APP_CON9_MASK               (0xFFFFFFFFU << LBC_SLAVE_CSR_APP_CON9_APP_CON9_SHIFT)       /* 0xFFFFFFFF */
/* APP_CON10 */
#define LBC_SLAVE_CSR_APP_CON10_OFFSET                     (0x28U)
#define LBC_SLAVE_CSR_APP_CON10_APP_CON10_SHIFT            (0U)
#define LBC_SLAVE_CSR_APP_CON10_APP_CON10_MASK             (0xFFFFFFFFU << LBC_SLAVE_CSR_APP_CON10_APP_CON10_SHIFT)     /* 0xFFFFFFFF */
/* APP_CON11 */
#define LBC_SLAVE_CSR_APP_CON11_OFFSET                     (0x2CU)
#define LBC_SLAVE_CSR_APP_CON11_APP_CON11_SHIFT            (0U)
#define LBC_SLAVE_CSR_APP_CON11_APP_CON11_MASK             (0xFFFFFFFFU << LBC_SLAVE_CSR_APP_CON11_APP_CON11_SHIFT)     /* 0xFFFFFFFF */
/* APP_CON12 */
#define LBC_SLAVE_CSR_APP_CON12_OFFSET                     (0x30U)
#define LBC_SLAVE_CSR_APP_CON12_APP_CON12_SHIFT            (0U)
#define LBC_SLAVE_CSR_APP_CON12_APP_CON12_MASK             (0xFFFFFFFFU << LBC_SLAVE_CSR_APP_CON12_APP_CON12_SHIFT)     /* 0xFFFFFFFF */
/* APP_CON13 */
#define LBC_SLAVE_CSR_APP_CON13_OFFSET                     (0x34U)
#define LBC_SLAVE_CSR_APP_CON13_APP_CON13_SHIFT            (0U)
#define LBC_SLAVE_CSR_APP_CON13_APP_CON13_MASK             (0xFFFFFFFFU << LBC_SLAVE_CSR_APP_CON13_APP_CON13_SHIFT)     /* 0xFFFFFFFF */
/* APP_CON14 */
#define LBC_SLAVE_CSR_APP_CON14_OFFSET                     (0x38U)
#define LBC_SLAVE_CSR_APP_CON14_APP_CON14_SHIFT            (0U)
#define LBC_SLAVE_CSR_APP_CON14_APP_CON14_MASK             (0xFFFFFFFFU << LBC_SLAVE_CSR_APP_CON14_APP_CON14_SHIFT)     /* 0xFFFFFFFF */
/* APP_CON15 */
#define LBC_SLAVE_CSR_APP_CON15_OFFSET                     (0x3CU)
#define LBC_SLAVE_CSR_APP_CON15_APP_CON15_SHIFT            (0U)
#define LBC_SLAVE_CSR_APP_CON15_APP_CON15_MASK             (0xFFFFFFFFU << LBC_SLAVE_CSR_APP_CON15_APP_CON15_SHIFT)     /* 0xFFFFFFFF */
/* APP_H2S_INT_STA */
#define LBC_SLAVE_CSR_APP_H2S_INT_STA_OFFSET               (0x80U)
#define LBC_SLAVE_CSR_APP_H2S_INT_STA_APP_H2S_INT_STA_SHIFT (0U)
#define LBC_SLAVE_CSR_APP_H2S_INT_STA_APP_H2S_INT_STA_MASK (0xFFFFU << LBC_SLAVE_CSR_APP_H2S_INT_STA_APP_H2S_INT_STA_SHIFT) /* 0x0000FFFF */
/* APP_H2S_INT_STA_EN */
#define LBC_SLAVE_CSR_APP_H2S_INT_STA_EN_OFFSET            (0x84U)
#define LBC_SLAVE_CSR_APP_H2S_INT_STA_EN_APP_H2S_INT_STA_EN_SHIFT (0U)
#define LBC_SLAVE_CSR_APP_H2S_INT_STA_EN_APP_H2S_INT_STA_EN_MASK (0xFFFFU << LBC_SLAVE_CSR_APP_H2S_INT_STA_EN_APP_H2S_INT_STA_EN_SHIFT) /* 0x0000FFFF */
/* APP_H2S_INT_STA_SIG_EN */
#define LBC_SLAVE_CSR_APP_H2S_INT_STA_SIG_EN_OFFSET        (0x88U)
#define LBC_SLAVE_CSR_APP_H2S_INT_STA_SIG_EN_APP_H2S_INT_STA_SIG_EN_SHIFT (0U)
#define LBC_SLAVE_CSR_APP_H2S_INT_STA_SIG_EN_APP_H2S_INT_STA_SIG_EN_MASK (0xFFFFU << LBC_SLAVE_CSR_APP_H2S_INT_STA_SIG_EN_APP_H2S_INT_STA_SIG_EN_SHIFT) /* 0x0000FFFF */
/* LBC_CON0 */
#define LBC_SLAVE_CSR_LBC_CON0_OFFSET                      (0x100U)
#define LBC_SLAVE_CSR_LBC_CON0                             (0x0U)
#define LBC_SLAVE_CSR_LBC_CON0_LBC_CON0_SHIFT              (0U)
#define LBC_SLAVE_CSR_LBC_CON0_LBC_CON0_MASK               (0xFFFFFFFFU << LBC_SLAVE_CSR_LBC_CON0_LBC_CON0_SHIFT)       /* 0xFFFFFFFF */
/* LBC_CON1 */
#define LBC_SLAVE_CSR_LBC_CON1_OFFSET                      (0x104U)
#define LBC_SLAVE_CSR_LBC_CON1                             (0x0U)
#define LBC_SLAVE_CSR_LBC_CON1_LBC_CON1_SHIFT              (0U)
#define LBC_SLAVE_CSR_LBC_CON1_LBC_CON1_MASK               (0xFFFFFFFFU << LBC_SLAVE_CSR_LBC_CON1_LBC_CON1_SHIFT)       /* 0xFFFFFFFF */
/* LBC_CON2 */
#define LBC_SLAVE_CSR_LBC_CON2_OFFSET                      (0x108U)
#define LBC_SLAVE_CSR_LBC_CON2                             (0x0U)
#define LBC_SLAVE_CSR_LBC_CON2_LBC_CON2_SHIFT              (0U)
#define LBC_SLAVE_CSR_LBC_CON2_LBC_CON2_MASK               (0xFFFFFFFFU << LBC_SLAVE_CSR_LBC_CON2_LBC_CON2_SHIFT)       /* 0xFFFFFFFF */
/* LBC_CON3 */
#define LBC_SLAVE_CSR_LBC_CON3_OFFSET                      (0x10CU)
#define LBC_SLAVE_CSR_LBC_CON3                             (0x0U)
#define LBC_SLAVE_CSR_LBC_CON3_LBC_CON3_SHIFT              (0U)
#define LBC_SLAVE_CSR_LBC_CON3_LBC_CON3_MASK               (0xFFFFFFFFU << LBC_SLAVE_CSR_LBC_CON3_LBC_CON3_SHIFT)       /* 0xFFFFFFFF */
/* LBC_CON4 */
#define LBC_SLAVE_CSR_LBC_CON4_OFFSET                      (0x110U)
#define LBC_SLAVE_CSR_LBC_CON4                             (0x0U)
#define LBC_SLAVE_CSR_LBC_CON4_LBC_CON4_SHIFT              (0U)
#define LBC_SLAVE_CSR_LBC_CON4_LBC_CON4_MASK               (0xFFFFFFFFU << LBC_SLAVE_CSR_LBC_CON4_LBC_CON4_SHIFT)       /* 0xFFFFFFFF */
/* LBC_CON5 */
#define LBC_SLAVE_CSR_LBC_CON5_OFFSET                      (0x114U)
#define LBC_SLAVE_CSR_LBC_CON5                             (0x0U)
#define LBC_SLAVE_CSR_LBC_CON5_LBC_CON5_SHIFT              (0U)
#define LBC_SLAVE_CSR_LBC_CON5_LBC_CON5_MASK               (0xFFFFFFFFU << LBC_SLAVE_CSR_LBC_CON5_LBC_CON5_SHIFT)       /* 0xFFFFFFFF */
/* LBC_CON6 */
#define LBC_SLAVE_CSR_LBC_CON6_OFFSET                      (0x118U)
#define LBC_SLAVE_CSR_LBC_CON6                             (0x0U)
#define LBC_SLAVE_CSR_LBC_CON6_LBC_CON6_SHIFT              (0U)
#define LBC_SLAVE_CSR_LBC_CON6_LBC_CON6_MASK               (0xFFFFFFFFU << LBC_SLAVE_CSR_LBC_CON6_LBC_CON6_SHIFT)       /* 0xFFFFFFFF */
/* LBC_CON7 */
#define LBC_SLAVE_CSR_LBC_CON7_OFFSET                      (0x11CU)
#define LBC_SLAVE_CSR_LBC_CON7                             (0x0U)
#define LBC_SLAVE_CSR_LBC_CON7_LBC_CON7_SHIFT              (0U)
#define LBC_SLAVE_CSR_LBC_CON7_LBC_CON7_MASK               (0xFFFFFFFFU << LBC_SLAVE_CSR_LBC_CON7_LBC_CON7_SHIFT)       /* 0xFFFFFFFF */
/* LBC_CON8 */
#define LBC_SLAVE_CSR_LBC_CON8_OFFSET                      (0x120U)
#define LBC_SLAVE_CSR_LBC_CON8                             (0x0U)
#define LBC_SLAVE_CSR_LBC_CON8_LBC_CON8_SHIFT              (0U)
#define LBC_SLAVE_CSR_LBC_CON8_LBC_CON8_MASK               (0xFFFFFFFFU << LBC_SLAVE_CSR_LBC_CON8_LBC_CON8_SHIFT)       /* 0xFFFFFFFF */
/* LBC_CON9 */
#define LBC_SLAVE_CSR_LBC_CON9_OFFSET                      (0x124U)
#define LBC_SLAVE_CSR_LBC_CON9                             (0x0U)
#define LBC_SLAVE_CSR_LBC_CON9_LBC_CON9_SHIFT              (0U)
#define LBC_SLAVE_CSR_LBC_CON9_LBC_CON9_MASK               (0xFFFFFFFFU << LBC_SLAVE_CSR_LBC_CON9_LBC_CON9_SHIFT)       /* 0xFFFFFFFF */
/* LBC_CON10 */
#define LBC_SLAVE_CSR_LBC_CON10_OFFSET                     (0x128U)
#define LBC_SLAVE_CSR_LBC_CON10                            (0x0U)
#define LBC_SLAVE_CSR_LBC_CON10_LBC_CON10_SHIFT            (0U)
#define LBC_SLAVE_CSR_LBC_CON10_LBC_CON10_MASK             (0xFFFFFFFFU << LBC_SLAVE_CSR_LBC_CON10_LBC_CON10_SHIFT)     /* 0xFFFFFFFF */
/* LBC_CON11 */
#define LBC_SLAVE_CSR_LBC_CON11_OFFSET                     (0x12CU)
#define LBC_SLAVE_CSR_LBC_CON11                            (0x0U)
#define LBC_SLAVE_CSR_LBC_CON11_LBC_CON11_SHIFT            (0U)
#define LBC_SLAVE_CSR_LBC_CON11_LBC_CON11_MASK             (0xFFFFFFFFU << LBC_SLAVE_CSR_LBC_CON11_LBC_CON11_SHIFT)     /* 0xFFFFFFFF */
/* LBC_CON12 */
#define LBC_SLAVE_CSR_LBC_CON12_OFFSET                     (0x130U)
#define LBC_SLAVE_CSR_LBC_CON12                            (0x0U)
#define LBC_SLAVE_CSR_LBC_CON12_LBC_CON12_SHIFT            (0U)
#define LBC_SLAVE_CSR_LBC_CON12_LBC_CON12_MASK             (0xFFFFFFFFU << LBC_SLAVE_CSR_LBC_CON12_LBC_CON12_SHIFT)     /* 0xFFFFFFFF */
/* LBC_CON13 */
#define LBC_SLAVE_CSR_LBC_CON13_OFFSET                     (0x134U)
#define LBC_SLAVE_CSR_LBC_CON13                            (0x0U)
#define LBC_SLAVE_CSR_LBC_CON13_LBC_CON13_SHIFT            (0U)
#define LBC_SLAVE_CSR_LBC_CON13_LBC_CON13_MASK             (0xFFFFFFFFU << LBC_SLAVE_CSR_LBC_CON13_LBC_CON13_SHIFT)     /* 0xFFFFFFFF */
/* LBC_CON14 */
#define LBC_SLAVE_CSR_LBC_CON14_OFFSET                     (0x138U)
#define LBC_SLAVE_CSR_LBC_CON14                            (0x0U)
#define LBC_SLAVE_CSR_LBC_CON14_LBC_CON14_SHIFT            (0U)
#define LBC_SLAVE_CSR_LBC_CON14_LBC_CON14_MASK             (0xFFFFFFFFU << LBC_SLAVE_CSR_LBC_CON14_LBC_CON14_SHIFT)     /* 0xFFFFFFFF */
/* LBC_CON15 */
#define LBC_SLAVE_CSR_LBC_CON15_OFFSET                     (0x13CU)
#define LBC_SLAVE_CSR_LBC_CON15                            (0x0U)
#define LBC_SLAVE_CSR_LBC_CON15_LBC_CON15_SHIFT            (0U)
#define LBC_SLAVE_CSR_LBC_CON15_LBC_CON15_MASK             (0xFFFFFFFFU << LBC_SLAVE_CSR_LBC_CON15_LBC_CON15_SHIFT)     /* 0xFFFFFFFF */
/* LBC_S2H_INT_STA */
#define LBC_SLAVE_CSR_LBC_S2H_INT_STA_OFFSET               (0x180U)
#define LBC_SLAVE_CSR_LBC_S2H_INT_STA_LBC_S2H_INT_STA_SHIFT (0U)
#define LBC_SLAVE_CSR_LBC_S2H_INT_STA_LBC_S2H_INT_STA_MASK (0xFFFFU << LBC_SLAVE_CSR_LBC_S2H_INT_STA_LBC_S2H_INT_STA_SHIFT) /* 0x0000FFFF */
/* LBC_S2H_INT_STA_EN */
#define LBC_SLAVE_CSR_LBC_S2H_INT_STA_EN_OFFSET            (0x184U)
#define LBC_SLAVE_CSR_LBC_S2H_INT_STA_EN_LBC_S2H_INT_STA_EN_SHIFT (0U)
#define LBC_SLAVE_CSR_LBC_S2H_INT_STA_EN_LBC_S2H_INT_STA_EN_MASK (0xFFFFU << LBC_SLAVE_CSR_LBC_S2H_INT_STA_EN_LBC_S2H_INT_STA_EN_SHIFT) /* 0x0000FFFF */
/* LBC_S2H_INT_STA_SIG_EN */
#define LBC_SLAVE_CSR_LBC_S2H_INT_STA_SIG_EN_OFFSET        (0x188U)
#define LBC_SLAVE_CSR_LBC_S2H_INT_STA_SIG_EN_LBC_S2H_INT_STA_SIG_EN_SHIFT (0U)
#define LBC_SLAVE_CSR_LBC_S2H_INT_STA_SIG_EN_LBC_S2H_INT_STA_SIG_EN_MASK (0xFFFFU << LBC_SLAVE_CSR_LBC_S2H_INT_STA_SIG_EN_LBC_S2H_INT_STA_SIG_EN_SHIFT) /* 0x0000FFFF */
/* AXI_WR_ADDR_BASE */
#define LBC_SLAVE_CSR_AXI_WR_ADDR_BASE_OFFSET              (0x800U)
#define LBC_SLAVE_CSR_AXI_WR_ADDR_BASE_AXI_WR_ADDR_BASE_SHIFT (0U)
#define LBC_SLAVE_CSR_AXI_WR_ADDR_BASE_AXI_WR_ADDR_BASE_MASK (0xFFFFFFFFU << LBC_SLAVE_CSR_AXI_WR_ADDR_BASE_AXI_WR_ADDR_BASE_SHIFT) /* 0xFFFFFFFF */
/* AXI_RD_ADDR_BASE */
#define LBC_SLAVE_CSR_AXI_RD_ADDR_BASE_OFFSET              (0x804U)
#define LBC_SLAVE_CSR_AXI_RD_ADDR_BASE_AXI_RD_ADDR_BASE_SHIFT (0U)
#define LBC_SLAVE_CSR_AXI_RD_ADDR_BASE_AXI_RD_ADDR_BASE_MASK (0xFFFFFFFFU << LBC_SLAVE_CSR_AXI_RD_ADDR_BASE_AXI_RD_ADDR_BASE_SHIFT) /* 0xFFFFFFFF */
/* DBG_STA_0 */
#define LBC_SLAVE_CSR_DBG_STA_0_OFFSET                     (0x900U)
#define LBC_SLAVE_CSR_DBG_STA_0                            (0x0U)
#define LBC_SLAVE_CSR_DBG_STA_0_AXI_RD_RESP_ERROR_SHIFT    (0U)
#define LBC_SLAVE_CSR_DBG_STA_0_AXI_RD_RESP_ERROR_MASK     (0x3U << LBC_SLAVE_CSR_DBG_STA_0_AXI_RD_RESP_ERROR_SHIFT)    /* 0x00000003 */
#define LBC_SLAVE_CSR_DBG_STA_0_AXI_WR_RESP_ERROR_SHIFT    (2U)
#define LBC_SLAVE_CSR_DBG_STA_0_AXI_WR_RESP_ERROR_MASK     (0x3U << LBC_SLAVE_CSR_DBG_STA_0_AXI_WR_RESP_ERROR_SHIFT)    /* 0x0000000C */
/* DBG_STA_1 */
#define LBC_SLAVE_CSR_DBG_STA_1_OFFSET                     (0x904U)
#define LBC_SLAVE_CSR_DBG_STA_1                            (0x0U)
#define LBC_SLAVE_CSR_DBG_STA_1_BUS_CURRENT_STATE_SHIFT    (0U)
#define LBC_SLAVE_CSR_DBG_STA_1_BUS_CURRENT_STATE_MASK     (0xFU << LBC_SLAVE_CSR_DBG_STA_1_BUS_CURRENT_STATE_SHIFT)    /* 0x0000000F */
/* DBG_STA_2 */
#define LBC_SLAVE_CSR_DBG_STA_2_OFFSET                     (0x908U)
#define LBC_SLAVE_CSR_DBG_STA_2                            (0x0U)
#define LBC_SLAVE_CSR_DBG_STA_2_RX_CMD_FIFO_SPACE2EMPTY_SHIFT (0U)
#define LBC_SLAVE_CSR_DBG_STA_2_RX_CMD_FIFO_SPACE2EMPTY_MASK (0x1FU << LBC_SLAVE_CSR_DBG_STA_2_RX_CMD_FIFO_SPACE2EMPTY_SHIFT) /* 0x0000001F */
#define LBC_SLAVE_CSR_DBG_STA_2_RX_DAT_FIFO_SPACE2EMPTY_SHIFT (8U)
#define LBC_SLAVE_CSR_DBG_STA_2_RX_DAT_FIFO_SPACE2EMPTY_MASK (0x7FU << LBC_SLAVE_CSR_DBG_STA_2_RX_DAT_FIFO_SPACE2EMPTY_SHIFT) /* 0x00007F00 */
#define LBC_SLAVE_CSR_DBG_STA_2_TX_DAT_FIFO_SPACE2EMPTY_SHIFT (16U)
#define LBC_SLAVE_CSR_DBG_STA_2_TX_DAT_FIFO_SPACE2EMPTY_MASK (0x3FU << LBC_SLAVE_CSR_DBG_STA_2_TX_DAT_FIFO_SPACE2EMPTY_SHIFT) /* 0x003F0000 */
/* VER */
#define LBC_SLAVE_CSR_VER_OFFSET                           (0xA00U)
#define LBC_SLAVE_CSR_VER                                  (0x100U)
#define LBC_SLAVE_CSR_VER_VERSION_CODE_SHIFT               (0U)
#define LBC_SLAVE_CSR_VER_VERSION_CODE_MASK                (0xFFFFFFFFU << LBC_SLAVE_CSR_VER_VERSION_CODE_SHIFT)        /* 0xFFFFFFFF */
/******************************************DSMC******************************************/
/* VER */
#define DSMC_VER_OFFSET                                    (0x0U)
#define DSMC_VER                                           (0x100U)
#define DSMC_VER_VERSION_SHIFT                             (0U)
#define DSMC_VER_VERSION_MASK                              (0xFFFFFFFFU << DSMC_VER_VERSION_SHIFT)                      /* 0xFFFFFFFF */
/* CSR */
#define DSMC_CSR_OFFSET                                    (0x8U)
#define DSMC_CSR                                           (0x0U)
#define DSMC_CSR_RACT_SHIFT                                (0U)
#define DSMC_CSR_RACT_MASK                                 (0x1U << DSMC_CSR_RACT_SHIFT)                                /* 0x00000001 */
#define DSMC_CSR_RDECERR_SHIFT                             (8U)
#define DSMC_CSR_RDECERR_MASK                              (0x1U << DSMC_CSR_RDECERR_SHIFT)                             /* 0x00000100 */
#define DSMC_CSR_RTRSERR_SHIFT                             (9U)
#define DSMC_CSR_RTRSERR_MASK                              (0x1U << DSMC_CSR_RTRSERR_SHIFT)                             /* 0x00000200 */
#define DSMC_CSR_RRSTOERR_SHIFT                            (10U)
#define DSMC_CSR_RRSTOERR_MASK                             (0x1U << DSMC_CSR_RRSTOERR_SHIFT)                            /* 0x00000400 */
#define DSMC_CSR_RDSSTALL_SHIFT                            (11U)
#define DSMC_CSR_RDSSTALL_MASK                             (0x1U << DSMC_CSR_RDSSTALL_SHIFT)                            /* 0x00000800 */
#define DSMC_CSR_WACT_SHIFT                                (16U)
#define DSMC_CSR_WACT_MASK                                 (0x1U << DSMC_CSR_WACT_SHIFT)                                /* 0x00010000 */
#define DSMC_CSR_WDECERR_SHIFT                             (24U)
#define DSMC_CSR_WDECERR_MASK                              (0x1U << DSMC_CSR_WDECERR_SHIFT)                             /* 0x01000000 */
#define DSMC_CSR_WTRSERR_SHIFT                             (25U)
#define DSMC_CSR_WTRSERR_MASK                              (0x1U << DSMC_CSR_WTRSERR_SHIFT)                             /* 0x02000000 */
#define DSMC_CSR_WRSTOERR_SHIFT                            (26U)
#define DSMC_CSR_WRSTOERR_MASK                             (0x1U << DSMC_CSR_WRSTOERR_SHIFT)                            /* 0x04000000 */
/* TAR */
#define DSMC_TAR_OFFSET                                    (0x10U)
#define DSMC_TAR_WTA_SHIFT                                 (0U)
#define DSMC_TAR_WTA_MASK                                  (0x3U << DSMC_TAR_WTA_SHIFT)                                 /* 0x00000003 */
#define DSMC_TAR_RTA_SHIFT                                 (4U)
#define DSMC_TAR_RTA_MASK                                  (0x3U << DSMC_TAR_RTA_SHIFT)                                 /* 0x00000030 */
/* AXICTL */
#define DSMC_AXICTL_OFFSET                                 (0x14U)
#define DSMC_AXICTL_NOWAIT_WRITE_DATA_DONE_EN_SHIFT        (0U)
#define DSMC_AXICTL_NOWAIT_WRITE_DATA_DONE_EN_MASK         (0x1U << DSMC_AXICTL_NOWAIT_WRITE_DATA_DONE_EN_SHIFT)        /* 0x00000001 */
#define DSMC_AXICTL_WRITE_BVALID_CTL_SHIFT                 (4U)
#define DSMC_AXICTL_WRITE_BVALID_CTL_MASK                  (0x3U << DSMC_AXICTL_WRITE_BVALID_CTL_SHIFT)                 /* 0x00000030 */
#define DSMC_AXICTL_RD_NO_ERR_SHIFT                        (8U)
#define DSMC_AXICTL_RD_NO_ERR_MASK                         (0x1U << DSMC_AXICTL_RD_NO_ERR_SHIFT)                        /* 0x00000100 */
/* CLK_MD */
#define DSMC_CLK_MD_OFFSET                                 (0x20U)
#define DSMC_CLK_MD_CLK_MODE_SHIFT                         (0U)
#define DSMC_CLK_MD_CLK_MODE_MASK                          (0x3U << DSMC_CLK_MD_CLK_MODE_SHIFT)                         /* 0x00000003 */
/* DLL_DBG_CTRL */
#define DSMC_DLL_DBG_CTRL_OFFSET                           (0x28U)
#define DSMC_DLL_DBG_CTRL_DBG_DLL_MUX_SHIFT                (0U)
#define DSMC_DLL_DBG_CTRL_DBG_DLL_MUX_MASK                 (0x1U << DSMC_DLL_DBG_CTRL_DBG_DLL_MUX_SHIFT)                /* 0x00000001 */
#define DSMC_DLL_DBG_CTRL_DBG0_CLK_MUX_SHIFT               (4U)
#define DSMC_DLL_DBG_CTRL_DBG0_CLK_MUX_MASK                (0x1U << DSMC_DLL_DBG_CTRL_DBG0_CLK_MUX_SHIFT)               /* 0x00000010 */
#define DSMC_DLL_DBG_CTRL_DBG1_CLK_MUX_SHIFT               (5U)
#define DSMC_DLL_DBG_CTRL_DBG1_CLK_MUX_MASK                (0x1U << DSMC_DLL_DBG_CTRL_DBG1_CLK_MUX_SHIFT)               /* 0x00000020 */
#define DSMC_DLL_DBG_CTRL_DBG0_DATA_MUX_SHIFT              (8U)
#define DSMC_DLL_DBG_CTRL_DBG0_DATA_MUX_MASK               (0x3U << DSMC_DLL_DBG_CTRL_DBG0_DATA_MUX_SHIFT)              /* 0x00000300 */
#define DSMC_DLL_DBG_CTRL_DBG1_DATA_MUX_SHIFT              (10U)
#define DSMC_DLL_DBG_CTRL_DBG1_DATA_MUX_MASK               (0x3U << DSMC_DLL_DBG_CTRL_DBG1_DATA_MUX_SHIFT)              /* 0x00000C00 */
#define DSMC_DLL_DBG_CTRL_DBG_EN_SHIFT                     (31U)
#define DSMC_DLL_DBG_CTRL_DBG_EN_MASK                      (0x1U << DSMC_DLL_DBG_CTRL_DBG_EN_SHIFT)                     /* 0x80000000 */
/* DEV_SIZE */
#define DSMC_DEV_SIZE_OFFSET                               (0x30U)
#define DSMC_DEV_SIZE_DEV_SIZE_SHIFT                       (0U)
#define DSMC_DEV_SIZE_DEV_SIZE_MASK                        (0x1FU << DSMC_DEV_SIZE_DEV_SIZE_SHIFT)                      /* 0x0000001F */
/* INT_EN */
#define DSMC_INT_EN_OFFSET                                 (0x40U)
#define DSMC_INT_EN_INT_EN0_SHIFT                          (0U)
#define DSMC_INT_EN_INT_EN0_MASK                           (0x1U << DSMC_INT_EN_INT_EN0_SHIFT)                          /* 0x00000001 */
#define DSMC_INT_EN_INT_EN1_SHIFT                          (1U)
#define DSMC_INT_EN_INT_EN1_MASK                           (0x1U << DSMC_INT_EN_INT_EN1_SHIFT)                          /* 0x00000002 */
#define DSMC_INT_EN_INT_EN2_SHIFT                          (2U)
#define DSMC_INT_EN_INT_EN2_MASK                           (0x1U << DSMC_INT_EN_INT_EN2_SHIFT)                          /* 0x00000004 */
#define DSMC_INT_EN_INT_EN3_SHIFT                          (3U)
#define DSMC_INT_EN_INT_EN3_MASK                           (0x1U << DSMC_INT_EN_INT_EN3_SHIFT)                          /* 0x00000008 */
#define DSMC_INT_EN_RDSTALL_INT_EN_SHIFT                   (4U)
#define DSMC_INT_EN_RDSTALL_INT_EN_MASK                    (0x1U << DSMC_INT_EN_RDSTALL_INT_EN_SHIFT)                   /* 0x00000010 */
/* INT_STATUS */
#define DSMC_INT_STATUS_OFFSET                             (0x44U)
#define DSMC_INT_STATUS_INT_STATUS0_SHIFT                  (0U)
#define DSMC_INT_STATUS_INT_STATUS0_MASK                   (0x1U << DSMC_INT_STATUS_INT_STATUS0_SHIFT)                  /* 0x00000001 */
#define DSMC_INT_STATUS_INT_STATUS1_SHIFT                  (1U)
#define DSMC_INT_STATUS_INT_STATUS1_MASK                   (0x1U << DSMC_INT_STATUS_INT_STATUS1_SHIFT)                  /* 0x00000002 */
#define DSMC_INT_STATUS_INT_STATUS2_SHIFT                  (2U)
#define DSMC_INT_STATUS_INT_STATUS2_MASK                   (0x1U << DSMC_INT_STATUS_INT_STATUS2_SHIFT)                  /* 0x00000004 */
#define DSMC_INT_STATUS_INT_STATUS3_SHIFT                  (3U)
#define DSMC_INT_STATUS_INT_STATUS3_MASK                   (0x1U << DSMC_INT_STATUS_INT_STATUS3_SHIFT)                  /* 0x00000008 */
#define DSMC_INT_STATUS_RDSTALL_INT_STATUS_SHIFT           (4U)
#define DSMC_INT_STATUS_RDSTALL_INT_STATUS_MASK            (0x1U << DSMC_INT_STATUS_RDSTALL_INT_STATUS_SHIFT)           /* 0x00000010 */
/* INT_MASK */
#define DSMC_INT_MASK_OFFSET                               (0x48U)
#define DSMC_INT_MASK_INT_MASK0_SHIFT                      (0U)
#define DSMC_INT_MASK_INT_MASK0_MASK                       (0x1U << DSMC_INT_MASK_INT_MASK0_SHIFT)                      /* 0x00000001 */
#define DSMC_INT_MASK_INT_MASK1_SHIFT                      (1U)
#define DSMC_INT_MASK_INT_MASK1_MASK                       (0x1U << DSMC_INT_MASK_INT_MASK1_SHIFT)                      /* 0x00000002 */
#define DSMC_INT_MASK_INT_MASK2_SHIFT                      (2U)
#define DSMC_INT_MASK_INT_MASK2_MASK                       (0x1U << DSMC_INT_MASK_INT_MASK2_SHIFT)                      /* 0x00000004 */
#define DSMC_INT_MASK_INT_MASK3_SHIFT                      (3U)
#define DSMC_INT_MASK_INT_MASK3_MASK                       (0x1U << DSMC_INT_MASK_INT_MASK3_SHIFT)                      /* 0x00000008 */
#define DSMC_INT_MASK_RDSTALL_INT_MASK_SHIFT               (4U)
#define DSMC_INT_MASK_RDSTALL_INT_MASK_MASK                (0x1U << DSMC_INT_MASK_RDSTALL_INT_MASK_SHIFT)               /* 0x00000010 */
/* DMA_EN */
#define DSMC_DMA_EN_OFFSET                                 (0x50U)
#define DSMC_DMA_EN_DMA_REQ_EN0_SHIFT                      (0U)
#define DSMC_DMA_EN_DMA_REQ_EN0_MASK                       (0x1U << DSMC_DMA_EN_DMA_REQ_EN0_SHIFT)                      /* 0x00000001 */
#define DSMC_DMA_EN_DMA_REQ_EN1_SHIFT                      (1U)
#define DSMC_DMA_EN_DMA_REQ_EN1_MASK                       (0x1U << DSMC_DMA_EN_DMA_REQ_EN1_SHIFT)                      /* 0x00000002 */
/* DMA_REQ_NUM0 */
#define DSMC_DMA_REQ_NUM0_OFFSET                           (0x54U)
#define DSMC_DMA_REQ_NUM0_DMA_REQ_NUM0_SHIFT               (0U)
#define DSMC_DMA_REQ_NUM0_DMA_REQ_NUM0_MASK                (0xFFFFU << DSMC_DMA_REQ_NUM0_DMA_REQ_NUM0_SHIFT)            /* 0x0000FFFF */
/* DMA_REQ_NUM1 */
#define DSMC_DMA_REQ_NUM1_OFFSET                           (0x58U)
#define DSMC_DMA_REQ_NUM1_DMA_REQ_NUM1_SHIFT               (0U)
#define DSMC_DMA_REQ_NUM1_DMA_REQ_NUM1_MASK                (0xFFFFU << DSMC_DMA_REQ_NUM1_DMA_REQ_NUM1_SHIFT)            /* 0x0000FFFF */
/* DMA_MUX */
#define DSMC_DMA_MUX_OFFSET                                (0x5CU)
#define DSMC_DMA_MUX_DMA_REQ0_MUX_SHIFT                    (0U)
#define DSMC_DMA_MUX_DMA_REQ0_MUX_MASK                     (0x3U << DSMC_DMA_MUX_DMA_REQ0_MUX_SHIFT)                    /* 0x00000003 */
#define DSMC_DMA_MUX_DMA_REQ1_MUX_SHIFT                    (4U)
#define DSMC_DMA_MUX_DMA_REQ1_MUX_MASK                     (0x3U << DSMC_DMA_MUX_DMA_REQ1_MUX_SHIFT)                    /* 0x00000030 */
/* VDMC0 */
#define DSMC_VDMC0_OFFSET                                  (0x1000U)
#define DSMC_VDMC0_MID_SHIFT                               (0U)
#define DSMC_VDMC0_MID_MASK                                (0xFU << DSMC_VDMC0_MID_SHIFT)                               /* 0x0000000F */
#define DSMC_VDMC0_PROTOCOL_SHIFT                          (4U)
#define DSMC_VDMC0_PROTOCOL_MASK                           (0xFU << DSMC_VDMC0_PROTOCOL_SHIFT)                          /* 0x000000F0 */
#define DSMC_VDMC0_RESET_CMD_MODE_SHIFT                    (8U)
#define DSMC_VDMC0_RESET_CMD_MODE_MASK                     (0x1U << DSMC_VDMC0_RESET_CMD_MODE_SHIFT)                    /* 0x00000100 */
#define DSMC_VDMC0_LATENCY_FIXED_SHIFT                     (9U)
#define DSMC_VDMC0_LATENCY_FIXED_MASK                      (0x1U << DSMC_VDMC0_LATENCY_FIXED_SHIFT)                     /* 0x00000200 */
/* MCR0 */
#define DSMC_MCR0_OFFSET                                   (0x1010U)
#define DSMC_MCR0_WRAPSIZE_SHIFT                           (0U)
#define DSMC_MCR0_WRAPSIZE_MASK                            (0x3U << DSMC_MCR0_WRAPSIZE_SHIFT)                           /* 0x00000003 */
#define DSMC_MCR0_EXCLUSIVE_DQS_SHIFT                      (2U)
#define DSMC_MCR0_EXCLUSIVE_DQS_MASK                       (0x1U << DSMC_MCR0_EXCLUSIVE_DQS_SHIFT)                      /* 0x00000004 */
#define DSMC_MCR0_IOWIDTH_SHIFT                            (3U)
#define DSMC_MCR0_IOWIDTH_MASK                             (0x1U << DSMC_MCR0_IOWIDTH_SHIFT)                            /* 0x00000008 */
#define DSMC_MCR0_DEVTYPE_SHIFT                            (4U)
#define DSMC_MCR0_DEVTYPE_MASK                             (0x1U << DSMC_MCR0_DEVTYPE_SHIFT)                            /* 0x00000010 */
#define DSMC_MCR0_CRT_SHIFT                                (5U)
#define DSMC_MCR0_CRT_MASK                                 (0x1U << DSMC_MCR0_CRT_SHIFT)                                /* 0x00000020 */
#define DSMC_MCR0_ACS_SHIFT                                (16U)
#define DSMC_MCR0_ACS_MASK                                 (0x1U << DSMC_MCR0_ACS_SHIFT)                                /* 0x00010000 */
#define DSMC_MCR0_TCMO_SHIFT                               (17U)
#define DSMC_MCR0_TCMO_MASK                                (0x1U << DSMC_MCR0_TCMO_SHIFT)                               /* 0x00020000 */
#define DSMC_MCR0_MAXLEN_SHIFT                             (18U)
#define DSMC_MCR0_MAXLEN_MASK                              (0x1FFU << DSMC_MCR0_MAXLEN_SHIFT)                           /* 0x07FC0000 */
#define DSMC_MCR0_MAXEN_SHIFT                              (31U)
#define DSMC_MCR0_MAXEN_MASK                               (0x1U << DSMC_MCR0_MAXEN_SHIFT)                              /* 0x80000000 */
/* MTR0 */
#define DSMC_MTR0_OFFSET                                   (0x1014U)
#define DSMC_MTR0_WLTCY_SHIFT                              (0U)
#define DSMC_MTR0_WLTCY_MASK                               (0xFU << DSMC_MTR0_WLTCY_SHIFT)                              /* 0x0000000F */
#define DSMC_MTR0_RLTCY_SHIFT                              (4U)
#define DSMC_MTR0_RLTCY_MASK                               (0xFU << DSMC_MTR0_RLTCY_SHIFT)                              /* 0x000000F0 */
#define DSMC_MTR0_WCSH_SHIFT                               (8U)
#define DSMC_MTR0_WCSH_MASK                                (0xFU << DSMC_MTR0_WCSH_SHIFT)                               /* 0x00000F00 */
#define DSMC_MTR0_RCSH_SHIFT                               (12U)
#define DSMC_MTR0_RCSH_MASK                                (0xFU << DSMC_MTR0_RCSH_SHIFT)                               /* 0x0000F000 */
#define DSMC_MTR0_WCSS_SHIFT                               (16U)
#define DSMC_MTR0_WCSS_MASK                                (0xFU << DSMC_MTR0_WCSS_SHIFT)                               /* 0x000F0000 */
#define DSMC_MTR0_RCSS_SHIFT                               (20U)
#define DSMC_MTR0_RCSS_MASK                                (0xFU << DSMC_MTR0_RCSS_SHIFT)                               /* 0x00F00000 */
#define DSMC_MTR0_WCSHI_SHIFT                              (24U)
#define DSMC_MTR0_WCSHI_MASK                               (0xFU << DSMC_MTR0_WCSHI_SHIFT)                              /* 0x0F000000 */
#define DSMC_MTR0_RCSHI_SHIFT                              (28U)
#define DSMC_MTR0_RCSHI_MASK                               (0xFU << DSMC_MTR0_RCSHI_SHIFT)                              /* 0xF0000000 */
/* WAIT_TIME0 */
#define DSMC_WAIT_TIME0_OFFSET                             (0x1018U)
#define DSMC_WAIT_TIME0_RDSTALL_WAIT_TIME_SHIFT            (0U)
#define DSMC_WAIT_TIME0_RDSTALL_WAIT_TIME_MASK             (0x7FFU << DSMC_WAIT_TIME0_RDSTALL_WAIT_TIME_SHIFT)          /* 0x000007FF */
/* BDRTCR0 */
#define DSMC_BDRTCR0_OFFSET                                (0x1020U)
#define DSMC_BDRTCR0_COL_BIT_NUM_SHIFT                     (0U)
#define DSMC_BDRTCR0_COL_BIT_NUM_MASK                      (0x7U << DSMC_BDRTCR0_COL_BIT_NUM_SHIFT)                     /* 0x00000007 */
#define DSMC_BDRTCR0_WR_BDR_XFER_EN_SHIFT                  (4U)
#define DSMC_BDRTCR0_WR_BDR_XFER_EN_MASK                   (0x1U << DSMC_BDRTCR0_WR_BDR_XFER_EN_SHIFT)                  /* 0x00000010 */
#define DSMC_BDRTCR0_RD_BDR_XFER_EN_SHIFT                  (5U)
#define DSMC_BDRTCR0_RD_BDR_XFER_EN_MASK                   (0x1U << DSMC_BDRTCR0_RD_BDR_XFER_EN_SHIFT)                  /* 0x00000020 */
/* MRGTCR0 */
#define DSMC_MRGTCR0_OFFSET                                (0x1024U)
#define DSMC_MRGTCR0_WRITE_MERGE_EN_SHIFT                  (0U)
#define DSMC_MRGTCR0_WRITE_MERGE_EN_MASK                   (0x1U << DSMC_MRGTCR0_WRITE_MERGE_EN_SHIFT)                  /* 0x00000001 */
#define DSMC_MRGTCR0_READ_MERGE_EN_SHIFT                   (1U)
#define DSMC_MRGTCR0_READ_MERGE_EN_MASK                    (0x1U << DSMC_MRGTCR0_READ_MERGE_EN_SHIFT)                   /* 0x00000002 */
/* WRAP2INCR0 */
#define DSMC_WRAP2INCR0_OFFSET                             (0x1028U)
#define DSMC_WRAP2INCR0_WRAP2INCR_EN_SHIFT                 (0U)
#define DSMC_WRAP2INCR0_WRAP2INCR_EN_MASK                  (0x1U << DSMC_WRAP2INCR0_WRAP2INCR_EN_SHIFT)                 /* 0x00000001 */
/* RDS_DLL0_CTL0 */
#define DSMC_RDS_DLL0_CTL0_OFFSET                          (0x1030U)
#define DSMC_RDS_DLL0_CTL0_RDS_0_CLK_DELAY_NUM_SHIFT       (0U)
#define DSMC_RDS_DLL0_CTL0_RDS_0_CLK_DELAY_NUM_MASK        (0xFFU << DSMC_RDS_DLL0_CTL0_RDS_0_CLK_DELAY_NUM_SHIFT)      /* 0x000000FF */
#define DSMC_RDS_DLL0_CTL0_RDS_0_CLK_SMP_SEL_SHIFT         (31U)
#define DSMC_RDS_DLL0_CTL0_RDS_0_CLK_SMP_SEL_MASK          (0x1U << DSMC_RDS_DLL0_CTL0_RDS_0_CLK_SMP_SEL_SHIFT)         /* 0x80000000 */
/* RDS_DLL1_CTL0 */
#define DSMC_RDS_DLL1_CTL0_OFFSET                          (0x1034U)
#define DSMC_RDS_DLL1_CTL0_RDS_1_CLK_DELAY_NUM_SHIFT       (0U)
#define DSMC_RDS_DLL1_CTL0_RDS_1_CLK_DELAY_NUM_MASK        (0xFFU << DSMC_RDS_DLL1_CTL0_RDS_1_CLK_DELAY_NUM_SHIFT)      /* 0x000000FF */
#define DSMC_RDS_DLL1_CTL0_RDS_1_CLK_SMP_SEL_SHIFT         (31U)
#define DSMC_RDS_DLL1_CTL0_RDS_1_CLK_SMP_SEL_MASK          (0x1U << DSMC_RDS_DLL1_CTL0_RDS_1_CLK_SMP_SEL_SHIFT)         /* 0x80000000 */
/* SLV_RGN_DIV0 */
#define DSMC_SLV_RGN_DIV0_OFFSET                           (0x1040U)
#define DSMC_SLV_RGN_DIV0_SLV_RGN_DIV_SHIFT                (0U)
#define DSMC_SLV_RGN_DIV0_SLV_RGN_DIV_MASK                 (0x3U << DSMC_SLV_RGN_DIV0_SLV_RGN_DIV_SHIFT)                /* 0x00000003 */
/* RGN0_ATTR0 */
#define DSMC_RGN0_ATTR0_OFFSET                             (0x1050U)
#define DSMC_RGN0_ATTR0_RGN0_ATTR_SHIFT                    (0U)
#define DSMC_RGN0_ATTR0_RGN0_ATTR_MASK                     (0x3U << DSMC_RGN0_ATTR0_RGN0_ATTR_SHIFT)                    /* 0x00000003 */
#define DSMC_RGN0_ATTR0_RGN0_CTRL_SHIFT                    (4U)
#define DSMC_RGN0_ATTR0_RGN0_CTRL_MASK                     (0x1U << DSMC_RGN0_ATTR0_RGN0_CTRL_SHIFT)                    /* 0x00000010 */
#define DSMC_RGN0_ATTR0_RGN0_BE_CTRLED_SHIFT               (5U)
#define DSMC_RGN0_ATTR0_RGN0_BE_CTRLED_MASK                (0x1U << DSMC_RGN0_ATTR0_RGN0_BE_CTRLED_SHIFT)               /* 0x00000020 */
#define DSMC_RGN0_ATTR0_RGN0_DUM_CLK_EN_SHIFT              (6U)
#define DSMC_RGN0_ATTR0_RGN0_DUM_CLK_EN_MASK               (0x1U << DSMC_RGN0_ATTR0_RGN0_DUM_CLK_EN_SHIFT)              /* 0x00000040 */
#define DSMC_RGN0_ATTR0_RGN0_DUM_CLK_NUM_SHIFT             (7U)
#define DSMC_RGN0_ATTR0_RGN0_DUM_CLK_NUM_MASK              (0x1U << DSMC_RGN0_ATTR0_RGN0_DUM_CLK_NUM_SHIFT)             /* 0x00000080 */
#define DSMC_RGN0_ATTR0_RGN0_ADDR_WIDTH_SHIFT              (8U)
#define DSMC_RGN0_ATTR0_RGN0_ADDR_WIDTH_MASK               (0x1U << DSMC_RGN0_ATTR0_RGN0_ADDR_WIDTH_SHIFT)              /* 0x00000100 */
/* RGN1_ATTR0 */
#define DSMC_RGN1_ATTR0_OFFSET                             (0x1054U)
#define DSMC_RGN1_ATTR0_RGN1_ATTR_SHIFT                    (0U)
#define DSMC_RGN1_ATTR0_RGN1_ATTR_MASK                     (0x3U << DSMC_RGN1_ATTR0_RGN1_ATTR_SHIFT)                    /* 0x00000003 */
#define DSMC_RGN1_ATTR0_RGN1_CTRL_SHIFT                    (4U)
#define DSMC_RGN1_ATTR0_RGN1_CTRL_MASK                     (0x1U << DSMC_RGN1_ATTR0_RGN1_CTRL_SHIFT)                    /* 0x00000010 */
#define DSMC_RGN1_ATTR0_RGN1_BE_CTRLED_SHIFT               (5U)
#define DSMC_RGN1_ATTR0_RGN1_BE_CTRLED_MASK                (0x1U << DSMC_RGN1_ATTR0_RGN1_BE_CTRLED_SHIFT)               /* 0x00000020 */
#define DSMC_RGN1_ATTR0_RGN1_DUM_CLK_EN_SHIFT              (6U)
#define DSMC_RGN1_ATTR0_RGN1_DUM_CLK_EN_MASK               (0x1U << DSMC_RGN1_ATTR0_RGN1_DUM_CLK_EN_SHIFT)              /* 0x00000040 */
#define DSMC_RGN1_ATTR0_RGN1_DUM_CLK_NUM_SHIFT             (7U)
#define DSMC_RGN1_ATTR0_RGN1_DUM_CLK_NUM_MASK              (0x1U << DSMC_RGN1_ATTR0_RGN1_DUM_CLK_NUM_SHIFT)             /* 0x00000080 */
#define DSMC_RGN1_ATTR0_RGN1_ADDR_WIDTH_SHIFT              (8U)
#define DSMC_RGN1_ATTR0_RGN1_ADDR_WIDTH_MASK               (0x1U << DSMC_RGN1_ATTR0_RGN1_ADDR_WIDTH_SHIFT)              /* 0x00000100 */
/* RGN2_ATTR0 */
#define DSMC_RGN2_ATTR0_OFFSET                             (0x1058U)
#define DSMC_RGN2_ATTR0_RGN2_ATTR_SHIFT                    (0U)
#define DSMC_RGN2_ATTR0_RGN2_ATTR_MASK                     (0x3U << DSMC_RGN2_ATTR0_RGN2_ATTR_SHIFT)                    /* 0x00000003 */
#define DSMC_RGN2_ATTR0_RGN2_CTRL_SHIFT                    (4U)
#define DSMC_RGN2_ATTR0_RGN2_CTRL_MASK                     (0x1U << DSMC_RGN2_ATTR0_RGN2_CTRL_SHIFT)                    /* 0x00000010 */
#define DSMC_RGN2_ATTR0_RGN2_BE_CTRLED_SHIFT               (5U)
#define DSMC_RGN2_ATTR0_RGN2_BE_CTRLED_MASK                (0x1U << DSMC_RGN2_ATTR0_RGN2_BE_CTRLED_SHIFT)               /* 0x00000020 */
#define DSMC_RGN2_ATTR0_RGN2_WR_DUM_CLK_EN_SHIFT           (6U)
#define DSMC_RGN2_ATTR0_RGN2_WR_DUM_CLK_EN_MASK            (0x1U << DSMC_RGN2_ATTR0_RGN2_WR_DUM_CLK_EN_SHIFT)           /* 0x00000040 */
#define DSMC_RGN2_ATTR0_RGN2_DUM_CLK_NUM_SHIFT             (7U)
#define DSMC_RGN2_ATTR0_RGN2_DUM_CLK_NUM_MASK              (0x1U << DSMC_RGN2_ATTR0_RGN2_DUM_CLK_NUM_SHIFT)             /* 0x00000080 */
#define DSMC_RGN2_ATTR0_RGN2_ADDR_WIDTH_SHIFT              (8U)
#define DSMC_RGN2_ATTR0_RGN2_ADDR_WIDTH_MASK               (0x1U << DSMC_RGN2_ATTR0_RGN2_ADDR_WIDTH_SHIFT)              /* 0x00000100 */
/* RGN3_ATTR0 */
#define DSMC_RGN3_ATTR0_OFFSET                             (0x105CU)
#define DSMC_RGN3_ATTR0_RGN3_ATTR_SHIFT                    (0U)
#define DSMC_RGN3_ATTR0_RGN3_ATTR_MASK                     (0x3U << DSMC_RGN3_ATTR0_RGN3_ATTR_SHIFT)                    /* 0x00000003 */
#define DSMC_RGN3_ATTR0_RGN3_CTRL_SHIFT                    (4U)
#define DSMC_RGN3_ATTR0_RGN3_CTRL_MASK                     (0x1U << DSMC_RGN3_ATTR0_RGN3_CTRL_SHIFT)                    /* 0x00000010 */
#define DSMC_RGN3_ATTR0_RGN3_BE_CTRLED_SHIFT               (5U)
#define DSMC_RGN3_ATTR0_RGN3_BE_CTRLED_MASK                (0x1U << DSMC_RGN3_ATTR0_RGN3_BE_CTRLED_SHIFT)               /* 0x00000020 */
#define DSMC_RGN3_ATTR0_RNG3_DUM_CLK_EN_SHIFT              (6U)
#define DSMC_RGN3_ATTR0_RNG3_DUM_CLK_EN_MASK               (0x1U << DSMC_RGN3_ATTR0_RNG3_DUM_CLK_EN_SHIFT)              /* 0x00000040 */
#define DSMC_RGN3_ATTR0_RGN3_DUM_CLK_NUM_SHIFT             (7U)
#define DSMC_RGN3_ATTR0_RGN3_DUM_CLK_NUM_MASK              (0x1U << DSMC_RGN3_ATTR0_RGN3_DUM_CLK_NUM_SHIFT)             /* 0x00000080 */
#define DSMC_RGN3_ATTR0_RGN3_ADDR_WIDTH_SHIFT              (8U)
#define DSMC_RGN3_ATTR0_RGN3_ADDR_WIDTH_MASK               (0x1U << DSMC_RGN3_ATTR0_RGN3_ADDR_WIDTH_SHIFT)              /* 0x00000100 */
/*****************************************RM_IO******************************************/
/* RM_GPIO0A0_SEL */
#define RM_IO_RM_GPIO0A0_SEL_OFFSET                        (0x80U)
#define RM_IO_RM_GPIO0A0_SEL_FUNC_SEL_SHIFT                (0U)
#define RM_IO_RM_GPIO0A0_SEL_FUNC_SEL_MASK                 (0x7FU << RM_IO_RM_GPIO0A0_SEL_FUNC_SEL_SHIFT)               /* 0x0000007F */
/* RM_GPIO0A1_SEL */
#define RM_IO_RM_GPIO0A1_SEL_OFFSET                        (0x84U)
#define RM_IO_RM_GPIO0A1_SEL_FUNC_SEL_SHIFT                (0U)
#define RM_IO_RM_GPIO0A1_SEL_FUNC_SEL_MASK                 (0x7FU << RM_IO_RM_GPIO0A1_SEL_FUNC_SEL_SHIFT)               /* 0x0000007F */
/* RM_GPIO0A2_SEL */
#define RM_IO_RM_GPIO0A2_SEL_OFFSET                        (0x88U)
#define RM_IO_RM_GPIO0A2_SEL_FUNC_SEL_SHIFT                (0U)
#define RM_IO_RM_GPIO0A2_SEL_FUNC_SEL_MASK                 (0x7FU << RM_IO_RM_GPIO0A2_SEL_FUNC_SEL_SHIFT)               /* 0x0000007F */
/* RM_GPIO0A3_SEL */
#define RM_IO_RM_GPIO0A3_SEL_OFFSET                        (0x8CU)
#define RM_IO_RM_GPIO0A3_SEL_FUNC_SEL_SHIFT                (0U)
#define RM_IO_RM_GPIO0A3_SEL_FUNC_SEL_MASK                 (0x7FU << RM_IO_RM_GPIO0A3_SEL_FUNC_SEL_SHIFT)               /* 0x0000007F */
/* RM_GPIO0A4_SEL */
#define RM_IO_RM_GPIO0A4_SEL_OFFSET                        (0x90U)
#define RM_IO_RM_GPIO0A4_SEL_FUNC_SEL_SHIFT                (0U)
#define RM_IO_RM_GPIO0A4_SEL_FUNC_SEL_MASK                 (0x7FU << RM_IO_RM_GPIO0A4_SEL_FUNC_SEL_SHIFT)               /* 0x0000007F */
/* RM_GPIO0A5_SEL */
#define RM_IO_RM_GPIO0A5_SEL_OFFSET                        (0x94U)
#define RM_IO_RM_GPIO0A5_SEL_FUNC_SEL_SHIFT                (0U)
#define RM_IO_RM_GPIO0A5_SEL_FUNC_SEL_MASK                 (0x7FU << RM_IO_RM_GPIO0A5_SEL_FUNC_SEL_SHIFT)               /* 0x0000007F */
/* RM_GPIO0A6_SEL */
#define RM_IO_RM_GPIO0A6_SEL_OFFSET                        (0x98U)
#define RM_IO_RM_GPIO0A6_SEL_FUNC_SEL_SHIFT                (0U)
#define RM_IO_RM_GPIO0A6_SEL_FUNC_SEL_MASK                 (0x7FU << RM_IO_RM_GPIO0A6_SEL_FUNC_SEL_SHIFT)               /* 0x0000007F */
/* RM_GPIO0A7_SEL */
#define RM_IO_RM_GPIO0A7_SEL_OFFSET                        (0x9CU)
#define RM_IO_RM_GPIO0A7_SEL_FUNC_SEL_SHIFT                (0U)
#define RM_IO_RM_GPIO0A7_SEL_FUNC_SEL_MASK                 (0x7FU << RM_IO_RM_GPIO0A7_SEL_FUNC_SEL_SHIFT)               /* 0x0000007F */
/* RM_GPIO0B0_SEL */
#define RM_IO_RM_GPIO0B0_SEL_OFFSET                        (0xA0U)
#define RM_IO_RM_GPIO0B0_SEL_FUNC_SEL_SHIFT                (0U)
#define RM_IO_RM_GPIO0B0_SEL_FUNC_SEL_MASK                 (0x7FU << RM_IO_RM_GPIO0B0_SEL_FUNC_SEL_SHIFT)               /* 0x0000007F */
/* RM_GPIO0B1_SEL */
#define RM_IO_RM_GPIO0B1_SEL_OFFSET                        (0xA4U)
#define RM_IO_RM_GPIO0B1_SEL_FUNC_SEL_SHIFT                (0U)
#define RM_IO_RM_GPIO0B1_SEL_FUNC_SEL_MASK                 (0x7FU << RM_IO_RM_GPIO0B1_SEL_FUNC_SEL_SHIFT)               /* 0x0000007F */
/* RM_GPIO0B2_SEL */
#define RM_IO_RM_GPIO0B2_SEL_OFFSET                        (0xA8U)
#define RM_IO_RM_GPIO0B2_SEL_FUNC_SEL_SHIFT                (0U)
#define RM_IO_RM_GPIO0B2_SEL_FUNC_SEL_MASK                 (0x7FU << RM_IO_RM_GPIO0B2_SEL_FUNC_SEL_SHIFT)               /* 0x0000007F */
/* RM_GPIO0B3_SEL */
#define RM_IO_RM_GPIO0B3_SEL_OFFSET                        (0xACU)
#define RM_IO_RM_GPIO0B3_SEL_FUNC_SEL_SHIFT                (0U)
#define RM_IO_RM_GPIO0B3_SEL_FUNC_SEL_MASK                 (0x7FU << RM_IO_RM_GPIO0B3_SEL_FUNC_SEL_SHIFT)               /* 0x0000007F */
/* RM_GPIO0B4_SEL */
#define RM_IO_RM_GPIO0B4_SEL_OFFSET                        (0xB0U)
#define RM_IO_RM_GPIO0B4_SEL_FUNC_SEL_SHIFT                (0U)
#define RM_IO_RM_GPIO0B4_SEL_FUNC_SEL_MASK                 (0x7FU << RM_IO_RM_GPIO0B4_SEL_FUNC_SEL_SHIFT)               /* 0x0000007F */
/* RM_GPIO0B5_SEL */
#define RM_IO_RM_GPIO0B5_SEL_OFFSET                        (0xB4U)
#define RM_IO_RM_GPIO0B5_SEL_FUNC_SEL_SHIFT                (0U)
#define RM_IO_RM_GPIO0B5_SEL_FUNC_SEL_MASK                 (0x7FU << RM_IO_RM_GPIO0B5_SEL_FUNC_SEL_SHIFT)               /* 0x0000007F */
/* RM_GPIO0B6_SEL */
#define RM_IO_RM_GPIO0B6_SEL_OFFSET                        (0xB8U)
#define RM_IO_RM_GPIO0B6_SEL_FUNC_SEL_SHIFT                (0U)
#define RM_IO_RM_GPIO0B6_SEL_FUNC_SEL_MASK                 (0x7FU << RM_IO_RM_GPIO0B6_SEL_FUNC_SEL_SHIFT)               /* 0x0000007F */
/* RM_GPIO0B7_SEL */
#define RM_IO_RM_GPIO0B7_SEL_OFFSET                        (0xBCU)
#define RM_IO_RM_GPIO0B7_SEL_FUNC_SEL_SHIFT                (0U)
#define RM_IO_RM_GPIO0B7_SEL_FUNC_SEL_MASK                 (0x7FU << RM_IO_RM_GPIO0B7_SEL_FUNC_SEL_SHIFT)               /* 0x0000007F */
/* RM_GPIO0C0_SEL */
#define RM_IO_RM_GPIO0C0_SEL_OFFSET                        (0xC0U)
#define RM_IO_RM_GPIO0C0_SEL_FUNC_SEL_SHIFT                (0U)
#define RM_IO_RM_GPIO0C0_SEL_FUNC_SEL_MASK                 (0x7FU << RM_IO_RM_GPIO0C0_SEL_FUNC_SEL_SHIFT)               /* 0x0000007F */
/* RM_GPIO0C1_SEL */
#define RM_IO_RM_GPIO0C1_SEL_OFFSET                        (0xC4U)
#define RM_IO_RM_GPIO0C1_SEL_FUNC_SEL_SHIFT                (0U)
#define RM_IO_RM_GPIO0C1_SEL_FUNC_SEL_MASK                 (0x7FU << RM_IO_RM_GPIO0C1_SEL_FUNC_SEL_SHIFT)               /* 0x0000007F */
/* RM_GPIO0C2_SEL */
#define RM_IO_RM_GPIO0C2_SEL_OFFSET                        (0xC8U)
#define RM_IO_RM_GPIO0C2_SEL_FUNC_SEL_SHIFT                (0U)
#define RM_IO_RM_GPIO0C2_SEL_FUNC_SEL_MASK                 (0x7FU << RM_IO_RM_GPIO0C2_SEL_FUNC_SEL_SHIFT)               /* 0x0000007F */
/* RM_GPIO0C3_SEL */
#define RM_IO_RM_GPIO0C3_SEL_OFFSET                        (0xCCU)
#define RM_IO_RM_GPIO0C3_SEL_FUNC_SEL_SHIFT                (0U)
#define RM_IO_RM_GPIO0C3_SEL_FUNC_SEL_MASK                 (0x7FU << RM_IO_RM_GPIO0C3_SEL_FUNC_SEL_SHIFT)               /* 0x0000007F */
/* RM_GPIO0C4_SEL */
#define RM_IO_RM_GPIO0C4_SEL_OFFSET                        (0xD0U)
#define RM_IO_RM_GPIO0C4_SEL_FUNC_SEL_SHIFT                (0U)
#define RM_IO_RM_GPIO0C4_SEL_FUNC_SEL_MASK                 (0x7FU << RM_IO_RM_GPIO0C4_SEL_FUNC_SEL_SHIFT)               /* 0x0000007F */
/* RM_GPIO0C5_SEL */
#define RM_IO_RM_GPIO0C5_SEL_OFFSET                        (0xD4U)
#define RM_IO_RM_GPIO0C5_SEL_FUNC_SEL_SHIFT                (0U)
#define RM_IO_RM_GPIO0C5_SEL_FUNC_SEL_MASK                 (0x7FU << RM_IO_RM_GPIO0C5_SEL_FUNC_SEL_SHIFT)               /* 0x0000007F */
/* RM_GPIO0C6_SEL */
#define RM_IO_RM_GPIO0C6_SEL_OFFSET                        (0xD8U)
#define RM_IO_RM_GPIO0C6_SEL_FUNC_SEL_SHIFT                (0U)
#define RM_IO_RM_GPIO0C6_SEL_FUNC_SEL_MASK                 (0x7FU << RM_IO_RM_GPIO0C6_SEL_FUNC_SEL_SHIFT)               /* 0x0000007F */
/* RM_GPIO0C7_SEL */
#define RM_IO_RM_GPIO0C7_SEL_OFFSET                        (0xDCU)
#define RM_IO_RM_GPIO0C7_SEL_FUNC_SEL_SHIFT                (0U)
#define RM_IO_RM_GPIO0C7_SEL_FUNC_SEL_MASK                 (0x7FU << RM_IO_RM_GPIO0C7_SEL_FUNC_SEL_SHIFT)               /* 0x0000007F */
/* RM_GPIO1B1_SEL */
#define RM_IO_RM_GPIO1B1_SEL_OFFSET                        (0xE0U)
#define RM_IO_RM_GPIO1B1_SEL_FUNC_SEL_SHIFT                (0U)
#define RM_IO_RM_GPIO1B1_SEL_FUNC_SEL_MASK                 (0x7FU << RM_IO_RM_GPIO1B1_SEL_FUNC_SEL_SHIFT)               /* 0x0000007F */
/* RM_GPIO1B2_SEL */
#define RM_IO_RM_GPIO1B2_SEL_OFFSET                        (0xE4U)
#define RM_IO_RM_GPIO1B2_SEL_FUNC_SEL_SHIFT                (0U)
#define RM_IO_RM_GPIO1B2_SEL_FUNC_SEL_MASK                 (0x7FU << RM_IO_RM_GPIO1B2_SEL_FUNC_SEL_SHIFT)               /* 0x0000007F */
/* RM_GPIO1B3_SEL */
#define RM_IO_RM_GPIO1B3_SEL_OFFSET                        (0xE8U)
#define RM_IO_RM_GPIO1B3_SEL_FUNC_SEL_SHIFT                (0U)
#define RM_IO_RM_GPIO1B3_SEL_FUNC_SEL_MASK                 (0x7FU << RM_IO_RM_GPIO1B3_SEL_FUNC_SEL_SHIFT)               /* 0x0000007F */
/* RM_GPIO1C2_SEL */
#define RM_IO_RM_GPIO1C2_SEL_OFFSET                        (0xECU)
#define RM_IO_RM_GPIO1C2_SEL_FUNC_SEL_SHIFT                (0U)
#define RM_IO_RM_GPIO1C2_SEL_FUNC_SEL_MASK                 (0x7FU << RM_IO_RM_GPIO1C2_SEL_FUNC_SEL_SHIFT)               /* 0x0000007F */
/* RM_GPIO1C3_SEL */
#define RM_IO_RM_GPIO1C3_SEL_OFFSET                        (0xF0U)
#define RM_IO_RM_GPIO1C3_SEL_FUNC_SEL_SHIFT                (0U)
#define RM_IO_RM_GPIO1C3_SEL_FUNC_SEL_MASK                 (0x7FU << RM_IO_RM_GPIO1C3_SEL_FUNC_SEL_SHIFT)               /* 0x0000007F */
/* RM_GPIO1D1_SEL */
#define RM_IO_RM_GPIO1D1_SEL_OFFSET                        (0xF4U)
#define RM_IO_RM_GPIO1D1_SEL_FUNC_SEL_SHIFT                (0U)
#define RM_IO_RM_GPIO1D1_SEL_FUNC_SEL_MASK                 (0x7FU << RM_IO_RM_GPIO1D1_SEL_FUNC_SEL_SHIFT)               /* 0x0000007F */
/* RM_GPIO1D2_SEL */
#define RM_IO_RM_GPIO1D2_SEL_OFFSET                        (0xF8U)
#define RM_IO_RM_GPIO1D2_SEL_FUNC_SEL_SHIFT                (0U)
#define RM_IO_RM_GPIO1D2_SEL_FUNC_SEL_MASK                 (0x7FU << RM_IO_RM_GPIO1D2_SEL_FUNC_SEL_SHIFT)               /* 0x0000007F */
/* RM_GPIO1D3_SEL */
#define RM_IO_RM_GPIO1D3_SEL_OFFSET                        (0xFCU)
#define RM_IO_RM_GPIO1D3_SEL_FUNC_SEL_SHIFT                (0U)
#define RM_IO_RM_GPIO1D3_SEL_FUNC_SEL_MASK                 (0x7FU << RM_IO_RM_GPIO1D3_SEL_FUNC_SEL_SHIFT)               /* 0x0000007F */
/* TEST_STATUS0 */
#define RM_IO_TEST_STATUS0_OFFSET                          (0x300U)
#define RM_IO_TEST_STATUS0_SIG_TO_IP_SHIFT                 (0U)
#define RM_IO_TEST_STATUS0_SIG_TO_IP_MASK                  (0xFFFFFFFFU << RM_IO_TEST_STATUS0_SIG_TO_IP_SHIFT)          /* 0xFFFFFFFF */
/* TEST_STATUS1 */
#define RM_IO_TEST_STATUS1_OFFSET                          (0x304U)
#define RM_IO_TEST_STATUS1_SIG_TO_IP_SHIFT                 (0U)
#define RM_IO_TEST_STATUS1_SIG_TO_IP_MASK                  (0xFFFFFFFFU << RM_IO_TEST_STATUS1_SIG_TO_IP_SHIFT)          /* 0xFFFFFFFF */
/* TEST_STATUS2 */
#define RM_IO_TEST_STATUS2_OFFSET                          (0x308U)
#define RM_IO_TEST_STATUS2_SIG_TO_IP_SHIFT                 (0U)
#define RM_IO_TEST_STATUS2_SIG_TO_IP_MASK                  (0xFFFFFFFFU << RM_IO_TEST_STATUS2_SIG_TO_IP_SHIFT)          /* 0xFFFFFFFF */
/* TEST_STATUS3 */
#define RM_IO_TEST_STATUS3_OFFSET                          (0x30CU)
#define RM_IO_TEST_STATUS3_SIG_TO_IP_SHIFT                 (0U)
#define RM_IO_TEST_STATUS3_SIG_TO_IP_MASK                  (0x3U << RM_IO_TEST_STATUS3_SIG_TO_IP_SHIFT)                 /* 0x00000003 */
/* TEST_STATUS4 */
#define RM_IO_TEST_STATUS4_OFFSET                          (0x310U)
#define RM_IO_TEST_STATUS4_SIG_FROM_PAD_SHIFT              (0U)
#define RM_IO_TEST_STATUS4_SIG_FROM_PAD_MASK               (0xFFFFFFFFU << RM_IO_TEST_STATUS4_SIG_FROM_PAD_SHIFT)       /* 0xFFFFFFFF */
/****************************************GRF_PMU*****************************************/
/* SOC_CON0 */
#define GRF_PMU_SOC_CON0_OFFSET                            (0x0U)
#define GRF_PMU_SOC_CON0_MEM_AUTO_GATING_EN_SHIFT          (0U)
#define GRF_PMU_SOC_CON0_MEM_AUTO_GATING_EN_MASK           (0x1U << GRF_PMU_SOC_CON0_MEM_AUTO_GATING_EN_SHIFT)          /* 0x00000001 */
#define GRF_PMU_SOC_CON0_FORCE_JTAG_UART0_RXM0_SHIFT       (1U)
#define GRF_PMU_SOC_CON0_FORCE_JTAG_UART0_RXM0_MASK        (0x1U << GRF_PMU_SOC_CON0_FORCE_JTAG_UART0_RXM0_SHIFT)       /* 0x00000002 */
#define GRF_PMU_SOC_CON0_DDRPHY_IO_RET_SEL_SHIFT           (8U)
#define GRF_PMU_SOC_CON0_DDRPHY_IO_RET_SEL_MASK            (0x1U << GRF_PMU_SOC_CON0_DDRPHY_IO_RET_SEL_SHIFT)           /* 0x00000100 */
#define GRF_PMU_SOC_CON0_DDRPHY_IO_RET_SHIFT               (9U)
#define GRF_PMU_SOC_CON0_DDRPHY_IO_RET_MASK                (0x1U << GRF_PMU_SOC_CON0_DDRPHY_IO_RET_SHIFT)               /* 0x00000200 */
#define GRF_PMU_SOC_CON0_DDRPHY_ADDRCMD_HZ_SEL_SHIFT       (11U)
#define GRF_PMU_SOC_CON0_DDRPHY_ADDRCMD_HZ_SEL_MASK        (0x1U << GRF_PMU_SOC_CON0_DDRPHY_ADDRCMD_HZ_SEL_SHIFT)       /* 0x00000800 */
#define GRF_PMU_SOC_CON0_DDRPHY_ADDRCMD_HZ_SHIFT           (12U)
#define GRF_PMU_SOC_CON0_DDRPHY_ADDRCMD_HZ_MASK            (0x1U << GRF_PMU_SOC_CON0_DDRPHY_ADDRCMD_HZ_SHIFT)           /* 0x00001000 */
/* SOC_CON1 */
#define GRF_PMU_SOC_CON1_OFFSET                            (0x4U)
#define GRF_PMU_SOC_CON1_PMIC_LOGIC_SLEEP_SEL_SHIFT        (0U)
#define GRF_PMU_SOC_CON1_PMIC_LOGIC_SLEEP_SEL_MASK         (0x1U << GRF_PMU_SOC_CON1_PMIC_LOGIC_SLEEP_SEL_SHIFT)        /* 0x00000001 */
#define GRF_PMU_SOC_CON1_PMIC_LOGIC_SLEEP_POL_SHIFT        (1U)
#define GRF_PMU_SOC_CON1_PMIC_LOGIC_SLEEP_POL_MASK         (0x1U << GRF_PMU_SOC_CON1_PMIC_LOGIC_SLEEP_POL_SHIFT)        /* 0x00000002 */
#define GRF_PMU_SOC_CON1_PMIC_CORE_SLEEP_SEL_SHIFT         (2U)
#define GRF_PMU_SOC_CON1_PMIC_CORE_SLEEP_SEL_MASK          (0x1U << GRF_PMU_SOC_CON1_PMIC_CORE_SLEEP_SEL_SHIFT)         /* 0x00000004 */
#define GRF_PMU_SOC_CON1_PMIC_CORE_SLEEP_POL_SHIFT         (3U)
#define GRF_PMU_SOC_CON1_PMIC_CORE_SLEEP_POL_MASK          (0x1U << GRF_PMU_SOC_CON1_PMIC_CORE_SLEEP_POL_SHIFT)         /* 0x00000008 */
#define GRF_PMU_SOC_CON1_SAI0_MCLK_OEN_SHIFT               (8U)
#define GRF_PMU_SOC_CON1_SAI0_MCLK_OEN_MASK                (0x1U << GRF_PMU_SOC_CON1_SAI0_MCLK_OEN_SHIFT)               /* 0x00000100 */
#define GRF_PMU_SOC_CON1_SAI1_MCLK_OEN_SHIFT               (9U)
#define GRF_PMU_SOC_CON1_SAI1_MCLK_OEN_MASK                (0x1U << GRF_PMU_SOC_CON1_SAI1_MCLK_OEN_SHIFT)               /* 0x00000200 */
#define GRF_PMU_SOC_CON1_CLK_32K_OEN_SHIFT                 (10U)
#define GRF_PMU_SOC_CON1_CLK_32K_OEN_MASK                  (0x1U << GRF_PMU_SOC_CON1_CLK_32K_OEN_SHIFT)                 /* 0x00000400 */
#define GRF_PMU_SOC_CON1_RMIO_TEST_MODE_SHIFT              (11U)
#define GRF_PMU_SOC_CON1_RMIO_TEST_MODE_MASK               (0x1U << GRF_PMU_SOC_CON1_RMIO_TEST_MODE_SHIFT)              /* 0x00000800 */
/* SOC_CON2 */
#define GRF_PMU_SOC_CON2_OFFSET                            (0x8U)
#define GRF_PMU_SOC_CON2_OUT2CHIP_RST_INIT_SHIFT           (0U)
#define GRF_PMU_SOC_CON2_OUT2CHIP_RST_INIT_MASK            (0xFFFFU << GRF_PMU_SOC_CON2_OUT2CHIP_RST_INIT_SHIFT)        /* 0x0000FFFF */
/* SOC_CON3 */
#define GRF_PMU_SOC_CON3_OFFSET                            (0xCU)
#define GRF_PMU_SOC_CON3_PRESETN_PMU_HPTIMER_HOLD_ENA_SHIFT (0U)
#define GRF_PMU_SOC_CON3_PRESETN_PMU_HPTIMER_HOLD_ENA_MASK (0x1U << GRF_PMU_SOC_CON3_PRESETN_PMU_HPTIMER_HOLD_ENA_SHIFT) /* 0x00000001 */
#define GRF_PMU_SOC_CON3_PRESETN_PMU_CRU_HOLD_ENA_SHIFT    (1U)
#define GRF_PMU_SOC_CON3_PRESETN_PMU_CRU_HOLD_ENA_MASK     (0x1U << GRF_PMU_SOC_CON3_PRESETN_PMU_CRU_HOLD_ENA_SHIFT)    /* 0x00000002 */
#define GRF_PMU_SOC_CON3_RESETN_PMU_GPIO0_HOLD_ENA_SHIFT   (2U)
#define GRF_PMU_SOC_CON3_RESETN_PMU_GPIO0_HOLD_ENA_MASK    (0x1U << GRF_PMU_SOC_CON3_RESETN_PMU_GPIO0_HOLD_ENA_SHIFT)   /* 0x00000004 */
#define GRF_PMU_SOC_CON3_PRESETN_PMU_GRF_HOLD_ENA_SHIFT    (3U)
#define GRF_PMU_SOC_CON3_PRESETN_PMU_GRF_HOLD_ENA_MASK     (0x1U << GRF_PMU_SOC_CON3_PRESETN_PMU_GRF_HOLD_ENA_SHIFT)    /* 0x00000008 */
#define GRF_PMU_SOC_CON3_PRESETN_GPIO0_IOC_HOLD_ENA_SHIFT  (4U)
#define GRF_PMU_SOC_CON3_PRESETN_GPIO0_IOC_HOLD_ENA_MASK   (0x1U << GRF_PMU_SOC_CON3_PRESETN_GPIO0_IOC_HOLD_ENA_SHIFT)  /* 0x00000010 */
#define GRF_PMU_SOC_CON3_PRESETN_PMU_SGRF_HOLD_ENA_SHIFT   (5U)
#define GRF_PMU_SOC_CON3_PRESETN_PMU_SGRF_HOLD_ENA_MASK    (0x1U << GRF_PMU_SOC_CON3_PRESETN_PMU_SGRF_HOLD_ENA_SHIFT)   /* 0x00000020 */
#define GRF_PMU_SOC_CON3_PRESETN_PMU_PWM0_HOLD_ENA_SHIFT   (7U)
#define GRF_PMU_SOC_CON3_PRESETN_PMU_PWM0_HOLD_ENA_MASK    (0x1U << GRF_PMU_SOC_CON3_PRESETN_PMU_PWM0_HOLD_ENA_SHIFT)   /* 0x00000080 */
#define GRF_PMU_SOC_CON3_RESETN_PMU_GPIO1_SHADOW_HOLD_ENA_SHIFT (8U)
#define GRF_PMU_SOC_CON3_RESETN_PMU_GPIO1_SHADOW_HOLD_ENA_MASK (0x1U << GRF_PMU_SOC_CON3_RESETN_PMU_GPIO1_SHADOW_HOLD_ENA_SHIFT) /* 0x00000100 */
#define GRF_PMU_SOC_CON3_RESETN_PMU_TOUCH_KEY_HOLD_ENA_SHIFT (9U)
#define GRF_PMU_SOC_CON3_RESETN_PMU_TOUCH_KEY_HOLD_ENA_MASK (0x1U << GRF_PMU_SOC_CON3_RESETN_PMU_TOUCH_KEY_HOLD_ENA_SHIFT) /* 0x00000200 */
/* SOC_CON4 */
#define GRF_PMU_SOC_CON4_OFFSET                            (0x10U)
#define GRF_PMU_SOC_CON4_UART_JTAG_DLY_CNT_SHIFT           (0U)
#define GRF_PMU_SOC_CON4_UART_JTAG_DLY_CNT_MASK            (0xFFFFFFFFU << GRF_PMU_SOC_CON4_UART_JTAG_DLY_CNT_SHIFT)    /* 0xFFFFFFFF */
/* SOC_CON5 */
#define GRF_PMU_SOC_CON5_OFFSET                            (0x14U)
#define GRF_PMU_SOC_CON5_GRF_GPIO0_FILTER_EN_SHIFT         (0U)
#define GRF_PMU_SOC_CON5_GRF_GPIO0_FILTER_EN_MASK          (0xFU << GRF_PMU_SOC_CON5_GRF_GPIO0_FILTER_EN_SHIFT)         /* 0x0000000F */
#define GRF_PMU_SOC_CON5_GRF_GPIO0_FILTER_SEL0_SHIFT       (4U)
#define GRF_PMU_SOC_CON5_GRF_GPIO0_FILTER_SEL0_MASK        (0x1FU << GRF_PMU_SOC_CON5_GRF_GPIO0_FILTER_SEL0_SHIFT)      /* 0x000001F0 */
#define GRF_PMU_SOC_CON5_GRF_GPIO0_FILTER_SEL1_SHIFT       (10U)
#define GRF_PMU_SOC_CON5_GRF_GPIO0_FILTER_SEL1_MASK        (0x1FU << GRF_PMU_SOC_CON5_GRF_GPIO0_FILTER_SEL1_SHIFT)      /* 0x00007C00 */
/* SOC_CON6 */
#define GRF_PMU_SOC_CON6_OFFSET                            (0x18U)
#define GRF_PMU_SOC_CON6_GRF_GPIO0_FILTER_SEL2_SHIFT       (4U)
#define GRF_PMU_SOC_CON6_GRF_GPIO0_FILTER_SEL2_MASK        (0x1FU << GRF_PMU_SOC_CON6_GRF_GPIO0_FILTER_SEL2_SHIFT)      /* 0x000001F0 */
#define GRF_PMU_SOC_CON6_GRF_GPIO0_FILTER_SEL3_SHIFT       (10U)
#define GRF_PMU_SOC_CON6_GRF_GPIO0_FILTER_SEL3_MASK        (0x1FU << GRF_PMU_SOC_CON6_GRF_GPIO0_FILTER_SEL3_SHIFT)      /* 0x00007C00 */
/* SOC_CON7 */
#define GRF_PMU_SOC_CON7_OFFSET                            (0x1CU)
#define GRF_PMU_SOC_CON7_GRF_GPIO0_FILTER_COUNT0_SHIFT     (0U)
#define GRF_PMU_SOC_CON7_GRF_GPIO0_FILTER_COUNT0_MASK      (0xFFFFFU << GRF_PMU_SOC_CON7_GRF_GPIO0_FILTER_COUNT0_SHIFT) /* 0x000FFFFF */
/* SOC_CON8 */
#define GRF_PMU_SOC_CON8_OFFSET                            (0x20U)
#define GRF_PMU_SOC_CON8_GRF_GPIO0_FILTER_COUNT1_SHIFT     (0U)
#define GRF_PMU_SOC_CON8_GRF_GPIO0_FILTER_COUNT1_MASK      (0xFFFFFU << GRF_PMU_SOC_CON8_GRF_GPIO0_FILTER_COUNT1_SHIFT) /* 0x000FFFFF */
/* SOC_CON9 */
#define GRF_PMU_SOC_CON9_OFFSET                            (0x24U)
#define GRF_PMU_SOC_CON9_GRF_GPIO0_FILTER_COUNT2_SHIFT     (0U)
#define GRF_PMU_SOC_CON9_GRF_GPIO0_FILTER_COUNT2_MASK      (0xFFFFFU << GRF_PMU_SOC_CON9_GRF_GPIO0_FILTER_COUNT2_SHIFT) /* 0x000FFFFF */
/* SOC_CON10 */
#define GRF_PMU_SOC_CON10_OFFSET                           (0x28U)
#define GRF_PMU_SOC_CON10_GRF_GPIO0_FILTER_COUNT3_SHIFT    (0U)
#define GRF_PMU_SOC_CON10_GRF_GPIO0_FILTER_COUNT3_MASK     (0xFFFFFU << GRF_PMU_SOC_CON10_GRF_GPIO0_FILTER_COUNT3_SHIFT) /* 0x000FFFFF */
/* SOC_CON11 */
#define GRF_PMU_SOC_CON11_OFFSET                           (0x2CU)
#define GRF_PMU_SOC_CON11_GRF_GPIO1_SHADOW_FILTER_EN_SHIFT (0U)
#define GRF_PMU_SOC_CON11_GRF_GPIO1_SHADOW_FILTER_EN_MASK  (0xFU << GRF_PMU_SOC_CON11_GRF_GPIO1_SHADOW_FILTER_EN_SHIFT) /* 0x0000000F */
#define GRF_PMU_SOC_CON11_GRF_GPIO1_SHADOW_FILTER_SEL0_SHIFT (4U)
#define GRF_PMU_SOC_CON11_GRF_GPIO1_SHADOW_FILTER_SEL0_MASK (0x1FU << GRF_PMU_SOC_CON11_GRF_GPIO1_SHADOW_FILTER_SEL0_SHIFT) /* 0x000001F0 */
#define GRF_PMU_SOC_CON11_GRF_GPIO1_SHADOW_FILTER_SEL1_SHIFT (10U)
#define GRF_PMU_SOC_CON11_GRF_GPIO1_SHADOW_FILTER_SEL1_MASK (0x1FU << GRF_PMU_SOC_CON11_GRF_GPIO1_SHADOW_FILTER_SEL1_SHIFT) /* 0x00007C00 */
/* SOC_CON12 */
#define GRF_PMU_SOC_CON12_OFFSET                           (0x30U)
#define GRF_PMU_SOC_CON12_GRF_GPIO1_SHADOW_FILTER_SEL2_SHIFT (4U)
#define GRF_PMU_SOC_CON12_GRF_GPIO1_SHADOW_FILTER_SEL2_MASK (0x1FU << GRF_PMU_SOC_CON12_GRF_GPIO1_SHADOW_FILTER_SEL2_SHIFT) /* 0x000001F0 */
#define GRF_PMU_SOC_CON12_GRF_GPIO1_SHADOW_FILTER_SEL3_SHIFT (10U)
#define GRF_PMU_SOC_CON12_GRF_GPIO1_SHADOW_FILTER_SEL3_MASK (0x1FU << GRF_PMU_SOC_CON12_GRF_GPIO1_SHADOW_FILTER_SEL3_SHIFT) /* 0x00007C00 */
/* SOC_CON13 */
#define GRF_PMU_SOC_CON13_OFFSET                           (0x34U)
#define GRF_PMU_SOC_CON13_GRF_GPIO1_SHADOW_FILTER_COUNT0_SHIFT (0U)
#define GRF_PMU_SOC_CON13_GRF_GPIO1_SHADOW_FILTER_COUNT0_MASK (0xFFFFFU << GRF_PMU_SOC_CON13_GRF_GPIO1_SHADOW_FILTER_COUNT0_SHIFT) /* 0x000FFFFF */
/* SOC_CON14 */
#define GRF_PMU_SOC_CON14_OFFSET                           (0x38U)
#define GRF_PMU_SOC_CON14_GRF_GPIO1_SHADOW_FILTER_COUNT1_SHIFT (0U)
#define GRF_PMU_SOC_CON14_GRF_GPIO1_SHADOW_FILTER_COUNT1_MASK (0xFFFFFU << GRF_PMU_SOC_CON14_GRF_GPIO1_SHADOW_FILTER_COUNT1_SHIFT) /* 0x000FFFFF */
/* SOC_CON15 */
#define GRF_PMU_SOC_CON15_OFFSET                           (0x3CU)
#define GRF_PMU_SOC_CON15_GRF_GPIO1_SHADOW_FILTER_COUNT2_SHIFT (0U)
#define GRF_PMU_SOC_CON15_GRF_GPIO1_SHADOW_FILTER_COUNT2_MASK (0xFFFFFU << GRF_PMU_SOC_CON15_GRF_GPIO1_SHADOW_FILTER_COUNT2_SHIFT) /* 0x000FFFFF */
/* SOC_CON16 */
#define GRF_PMU_SOC_CON16_OFFSET                           (0x40U)
#define GRF_PMU_SOC_CON16_GRF_GPIO1_SHADOW_FILTER_COUNT3_SHIFT (0U)
#define GRF_PMU_SOC_CON16_GRF_GPIO1_SHADOW_FILTER_COUNT3_MASK (0xFFFFFU << GRF_PMU_SOC_CON16_GRF_GPIO1_SHADOW_FILTER_COUNT3_SHIFT) /* 0x000FFFFF */
/* SOC_CON17 */
#define GRF_PMU_SOC_CON17_OFFSET                           (0x44U)
#define GRF_PMU_SOC_CON17_GPIO1_SHADOW_ENABLE_LOW_SHIFT    (0U)
#define GRF_PMU_SOC_CON17_GPIO1_SHADOW_ENABLE_LOW_MASK     (0xFFFFU << GRF_PMU_SOC_CON17_GPIO1_SHADOW_ENABLE_LOW_SHIFT) /* 0x0000FFFF */
/* SOC_CON18 */
#define GRF_PMU_SOC_CON18_OFFSET                           (0x48U)
#define GRF_PMU_SOC_CON18_GPIO1_SHADOW_ENABLE_HIGH_SHIFT   (0U)
#define GRF_PMU_SOC_CON18_GPIO1_SHADOW_ENABLE_HIGH_MASK    (0xFFFU << GRF_PMU_SOC_CON18_GPIO1_SHADOW_ENABLE_HIGH_SHIFT) /* 0x00000FFF */
/* SOC_STATUS */
#define GRF_PMU_SOC_STATUS_OFFSET                          (0x100U)
#define GRF_PMU_SOC_STATUS                                 (0x1U)
#define GRF_PMU_SOC_STATUS_NPOR_POWERGOOD_SHIFT            (0U)
#define GRF_PMU_SOC_STATUS_NPOR_POWERGOOD_MASK             (0x1U << GRF_PMU_SOC_STATUS_NPOR_POWERGOOD_SHIFT)            /* 0x00000001 */
/* OS_REG0 */
#define GRF_PMU_OS_REG0_OFFSET                             (0x200U)
#define GRF_PMU_OS_REG0_OS_REG_SHIFT                       (0U)
#define GRF_PMU_OS_REG0_OS_REG_MASK                        (0xFFFFFFFFU << GRF_PMU_OS_REG0_OS_REG_SHIFT)                /* 0xFFFFFFFF */
/* OS_REG1 */
#define GRF_PMU_OS_REG1_OFFSET                             (0x204U)
#define GRF_PMU_OS_REG1_OS_REG_SHIFT                       (0U)
#define GRF_PMU_OS_REG1_OS_REG_MASK                        (0xFFFFFFFFU << GRF_PMU_OS_REG1_OS_REG_SHIFT)                /* 0xFFFFFFFF */
/* OS_REG2 */
#define GRF_PMU_OS_REG2_OFFSET                             (0x208U)
#define GRF_PMU_OS_REG2_OS_REG_SHIFT                       (0U)
#define GRF_PMU_OS_REG2_OS_REG_MASK                        (0xFFFFFFFFU << GRF_PMU_OS_REG2_OS_REG_SHIFT)                /* 0xFFFFFFFF */
/* OS_REG3 */
#define GRF_PMU_OS_REG3_OFFSET                             (0x20CU)
#define GRF_PMU_OS_REG3_OS_REG_SHIFT                       (0U)
#define GRF_PMU_OS_REG3_OS_REG_MASK                        (0xFFFFFFFFU << GRF_PMU_OS_REG3_OS_REG_SHIFT)                /* 0xFFFFFFFF */
/* OS_REG4 */
#define GRF_PMU_OS_REG4_OFFSET                             (0x210U)
#define GRF_PMU_OS_REG4_OS_REG_SHIFT                       (0U)
#define GRF_PMU_OS_REG4_OS_REG_MASK                        (0xFFFFFFFFU << GRF_PMU_OS_REG4_OS_REG_SHIFT)                /* 0xFFFFFFFF */
/* OS_REG5 */
#define GRF_PMU_OS_REG5_OFFSET                             (0x214U)
#define GRF_PMU_OS_REG5_OS_REG_SHIFT                       (0U)
#define GRF_PMU_OS_REG5_OS_REG_MASK                        (0xFFFFFFFFU << GRF_PMU_OS_REG5_OS_REG_SHIFT)                /* 0xFFFFFFFF */
/* OS_REG6 */
#define GRF_PMU_OS_REG6_OFFSET                             (0x218U)
#define GRF_PMU_OS_REG6_OS_REG_SHIFT                       (0U)
#define GRF_PMU_OS_REG6_OS_REG_MASK                        (0xFFFFFFFFU << GRF_PMU_OS_REG6_OS_REG_SHIFT)                /* 0xFFFFFFFF */
/* OS_REG7 */
#define GRF_PMU_OS_REG7_OFFSET                             (0x21CU)
#define GRF_PMU_OS_REG7_OS_REG_SHIFT                       (0U)
#define GRF_PMU_OS_REG7_OS_REG_MASK                        (0xFFFFFFFFU << GRF_PMU_OS_REG7_OS_REG_SHIFT)                /* 0xFFFFFFFF */
/* OS_REG8 */
#define GRF_PMU_OS_REG8_OFFSET                             (0x220U)
#define GRF_PMU_OS_REG8_OS_REG_SHIFT                       (0U)
#define GRF_PMU_OS_REG8_OS_REG_MASK                        (0xFFFFFFFFU << GRF_PMU_OS_REG8_OS_REG_SHIFT)                /* 0xFFFFFFFF */
/* OS_REG9 */
#define GRF_PMU_OS_REG9_OFFSET                             (0x224U)
#define GRF_PMU_OS_REG9_OS_REG_SHIFT                       (0U)
#define GRF_PMU_OS_REG9_OS_REG_MASK                        (0xFFFFFFFFU << GRF_PMU_OS_REG9_OS_REG_SHIFT)                /* 0xFFFFFFFF */
/* OS_REG10 */
#define GRF_PMU_OS_REG10_OFFSET                            (0x228U)
#define GRF_PMU_OS_REG10_OS_REG_SHIFT                      (0U)
#define GRF_PMU_OS_REG10_OS_REG_MASK                       (0xFFFFFFFFU << GRF_PMU_OS_REG10_OS_REG_SHIFT)               /* 0xFFFFFFFF */
/* OS_REG11 */
#define GRF_PMU_OS_REG11_OFFSET                            (0x22CU)
#define GRF_PMU_OS_REG11_OS_REG_SHIFT                      (0U)
#define GRF_PMU_OS_REG11_OS_REG_MASK                       (0xFFFFFFFFU << GRF_PMU_OS_REG11_OS_REG_SHIFT)               /* 0xFFFFFFFF */
/* RSTFUNC_STATUS */
#define GRF_PMU_RSTFUNC_STATUS_OFFSET                      (0x230U)
#define GRF_PMU_RSTFUNC_STATUS                             (0x0U)
#define GRF_PMU_RSTFUNC_STATUS_FIRST_RESET_SRC_STAT_SHIFT  (0U)
#define GRF_PMU_RSTFUNC_STATUS_FIRST_RESET_SRC_STAT_MASK   (0x1U << GRF_PMU_RSTFUNC_STATUS_FIRST_RESET_SRC_STAT_SHIFT)  /* 0x00000001 */
#define GRF_PMU_RSTFUNC_STATUS_WDT_RESET_SRC_STAT_SHIFT    (1U)
#define GRF_PMU_RSTFUNC_STATUS_WDT_RESET_SRC_STAT_MASK     (0x1U << GRF_PMU_RSTFUNC_STATUS_WDT_RESET_SRC_STAT_SHIFT)    /* 0x00000002 */
#define GRF_PMU_RSTFUNC_STATUS_TSADC_SHUT_RESET_SRC_STAT_SHIFT (2U)
#define GRF_PMU_RSTFUNC_STATUS_TSADC_SHUT_RESET_SRC_STAT_MASK (0x1U << GRF_PMU_RSTFUNC_STATUS_TSADC_SHUT_RESET_SRC_STAT_SHIFT) /* 0x00000004 */
/* RSTFUNC_CLR */
#define GRF_PMU_RSTFUNC_CLR_OFFSET                         (0x234U)
#define GRF_PMU_RSTFUNC_CLR_FIRST_RESET_SRC_CLR_SHIFT      (0U)
#define GRF_PMU_RSTFUNC_CLR_FIRST_RESET_SRC_CLR_MASK       (0x1U << GRF_PMU_RSTFUNC_CLR_FIRST_RESET_SRC_CLR_SHIFT)      /* 0x00000001 */
#define GRF_PMU_RSTFUNC_CLR_WDT_RESET_SRC_CLR_SHIFT        (1U)
#define GRF_PMU_RSTFUNC_CLR_WDT_RESET_SRC_CLR_MASK         (0x1U << GRF_PMU_RSTFUNC_CLR_WDT_RESET_SRC_CLR_SHIFT)        /* 0x00000002 */
#define GRF_PMU_RSTFUNC_CLR_TSADC_SHUT_RESET_SRC_CLR_SHIFT (2U)
#define GRF_PMU_RSTFUNC_CLR_TSADC_SHUT_RESET_SRC_CLR_MASK  (0x1U << GRF_PMU_RSTFUNC_CLR_TSADC_SHUT_RESET_SRC_CLR_SHIFT) /* 0x00000004 */
/* MCU_ISO_CON0 */
#define GRF_PMU_MCU_ISO_CON0_OFFSET                        (0x1000U)
#define GRF_PMU_MCU_ISO_CON0_A7DBG_ISO_CTRL_SHIFT          (0U)
#define GRF_PMU_MCU_ISO_CON0_A7DBG_ISO_CTRL_MASK           (0x1U << GRF_PMU_MCU_ISO_CON0_A7DBG_ISO_CTRL_SHIFT)          /* 0x00000001 */
#define GRF_PMU_MCU_ISO_CON0_GRF_CORE_ISO_CTRL_SHIFT       (1U)
#define GRF_PMU_MCU_ISO_CON0_GRF_CORE_ISO_CTRL_MASK        (0xFU << GRF_PMU_MCU_ISO_CON0_GRF_CORE_ISO_CTRL_SHIFT)       /* 0x0000001E */
#define GRF_PMU_MCU_ISO_CON0_GPIO1_ISO_CTRL_SHIFT          (5U)
#define GRF_PMU_MCU_ISO_CON0_GPIO1_ISO_CTRL_MASK           (0xFU << GRF_PMU_MCU_ISO_CON0_GPIO1_ISO_CTRL_SHIFT)          /* 0x000001E0 */
#define GRF_PMU_MCU_ISO_CON0_FLEXBUS_ISO_CTRL_SHIFT        (9U)
#define GRF_PMU_MCU_ISO_CON0_FLEXBUS_ISO_CTRL_MASK         (0x1U << GRF_PMU_MCU_ISO_CON0_FLEXBUS_ISO_CTRL_SHIFT)        /* 0x00000200 */
#define GRF_PMU_MCU_ISO_CON0_DSMC_ISO_CTRL_SHIFT           (11U)
#define GRF_PMU_MCU_ISO_CON0_DSMC_ISO_CTRL_MASK            (0x1U << GRF_PMU_MCU_ISO_CON0_DSMC_ISO_CTRL_SHIFT)           /* 0x00000800 */
#define GRF_PMU_MCU_ISO_CON0_DSMC_MEM_ISO_CTRL_SHIFT       (12U)
#define GRF_PMU_MCU_ISO_CON0_DSMC_MEM_ISO_CTRL_MASK        (0xFU << GRF_PMU_MCU_ISO_CON0_DSMC_MEM_ISO_CTRL_SHIFT)       /* 0x0000F000 */
/* MCU_ISO_CON1 */
#define GRF_PMU_MCU_ISO_CON1_OFFSET                        (0x1004U)
#define GRF_PMU_MCU_ISO_CON1_SECURE_DMAC0_ISO_CTRL_SHIFT   (0U)
#define GRF_PMU_MCU_ISO_CON1_SECURE_DMAC0_ISO_CTRL_MASK    (0x1U << GRF_PMU_MCU_ISO_CON1_SECURE_DMAC0_ISO_CTRL_SHIFT)   /* 0x00000001 */
#define GRF_PMU_MCU_ISO_CON1_SECURE_DMAC1_ISO_CTRL_SHIFT   (1U)
#define GRF_PMU_MCU_ISO_CON1_SECURE_DMAC1_ISO_CTRL_MASK    (0x1U << GRF_PMU_MCU_ISO_CON1_SECURE_DMAC1_ISO_CTRL_SHIFT)   /* 0x00000002 */
#define GRF_PMU_MCU_ISO_CON1_SGRF_BUS_ISO_CTRL_SHIFT       (2U)
#define GRF_PMU_MCU_ISO_CON1_SGRF_BUS_ISO_CTRL_MASK        (0x1U << GRF_PMU_MCU_ISO_CON1_SGRF_BUS_ISO_CTRL_SHIFT)       /* 0x00000004 */
#define GRF_PMU_MCU_ISO_CON1_DMAC0_ISO_CTRL_SHIFT          (3U)
#define GRF_PMU_MCU_ISO_CON1_DMAC0_ISO_CTRL_MASK           (0x1U << GRF_PMU_MCU_ISO_CON1_DMAC0_ISO_CTRL_SHIFT)          /* 0x00000008 */
#define GRF_PMU_MCU_ISO_CON1_DMAC1_ISO_CTRL_SHIFT          (4U)
#define GRF_PMU_MCU_ISO_CON1_DMAC1_ISO_CTRL_MASK           (0x1U << GRF_PMU_MCU_ISO_CON1_DMAC1_ISO_CTRL_SHIFT)          /* 0x00000010 */
#define GRF_PMU_MCU_ISO_CON1_DDRC_ISO_CTRL_SHIFT           (5U)
#define GRF_PMU_MCU_ISO_CON1_DDRC_ISO_CTRL_MASK            (0x1U << GRF_PMU_MCU_ISO_CON1_DDRC_ISO_CTRL_SHIFT)           /* 0x00000020 */
#define GRF_PMU_MCU_ISO_CON1_DDR_MONITOR_ISO_CTRL_SHIFT    (6U)
#define GRF_PMU_MCU_ISO_CON1_DDR_MONITOR_ISO_CTRL_MASK     (0x1U << GRF_PMU_MCU_ISO_CON1_DDR_MONITOR_ISO_CTRL_SHIFT)    /* 0x00000040 */
#define GRF_PMU_MCU_ISO_CON1_DDR_LPC_ISO_CTRL_SHIFT        (7U)
#define GRF_PMU_MCU_ISO_CON1_DDR_LPC_ISO_CTRL_MASK         (0x1U << GRF_PMU_MCU_ISO_CON1_DDR_LPC_ISO_CTRL_SHIFT)        /* 0x00000080 */
#define GRF_PMU_MCU_ISO_CON1_GRF_BUS_ISO_CTRL_SHIFT        (8U)
#define GRF_PMU_MCU_ISO_CON1_GRF_BUS_ISO_CTRL_MASK         (0xFU << GRF_PMU_MCU_ISO_CON1_GRF_BUS_ISO_CTRL_SHIFT)        /* 0x00000F00 */
#define GRF_PMU_MCU_ISO_CON1_MAILBOX_ISO_CTRL_SHIFT        (12U)
#define GRF_PMU_MCU_ISO_CON1_MAILBOX_ISO_CTRL_MASK         (0xFU << GRF_PMU_MCU_ISO_CON1_MAILBOX_ISO_CTRL_SHIFT)        /* 0x0000F000 */
/* MCU_ISO_CON2 */
#define GRF_PMU_MCU_ISO_CON2_OFFSET                        (0x1008U)
#define GRF_PMU_MCU_ISO_CON2_TIMER0_ISO_CTRL_SHIFT         (0U)
#define GRF_PMU_MCU_ISO_CON2_TIMER0_ISO_CTRL_MASK          (0xFFU << GRF_PMU_MCU_ISO_CON2_TIMER0_ISO_CTRL_SHIFT)        /* 0x000000FF */
#define GRF_PMU_MCU_ISO_CON2_TIMER1_ISO_CTRL_SHIFT         (8U)
#define GRF_PMU_MCU_ISO_CON2_TIMER1_ISO_CTRL_MASK          (0xFFU << GRF_PMU_MCU_ISO_CON2_TIMER1_ISO_CTRL_SHIFT)        /* 0x0000FF00 */
/* MCU_ISO_CON3 */
#define GRF_PMU_MCU_ISO_CON3_OFFSET                        (0x100CU)
#define GRF_PMU_MCU_ISO_CON3_WDT0_ISO_CTRL_SHIFT           (0U)
#define GRF_PMU_MCU_ISO_CON3_WDT0_ISO_CTRL_MASK            (0x1U << GRF_PMU_MCU_ISO_CON3_WDT0_ISO_CTRL_SHIFT)           /* 0x00000001 */
#define GRF_PMU_MCU_ISO_CON3_WDT1_ISO_CTRL_SHIFT           (1U)
#define GRF_PMU_MCU_ISO_CON3_WDT1_ISO_CTRL_MASK            (0x1U << GRF_PMU_MCU_ISO_CON3_WDT1_ISO_CTRL_SHIFT)           /* 0x00000002 */
#define GRF_PMU_MCU_ISO_CON3_INTMUX_ISO_CTRL_SHIFT         (3U)
#define GRF_PMU_MCU_ISO_CON3_INTMUX_ISO_CTRL_MASK          (0x1U << GRF_PMU_MCU_ISO_CON3_INTMUX_ISO_CTRL_SHIFT)         /* 0x00000008 */
#define GRF_PMU_MCU_ISO_CON3_USBPHY_ISO_CTRL_SHIFT         (4U)
#define GRF_PMU_MCU_ISO_CON3_USBPHY_ISO_CTRL_MASK          (0x1U << GRF_PMU_MCU_ISO_CON3_USBPHY_ISO_CTRL_SHIFT)         /* 0x00000010 */
#define GRF_PMU_MCU_ISO_CON3_NS_CRYPTO_ISO_CTRL_SHIFT      (5U)
#define GRF_PMU_MCU_ISO_CON3_NS_CRYPTO_ISO_CTRL_MASK       (0x1U << GRF_PMU_MCU_ISO_CON3_NS_CRYPTO_ISO_CTRL_SHIFT)      /* 0x00000020 */
#define GRF_PMU_MCU_ISO_CON3_NS_TRNG_ISO_CTRL_SHIFT        (6U)
#define GRF_PMU_MCU_ISO_CON3_NS_TRNG_ISO_CTRL_MASK         (0x1U << GRF_PMU_MCU_ISO_CON3_NS_TRNG_ISO_CTRL_SHIFT)        /* 0x00000040 */
#define GRF_PMU_MCU_ISO_CON3_USB2OTG0_ISO_CTRL_SHIFT       (7U)
#define GRF_PMU_MCU_ISO_CON3_USB2OTG0_ISO_CTRL_MASK        (0x1U << GRF_PMU_MCU_ISO_CON3_USB2OTG0_ISO_CTRL_SHIFT)       /* 0x00000080 */
#define GRF_PMU_MCU_ISO_CON3_USB2OTG1_ISO_CTRL_SHIFT       (8U)
#define GRF_PMU_MCU_ISO_CON3_USB2OTG1_ISO_CTRL_MASK        (0x1U << GRF_PMU_MCU_ISO_CON3_USB2OTG1_ISO_CTRL_SHIFT)       /* 0x00000100 */
#define GRF_PMU_MCU_ISO_CON3_DDRPHY_ISO_CTRL_SHIFT         (9U)
#define GRF_PMU_MCU_ISO_CON3_DDRPHY_ISO_CTRL_MASK          (0x1U << GRF_PMU_MCU_ISO_CON3_DDRPHY_ISO_CTRL_SHIFT)         /* 0x00000200 */
#define GRF_PMU_MCU_ISO_CON3_BOOTROM_ISO_CTRL_SHIFT        (10U)
#define GRF_PMU_MCU_ISO_CON3_BOOTROM_ISO_CTRL_MASK         (0x1U << GRF_PMU_MCU_ISO_CON3_BOOTROM_ISO_CTRL_SHIFT)        /* 0x00000400 */
#define GRF_PMU_MCU_ISO_CON3_SECURE_CRYPTO_ISO_CTRL_SHIFT  (11U)
#define GRF_PMU_MCU_ISO_CON3_SECURE_CRYPTO_ISO_CTRL_MASK   (0x1U << GRF_PMU_MCU_ISO_CON3_SECURE_CRYPTO_ISO_CTRL_SHIFT)  /* 0x00000800 */
#define GRF_PMU_MCU_ISO_CON3_SECURE_KEYLADDER_ISO_CTRL_SHIFT (12U)
#define GRF_PMU_MCU_ISO_CON3_SECURE_KEYLADDER_ISO_CTRL_MASK (0x1U << GRF_PMU_MCU_ISO_CON3_SECURE_KEYLADDER_ISO_CTRL_SHIFT) /* 0x00001000 */
#define GRF_PMU_MCU_ISO_CON3_SECURE_TRNG_ISO_CTRL_SHIFT    (13U)
#define GRF_PMU_MCU_ISO_CON3_SECURE_TRNG_ISO_CTRL_MASK     (0x1U << GRF_PMU_MCU_ISO_CON3_SECURE_TRNG_ISO_CTRL_SHIFT)    /* 0x00002000 */
#define GRF_PMU_MCU_ISO_CON3_DMA2DDR_ISO_CTRL_SHIFT        (14U)
#define GRF_PMU_MCU_ISO_CON3_DMA2DDR_ISO_CTRL_MASK         (0x1U << GRF_PMU_MCU_ISO_CON3_DMA2DDR_ISO_CTRL_SHIFT)        /* 0x00004000 */
/* MCU_ISO_CON4 */
#define GRF_PMU_MCU_ISO_CON4_OFFSET                        (0x1010U)
#define GRF_PMU_MCU_ISO_CON4_SPINLOCK_ISO_CTRL_SHIFT       (0U)
#define GRF_PMU_MCU_ISO_CON4_SPINLOCK_ISO_CTRL_MASK        (0xFU << GRF_PMU_MCU_ISO_CON4_SPINLOCK_ISO_CTRL_SHIFT)       /* 0x0000000F */
#define GRF_PMU_MCU_ISO_CON4_I2C0_ISO_CTRL_SHIFT           (6U)
#define GRF_PMU_MCU_ISO_CON4_I2C0_ISO_CTRL_MASK            (0x1U << GRF_PMU_MCU_ISO_CON4_I2C0_ISO_CTRL_SHIFT)           /* 0x00000040 */
#define GRF_PMU_MCU_ISO_CON4_I2C1_ISO_CTRL_SHIFT           (7U)
#define GRF_PMU_MCU_ISO_CON4_I2C1_ISO_CTRL_MASK            (0x1U << GRF_PMU_MCU_ISO_CON4_I2C1_ISO_CTRL_SHIFT)           /* 0x00000080 */
#define GRF_PMU_MCU_ISO_CON4_I2C2_ISO_CTRL_SHIFT           (8U)
#define GRF_PMU_MCU_ISO_CON4_I2C2_ISO_CTRL_MASK            (0x1U << GRF_PMU_MCU_ISO_CON4_I2C2_ISO_CTRL_SHIFT)           /* 0x00000100 */
#define GRF_PMU_MCU_ISO_CON4_SPI0_ISO_CTRL_SHIFT           (9U)
#define GRF_PMU_MCU_ISO_CON4_SPI0_ISO_CTRL_MASK            (0x1U << GRF_PMU_MCU_ISO_CON4_SPI0_ISO_CTRL_SHIFT)           /* 0x00000200 */
#define GRF_PMU_MCU_ISO_CON4_SPI1_ISO_CTRL_SHIFT           (10U)
#define GRF_PMU_MCU_ISO_CON4_SPI1_ISO_CTRL_MASK            (0x1U << GRF_PMU_MCU_ISO_CON4_SPI1_ISO_CTRL_SHIFT)           /* 0x00000400 */
#define GRF_PMU_MCU_ISO_CON4_UART0_ISO_CTRL_SHIFT          (11U)
#define GRF_PMU_MCU_ISO_CON4_UART0_ISO_CTRL_MASK           (0x1U << GRF_PMU_MCU_ISO_CON4_UART0_ISO_CTRL_SHIFT)          /* 0x00000800 */
#define GRF_PMU_MCU_ISO_CON4_UART1_ISO_CTRL_SHIFT          (12U)
#define GRF_PMU_MCU_ISO_CON4_UART1_ISO_CTRL_MASK           (0x1U << GRF_PMU_MCU_ISO_CON4_UART1_ISO_CTRL_SHIFT)          /* 0x00001000 */
#define GRF_PMU_MCU_ISO_CON4_UART2_ISO_CTRL_SHIFT          (13U)
#define GRF_PMU_MCU_ISO_CON4_UART2_ISO_CTRL_MASK           (0x1U << GRF_PMU_MCU_ISO_CON4_UART2_ISO_CTRL_SHIFT)          /* 0x00002000 */
#define GRF_PMU_MCU_ISO_CON4_UART3_ISO_CTRL_SHIFT          (14U)
#define GRF_PMU_MCU_ISO_CON4_UART3_ISO_CTRL_MASK           (0x1U << GRF_PMU_MCU_ISO_CON4_UART3_ISO_CTRL_SHIFT)          /* 0x00004000 */
#define GRF_PMU_MCU_ISO_CON4_UART4_ISO_CTRL_SHIFT          (15U)
#define GRF_PMU_MCU_ISO_CON4_UART4_ISO_CTRL_MASK           (0x1U << GRF_PMU_MCU_ISO_CON4_UART4_ISO_CTRL_SHIFT)          /* 0x00008000 */
/* MCU_ISO_CON5 */
#define GRF_PMU_MCU_ISO_CON5_OFFSET                        (0x1014U)
#define GRF_PMU_MCU_ISO_CON5_PWM1_ISO_CTRL_SHIFT           (0U)
#define GRF_PMU_MCU_ISO_CON5_PWM1_ISO_CTRL_MASK            (0xFFU << GRF_PMU_MCU_ISO_CON5_PWM1_ISO_CTRL_SHIFT)          /* 0x000000FF */
#define GRF_PMU_MCU_ISO_CON5_GPIO2_ISO_CTRL_SHIFT          (8U)
#define GRF_PMU_MCU_ISO_CON5_GPIO2_ISO_CTRL_MASK           (0xFU << GRF_PMU_MCU_ISO_CON5_GPIO2_ISO_CTRL_SHIFT)          /* 0x00000F00 */
#define GRF_PMU_MCU_ISO_CON5_GPIO3_ISO_CTRL_SHIFT          (12U)
#define GRF_PMU_MCU_ISO_CON5_GPIO3_ISO_CTRL_MASK           (0xFU << GRF_PMU_MCU_ISO_CON5_GPIO3_ISO_CTRL_SHIFT)          /* 0x0000F000 */
/* MCU_ISO_CON6 */
#define GRF_PMU_MCU_ISO_CON6_OFFSET                        (0x1018U)
#define GRF_PMU_MCU_ISO_CON6_GPIO4_ISO_CTRL_SHIFT          (0U)
#define GRF_PMU_MCU_ISO_CON6_GPIO4_ISO_CTRL_MASK           (0xFU << GRF_PMU_MCU_ISO_CON6_GPIO4_ISO_CTRL_SHIFT)          /* 0x0000000F */
#define GRF_PMU_MCU_ISO_CON6_ASRC0_ISO_CTRL_SHIFT          (4U)
#define GRF_PMU_MCU_ISO_CON6_ASRC0_ISO_CTRL_MASK           (0x1U << GRF_PMU_MCU_ISO_CON6_ASRC0_ISO_CTRL_SHIFT)          /* 0x00000010 */
#define GRF_PMU_MCU_ISO_CON6_ASRC1_ISO_CTRL_SHIFT          (5U)
#define GRF_PMU_MCU_ISO_CON6_ASRC1_ISO_CTRL_MASK           (0x1U << GRF_PMU_MCU_ISO_CON6_ASRC1_ISO_CTRL_SHIFT)          /* 0x00000020 */
#define GRF_PMU_MCU_ISO_CON6_SAI0_ISO_CTRL_SHIFT           (6U)
#define GRF_PMU_MCU_ISO_CON6_SAI0_ISO_CTRL_MASK            (0x1U << GRF_PMU_MCU_ISO_CON6_SAI0_ISO_CTRL_SHIFT)           /* 0x00000040 */
#define GRF_PMU_MCU_ISO_CON6_SAI1_ISO_CTRL_SHIFT           (7U)
#define GRF_PMU_MCU_ISO_CON6_SAI1_ISO_CTRL_MASK            (0x1U << GRF_PMU_MCU_ISO_CON6_SAI1_ISO_CTRL_SHIFT)           /* 0x00000080 */
#define GRF_PMU_MCU_ISO_CON6_CAN0_ISO_CTRL_SHIFT           (8U)
#define GRF_PMU_MCU_ISO_CON6_CAN0_ISO_CTRL_MASK            (0x1U << GRF_PMU_MCU_ISO_CON6_CAN0_ISO_CTRL_SHIFT)           /* 0x00000100 */
#define GRF_PMU_MCU_ISO_CON6_CAN1_ISO_CTRL_SHIFT           (9U)
#define GRF_PMU_MCU_ISO_CON6_CAN1_ISO_CTRL_MASK            (0x1U << GRF_PMU_MCU_ISO_CON6_CAN1_ISO_CTRL_SHIFT)           /* 0x00000200 */
#define GRF_PMU_MCU_ISO_CON6_PDM_ISO_CTRL_SHIFT            (10U)
#define GRF_PMU_MCU_ISO_CON6_PDM_ISO_CTRL_MASK             (0x1U << GRF_PMU_MCU_ISO_CON6_PDM_ISO_CTRL_SHIFT)            /* 0x00000400 */
#define GRF_PMU_MCU_ISO_CON6_SPDIF_TX_ISO_CTRL_SHIFT       (11U)
#define GRF_PMU_MCU_ISO_CON6_SPDIF_TX_ISO_CTRL_MASK        (0x1U << GRF_PMU_MCU_ISO_CON6_SPDIF_TX_ISO_CTRL_SHIFT)       /* 0x00000800 */
#define GRF_PMU_MCU_ISO_CON6_SPDIF_RX_ISO_CTRL_SHIFT       (12U)
#define GRF_PMU_MCU_ISO_CON6_SPDIF_RX_ISO_CTRL_MASK        (0x1U << GRF_PMU_MCU_ISO_CON6_SPDIF_RX_ISO_CTRL_SHIFT)       /* 0x00001000 */
#define GRF_PMU_MCU_ISO_CON6_DSI_ISO_CTRL_SHIFT            (13U)
#define GRF_PMU_MCU_ISO_CON6_DSI_ISO_CTRL_MASK             (0x1U << GRF_PMU_MCU_ISO_CON6_DSI_ISO_CTRL_SHIFT)            /* 0x00002000 */
#define GRF_PMU_MCU_ISO_CON6_DPHY_ISO_CTRL_SHIFT           (14U)
#define GRF_PMU_MCU_ISO_CON6_DPHY_ISO_CTRL_MASK            (0x1U << GRF_PMU_MCU_ISO_CON6_DPHY_ISO_CTRL_SHIFT)           /* 0x00004000 */
#define GRF_PMU_MCU_ISO_CON6_GPIO1_IOC_ISO_CTRL_SHIFT      (15U)
#define GRF_PMU_MCU_ISO_CON6_GPIO1_IOC_ISO_CTRL_MASK       (0x1U << GRF_PMU_MCU_ISO_CON6_GPIO1_IOC_ISO_CTRL_SHIFT)      /* 0x00008000 */
/* MCU_ISO_CON7 */
#define GRF_PMU_MCU_ISO_CON7_OFFSET                        (0x101CU)
#define GRF_PMU_MCU_ISO_CON7_TSADC_ISO_CTRL_SHIFT          (0U)
#define GRF_PMU_MCU_ISO_CON7_TSADC_ISO_CTRL_MASK           (0x1U << GRF_PMU_MCU_ISO_CON7_TSADC_ISO_CTRL_SHIFT)          /* 0x00000001 */
#define GRF_PMU_MCU_ISO_CON7_RGA_ISO_CTRL_SHIFT            (1U)
#define GRF_PMU_MCU_ISO_CON7_RGA_ISO_CTRL_MASK             (0x1U << GRF_PMU_MCU_ISO_CON7_RGA_ISO_CTRL_SHIFT)            /* 0x00000002 */
#define GRF_PMU_MCU_ISO_CON7_VOP_ISO_CTRL_SHIFT            (2U)
#define GRF_PMU_MCU_ISO_CON7_VOP_ISO_CTRL_MASK             (0x1U << GRF_PMU_MCU_ISO_CON7_VOP_ISO_CTRL_SHIFT)            /* 0x00000004 */
#define GRF_PMU_MCU_ISO_CON7_SECURE_OTPC_ISO_CTRL_SHIFT    (3U)
#define GRF_PMU_MCU_ISO_CON7_SECURE_OTPC_ISO_CTRL_MASK     (0x1U << GRF_PMU_MCU_ISO_CON7_SECURE_OTPC_ISO_CTRL_SHIFT)    /* 0x00000008 */
#define GRF_PMU_MCU_ISO_CON7_SECURE_OTPC_MASK_ISO_CTRL_SHIFT (4U)
#define GRF_PMU_MCU_ISO_CON7_SECURE_OTPC_MASK_ISO_CTRL_MASK (0x1U << GRF_PMU_MCU_ISO_CON7_SECURE_OTPC_MASK_ISO_CTRL_SHIFT) /* 0x00000010 */
#define GRF_PMU_MCU_ISO_CON7_SECURE_KEYREADER_ISO_CTRL_SHIFT (5U)
#define GRF_PMU_MCU_ISO_CON7_SECURE_KEYREADER_ISO_CTRL_MASK (0x1U << GRF_PMU_MCU_ISO_CON7_SECURE_KEYREADER_ISO_CTRL_SHIFT) /* 0x00000020 */
#define GRF_PMU_MCU_ISO_CON7_MAC0_ISO_CTRL_SHIFT           (6U)
#define GRF_PMU_MCU_ISO_CON7_MAC0_ISO_CTRL_MASK            (0x1U << GRF_PMU_MCU_ISO_CON7_MAC0_ISO_CTRL_SHIFT)           /* 0x00000040 */
#define GRF_PMU_MCU_ISO_CON7_MAC1_ISO_CTRL_SHIFT           (7U)
#define GRF_PMU_MCU_ISO_CON7_MAC1_ISO_CTRL_MASK            (0x1U << GRF_PMU_MCU_ISO_CON7_MAC1_ISO_CTRL_SHIFT)           /* 0x00000080 */
#define GRF_PMU_MCU_ISO_CON7_SPI2_ISO_CTRL_SHIFT           (8U)
#define GRF_PMU_MCU_ISO_CON7_SPI2_ISO_CTRL_MASK            (0x1U << GRF_PMU_MCU_ISO_CON7_SPI2_ISO_CTRL_SHIFT)           /* 0x00000100 */
#define GRF_PMU_MCU_ISO_CON7_UART5_ISO_CTRL_SHIFT          (9U)
#define GRF_PMU_MCU_ISO_CON7_UART5_ISO_CTRL_MASK           (0x1U << GRF_PMU_MCU_ISO_CON7_UART5_ISO_CTRL_SHIFT)          /* 0x00000200 */
#define GRF_PMU_MCU_ISO_CON7_OTPC_NS_ISO_CTRL_SHIFT        (10U)
#define GRF_PMU_MCU_ISO_CON7_OTPC_NS_ISO_CTRL_MASK         (0x1U << GRF_PMU_MCU_ISO_CON7_OTPC_NS_ISO_CTRL_SHIFT)        /* 0x00000400 */
#define GRF_PMU_MCU_ISO_CON7_SARADC_ISO_CTRL_SHIFT         (11U)
#define GRF_PMU_MCU_ISO_CON7_SARADC_ISO_CTRL_MASK          (0x1U << GRF_PMU_MCU_ISO_CON7_SARADC_ISO_CTRL_SHIFT)         /* 0x00000800 */
#define GRF_PMU_MCU_ISO_CON7_GPIO234_IOC_ISO_CTRL_SHIFT    (12U)
#define GRF_PMU_MCU_ISO_CON7_GPIO234_IOC_ISO_CTRL_MASK     (0x1U << GRF_PMU_MCU_ISO_CON7_GPIO234_IOC_ISO_CTRL_SHIFT)    /* 0x00001000 */
#define GRF_PMU_MCU_ISO_CON7_AUDIO_ADC_ISO_CTRL_SHIFT      (13U)
#define GRF_PMU_MCU_ISO_CON7_AUDIO_ADC_ISO_CTRL_MASK       (0x1U << GRF_PMU_MCU_ISO_CON7_AUDIO_ADC_ISO_CTRL_SHIFT)      /* 0x00002000 */
#define GRF_PMU_MCU_ISO_CON7_SDMMC_ISO_CTRL_SHIFT          (14U)
#define GRF_PMU_MCU_ISO_CON7_SDMMC_ISO_CTRL_MASK           (0x1U << GRF_PMU_MCU_ISO_CON7_SDMMC_ISO_CTRL_SHIFT)          /* 0x00004000 */
#define GRF_PMU_MCU_ISO_CON7_FSPI_ISO_CTRL_SHIFT           (15U)
#define GRF_PMU_MCU_ISO_CON7_FSPI_ISO_CTRL_MASK            (0x1U << GRF_PMU_MCU_ISO_CON7_FSPI_ISO_CTRL_SHIFT)           /* 0x00008000 */
/* MCU_ISO_CON8 */
#define GRF_PMU_MCU_ISO_CON8_OFFSET                        (0x1020U)
#define GRF_PMU_MCU_ISO_CON8_SAI2_ISO_CTRL_SHIFT           (0U)
#define GRF_PMU_MCU_ISO_CON8_SAI2_ISO_CTRL_MASK            (0x1U << GRF_PMU_MCU_ISO_CON8_SAI2_ISO_CTRL_SHIFT)           /* 0x00000001 */
#define GRF_PMU_MCU_ISO_CON8_SAI3_ISO_CTRL_SHIFT           (1U)
#define GRF_PMU_MCU_ISO_CON8_SAI3_ISO_CTRL_MASK            (0x1U << GRF_PMU_MCU_ISO_CON8_SAI3_ISO_CTRL_SHIFT)           /* 0x00000002 */
#define GRF_PMU_MCU_ISO_CON8_SAI4_ISO_CTRL_SHIFT           (2U)
#define GRF_PMU_MCU_ISO_CON8_SAI4_ISO_CTRL_MASK            (0x1U << GRF_PMU_MCU_ISO_CON8_SAI4_ISO_CTRL_SHIFT)           /* 0x00000004 */
#define GRF_PMU_MCU_ISO_CON8_AUDIO_DSM_ISO_CTRL_SHIFT      (3U)
#define GRF_PMU_MCU_ISO_CON8_AUDIO_DSM_ISO_CTRL_MASK       (0x1U << GRF_PMU_MCU_ISO_CON8_AUDIO_DSM_ISO_CTRL_SHIFT)      /* 0x00000008 */
#define GRF_PMU_MCU_ISO_CON8_PMU_ISO_CTRL_SHIFT            (4U)
#define GRF_PMU_MCU_ISO_CON8_PMU_ISO_CTRL_MASK             (0x1U << GRF_PMU_MCU_ISO_CON8_PMU_ISO_CTRL_SHIFT)            /* 0x00000010 */
#define GRF_PMU_MCU_ISO_CON8_CRU_PMU_ISO_CTRL_SHIFT        (5U)
#define GRF_PMU_MCU_ISO_CON8_CRU_PMU_ISO_CTRL_MASK         (0x1U << GRF_PMU_MCU_ISO_CON8_CRU_PMU_ISO_CTRL_SHIFT)        /* 0x00000020 */
#define GRF_PMU_MCU_ISO_CON8_SECURE_CRU_PMU_ISO_CTRL_SHIFT (6U)
#define GRF_PMU_MCU_ISO_CON8_SECURE_CRU_PMU_ISO_CTRL_MASK  (0x1U << GRF_PMU_MCU_ISO_CON8_SECURE_CRU_PMU_ISO_CTRL_SHIFT) /* 0x00000040 */
#define GRF_PMU_MCU_ISO_CON8_GRF_PMU_ISO_CTRL_SHIFT        (7U)
#define GRF_PMU_MCU_ISO_CON8_GRF_PMU_ISO_CTRL_MASK         (0xFU << GRF_PMU_MCU_ISO_CON8_GRF_PMU_ISO_CTRL_SHIFT)        /* 0x00000780 */
#define GRF_PMU_MCU_ISO_CON8_SGRF_PMU_ISO_CTRL_SHIFT       (11U)
#define GRF_PMU_MCU_ISO_CON8_SGRF_PMU_ISO_CTRL_MASK        (0x1U << GRF_PMU_MCU_ISO_CON8_SGRF_PMU_ISO_CTRL_SHIFT)       /* 0x00000800 */
#define GRF_PMU_MCU_ISO_CON8_GPIO0_ISO_CTRL_SHIFT          (12U)
#define GRF_PMU_MCU_ISO_CON8_GPIO0_ISO_CTRL_MASK           (0xFU << GRF_PMU_MCU_ISO_CON8_GPIO0_ISO_CTRL_SHIFT)          /* 0x0000F000 */
/* MCU_ISO_CON9 */
#define GRF_PMU_MCU_ISO_CON9_OFFSET                        (0x1024U)
#define GRF_PMU_MCU_ISO_CON9_GPIO1_SHADOW_ISO_CTRL_SHIFT   (0U)
#define GRF_PMU_MCU_ISO_CON9_GPIO1_SHADOW_ISO_CTRL_MASK    (0xFU << GRF_PMU_MCU_ISO_CON9_GPIO1_SHADOW_ISO_CTRL_SHIFT)   /* 0x0000000F */
#define GRF_PMU_MCU_ISO_CON9_HPTIMER_ISO_CTRL_SHIFT        (4U)
#define GRF_PMU_MCU_ISO_CON9_HPTIMER_ISO_CTRL_MASK         (0x1U << GRF_PMU_MCU_ISO_CON9_HPTIMER_ISO_CTRL_SHIFT)        /* 0x00000010 */
#define GRF_PMU_MCU_ISO_CON9_PWM0_ISO_CTRL_SHIFT           (5U)
#define GRF_PMU_MCU_ISO_CON9_PWM0_ISO_CTRL_MASK            (0xFU << GRF_PMU_MCU_ISO_CON9_PWM0_ISO_CTRL_SHIFT)           /* 0x000001E0 */
#define GRF_PMU_MCU_ISO_CON9_TOUCHKEY_ISO_CTRL_SHIFT       (9U)
#define GRF_PMU_MCU_ISO_CON9_TOUCHKEY_ISO_CTRL_MASK        (0x1U << GRF_PMU_MCU_ISO_CON9_TOUCHKEY_ISO_CTRL_SHIFT)       /* 0x00000200 */
#define GRF_PMU_MCU_ISO_CON9_GPIO0_IOC_ISO_CTRL_SHIFT      (10U)
#define GRF_PMU_MCU_ISO_CON9_GPIO0_IOC_ISO_CTRL_MASK       (0x1U << GRF_PMU_MCU_ISO_CON9_GPIO0_IOC_ISO_CTRL_SHIFT)      /* 0x00000400 */
#define GRF_PMU_MCU_ISO_CON9_CRU_ISO_CTRL_SHIFT            (11U)
#define GRF_PMU_MCU_ISO_CON9_CRU_ISO_CTRL_MASK             (0x1U << GRF_PMU_MCU_ISO_CON9_CRU_ISO_CTRL_SHIFT)            /* 0x00000800 */
#define GRF_PMU_MCU_ISO_CON9_SECURE_CRU_ISO_CTRL_SHIFT     (12U)
#define GRF_PMU_MCU_ISO_CON9_SECURE_CRU_ISO_CTRL_MASK      (0x1U << GRF_PMU_MCU_ISO_CON9_SECURE_CRU_ISO_CTRL_SHIFT)     /* 0x00001000 */
/* MCU_ISO_CON10 */
#define GRF_PMU_MCU_ISO_CON10_OFFSET                       (0x1028U)
#define GRF_PMU_MCU_ISO_CON10_NOCSRV_CPU_ISO_CTRL_SHIFT    (0U)
#define GRF_PMU_MCU_ISO_CON10_NOCSRV_CPU_ISO_CTRL_MASK     (0x1U << GRF_PMU_MCU_ISO_CON10_NOCSRV_CPU_ISO_CTRL_SHIFT)    /* 0x00000001 */
#define GRF_PMU_MCU_ISO_CON10_NOCSRV_CPUP_ISO_CTRL_SHIFT   (1U)
#define GRF_PMU_MCU_ISO_CON10_NOCSRV_CPUP_ISO_CTRL_MASK    (0x1U << GRF_PMU_MCU_ISO_CON10_NOCSRV_CPUP_ISO_CTRL_SHIFT)   /* 0x00000002 */
#define GRF_PMU_MCU_ISO_CON10_NOCSRV_BUS_ISO_CTRL_SHIFT    (2U)
#define GRF_PMU_MCU_ISO_CON10_NOCSRV_BUS_ISO_CTRL_MASK     (0x1U << GRF_PMU_MCU_ISO_CON10_NOCSRV_BUS_ISO_CTRL_SHIFT)    /* 0x00000004 */
#define GRF_PMU_MCU_ISO_CON10_NOCSRV_HSPERI_ISO_CTRL_SHIFT (3U)
#define GRF_PMU_MCU_ISO_CON10_NOCSRV_HSPERI_ISO_CTRL_MASK  (0x1U << GRF_PMU_MCU_ISO_CON10_NOCSRV_HSPERI_ISO_CTRL_SHIFT) /* 0x00000008 */
#define GRF_PMU_MCU_ISO_CON10_NOCSRV_VIO_ISO_CTRL_SHIFT    (4U)
#define GRF_PMU_MCU_ISO_CON10_NOCSRV_VIO_ISO_CTRL_MASK     (0x1U << GRF_PMU_MCU_ISO_CON10_NOCSRV_VIO_ISO_CTRL_SHIFT)    /* 0x00000010 */
#define GRF_PMU_MCU_ISO_CON10_NOCSRV_DDR_ISO_CTRL_SHIFT    (5U)
#define GRF_PMU_MCU_ISO_CON10_NOCSRV_DDR_ISO_CTRL_MASK     (0x1U << GRF_PMU_MCU_ISO_CON10_NOCSRV_DDR_ISO_CTRL_SHIFT)    /* 0x00000020 */
#define GRF_PMU_MCU_ISO_CON10_NOCSRV_FIREWALL_ISO_CTRL_SHIFT (6U)
#define GRF_PMU_MCU_ISO_CON10_NOCSRV_FIREWALL_ISO_CTRL_MASK (0x1U << GRF_PMU_MCU_ISO_CON10_NOCSRV_FIREWALL_ISO_CTRL_SHIFT) /* 0x00000040 */
/* MCU_ISO_CON11 */
#define GRF_PMU_MCU_ISO_CON11_OFFSET                       (0x102CU)
#define GRF_PMU_MCU_ISO_CON11_SYSRAM_ISO_CTRL_SHIFT        (0U)
#define GRF_PMU_MCU_ISO_CON11_SYSRAM_ISO_CTRL_MASK         (0xFFFU << GRF_PMU_MCU_ISO_CON11_SYSRAM_ISO_CTRL_SHIFT)      /* 0x00000FFF */
/* MCU_ISO_DDR_CON0 */
#define GRF_PMU_MCU_ISO_DDR_CON0_OFFSET                    (0x1400U)
#define GRF_PMU_MCU_ISO_DDR_CON0_CPU_DDR_ISO_CTRL_SHIFT    (0U)
#define GRF_PMU_MCU_ISO_DDR_CON0_CPU_DDR_ISO_CTRL_MASK     (0x1U << GRF_PMU_MCU_ISO_DDR_CON0_CPU_DDR_ISO_CTRL_SHIFT)    /* 0x00000001 */
#define GRF_PMU_MCU_ISO_DDR_CON0_FLEXBUS_DDR_ISO_CTRL_SHIFT (1U)
#define GRF_PMU_MCU_ISO_DDR_CON0_FLEXBUS_DDR_ISO_CTRL_MASK (0x1U << GRF_PMU_MCU_ISO_DDR_CON0_FLEXBUS_DDR_ISO_CTRL_SHIFT) /* 0x00000002 */
#define GRF_PMU_MCU_ISO_DDR_CON0_CRYPTO_DDR_ISO_CTRL_SHIFT (2U)
#define GRF_PMU_MCU_ISO_DDR_CON0_CRYPTO_DDR_ISO_CTRL_MASK  (0x1U << GRF_PMU_MCU_ISO_DDR_CON0_CRYPTO_DDR_ISO_CTRL_SHIFT) /* 0x00000004 */
#define GRF_PMU_MCU_ISO_DDR_CON0_DMAC0_DDR_ISO_CTRL_SHIFT  (3U)
#define GRF_PMU_MCU_ISO_DDR_CON0_DMAC0_DDR_ISO_CTRL_MASK   (0x1U << GRF_PMU_MCU_ISO_DDR_CON0_DMAC0_DDR_ISO_CTRL_SHIFT)  /* 0x00000008 */
#define GRF_PMU_MCU_ISO_DDR_CON0_DMAC1_DDR_ISO_CTRL_SHIFT  (4U)
#define GRF_PMU_MCU_ISO_DDR_CON0_DMAC1_DDR_ISO_CTRL_MASK   (0x1U << GRF_PMU_MCU_ISO_DDR_CON0_DMAC1_DDR_ISO_CTRL_SHIFT)  /* 0x00000010 */
#define GRF_PMU_MCU_ISO_DDR_CON0_SDMMC_DDR_ISO_CTRL_SHIFT  (5U)
#define GRF_PMU_MCU_ISO_DDR_CON0_SDMMC_DDR_ISO_CTRL_MASK   (0x1U << GRF_PMU_MCU_ISO_DDR_CON0_SDMMC_DDR_ISO_CTRL_SHIFT)  /* 0x00000020 */
#define GRF_PMU_MCU_ISO_DDR_CON0_FPSI_DDR_ISO_CTRL_SHIFT   (6U)
#define GRF_PMU_MCU_ISO_DDR_CON0_FPSI_DDR_ISO_CTRL_MASK    (0x1U << GRF_PMU_MCU_ISO_DDR_CON0_FPSI_DDR_ISO_CTRL_SHIFT)   /* 0x00000040 */
#define GRF_PMU_MCU_ISO_DDR_CON0_MAC0_DDR_ISO_CTRL_SHIFT   (7U)
#define GRF_PMU_MCU_ISO_DDR_CON0_MAC0_DDR_ISO_CTRL_MASK    (0x1U << GRF_PMU_MCU_ISO_DDR_CON0_MAC0_DDR_ISO_CTRL_SHIFT)   /* 0x00000080 */
#define GRF_PMU_MCU_ISO_DDR_CON0_MAC1_DDR_ISO_CTRL_SHIFT   (8U)
#define GRF_PMU_MCU_ISO_DDR_CON0_MAC1_DDR_ISO_CTRL_MASK    (0x1U << GRF_PMU_MCU_ISO_DDR_CON0_MAC1_DDR_ISO_CTRL_SHIFT)   /* 0x00000100 */
#define GRF_PMU_MCU_ISO_DDR_CON0_MCU_DDR_ISO_CTRL_SHIFT    (9U)
#define GRF_PMU_MCU_ISO_DDR_CON0_MCU_DDR_ISO_CTRL_MASK     (0x1U << GRF_PMU_MCU_ISO_DDR_CON0_MCU_DDR_ISO_CTRL_SHIFT)    /* 0x00000200 */
#define GRF_PMU_MCU_ISO_DDR_CON0_DMA2DDR_DDR_ISO_CTRL_SHIFT (10U)
#define GRF_PMU_MCU_ISO_DDR_CON0_DMA2DDR_DDR_ISO_CTRL_MASK (0x1U << GRF_PMU_MCU_ISO_DDR_CON0_DMA2DDR_DDR_ISO_CTRL_SHIFT) /* 0x00000400 */
#define GRF_PMU_MCU_ISO_DDR_CON0_RGA_RD_DDR_ISO_CTRL_SHIFT (11U)
#define GRF_PMU_MCU_ISO_DDR_CON0_RGA_RD_DDR_ISO_CTRL_MASK  (0x1U << GRF_PMU_MCU_ISO_DDR_CON0_RGA_RD_DDR_ISO_CTRL_SHIFT) /* 0x00000800 */
#define GRF_PMU_MCU_ISO_DDR_CON0_RGA_WR_DDR_ISO_CTRL_SHIFT (12U)
#define GRF_PMU_MCU_ISO_DDR_CON0_RGA_WR_DDR_ISO_CTRL_MASK  (0x1U << GRF_PMU_MCU_ISO_DDR_CON0_RGA_WR_DDR_ISO_CTRL_SHIFT) /* 0x00001000 */
#define GRF_PMU_MCU_ISO_DDR_CON0_SPI2_DDR_ISO_CTRL_SHIFT   (13U)
#define GRF_PMU_MCU_ISO_DDR_CON0_SPI2_DDR_ISO_CTRL_MASK    (0x1U << GRF_PMU_MCU_ISO_DDR_CON0_SPI2_DDR_ISO_CTRL_SHIFT)   /* 0x00002000 */
#define GRF_PMU_MCU_ISO_DDR_CON0_USB2OTG0_DDR_ISO_CTRL_SHIFT (14U)
#define GRF_PMU_MCU_ISO_DDR_CON0_USB2OTG0_DDR_ISO_CTRL_MASK (0x1U << GRF_PMU_MCU_ISO_DDR_CON0_USB2OTG0_DDR_ISO_CTRL_SHIFT) /* 0x00004000 */
#define GRF_PMU_MCU_ISO_DDR_CON0_USB2OTG1_DDR_ISO_CTRL_SHIFT (15U)
#define GRF_PMU_MCU_ISO_DDR_CON0_USB2OTG1_DDR_ISO_CTRL_MASK (0x1U << GRF_PMU_MCU_ISO_DDR_CON0_USB2OTG1_DDR_ISO_CTRL_SHIFT) /* 0x00008000 */
/* MCU_ISO_DDR_CON1 */
#define GRF_PMU_MCU_ISO_DDR_CON1_OFFSET                    (0x1404U)
#define GRF_PMU_MCU_ISO_DDR_CON1_VOP_DDR_ISO_CTRL_SHIFT    (0U)
#define GRF_PMU_MCU_ISO_DDR_CON1_VOP_DDR_ISO_CTRL_MASK     (0x1U << GRF_PMU_MCU_ISO_DDR_CON1_VOP_DDR_ISO_CTRL_SHIFT)    /* 0x00000001 */
/* MCU_ISO_LOCK */
#define GRF_PMU_MCU_ISO_LOCK_OFFSET                        (0x1500U)
#define GRF_PMU_MCU_ISO_LOCK_MCU_ISO_LOCK_SHIFT            (0U)
#define GRF_PMU_MCU_ISO_LOCK_MCU_ISO_LOCK_MASK             (0x1U << GRF_PMU_MCU_ISO_LOCK_MCU_ISO_LOCK_SHIFT)            /* 0x00000001 */
/* CPU_ISO_CON0 */
#define GRF_PMU_CPU_ISO_CON0_OFFSET                        (0x2000U)
#define GRF_PMU_CPU_ISO_CON0_A7DBG_ISO_CTRL_SHIFT          (0U)
#define GRF_PMU_CPU_ISO_CON0_A7DBG_ISO_CTRL_MASK           (0x1U << GRF_PMU_CPU_ISO_CON0_A7DBG_ISO_CTRL_SHIFT)          /* 0x00000001 */
#define GRF_PMU_CPU_ISO_CON0_GRF_CORE_ISO_CTRL_SHIFT       (1U)
#define GRF_PMU_CPU_ISO_CON0_GRF_CORE_ISO_CTRL_MASK        (0xFU << GRF_PMU_CPU_ISO_CON0_GRF_CORE_ISO_CTRL_SHIFT)       /* 0x0000001E */
#define GRF_PMU_CPU_ISO_CON0_GPIO1_ISO_CTRL_SHIFT          (5U)
#define GRF_PMU_CPU_ISO_CON0_GPIO1_ISO_CTRL_MASK           (0xFU << GRF_PMU_CPU_ISO_CON0_GPIO1_ISO_CTRL_SHIFT)          /* 0x000001E0 */
#define GRF_PMU_CPU_ISO_CON0_FLEXBUS_ISO_CTRL_SHIFT        (9U)
#define GRF_PMU_CPU_ISO_CON0_FLEXBUS_ISO_CTRL_MASK         (0x1U << GRF_PMU_CPU_ISO_CON0_FLEXBUS_ISO_CTRL_SHIFT)        /* 0x00000200 */
#define GRF_PMU_CPU_ISO_CON0_DSMC_ISO_CTRL_SHIFT           (11U)
#define GRF_PMU_CPU_ISO_CON0_DSMC_ISO_CTRL_MASK            (0x1U << GRF_PMU_CPU_ISO_CON0_DSMC_ISO_CTRL_SHIFT)           /* 0x00000800 */
#define GRF_PMU_CPU_ISO_CON0_DSMC_MEM_ISO_CTRL_SHIFT       (12U)
#define GRF_PMU_CPU_ISO_CON0_DSMC_MEM_ISO_CTRL_MASK        (0xFU << GRF_PMU_CPU_ISO_CON0_DSMC_MEM_ISO_CTRL_SHIFT)       /* 0x0000F000 */
/* CPU_ISO_CON1 */
#define GRF_PMU_CPU_ISO_CON1_OFFSET                        (0x2004U)
#define GRF_PMU_CPU_ISO_CON1_SECURE_DMAC0_ISO_CTRL_SHIFT   (0U)
#define GRF_PMU_CPU_ISO_CON1_SECURE_DMAC0_ISO_CTRL_MASK    (0x1U << GRF_PMU_CPU_ISO_CON1_SECURE_DMAC0_ISO_CTRL_SHIFT)   /* 0x00000001 */
#define GRF_PMU_CPU_ISO_CON1_SECURE_DMAC1_ISO_CTRL_SHIFT   (1U)
#define GRF_PMU_CPU_ISO_CON1_SECURE_DMAC1_ISO_CTRL_MASK    (0x1U << GRF_PMU_CPU_ISO_CON1_SECURE_DMAC1_ISO_CTRL_SHIFT)   /* 0x00000002 */
#define GRF_PMU_CPU_ISO_CON1_SGRF_BUS_ISO_CTRL_SHIFT       (2U)
#define GRF_PMU_CPU_ISO_CON1_SGRF_BUS_ISO_CTRL_MASK        (0x1U << GRF_PMU_CPU_ISO_CON1_SGRF_BUS_ISO_CTRL_SHIFT)       /* 0x00000004 */
#define GRF_PMU_CPU_ISO_CON1_DMAC0_ISO_CTRL_SHIFT          (3U)
#define GRF_PMU_CPU_ISO_CON1_DMAC0_ISO_CTRL_MASK           (0x1U << GRF_PMU_CPU_ISO_CON1_DMAC0_ISO_CTRL_SHIFT)          /* 0x00000008 */
#define GRF_PMU_CPU_ISO_CON1_DMAC1_ISO_CTRL_SHIFT          (4U)
#define GRF_PMU_CPU_ISO_CON1_DMAC1_ISO_CTRL_MASK           (0x1U << GRF_PMU_CPU_ISO_CON1_DMAC1_ISO_CTRL_SHIFT)          /* 0x00000010 */
#define GRF_PMU_CPU_ISO_CON1_DDRC_ISO_CTRL_SHIFT           (5U)
#define GRF_PMU_CPU_ISO_CON1_DDRC_ISO_CTRL_MASK            (0x1U << GRF_PMU_CPU_ISO_CON1_DDRC_ISO_CTRL_SHIFT)           /* 0x00000020 */
#define GRF_PMU_CPU_ISO_CON1_DDR_MONITOR_ISO_CTRL_SHIFT    (6U)
#define GRF_PMU_CPU_ISO_CON1_DDR_MONITOR_ISO_CTRL_MASK     (0x1U << GRF_PMU_CPU_ISO_CON1_DDR_MONITOR_ISO_CTRL_SHIFT)    /* 0x00000040 */
#define GRF_PMU_CPU_ISO_CON1_DDR_LPC_ISO_CTRL_SHIFT        (7U)
#define GRF_PMU_CPU_ISO_CON1_DDR_LPC_ISO_CTRL_MASK         (0x1U << GRF_PMU_CPU_ISO_CON1_DDR_LPC_ISO_CTRL_SHIFT)        /* 0x00000080 */
#define GRF_PMU_CPU_ISO_CON1_GRF_BUS_ISO_CTRL_SHIFT        (8U)
#define GRF_PMU_CPU_ISO_CON1_GRF_BUS_ISO_CTRL_MASK         (0xFU << GRF_PMU_CPU_ISO_CON1_GRF_BUS_ISO_CTRL_SHIFT)        /* 0x00000F00 */
#define GRF_PMU_CPU_ISO_CON1_MAILBOX_ISO_CTRL_SHIFT        (12U)
#define GRF_PMU_CPU_ISO_CON1_MAILBOX_ISO_CTRL_MASK         (0x1U << GRF_PMU_CPU_ISO_CON1_MAILBOX_ISO_CTRL_SHIFT)        /* 0x00001000 */
/* CPU_ISO_CON2 */
#define GRF_PMU_CPU_ISO_CON2_OFFSET                        (0x2008U)
#define GRF_PMU_CPU_ISO_CON2_TIMER0_ISO_CTRL_SHIFT         (0U)
#define GRF_PMU_CPU_ISO_CON2_TIMER0_ISO_CTRL_MASK          (0xFFU << GRF_PMU_CPU_ISO_CON2_TIMER0_ISO_CTRL_SHIFT)        /* 0x000000FF */
#define GRF_PMU_CPU_ISO_CON2_TIMER1_ISO_CTRL_SHIFT         (8U)
#define GRF_PMU_CPU_ISO_CON2_TIMER1_ISO_CTRL_MASK          (0xFFU << GRF_PMU_CPU_ISO_CON2_TIMER1_ISO_CTRL_SHIFT)        /* 0x0000FF00 */
/* CPU_ISO_CON3 */
#define GRF_PMU_CPU_ISO_CON3_OFFSET                        (0x200CU)
#define GRF_PMU_CPU_ISO_CON3_WDT0_ISO_CTRL_SHIFT           (0U)
#define GRF_PMU_CPU_ISO_CON3_WDT0_ISO_CTRL_MASK            (0x1U << GRF_PMU_CPU_ISO_CON3_WDT0_ISO_CTRL_SHIFT)           /* 0x00000001 */
#define GRF_PMU_CPU_ISO_CON3_WDT1_ISO_CTRL_SHIFT           (1U)
#define GRF_PMU_CPU_ISO_CON3_WDT1_ISO_CTRL_MASK            (0x1U << GRF_PMU_CPU_ISO_CON3_WDT1_ISO_CTRL_SHIFT)           /* 0x00000002 */
#define GRF_PMU_CPU_ISO_CON3_INTMUX_ISO_CTRL_SHIFT         (3U)
#define GRF_PMU_CPU_ISO_CON3_INTMUX_ISO_CTRL_MASK          (0x1U << GRF_PMU_CPU_ISO_CON3_INTMUX_ISO_CTRL_SHIFT)         /* 0x00000008 */
#define GRF_PMU_CPU_ISO_CON3_USBPHY_ISO_CTRL_SHIFT         (4U)
#define GRF_PMU_CPU_ISO_CON3_USBPHY_ISO_CTRL_MASK          (0x1U << GRF_PMU_CPU_ISO_CON3_USBPHY_ISO_CTRL_SHIFT)         /* 0x00000010 */
#define GRF_PMU_CPU_ISO_CON3_NS_CRYPTO_ISO_CTRL_SHIFT      (5U)
#define GRF_PMU_CPU_ISO_CON3_NS_CRYPTO_ISO_CTRL_MASK       (0x1U << GRF_PMU_CPU_ISO_CON3_NS_CRYPTO_ISO_CTRL_SHIFT)      /* 0x00000020 */
#define GRF_PMU_CPU_ISO_CON3_NS_TRNG_ISO_CTRL_SHIFT        (6U)
#define GRF_PMU_CPU_ISO_CON3_NS_TRNG_ISO_CTRL_MASK         (0x1U << GRF_PMU_CPU_ISO_CON3_NS_TRNG_ISO_CTRL_SHIFT)        /* 0x00000040 */
#define GRF_PMU_CPU_ISO_CON3_USB2OTG0_ISO_CTRL_SHIFT       (7U)
#define GRF_PMU_CPU_ISO_CON3_USB2OTG0_ISO_CTRL_MASK        (0x1U << GRF_PMU_CPU_ISO_CON3_USB2OTG0_ISO_CTRL_SHIFT)       /* 0x00000080 */
#define GRF_PMU_CPU_ISO_CON3_USB2OTG1_ISO_CTRL_SHIFT       (8U)
#define GRF_PMU_CPU_ISO_CON3_USB2OTG1_ISO_CTRL_MASK        (0x1U << GRF_PMU_CPU_ISO_CON3_USB2OTG1_ISO_CTRL_SHIFT)       /* 0x00000100 */
#define GRF_PMU_CPU_ISO_CON3_DDRPHY_ISO_CTRL_SHIFT         (9U)
#define GRF_PMU_CPU_ISO_CON3_DDRPHY_ISO_CTRL_MASK          (0x1U << GRF_PMU_CPU_ISO_CON3_DDRPHY_ISO_CTRL_SHIFT)         /* 0x00000200 */
#define GRF_PMU_CPU_ISO_CON3_BOOTROM_ISO_CTRL_SHIFT        (10U)
#define GRF_PMU_CPU_ISO_CON3_BOOTROM_ISO_CTRL_MASK         (0x1U << GRF_PMU_CPU_ISO_CON3_BOOTROM_ISO_CTRL_SHIFT)        /* 0x00000400 */
#define GRF_PMU_CPU_ISO_CON3_SECURE_CRYPTO_ISO_CTRL_SHIFT  (11U)
#define GRF_PMU_CPU_ISO_CON3_SECURE_CRYPTO_ISO_CTRL_MASK   (0x1U << GRF_PMU_CPU_ISO_CON3_SECURE_CRYPTO_ISO_CTRL_SHIFT)  /* 0x00000800 */
#define GRF_PMU_CPU_ISO_CON3_SECURE_KEYLADDER_ISO_CTRL_SHIFT (12U)
#define GRF_PMU_CPU_ISO_CON3_SECURE_KEYLADDER_ISO_CTRL_MASK (0x1U << GRF_PMU_CPU_ISO_CON3_SECURE_KEYLADDER_ISO_CTRL_SHIFT) /* 0x00001000 */
#define GRF_PMU_CPU_ISO_CON3_SECURE_TRNG_ISO_CTRL_SHIFT    (13U)
#define GRF_PMU_CPU_ISO_CON3_SECURE_TRNG_ISO_CTRL_MASK     (0x1U << GRF_PMU_CPU_ISO_CON3_SECURE_TRNG_ISO_CTRL_SHIFT)    /* 0x00002000 */
#define GRF_PMU_CPU_ISO_CON3_DMA2DDR_ISO_CTRL_SHIFT        (14U)
#define GRF_PMU_CPU_ISO_CON3_DMA2DDR_ISO_CTRL_MASK         (0x1U << GRF_PMU_CPU_ISO_CON3_DMA2DDR_ISO_CTRL_SHIFT)        /* 0x00004000 */
/* CPU_ISO_CON4 */
#define GRF_PMU_CPU_ISO_CON4_OFFSET                        (0x2010U)
#define GRF_PMU_CPU_ISO_CON4_SPINLOCK_ISO_CTRL_SHIFT       (0U)
#define GRF_PMU_CPU_ISO_CON4_SPINLOCK_ISO_CTRL_MASK        (0xFU << GRF_PMU_CPU_ISO_CON4_SPINLOCK_ISO_CTRL_SHIFT)       /* 0x0000000F */
#define GRF_PMU_CPU_ISO_CON4_I2C0_ISO_CTRL_SHIFT           (6U)
#define GRF_PMU_CPU_ISO_CON4_I2C0_ISO_CTRL_MASK            (0x1U << GRF_PMU_CPU_ISO_CON4_I2C0_ISO_CTRL_SHIFT)           /* 0x00000040 */
#define GRF_PMU_CPU_ISO_CON4_I2C1_ISO_CTRL_SHIFT           (7U)
#define GRF_PMU_CPU_ISO_CON4_I2C1_ISO_CTRL_MASK            (0x1U << GRF_PMU_CPU_ISO_CON4_I2C1_ISO_CTRL_SHIFT)           /* 0x00000080 */
#define GRF_PMU_CPU_ISO_CON4_I2C2_ISO_CTRL_SHIFT           (8U)
#define GRF_PMU_CPU_ISO_CON4_I2C2_ISO_CTRL_MASK            (0x1U << GRF_PMU_CPU_ISO_CON4_I2C2_ISO_CTRL_SHIFT)           /* 0x00000100 */
#define GRF_PMU_CPU_ISO_CON4_SPI0_ISO_CTRL_SHIFT           (9U)
#define GRF_PMU_CPU_ISO_CON4_SPI0_ISO_CTRL_MASK            (0x1U << GRF_PMU_CPU_ISO_CON4_SPI0_ISO_CTRL_SHIFT)           /* 0x00000200 */
#define GRF_PMU_CPU_ISO_CON4_SPI1_ISO_CTRL_SHIFT           (10U)
#define GRF_PMU_CPU_ISO_CON4_SPI1_ISO_CTRL_MASK            (0x1U << GRF_PMU_CPU_ISO_CON4_SPI1_ISO_CTRL_SHIFT)           /* 0x00000400 */
#define GRF_PMU_CPU_ISO_CON4_UART0_ISO_CTRL_SHIFT          (11U)
#define GRF_PMU_CPU_ISO_CON4_UART0_ISO_CTRL_MASK           (0x1U << GRF_PMU_CPU_ISO_CON4_UART0_ISO_CTRL_SHIFT)          /* 0x00000800 */
#define GRF_PMU_CPU_ISO_CON4_UART1_ISO_CTRL_SHIFT          (12U)
#define GRF_PMU_CPU_ISO_CON4_UART1_ISO_CTRL_MASK           (0x1U << GRF_PMU_CPU_ISO_CON4_UART1_ISO_CTRL_SHIFT)          /* 0x00001000 */
#define GRF_PMU_CPU_ISO_CON4_UART2_ISO_CTRL_SHIFT          (13U)
#define GRF_PMU_CPU_ISO_CON4_UART2_ISO_CTRL_MASK           (0x1U << GRF_PMU_CPU_ISO_CON4_UART2_ISO_CTRL_SHIFT)          /* 0x00002000 */
#define GRF_PMU_CPU_ISO_CON4_UART3_ISO_CTRL_SHIFT          (14U)
#define GRF_PMU_CPU_ISO_CON4_UART3_ISO_CTRL_MASK           (0x1U << GRF_PMU_CPU_ISO_CON4_UART3_ISO_CTRL_SHIFT)          /* 0x00004000 */
#define GRF_PMU_CPU_ISO_CON4_UART4_ISO_CTRL_SHIFT          (15U)
#define GRF_PMU_CPU_ISO_CON4_UART4_ISO_CTRL_MASK           (0x1U << GRF_PMU_CPU_ISO_CON4_UART4_ISO_CTRL_SHIFT)          /* 0x00008000 */
/* CPU_ISO_CON5 */
#define GRF_PMU_CPU_ISO_CON5_OFFSET                        (0x2014U)
#define GRF_PMU_CPU_ISO_CON5_PWM1_ISO_CTRL_SHIFT           (0U)
#define GRF_PMU_CPU_ISO_CON5_PWM1_ISO_CTRL_MASK            (0xFFU << GRF_PMU_CPU_ISO_CON5_PWM1_ISO_CTRL_SHIFT)          /* 0x000000FF */
#define GRF_PMU_CPU_ISO_CON5_GPIO2_ISO_CTRL_SHIFT          (8U)
#define GRF_PMU_CPU_ISO_CON5_GPIO2_ISO_CTRL_MASK           (0xFU << GRF_PMU_CPU_ISO_CON5_GPIO2_ISO_CTRL_SHIFT)          /* 0x00000F00 */
#define GRF_PMU_CPU_ISO_CON5_GPIO3_ISO_CTRL_SHIFT          (12U)
#define GRF_PMU_CPU_ISO_CON5_GPIO3_ISO_CTRL_MASK           (0xFU << GRF_PMU_CPU_ISO_CON5_GPIO3_ISO_CTRL_SHIFT)          /* 0x0000F000 */
/* CPU_ISO_CON6 */
#define GRF_PMU_CPU_ISO_CON6_OFFSET                        (0x2018U)
#define GRF_PMU_CPU_ISO_CON6_GPIO4_ISO_CTRL_SHIFT          (0U)
#define GRF_PMU_CPU_ISO_CON6_GPIO4_ISO_CTRL_MASK           (0xFU << GRF_PMU_CPU_ISO_CON6_GPIO4_ISO_CTRL_SHIFT)          /* 0x0000000F */
#define GRF_PMU_CPU_ISO_CON6_ASRC0_ISO_CTRL_SHIFT          (4U)
#define GRF_PMU_CPU_ISO_CON6_ASRC0_ISO_CTRL_MASK           (0x1U << GRF_PMU_CPU_ISO_CON6_ASRC0_ISO_CTRL_SHIFT)          /* 0x00000010 */
#define GRF_PMU_CPU_ISO_CON6_ASRC1_ISO_CTRL_SHIFT          (5U)
#define GRF_PMU_CPU_ISO_CON6_ASRC1_ISO_CTRL_MASK           (0x1U << GRF_PMU_CPU_ISO_CON6_ASRC1_ISO_CTRL_SHIFT)          /* 0x00000020 */
#define GRF_PMU_CPU_ISO_CON6_SAI0_ISO_CTRL_SHIFT           (6U)
#define GRF_PMU_CPU_ISO_CON6_SAI0_ISO_CTRL_MASK            (0x1U << GRF_PMU_CPU_ISO_CON6_SAI0_ISO_CTRL_SHIFT)           /* 0x00000040 */
#define GRF_PMU_CPU_ISO_CON6_SAI1_ISO_CTRL_SHIFT           (7U)
#define GRF_PMU_CPU_ISO_CON6_SAI1_ISO_CTRL_MASK            (0x1U << GRF_PMU_CPU_ISO_CON6_SAI1_ISO_CTRL_SHIFT)           /* 0x00000080 */
#define GRF_PMU_CPU_ISO_CON6_CAN0_ISO_CTRL_SHIFT           (8U)
#define GRF_PMU_CPU_ISO_CON6_CAN0_ISO_CTRL_MASK            (0x1U << GRF_PMU_CPU_ISO_CON6_CAN0_ISO_CTRL_SHIFT)           /* 0x00000100 */
#define GRF_PMU_CPU_ISO_CON6_CAN1_ISO_CTRL_SHIFT           (9U)
#define GRF_PMU_CPU_ISO_CON6_CAN1_ISO_CTRL_MASK            (0x1U << GRF_PMU_CPU_ISO_CON6_CAN1_ISO_CTRL_SHIFT)           /* 0x00000200 */
#define GRF_PMU_CPU_ISO_CON6_PDM_ISO_CTRL_SHIFT            (10U)
#define GRF_PMU_CPU_ISO_CON6_PDM_ISO_CTRL_MASK             (0x1U << GRF_PMU_CPU_ISO_CON6_PDM_ISO_CTRL_SHIFT)            /* 0x00000400 */
#define GRF_PMU_CPU_ISO_CON6_SPDIF_TX_ISO_CTRL_SHIFT       (11U)
#define GRF_PMU_CPU_ISO_CON6_SPDIF_TX_ISO_CTRL_MASK        (0x1U << GRF_PMU_CPU_ISO_CON6_SPDIF_TX_ISO_CTRL_SHIFT)       /* 0x00000800 */
#define GRF_PMU_CPU_ISO_CON6_SPDIF_RX_ISO_CTRL_SHIFT       (12U)
#define GRF_PMU_CPU_ISO_CON6_SPDIF_RX_ISO_CTRL_MASK        (0x1U << GRF_PMU_CPU_ISO_CON6_SPDIF_RX_ISO_CTRL_SHIFT)       /* 0x00001000 */
#define GRF_PMU_CPU_ISO_CON6_DSI_ISO_CTRL_SHIFT            (13U)
#define GRF_PMU_CPU_ISO_CON6_DSI_ISO_CTRL_MASK             (0x1U << GRF_PMU_CPU_ISO_CON6_DSI_ISO_CTRL_SHIFT)            /* 0x00002000 */
#define GRF_PMU_CPU_ISO_CON6_DPHY_ISO_CTRL_SHIFT           (14U)
#define GRF_PMU_CPU_ISO_CON6_DPHY_ISO_CTRL_MASK            (0x1U << GRF_PMU_CPU_ISO_CON6_DPHY_ISO_CTRL_SHIFT)           /* 0x00004000 */
#define GRF_PMU_CPU_ISO_CON6_GPIO1_IOC_ISO_CTRL_SHIFT      (15U)
#define GRF_PMU_CPU_ISO_CON6_GPIO1_IOC_ISO_CTRL_MASK       (0x1U << GRF_PMU_CPU_ISO_CON6_GPIO1_IOC_ISO_CTRL_SHIFT)      /* 0x00008000 */
/* CPU_ISO_CON7 */
#define GRF_PMU_CPU_ISO_CON7_OFFSET                        (0x201CU)
#define GRF_PMU_CPU_ISO_CON7_TSADC_ISO_CTRL_SHIFT          (0U)
#define GRF_PMU_CPU_ISO_CON7_TSADC_ISO_CTRL_MASK           (0x1U << GRF_PMU_CPU_ISO_CON7_TSADC_ISO_CTRL_SHIFT)          /* 0x00000001 */
#define GRF_PMU_CPU_ISO_CON7_RGA_ISO_CTRL_SHIFT            (1U)
#define GRF_PMU_CPU_ISO_CON7_RGA_ISO_CTRL_MASK             (0x1U << GRF_PMU_CPU_ISO_CON7_RGA_ISO_CTRL_SHIFT)            /* 0x00000002 */
#define GRF_PMU_CPU_ISO_CON7_VOP_ISO_CTRL_SHIFT            (2U)
#define GRF_PMU_CPU_ISO_CON7_VOP_ISO_CTRL_MASK             (0x1U << GRF_PMU_CPU_ISO_CON7_VOP_ISO_CTRL_SHIFT)            /* 0x00000004 */
#define GRF_PMU_CPU_ISO_CON7_SECURE_OTPC_ISO_CTRL_SHIFT    (3U)
#define GRF_PMU_CPU_ISO_CON7_SECURE_OTPC_ISO_CTRL_MASK     (0x1U << GRF_PMU_CPU_ISO_CON7_SECURE_OTPC_ISO_CTRL_SHIFT)    /* 0x00000008 */
#define GRF_PMU_CPU_ISO_CON7_SECURE_OTPC_MASK_ISO_CTRL_SHIFT (4U)
#define GRF_PMU_CPU_ISO_CON7_SECURE_OTPC_MASK_ISO_CTRL_MASK (0x1U << GRF_PMU_CPU_ISO_CON7_SECURE_OTPC_MASK_ISO_CTRL_SHIFT) /* 0x00000010 */
#define GRF_PMU_CPU_ISO_CON7_SECURE_KEYREADER_ISO_CTRL_SHIFT (5U)
#define GRF_PMU_CPU_ISO_CON7_SECURE_KEYREADER_ISO_CTRL_MASK (0x1U << GRF_PMU_CPU_ISO_CON7_SECURE_KEYREADER_ISO_CTRL_SHIFT) /* 0x00000020 */
#define GRF_PMU_CPU_ISO_CON7_MAC0_ISO_CTRL_SHIFT           (6U)
#define GRF_PMU_CPU_ISO_CON7_MAC0_ISO_CTRL_MASK            (0x1U << GRF_PMU_CPU_ISO_CON7_MAC0_ISO_CTRL_SHIFT)           /* 0x00000040 */
#define GRF_PMU_CPU_ISO_CON7_MAC1_ISO_CTRL_SHIFT           (7U)
#define GRF_PMU_CPU_ISO_CON7_MAC1_ISO_CTRL_MASK            (0x1U << GRF_PMU_CPU_ISO_CON7_MAC1_ISO_CTRL_SHIFT)           /* 0x00000080 */
#define GRF_PMU_CPU_ISO_CON7_SPI2_ISO_CTRL_SHIFT           (8U)
#define GRF_PMU_CPU_ISO_CON7_SPI2_ISO_CTRL_MASK            (0x1U << GRF_PMU_CPU_ISO_CON7_SPI2_ISO_CTRL_SHIFT)           /* 0x00000100 */
#define GRF_PMU_CPU_ISO_CON7_UART5_ISO_CTRL_SHIFT          (9U)
#define GRF_PMU_CPU_ISO_CON7_UART5_ISO_CTRL_MASK           (0x1U << GRF_PMU_CPU_ISO_CON7_UART5_ISO_CTRL_SHIFT)          /* 0x00000200 */
#define GRF_PMU_CPU_ISO_CON7_OTPC_NS_ISO_CTRL_SHIFT        (10U)
#define GRF_PMU_CPU_ISO_CON7_OTPC_NS_ISO_CTRL_MASK         (0x1U << GRF_PMU_CPU_ISO_CON7_OTPC_NS_ISO_CTRL_SHIFT)        /* 0x00000400 */
#define GRF_PMU_CPU_ISO_CON7_SARADC_ISO_CTRL_SHIFT         (11U)
#define GRF_PMU_CPU_ISO_CON7_SARADC_ISO_CTRL_MASK          (0x1U << GRF_PMU_CPU_ISO_CON7_SARADC_ISO_CTRL_SHIFT)         /* 0x00000800 */
#define GRF_PMU_CPU_ISO_CON7_GPIO234_IOC_ISO_CTRL_SHIFT    (12U)
#define GRF_PMU_CPU_ISO_CON7_GPIO234_IOC_ISO_CTRL_MASK     (0x1U << GRF_PMU_CPU_ISO_CON7_GPIO234_IOC_ISO_CTRL_SHIFT)    /* 0x00001000 */
#define GRF_PMU_CPU_ISO_CON7_AUDIO_ADC_ISO_CTRL_SHIFT      (13U)
#define GRF_PMU_CPU_ISO_CON7_AUDIO_ADC_ISO_CTRL_MASK       (0x1U << GRF_PMU_CPU_ISO_CON7_AUDIO_ADC_ISO_CTRL_SHIFT)      /* 0x00002000 */
#define GRF_PMU_CPU_ISO_CON7_SDMMC_ISO_CTRL_SHIFT          (14U)
#define GRF_PMU_CPU_ISO_CON7_SDMMC_ISO_CTRL_MASK           (0x1U << GRF_PMU_CPU_ISO_CON7_SDMMC_ISO_CTRL_SHIFT)          /* 0x00004000 */
#define GRF_PMU_CPU_ISO_CON7_FSPI_ISO_CTRL_SHIFT           (15U)
#define GRF_PMU_CPU_ISO_CON7_FSPI_ISO_CTRL_MASK            (0x1U << GRF_PMU_CPU_ISO_CON7_FSPI_ISO_CTRL_SHIFT)           /* 0x00008000 */
/* CPU_ISO_CON8 */
#define GRF_PMU_CPU_ISO_CON8_OFFSET                        (0x2020U)
#define GRF_PMU_CPU_ISO_CON8_SAI2_ISO_CTRL_SHIFT           (0U)
#define GRF_PMU_CPU_ISO_CON8_SAI2_ISO_CTRL_MASK            (0x1U << GRF_PMU_CPU_ISO_CON8_SAI2_ISO_CTRL_SHIFT)           /* 0x00000001 */
#define GRF_PMU_CPU_ISO_CON8_SAI3_ISO_CTRL_SHIFT           (1U)
#define GRF_PMU_CPU_ISO_CON8_SAI3_ISO_CTRL_MASK            (0x1U << GRF_PMU_CPU_ISO_CON8_SAI3_ISO_CTRL_SHIFT)           /* 0x00000002 */
#define GRF_PMU_CPU_ISO_CON8_SAI4_ISO_CTRL_SHIFT           (2U)
#define GRF_PMU_CPU_ISO_CON8_SAI4_ISO_CTRL_MASK            (0x1U << GRF_PMU_CPU_ISO_CON8_SAI4_ISO_CTRL_SHIFT)           /* 0x00000004 */
#define GRF_PMU_CPU_ISO_CON8_AUDIO_DSM_ISO_CTRL_SHIFT      (3U)
#define GRF_PMU_CPU_ISO_CON8_AUDIO_DSM_ISO_CTRL_MASK       (0x1U << GRF_PMU_CPU_ISO_CON8_AUDIO_DSM_ISO_CTRL_SHIFT)      /* 0x00000008 */
#define GRF_PMU_CPU_ISO_CON8_PMU_ISO_CTRL_SHIFT            (4U)
#define GRF_PMU_CPU_ISO_CON8_PMU_ISO_CTRL_MASK             (0x1U << GRF_PMU_CPU_ISO_CON8_PMU_ISO_CTRL_SHIFT)            /* 0x00000010 */
#define GRF_PMU_CPU_ISO_CON8_CRU_PMU_ISO_CTRL_SHIFT        (5U)
#define GRF_PMU_CPU_ISO_CON8_CRU_PMU_ISO_CTRL_MASK         (0x1U << GRF_PMU_CPU_ISO_CON8_CRU_PMU_ISO_CTRL_SHIFT)        /* 0x00000020 */
#define GRF_PMU_CPU_ISO_CON8_SECURE_CRU_PMU_ISO_CTRL_SHIFT (6U)
#define GRF_PMU_CPU_ISO_CON8_SECURE_CRU_PMU_ISO_CTRL_MASK  (0x1U << GRF_PMU_CPU_ISO_CON8_SECURE_CRU_PMU_ISO_CTRL_SHIFT) /* 0x00000040 */
#define GRF_PMU_CPU_ISO_CON8_GRF_PMU_ISO_CTRL_SHIFT        (7U)
#define GRF_PMU_CPU_ISO_CON8_GRF_PMU_ISO_CTRL_MASK         (0xFU << GRF_PMU_CPU_ISO_CON8_GRF_PMU_ISO_CTRL_SHIFT)        /* 0x00000780 */
#define GRF_PMU_CPU_ISO_CON8_SGRF_PMU_ISO_CTRL_SHIFT       (11U)
#define GRF_PMU_CPU_ISO_CON8_SGRF_PMU_ISO_CTRL_MASK        (0x1U << GRF_PMU_CPU_ISO_CON8_SGRF_PMU_ISO_CTRL_SHIFT)       /* 0x00000800 */
#define GRF_PMU_CPU_ISO_CON8_GPIO0_ISO_CTRL_SHIFT          (12U)
#define GRF_PMU_CPU_ISO_CON8_GPIO0_ISO_CTRL_MASK           (0xFU << GRF_PMU_CPU_ISO_CON8_GPIO0_ISO_CTRL_SHIFT)          /* 0x0000F000 */
/* CPU_ISO_CON9 */
#define GRF_PMU_CPU_ISO_CON9_OFFSET                        (0x2024U)
#define GRF_PMU_CPU_ISO_CON9_GPIO1_SHADOW_ISO_CTRL_SHIFT   (0U)
#define GRF_PMU_CPU_ISO_CON9_GPIO1_SHADOW_ISO_CTRL_MASK    (0xFU << GRF_PMU_CPU_ISO_CON9_GPIO1_SHADOW_ISO_CTRL_SHIFT)   /* 0x0000000F */
#define GRF_PMU_CPU_ISO_CON9_HPTIMER_ISO_CTRL_SHIFT        (4U)
#define GRF_PMU_CPU_ISO_CON9_HPTIMER_ISO_CTRL_MASK         (0x1U << GRF_PMU_CPU_ISO_CON9_HPTIMER_ISO_CTRL_SHIFT)        /* 0x00000010 */
#define GRF_PMU_CPU_ISO_CON9_PWM0_ISO_CTRL_SHIFT           (5U)
#define GRF_PMU_CPU_ISO_CON9_PWM0_ISO_CTRL_MASK            (0xFU << GRF_PMU_CPU_ISO_CON9_PWM0_ISO_CTRL_SHIFT)           /* 0x000001E0 */
#define GRF_PMU_CPU_ISO_CON9_TOUCHKEY_ISO_CTRL_SHIFT       (9U)
#define GRF_PMU_CPU_ISO_CON9_TOUCHKEY_ISO_CTRL_MASK        (0x1U << GRF_PMU_CPU_ISO_CON9_TOUCHKEY_ISO_CTRL_SHIFT)       /* 0x00000200 */
#define GRF_PMU_CPU_ISO_CON9_GPIO0_IOC_ISO_CTRL_SHIFT      (10U)
#define GRF_PMU_CPU_ISO_CON9_GPIO0_IOC_ISO_CTRL_MASK       (0x1U << GRF_PMU_CPU_ISO_CON9_GPIO0_IOC_ISO_CTRL_SHIFT)      /* 0x00000400 */
#define GRF_PMU_CPU_ISO_CON9_CRU_ISO_CTRL_SHIFT            (11U)
#define GRF_PMU_CPU_ISO_CON9_CRU_ISO_CTRL_MASK             (0x1U << GRF_PMU_CPU_ISO_CON9_CRU_ISO_CTRL_SHIFT)            /* 0x00000800 */
#define GRF_PMU_CPU_ISO_CON9_SECURE_CRU_ISO_CTRL_SHIFT     (12U)
#define GRF_PMU_CPU_ISO_CON9_SECURE_CRU_ISO_CTRL_MASK      (0x1U << GRF_PMU_CPU_ISO_CON9_SECURE_CRU_ISO_CTRL_SHIFT)     /* 0x00001000 */
/* CPU_ISO_CON10 */
#define GRF_PMU_CPU_ISO_CON10_OFFSET                       (0x2028U)
#define GRF_PMU_CPU_ISO_CON10_NOCSRV_CPU_ISO_CTRL_SHIFT    (0U)
#define GRF_PMU_CPU_ISO_CON10_NOCSRV_CPU_ISO_CTRL_MASK     (0x1U << GRF_PMU_CPU_ISO_CON10_NOCSRV_CPU_ISO_CTRL_SHIFT)    /* 0x00000001 */
#define GRF_PMU_CPU_ISO_CON10_NOCSRV_CPUP_ISO_CTRL_SHIFT   (1U)
#define GRF_PMU_CPU_ISO_CON10_NOCSRV_CPUP_ISO_CTRL_MASK    (0x1U << GRF_PMU_CPU_ISO_CON10_NOCSRV_CPUP_ISO_CTRL_SHIFT)   /* 0x00000002 */
#define GRF_PMU_CPU_ISO_CON10_NOCSRV_BUS_ISO_CTRL_SHIFT    (2U)
#define GRF_PMU_CPU_ISO_CON10_NOCSRV_BUS_ISO_CTRL_MASK     (0x1U << GRF_PMU_CPU_ISO_CON10_NOCSRV_BUS_ISO_CTRL_SHIFT)    /* 0x00000004 */
#define GRF_PMU_CPU_ISO_CON10_NOCSRV_HSPERI_ISO_CTRL_SHIFT (3U)
#define GRF_PMU_CPU_ISO_CON10_NOCSRV_HSPERI_ISO_CTRL_MASK  (0x1U << GRF_PMU_CPU_ISO_CON10_NOCSRV_HSPERI_ISO_CTRL_SHIFT) /* 0x00000008 */
#define GRF_PMU_CPU_ISO_CON10_NOCSRV_VIO_ISO_CTRL_SHIFT    (4U)
#define GRF_PMU_CPU_ISO_CON10_NOCSRV_VIO_ISO_CTRL_MASK     (0x1U << GRF_PMU_CPU_ISO_CON10_NOCSRV_VIO_ISO_CTRL_SHIFT)    /* 0x00000010 */
#define GRF_PMU_CPU_ISO_CON10_NOCSRV_DDR_ISO_CTRL_SHIFT    (5U)
#define GRF_PMU_CPU_ISO_CON10_NOCSRV_DDR_ISO_CTRL_MASK     (0x1U << GRF_PMU_CPU_ISO_CON10_NOCSRV_DDR_ISO_CTRL_SHIFT)    /* 0x00000020 */
#define GRF_PMU_CPU_ISO_CON10_NOCSRV_FIREWALL_ISO_CTRL_SHIFT (6U)
#define GRF_PMU_CPU_ISO_CON10_NOCSRV_FIREWALL_ISO_CTRL_MASK (0x1U << GRF_PMU_CPU_ISO_CON10_NOCSRV_FIREWALL_ISO_CTRL_SHIFT) /* 0x00000040 */
/* CPU_ISO_CON11 */
#define GRF_PMU_CPU_ISO_CON11_OFFSET                       (0x202CU)
#define GRF_PMU_CPU_ISO_CON11_SYSRAM_ISO_CTRL_SHIFT        (0U)
#define GRF_PMU_CPU_ISO_CON11_SYSRAM_ISO_CTRL_MASK         (0xFFFU << GRF_PMU_CPU_ISO_CON11_SYSRAM_ISO_CTRL_SHIFT)      /* 0x00000FFF */
/* CPU_ISO_DDR_CON0 */
#define GRF_PMU_CPU_ISO_DDR_CON0_OFFSET                    (0x2400U)
#define GRF_PMU_CPU_ISO_DDR_CON0_CPU_DDR_ISO_CTRL_SHIFT    (0U)
#define GRF_PMU_CPU_ISO_DDR_CON0_CPU_DDR_ISO_CTRL_MASK     (0x1U << GRF_PMU_CPU_ISO_DDR_CON0_CPU_DDR_ISO_CTRL_SHIFT)    /* 0x00000001 */
#define GRF_PMU_CPU_ISO_DDR_CON0_FLEXBUS_DDR_ISO_CTRL_SHIFT (1U)
#define GRF_PMU_CPU_ISO_DDR_CON0_FLEXBUS_DDR_ISO_CTRL_MASK (0x1U << GRF_PMU_CPU_ISO_DDR_CON0_FLEXBUS_DDR_ISO_CTRL_SHIFT) /* 0x00000002 */
#define GRF_PMU_CPU_ISO_DDR_CON0_CRYPTO_DDR_ISO_CTRL_SHIFT (2U)
#define GRF_PMU_CPU_ISO_DDR_CON0_CRYPTO_DDR_ISO_CTRL_MASK  (0x1U << GRF_PMU_CPU_ISO_DDR_CON0_CRYPTO_DDR_ISO_CTRL_SHIFT) /* 0x00000004 */
#define GRF_PMU_CPU_ISO_DDR_CON0_DMAC0_DDR_ISO_CTRL_SHIFT  (3U)
#define GRF_PMU_CPU_ISO_DDR_CON0_DMAC0_DDR_ISO_CTRL_MASK   (0x1U << GRF_PMU_CPU_ISO_DDR_CON0_DMAC0_DDR_ISO_CTRL_SHIFT)  /* 0x00000008 */
#define GRF_PMU_CPU_ISO_DDR_CON0_DMAC1_DDR_ISO_CTRL_SHIFT  (4U)
#define GRF_PMU_CPU_ISO_DDR_CON0_DMAC1_DDR_ISO_CTRL_MASK   (0x1U << GRF_PMU_CPU_ISO_DDR_CON0_DMAC1_DDR_ISO_CTRL_SHIFT)  /* 0x00000010 */
#define GRF_PMU_CPU_ISO_DDR_CON0_SDMMC_DDR_ISO_CTRL_SHIFT  (5U)
#define GRF_PMU_CPU_ISO_DDR_CON0_SDMMC_DDR_ISO_CTRL_MASK   (0x1U << GRF_PMU_CPU_ISO_DDR_CON0_SDMMC_DDR_ISO_CTRL_SHIFT)  /* 0x00000020 */
#define GRF_PMU_CPU_ISO_DDR_CON0_FPSI_DDR_ISO_CTRL_SHIFT   (6U)
#define GRF_PMU_CPU_ISO_DDR_CON0_FPSI_DDR_ISO_CTRL_MASK    (0x1U << GRF_PMU_CPU_ISO_DDR_CON0_FPSI_DDR_ISO_CTRL_SHIFT)   /* 0x00000040 */
#define GRF_PMU_CPU_ISO_DDR_CON0_MAC0_DDR_ISO_CTRL_SHIFT   (7U)
#define GRF_PMU_CPU_ISO_DDR_CON0_MAC0_DDR_ISO_CTRL_MASK    (0x1U << GRF_PMU_CPU_ISO_DDR_CON0_MAC0_DDR_ISO_CTRL_SHIFT)   /* 0x00000080 */
#define GRF_PMU_CPU_ISO_DDR_CON0_MAC1_DDR_ISO_CTRL_SHIFT   (8U)
#define GRF_PMU_CPU_ISO_DDR_CON0_MAC1_DDR_ISO_CTRL_MASK    (0x1U << GRF_PMU_CPU_ISO_DDR_CON0_MAC1_DDR_ISO_CTRL_SHIFT)   /* 0x00000100 */
#define GRF_PMU_CPU_ISO_DDR_CON0_MCU_DDR_ISO_CTRL_SHIFT    (9U)
#define GRF_PMU_CPU_ISO_DDR_CON0_MCU_DDR_ISO_CTRL_MASK     (0x1U << GRF_PMU_CPU_ISO_DDR_CON0_MCU_DDR_ISO_CTRL_SHIFT)    /* 0x00000200 */
#define GRF_PMU_CPU_ISO_DDR_CON0_DMA2DDR_DDR_ISO_CTRL_SHIFT (10U)
#define GRF_PMU_CPU_ISO_DDR_CON0_DMA2DDR_DDR_ISO_CTRL_MASK (0x1U << GRF_PMU_CPU_ISO_DDR_CON0_DMA2DDR_DDR_ISO_CTRL_SHIFT) /* 0x00000400 */
#define GRF_PMU_CPU_ISO_DDR_CON0_RGA_RD_DDR_ISO_CTRL_SHIFT (11U)
#define GRF_PMU_CPU_ISO_DDR_CON0_RGA_RD_DDR_ISO_CTRL_MASK  (0x1U << GRF_PMU_CPU_ISO_DDR_CON0_RGA_RD_DDR_ISO_CTRL_SHIFT) /* 0x00000800 */
#define GRF_PMU_CPU_ISO_DDR_CON0_RGA_WR_DDR_ISO_CTRL_SHIFT (12U)
#define GRF_PMU_CPU_ISO_DDR_CON0_RGA_WR_DDR_ISO_CTRL_MASK  (0x1U << GRF_PMU_CPU_ISO_DDR_CON0_RGA_WR_DDR_ISO_CTRL_SHIFT) /* 0x00001000 */
#define GRF_PMU_CPU_ISO_DDR_CON0_SPI2_DDR_ISO_CTRL_SHIFT   (13U)
#define GRF_PMU_CPU_ISO_DDR_CON0_SPI2_DDR_ISO_CTRL_MASK    (0x1U << GRF_PMU_CPU_ISO_DDR_CON0_SPI2_DDR_ISO_CTRL_SHIFT)   /* 0x00002000 */
#define GRF_PMU_CPU_ISO_DDR_CON0_USB2OTG0_DDR_ISO_CTRL_SHIFT (14U)
#define GRF_PMU_CPU_ISO_DDR_CON0_USB2OTG0_DDR_ISO_CTRL_MASK (0x1U << GRF_PMU_CPU_ISO_DDR_CON0_USB2OTG0_DDR_ISO_CTRL_SHIFT) /* 0x00004000 */
#define GRF_PMU_CPU_ISO_DDR_CON0_USB2OTG1_DDR_ISO_CTRL_SHIFT (15U)
#define GRF_PMU_CPU_ISO_DDR_CON0_USB2OTG1_DDR_ISO_CTRL_MASK (0x1U << GRF_PMU_CPU_ISO_DDR_CON0_USB2OTG1_DDR_ISO_CTRL_SHIFT) /* 0x00008000 */
/* CPU_ISO_DDR_CON1 */
#define GRF_PMU_CPU_ISO_DDR_CON1_OFFSET                    (0x2404U)
#define GRF_PMU_CPU_ISO_DDR_CON1_VOP_DDR_ISO_CTRL_SHIFT    (0U)
#define GRF_PMU_CPU_ISO_DDR_CON1_VOP_DDR_ISO_CTRL_MASK     (0x1U << GRF_PMU_CPU_ISO_DDR_CON1_VOP_DDR_ISO_CTRL_SHIFT)    /* 0x00000001 */
/* CPU_ISO_LOCK */
#define GRF_PMU_CPU_ISO_LOCK_OFFSET                        (0x2500U)
#define GRF_PMU_CPU_ISO_LOCK_CPU_ISO_LOCK_SHIFT            (0U)
#define GRF_PMU_CPU_ISO_LOCK_CPU_ISO_LOCK_MASK             (0x1U << GRF_PMU_CPU_ISO_LOCK_CPU_ISO_LOCK_SHIFT)            /* 0x00000001 */
/***************************************GPIO0_IOC****************************************/
/* GPIO0A_IOMUX_SEL_0 */
#define GPIO0_IOC_GPIO0A_IOMUX_SEL_0_OFFSET                (0x0U)
#define GPIO0_IOC_GPIO0A_IOMUX_SEL_0_GPIO0A0_SEL_SHIFT     (0U)
#define GPIO0_IOC_GPIO0A_IOMUX_SEL_0_GPIO0A0_SEL_MASK      (0xFU << GPIO0_IOC_GPIO0A_IOMUX_SEL_0_GPIO0A0_SEL_SHIFT)     /* 0x0000000F */
#define GPIO0_IOC_GPIO0A_IOMUX_SEL_0_GPIO0A1_SEL_SHIFT     (4U)
#define GPIO0_IOC_GPIO0A_IOMUX_SEL_0_GPIO0A1_SEL_MASK      (0xFU << GPIO0_IOC_GPIO0A_IOMUX_SEL_0_GPIO0A1_SEL_SHIFT)     /* 0x000000F0 */
#define GPIO0_IOC_GPIO0A_IOMUX_SEL_0_GPIO0A2_SEL_SHIFT     (8U)
#define GPIO0_IOC_GPIO0A_IOMUX_SEL_0_GPIO0A2_SEL_MASK      (0xFU << GPIO0_IOC_GPIO0A_IOMUX_SEL_0_GPIO0A2_SEL_SHIFT)     /* 0x00000F00 */
#define GPIO0_IOC_GPIO0A_IOMUX_SEL_0_GPIO0A3_SEL_SHIFT     (12U)
#define GPIO0_IOC_GPIO0A_IOMUX_SEL_0_GPIO0A3_SEL_MASK      (0xFU << GPIO0_IOC_GPIO0A_IOMUX_SEL_0_GPIO0A3_SEL_SHIFT)     /* 0x0000F000 */
/* GPIO0A_IOMUX_SEL_1 */
#define GPIO0_IOC_GPIO0A_IOMUX_SEL_1_OFFSET                (0x4U)
#define GPIO0_IOC_GPIO0A_IOMUX_SEL_1_GPIO0A4_SEL_SHIFT     (0U)
#define GPIO0_IOC_GPIO0A_IOMUX_SEL_1_GPIO0A4_SEL_MASK      (0xFU << GPIO0_IOC_GPIO0A_IOMUX_SEL_1_GPIO0A4_SEL_SHIFT)     /* 0x0000000F */
#define GPIO0_IOC_GPIO0A_IOMUX_SEL_1_GPIO0A5_SEL_SHIFT     (4U)
#define GPIO0_IOC_GPIO0A_IOMUX_SEL_1_GPIO0A5_SEL_MASK      (0xFU << GPIO0_IOC_GPIO0A_IOMUX_SEL_1_GPIO0A5_SEL_SHIFT)     /* 0x000000F0 */
#define GPIO0_IOC_GPIO0A_IOMUX_SEL_1_GPIO0A6_SEL_SHIFT     (8U)
#define GPIO0_IOC_GPIO0A_IOMUX_SEL_1_GPIO0A6_SEL_MASK      (0xFU << GPIO0_IOC_GPIO0A_IOMUX_SEL_1_GPIO0A6_SEL_SHIFT)     /* 0x00000F00 */
#define GPIO0_IOC_GPIO0A_IOMUX_SEL_1_GPIO0A7_SEL_SHIFT     (12U)
#define GPIO0_IOC_GPIO0A_IOMUX_SEL_1_GPIO0A7_SEL_MASK      (0xFU << GPIO0_IOC_GPIO0A_IOMUX_SEL_1_GPIO0A7_SEL_SHIFT)     /* 0x0000F000 */
/* GPIO0B_IOMUX_SEL_0 */
#define GPIO0_IOC_GPIO0B_IOMUX_SEL_0_OFFSET                (0x8U)
#define GPIO0_IOC_GPIO0B_IOMUX_SEL_0_GPIO0B0_SEL_SHIFT     (0U)
#define GPIO0_IOC_GPIO0B_IOMUX_SEL_0_GPIO0B0_SEL_MASK      (0xFU << GPIO0_IOC_GPIO0B_IOMUX_SEL_0_GPIO0B0_SEL_SHIFT)     /* 0x0000000F */
#define GPIO0_IOC_GPIO0B_IOMUX_SEL_0_GPIO0B1_SEL_SHIFT     (4U)
#define GPIO0_IOC_GPIO0B_IOMUX_SEL_0_GPIO0B1_SEL_MASK      (0xFU << GPIO0_IOC_GPIO0B_IOMUX_SEL_0_GPIO0B1_SEL_SHIFT)     /* 0x000000F0 */
#define GPIO0_IOC_GPIO0B_IOMUX_SEL_0_GPIO0B2_SEL_SHIFT     (8U)
#define GPIO0_IOC_GPIO0B_IOMUX_SEL_0_GPIO0B2_SEL_MASK      (0xFU << GPIO0_IOC_GPIO0B_IOMUX_SEL_0_GPIO0B2_SEL_SHIFT)     /* 0x00000F00 */
#define GPIO0_IOC_GPIO0B_IOMUX_SEL_0_GPIO0B3_SEL_SHIFT     (12U)
#define GPIO0_IOC_GPIO0B_IOMUX_SEL_0_GPIO0B3_SEL_MASK      (0xFU << GPIO0_IOC_GPIO0B_IOMUX_SEL_0_GPIO0B3_SEL_SHIFT)     /* 0x0000F000 */
/* GPIO0B_IOMUX_SEL_1 */
#define GPIO0_IOC_GPIO0B_IOMUX_SEL_1_OFFSET                (0xCU)
#define GPIO0_IOC_GPIO0B_IOMUX_SEL_1_GPIO0B4_SEL_SHIFT     (0U)
#define GPIO0_IOC_GPIO0B_IOMUX_SEL_1_GPIO0B4_SEL_MASK      (0xFU << GPIO0_IOC_GPIO0B_IOMUX_SEL_1_GPIO0B4_SEL_SHIFT)     /* 0x0000000F */
#define GPIO0_IOC_GPIO0B_IOMUX_SEL_1_GPIO0B5_SEL_SHIFT     (4U)
#define GPIO0_IOC_GPIO0B_IOMUX_SEL_1_GPIO0B5_SEL_MASK      (0xFU << GPIO0_IOC_GPIO0B_IOMUX_SEL_1_GPIO0B5_SEL_SHIFT)     /* 0x000000F0 */
#define GPIO0_IOC_GPIO0B_IOMUX_SEL_1_GPIO0B6_SEL_SHIFT     (8U)
#define GPIO0_IOC_GPIO0B_IOMUX_SEL_1_GPIO0B6_SEL_MASK      (0xFU << GPIO0_IOC_GPIO0B_IOMUX_SEL_1_GPIO0B6_SEL_SHIFT)     /* 0x00000F00 */
#define GPIO0_IOC_GPIO0B_IOMUX_SEL_1_GPIO0B7_SEL_SHIFT     (12U)
#define GPIO0_IOC_GPIO0B_IOMUX_SEL_1_GPIO0B7_SEL_MASK      (0xFU << GPIO0_IOC_GPIO0B_IOMUX_SEL_1_GPIO0B7_SEL_SHIFT)     /* 0x0000F000 */
/* GPIO0C_IOMUX_SEL_0 */
#define GPIO0_IOC_GPIO0C_IOMUX_SEL_0_OFFSET                (0x10U)
#define GPIO0_IOC_GPIO0C_IOMUX_SEL_0_GPIO0C0_SEL_SHIFT     (0U)
#define GPIO0_IOC_GPIO0C_IOMUX_SEL_0_GPIO0C0_SEL_MASK      (0xFU << GPIO0_IOC_GPIO0C_IOMUX_SEL_0_GPIO0C0_SEL_SHIFT)     /* 0x0000000F */
#define GPIO0_IOC_GPIO0C_IOMUX_SEL_0_GPIO0C1_SEL_SHIFT     (4U)
#define GPIO0_IOC_GPIO0C_IOMUX_SEL_0_GPIO0C1_SEL_MASK      (0xFU << GPIO0_IOC_GPIO0C_IOMUX_SEL_0_GPIO0C1_SEL_SHIFT)     /* 0x000000F0 */
#define GPIO0_IOC_GPIO0C_IOMUX_SEL_0_GPIO0C2_SEL_SHIFT     (8U)
#define GPIO0_IOC_GPIO0C_IOMUX_SEL_0_GPIO0C2_SEL_MASK      (0xFU << GPIO0_IOC_GPIO0C_IOMUX_SEL_0_GPIO0C2_SEL_SHIFT)     /* 0x00000F00 */
#define GPIO0_IOC_GPIO0C_IOMUX_SEL_0_GPIO0C3_SEL_SHIFT     (12U)
#define GPIO0_IOC_GPIO0C_IOMUX_SEL_0_GPIO0C3_SEL_MASK      (0xFU << GPIO0_IOC_GPIO0C_IOMUX_SEL_0_GPIO0C3_SEL_SHIFT)     /* 0x0000F000 */
/* GPIO0C_IOMUX_SEL_1 */
#define GPIO0_IOC_GPIO0C_IOMUX_SEL_1_OFFSET                (0x14U)
#define GPIO0_IOC_GPIO0C_IOMUX_SEL_1_GPIO0C4_SEL_SHIFT     (0U)
#define GPIO0_IOC_GPIO0C_IOMUX_SEL_1_GPIO0C4_SEL_MASK      (0xFU << GPIO0_IOC_GPIO0C_IOMUX_SEL_1_GPIO0C4_SEL_SHIFT)     /* 0x0000000F */
#define GPIO0_IOC_GPIO0C_IOMUX_SEL_1_GPIO0C5_SEL_SHIFT     (4U)
#define GPIO0_IOC_GPIO0C_IOMUX_SEL_1_GPIO0C5_SEL_MASK      (0xFU << GPIO0_IOC_GPIO0C_IOMUX_SEL_1_GPIO0C5_SEL_SHIFT)     /* 0x000000F0 */
#define GPIO0_IOC_GPIO0C_IOMUX_SEL_1_GPIO0C6_SEL_SHIFT     (8U)
#define GPIO0_IOC_GPIO0C_IOMUX_SEL_1_GPIO0C6_SEL_MASK      (0xFU << GPIO0_IOC_GPIO0C_IOMUX_SEL_1_GPIO0C6_SEL_SHIFT)     /* 0x00000F00 */
#define GPIO0_IOC_GPIO0C_IOMUX_SEL_1_GPIO0C7_SEL_SHIFT     (12U)
#define GPIO0_IOC_GPIO0C_IOMUX_SEL_1_GPIO0C7_SEL_MASK      (0xFU << GPIO0_IOC_GPIO0C_IOMUX_SEL_1_GPIO0C7_SEL_SHIFT)     /* 0x0000F000 */
/* GPIO0A_DS_0 */
#define GPIO0_IOC_GPIO0A_DS_0_OFFSET                       (0x100U)
#define GPIO0_IOC_GPIO0A_DS_0_GPIO0A0_DS_SHIFT             (0U)
#define GPIO0_IOC_GPIO0A_DS_0_GPIO0A0_DS_MASK              (0x3FU << GPIO0_IOC_GPIO0A_DS_0_GPIO0A0_DS_SHIFT)            /* 0x0000003F */
#define GPIO0_IOC_GPIO0A_DS_0_GPIO0A1_DS_SHIFT             (8U)
#define GPIO0_IOC_GPIO0A_DS_0_GPIO0A1_DS_MASK              (0x3FU << GPIO0_IOC_GPIO0A_DS_0_GPIO0A1_DS_SHIFT)            /* 0x00003F00 */
/* GPIO0A_DS_1 */
#define GPIO0_IOC_GPIO0A_DS_1_OFFSET                       (0x104U)
#define GPIO0_IOC_GPIO0A_DS_1_GPIO0A2_DS_SHIFT             (0U)
#define GPIO0_IOC_GPIO0A_DS_1_GPIO0A2_DS_MASK              (0x3FU << GPIO0_IOC_GPIO0A_DS_1_GPIO0A2_DS_SHIFT)            /* 0x0000003F */
#define GPIO0_IOC_GPIO0A_DS_1_GPIO0A3_DS_SHIFT             (8U)
#define GPIO0_IOC_GPIO0A_DS_1_GPIO0A3_DS_MASK              (0x3FU << GPIO0_IOC_GPIO0A_DS_1_GPIO0A3_DS_SHIFT)            /* 0x00003F00 */
/* GPIO0A_DS_2 */
#define GPIO0_IOC_GPIO0A_DS_2_OFFSET                       (0x108U)
#define GPIO0_IOC_GPIO0A_DS_2_GPIO0A4_DS_SHIFT             (0U)
#define GPIO0_IOC_GPIO0A_DS_2_GPIO0A4_DS_MASK              (0x3FU << GPIO0_IOC_GPIO0A_DS_2_GPIO0A4_DS_SHIFT)            /* 0x0000003F */
#define GPIO0_IOC_GPIO0A_DS_2_GPIO0A5_DS_SHIFT             (8U)
#define GPIO0_IOC_GPIO0A_DS_2_GPIO0A5_DS_MASK              (0x3FU << GPIO0_IOC_GPIO0A_DS_2_GPIO0A5_DS_SHIFT)            /* 0x00003F00 */
/* GPIO0A_DS_3 */
#define GPIO0_IOC_GPIO0A_DS_3_OFFSET                       (0x10CU)
#define GPIO0_IOC_GPIO0A_DS_3_GPIO0A6_DS_SHIFT             (0U)
#define GPIO0_IOC_GPIO0A_DS_3_GPIO0A6_DS_MASK              (0x3FU << GPIO0_IOC_GPIO0A_DS_3_GPIO0A6_DS_SHIFT)            /* 0x0000003F */
#define GPIO0_IOC_GPIO0A_DS_3_GPIO0A7_DS_SHIFT             (8U)
#define GPIO0_IOC_GPIO0A_DS_3_GPIO0A7_DS_MASK              (0x3FU << GPIO0_IOC_GPIO0A_DS_3_GPIO0A7_DS_SHIFT)            /* 0x00003F00 */
/* GPIO0B_DS_0 */
#define GPIO0_IOC_GPIO0B_DS_0_OFFSET                       (0x110U)
#define GPIO0_IOC_GPIO0B_DS_0_GPIO0B0_DS_SHIFT             (0U)
#define GPIO0_IOC_GPIO0B_DS_0_GPIO0B0_DS_MASK              (0x3FU << GPIO0_IOC_GPIO0B_DS_0_GPIO0B0_DS_SHIFT)            /* 0x0000003F */
#define GPIO0_IOC_GPIO0B_DS_0_GPIO0B1_DS_SHIFT             (8U)
#define GPIO0_IOC_GPIO0B_DS_0_GPIO0B1_DS_MASK              (0x3FU << GPIO0_IOC_GPIO0B_DS_0_GPIO0B1_DS_SHIFT)            /* 0x00003F00 */
/* GPIO0B_DS_1 */
#define GPIO0_IOC_GPIO0B_DS_1_OFFSET                       (0x114U)
#define GPIO0_IOC_GPIO0B_DS_1_GPIO0B2_DS_SHIFT             (0U)
#define GPIO0_IOC_GPIO0B_DS_1_GPIO0B2_DS_MASK              (0x3FU << GPIO0_IOC_GPIO0B_DS_1_GPIO0B2_DS_SHIFT)            /* 0x0000003F */
#define GPIO0_IOC_GPIO0B_DS_1_GPIO0B3_DS_SHIFT             (8U)
#define GPIO0_IOC_GPIO0B_DS_1_GPIO0B3_DS_MASK              (0x3FU << GPIO0_IOC_GPIO0B_DS_1_GPIO0B3_DS_SHIFT)            /* 0x00003F00 */
/* GPIO0B_DS_2 */
#define GPIO0_IOC_GPIO0B_DS_2_OFFSET                       (0x118U)
#define GPIO0_IOC_GPIO0B_DS_2_GPIO0B4_DS_SHIFT             (0U)
#define GPIO0_IOC_GPIO0B_DS_2_GPIO0B4_DS_MASK              (0x3FU << GPIO0_IOC_GPIO0B_DS_2_GPIO0B4_DS_SHIFT)            /* 0x0000003F */
#define GPIO0_IOC_GPIO0B_DS_2_GPIO0B5_DS_SHIFT             (8U)
#define GPIO0_IOC_GPIO0B_DS_2_GPIO0B5_DS_MASK              (0x3FU << GPIO0_IOC_GPIO0B_DS_2_GPIO0B5_DS_SHIFT)            /* 0x00003F00 */
/* GPIO0B_DS_3 */
#define GPIO0_IOC_GPIO0B_DS_3_OFFSET                       (0x11CU)
#define GPIO0_IOC_GPIO0B_DS_3_GPIO0B6_DS_SHIFT             (0U)
#define GPIO0_IOC_GPIO0B_DS_3_GPIO0B6_DS_MASK              (0x3FU << GPIO0_IOC_GPIO0B_DS_3_GPIO0B6_DS_SHIFT)            /* 0x0000003F */
#define GPIO0_IOC_GPIO0B_DS_3_GPIO0B7_DS_SHIFT             (8U)
#define GPIO0_IOC_GPIO0B_DS_3_GPIO0B7_DS_MASK              (0x3FU << GPIO0_IOC_GPIO0B_DS_3_GPIO0B7_DS_SHIFT)            /* 0x00003F00 */
/* GPIO0C_DS_0 */
#define GPIO0_IOC_GPIO0C_DS_0_OFFSET                       (0x120U)
#define GPIO0_IOC_GPIO0C_DS_0_GPIO0C0_DS_SHIFT             (0U)
#define GPIO0_IOC_GPIO0C_DS_0_GPIO0C0_DS_MASK              (0x3FU << GPIO0_IOC_GPIO0C_DS_0_GPIO0C0_DS_SHIFT)            /* 0x0000003F */
#define GPIO0_IOC_GPIO0C_DS_0_GPIO0C1_DS_SHIFT             (8U)
#define GPIO0_IOC_GPIO0C_DS_0_GPIO0C1_DS_MASK              (0x3FU << GPIO0_IOC_GPIO0C_DS_0_GPIO0C1_DS_SHIFT)            /* 0x00003F00 */
/* GPIO0C_DS_1 */
#define GPIO0_IOC_GPIO0C_DS_1_OFFSET                       (0x124U)
#define GPIO0_IOC_GPIO0C_DS_1_GPIO0C2_DS_SHIFT             (0U)
#define GPIO0_IOC_GPIO0C_DS_1_GPIO0C2_DS_MASK              (0x3FU << GPIO0_IOC_GPIO0C_DS_1_GPIO0C2_DS_SHIFT)            /* 0x0000003F */
#define GPIO0_IOC_GPIO0C_DS_1_GPIO0C3_DS_SHIFT             (8U)
#define GPIO0_IOC_GPIO0C_DS_1_GPIO0C3_DS_MASK              (0x3FU << GPIO0_IOC_GPIO0C_DS_1_GPIO0C3_DS_SHIFT)            /* 0x00003F00 */
/* GPIO0C_DS_2 */
#define GPIO0_IOC_GPIO0C_DS_2_OFFSET                       (0x128U)
#define GPIO0_IOC_GPIO0C_DS_2_GPIO0C4_DS_SHIFT             (0U)
#define GPIO0_IOC_GPIO0C_DS_2_GPIO0C4_DS_MASK              (0x3FU << GPIO0_IOC_GPIO0C_DS_2_GPIO0C4_DS_SHIFT)            /* 0x0000003F */
#define GPIO0_IOC_GPIO0C_DS_2_GPIO0C5_DS_SHIFT             (8U)
#define GPIO0_IOC_GPIO0C_DS_2_GPIO0C5_DS_MASK              (0x3FU << GPIO0_IOC_GPIO0C_DS_2_GPIO0C5_DS_SHIFT)            /* 0x00003F00 */
/* GPIO0C_DS_3 */
#define GPIO0_IOC_GPIO0C_DS_3_OFFSET                       (0x12CU)
#define GPIO0_IOC_GPIO0C_DS_3_GPIO0C6_DS_SHIFT             (0U)
#define GPIO0_IOC_GPIO0C_DS_3_GPIO0C6_DS_MASK              (0x3FU << GPIO0_IOC_GPIO0C_DS_3_GPIO0C6_DS_SHIFT)            /* 0x0000003F */
#define GPIO0_IOC_GPIO0C_DS_3_GPIO0C7_DS_SHIFT             (8U)
#define GPIO0_IOC_GPIO0C_DS_3_GPIO0C7_DS_MASK              (0x3FU << GPIO0_IOC_GPIO0C_DS_3_GPIO0C7_DS_SHIFT)            /* 0x00003F00 */
/* GPIO0A_PULL */
#define GPIO0_IOC_GPIO0A_PULL_OFFSET                       (0x200U)
#define GPIO0_IOC_GPIO0A_PULL_GPIO0A0_PULL_SHIFT           (0U)
#define GPIO0_IOC_GPIO0A_PULL_GPIO0A0_PULL_MASK            (0x3U << GPIO0_IOC_GPIO0A_PULL_GPIO0A0_PULL_SHIFT)           /* 0x00000003 */
#define GPIO0_IOC_GPIO0A_PULL_GPIO0A1_PULL_SHIFT           (2U)
#define GPIO0_IOC_GPIO0A_PULL_GPIO0A1_PULL_MASK            (0x3U << GPIO0_IOC_GPIO0A_PULL_GPIO0A1_PULL_SHIFT)           /* 0x0000000C */
#define GPIO0_IOC_GPIO0A_PULL_GPIO0A2_PULL_SHIFT           (4U)
#define GPIO0_IOC_GPIO0A_PULL_GPIO0A2_PULL_MASK            (0x3U << GPIO0_IOC_GPIO0A_PULL_GPIO0A2_PULL_SHIFT)           /* 0x00000030 */
#define GPIO0_IOC_GPIO0A_PULL_GPIO0A3_PULL_SHIFT           (6U)
#define GPIO0_IOC_GPIO0A_PULL_GPIO0A3_PULL_MASK            (0x3U << GPIO0_IOC_GPIO0A_PULL_GPIO0A3_PULL_SHIFT)           /* 0x000000C0 */
#define GPIO0_IOC_GPIO0A_PULL_GPIO0A4_PULL_SHIFT           (8U)
#define GPIO0_IOC_GPIO0A_PULL_GPIO0A4_PULL_MASK            (0x3U << GPIO0_IOC_GPIO0A_PULL_GPIO0A4_PULL_SHIFT)           /* 0x00000300 */
#define GPIO0_IOC_GPIO0A_PULL_GPIO0A5_PULL_SHIFT           (10U)
#define GPIO0_IOC_GPIO0A_PULL_GPIO0A5_PULL_MASK            (0x3U << GPIO0_IOC_GPIO0A_PULL_GPIO0A5_PULL_SHIFT)           /* 0x00000C00 */
#define GPIO0_IOC_GPIO0A_PULL_GPIO0A6_PULL_SHIFT           (12U)
#define GPIO0_IOC_GPIO0A_PULL_GPIO0A6_PULL_MASK            (0x3U << GPIO0_IOC_GPIO0A_PULL_GPIO0A6_PULL_SHIFT)           /* 0x00003000 */
#define GPIO0_IOC_GPIO0A_PULL_GPIO0A7_PULL_SHIFT           (14U)
#define GPIO0_IOC_GPIO0A_PULL_GPIO0A7_PULL_MASK            (0x3U << GPIO0_IOC_GPIO0A_PULL_GPIO0A7_PULL_SHIFT)           /* 0x0000C000 */
/* GPIO0B_PULL */
#define GPIO0_IOC_GPIO0B_PULL_OFFSET                       (0x204U)
#define GPIO0_IOC_GPIO0B_PULL_GPIO0B0_PULL_SHIFT           (0U)
#define GPIO0_IOC_GPIO0B_PULL_GPIO0B0_PULL_MASK            (0x3U << GPIO0_IOC_GPIO0B_PULL_GPIO0B0_PULL_SHIFT)           /* 0x00000003 */
#define GPIO0_IOC_GPIO0B_PULL_GPIO0B1_PULL_SHIFT           (2U)
#define GPIO0_IOC_GPIO0B_PULL_GPIO0B1_PULL_MASK            (0x3U << GPIO0_IOC_GPIO0B_PULL_GPIO0B1_PULL_SHIFT)           /* 0x0000000C */
#define GPIO0_IOC_GPIO0B_PULL_GPIO0B2_PULL_SHIFT           (4U)
#define GPIO0_IOC_GPIO0B_PULL_GPIO0B2_PULL_MASK            (0x3U << GPIO0_IOC_GPIO0B_PULL_GPIO0B2_PULL_SHIFT)           /* 0x00000030 */
#define GPIO0_IOC_GPIO0B_PULL_GPIO0B3_PULL_SHIFT           (6U)
#define GPIO0_IOC_GPIO0B_PULL_GPIO0B3_PULL_MASK            (0x3U << GPIO0_IOC_GPIO0B_PULL_GPIO0B3_PULL_SHIFT)           /* 0x000000C0 */
#define GPIO0_IOC_GPIO0B_PULL_GPIO0B4_PULL_SHIFT           (8U)
#define GPIO0_IOC_GPIO0B_PULL_GPIO0B4_PULL_MASK            (0x3U << GPIO0_IOC_GPIO0B_PULL_GPIO0B4_PULL_SHIFT)           /* 0x00000300 */
#define GPIO0_IOC_GPIO0B_PULL_GPIO0B5_PULL_SHIFT           (10U)
#define GPIO0_IOC_GPIO0B_PULL_GPIO0B5_PULL_MASK            (0x3U << GPIO0_IOC_GPIO0B_PULL_GPIO0B5_PULL_SHIFT)           /* 0x00000C00 */
#define GPIO0_IOC_GPIO0B_PULL_GPIO0B6_PULL_SHIFT           (12U)
#define GPIO0_IOC_GPIO0B_PULL_GPIO0B6_PULL_MASK            (0x3U << GPIO0_IOC_GPIO0B_PULL_GPIO0B6_PULL_SHIFT)           /* 0x00003000 */
#define GPIO0_IOC_GPIO0B_PULL_GPIO0B7_PULL_SHIFT           (14U)
#define GPIO0_IOC_GPIO0B_PULL_GPIO0B7_PULL_MASK            (0x3U << GPIO0_IOC_GPIO0B_PULL_GPIO0B7_PULL_SHIFT)           /* 0x0000C000 */
/* GPIO0C_PULL */
#define GPIO0_IOC_GPIO0C_PULL_OFFSET                       (0x208U)
#define GPIO0_IOC_GPIO0C_PULL_GPIO0C0_PULL_SHIFT           (0U)
#define GPIO0_IOC_GPIO0C_PULL_GPIO0C0_PULL_MASK            (0x3U << GPIO0_IOC_GPIO0C_PULL_GPIO0C0_PULL_SHIFT)           /* 0x00000003 */
#define GPIO0_IOC_GPIO0C_PULL_GPIO0C1_PULL_SHIFT           (2U)
#define GPIO0_IOC_GPIO0C_PULL_GPIO0C1_PULL_MASK            (0x3U << GPIO0_IOC_GPIO0C_PULL_GPIO0C1_PULL_SHIFT)           /* 0x0000000C */
#define GPIO0_IOC_GPIO0C_PULL_GPIO0C2_PULL_SHIFT           (4U)
#define GPIO0_IOC_GPIO0C_PULL_GPIO0C2_PULL_MASK            (0x3U << GPIO0_IOC_GPIO0C_PULL_GPIO0C2_PULL_SHIFT)           /* 0x00000030 */
#define GPIO0_IOC_GPIO0C_PULL_GPIO0C3_PULL_SHIFT           (6U)
#define GPIO0_IOC_GPIO0C_PULL_GPIO0C3_PULL_MASK            (0x3U << GPIO0_IOC_GPIO0C_PULL_GPIO0C3_PULL_SHIFT)           /* 0x000000C0 */
#define GPIO0_IOC_GPIO0C_PULL_GPIO0C4_PULL_SHIFT           (8U)
#define GPIO0_IOC_GPIO0C_PULL_GPIO0C4_PULL_MASK            (0x3U << GPIO0_IOC_GPIO0C_PULL_GPIO0C4_PULL_SHIFT)           /* 0x00000300 */
#define GPIO0_IOC_GPIO0C_PULL_GPIO0C5_PULL_SHIFT           (10U)
#define GPIO0_IOC_GPIO0C_PULL_GPIO0C5_PULL_MASK            (0x3U << GPIO0_IOC_GPIO0C_PULL_GPIO0C5_PULL_SHIFT)           /* 0x00000C00 */
#define GPIO0_IOC_GPIO0C_PULL_GPIO0C6_PULL_SHIFT           (12U)
#define GPIO0_IOC_GPIO0C_PULL_GPIO0C6_PULL_MASK            (0x3U << GPIO0_IOC_GPIO0C_PULL_GPIO0C6_PULL_SHIFT)           /* 0x00003000 */
#define GPIO0_IOC_GPIO0C_PULL_GPIO0C7_PULL_SHIFT           (14U)
#define GPIO0_IOC_GPIO0C_PULL_GPIO0C7_PULL_MASK            (0x3U << GPIO0_IOC_GPIO0C_PULL_GPIO0C7_PULL_SHIFT)           /* 0x0000C000 */
/* GPIO0A_IE */
#define GPIO0_IOC_GPIO0A_IE_OFFSET                         (0x300U)
#define GPIO0_IOC_GPIO0A_IE_GPIO0A0_IE_SHIFT               (0U)
#define GPIO0_IOC_GPIO0A_IE_GPIO0A0_IE_MASK                (0x1U << GPIO0_IOC_GPIO0A_IE_GPIO0A0_IE_SHIFT)               /* 0x00000001 */
#define GPIO0_IOC_GPIO0A_IE_GPIO0A1_IE_SHIFT               (1U)
#define GPIO0_IOC_GPIO0A_IE_GPIO0A1_IE_MASK                (0x1U << GPIO0_IOC_GPIO0A_IE_GPIO0A1_IE_SHIFT)               /* 0x00000002 */
#define GPIO0_IOC_GPIO0A_IE_GPIO0A2_IE_SHIFT               (2U)
#define GPIO0_IOC_GPIO0A_IE_GPIO0A2_IE_MASK                (0x1U << GPIO0_IOC_GPIO0A_IE_GPIO0A2_IE_SHIFT)               /* 0x00000004 */
#define GPIO0_IOC_GPIO0A_IE_GPIO0A3_IE_SHIFT               (3U)
#define GPIO0_IOC_GPIO0A_IE_GPIO0A3_IE_MASK                (0x1U << GPIO0_IOC_GPIO0A_IE_GPIO0A3_IE_SHIFT)               /* 0x00000008 */
#define GPIO0_IOC_GPIO0A_IE_GPIO0A4_IE_SHIFT               (4U)
#define GPIO0_IOC_GPIO0A_IE_GPIO0A4_IE_MASK                (0x1U << GPIO0_IOC_GPIO0A_IE_GPIO0A4_IE_SHIFT)               /* 0x00000010 */
#define GPIO0_IOC_GPIO0A_IE_GPIO0A5_IE_SHIFT               (5U)
#define GPIO0_IOC_GPIO0A_IE_GPIO0A5_IE_MASK                (0x1U << GPIO0_IOC_GPIO0A_IE_GPIO0A5_IE_SHIFT)               /* 0x00000020 */
#define GPIO0_IOC_GPIO0A_IE_GPIO0A6_IE_SHIFT               (6U)
#define GPIO0_IOC_GPIO0A_IE_GPIO0A6_IE_MASK                (0x1U << GPIO0_IOC_GPIO0A_IE_GPIO0A6_IE_SHIFT)               /* 0x00000040 */
#define GPIO0_IOC_GPIO0A_IE_GPIO0A7_IE_SHIFT               (7U)
#define GPIO0_IOC_GPIO0A_IE_GPIO0A7_IE_MASK                (0x1U << GPIO0_IOC_GPIO0A_IE_GPIO0A7_IE_SHIFT)               /* 0x00000080 */
/* GPIO0B_IE */
#define GPIO0_IOC_GPIO0B_IE_OFFSET                         (0x304U)
#define GPIO0_IOC_GPIO0B_IE_GPIO0B0_IE_SHIFT               (0U)
#define GPIO0_IOC_GPIO0B_IE_GPIO0B0_IE_MASK                (0x1U << GPIO0_IOC_GPIO0B_IE_GPIO0B0_IE_SHIFT)               /* 0x00000001 */
#define GPIO0_IOC_GPIO0B_IE_GPIO0B1_IE_SHIFT               (1U)
#define GPIO0_IOC_GPIO0B_IE_GPIO0B1_IE_MASK                (0x1U << GPIO0_IOC_GPIO0B_IE_GPIO0B1_IE_SHIFT)               /* 0x00000002 */
#define GPIO0_IOC_GPIO0B_IE_GPIO0B2_IE_SHIFT               (2U)
#define GPIO0_IOC_GPIO0B_IE_GPIO0B2_IE_MASK                (0x1U << GPIO0_IOC_GPIO0B_IE_GPIO0B2_IE_SHIFT)               /* 0x00000004 */
#define GPIO0_IOC_GPIO0B_IE_GPIO0B3_IE_SHIFT               (3U)
#define GPIO0_IOC_GPIO0B_IE_GPIO0B3_IE_MASK                (0x1U << GPIO0_IOC_GPIO0B_IE_GPIO0B3_IE_SHIFT)               /* 0x00000008 */
#define GPIO0_IOC_GPIO0B_IE_GPIO0B4_IE_SHIFT               (4U)
#define GPIO0_IOC_GPIO0B_IE_GPIO0B4_IE_MASK                (0x1U << GPIO0_IOC_GPIO0B_IE_GPIO0B4_IE_SHIFT)               /* 0x00000010 */
#define GPIO0_IOC_GPIO0B_IE_GPIO0B5_IE_SHIFT               (5U)
#define GPIO0_IOC_GPIO0B_IE_GPIO0B5_IE_MASK                (0x1U << GPIO0_IOC_GPIO0B_IE_GPIO0B5_IE_SHIFT)               /* 0x00000020 */
#define GPIO0_IOC_GPIO0B_IE_GPIO0B6_IE_SHIFT               (6U)
#define GPIO0_IOC_GPIO0B_IE_GPIO0B6_IE_MASK                (0x1U << GPIO0_IOC_GPIO0B_IE_GPIO0B6_IE_SHIFT)               /* 0x00000040 */
#define GPIO0_IOC_GPIO0B_IE_GPIO0B7_IE_SHIFT               (7U)
#define GPIO0_IOC_GPIO0B_IE_GPIO0B7_IE_MASK                (0x1U << GPIO0_IOC_GPIO0B_IE_GPIO0B7_IE_SHIFT)               /* 0x00000080 */
/* GPIO0C_IE */
#define GPIO0_IOC_GPIO0C_IE_OFFSET                         (0x308U)
#define GPIO0_IOC_GPIO0C_IE_GPIO0C0_IE_SHIFT               (0U)
#define GPIO0_IOC_GPIO0C_IE_GPIO0C0_IE_MASK                (0x1U << GPIO0_IOC_GPIO0C_IE_GPIO0C0_IE_SHIFT)               /* 0x00000001 */
#define GPIO0_IOC_GPIO0C_IE_GPIO0C1_IE_SHIFT               (1U)
#define GPIO0_IOC_GPIO0C_IE_GPIO0C1_IE_MASK                (0x1U << GPIO0_IOC_GPIO0C_IE_GPIO0C1_IE_SHIFT)               /* 0x00000002 */
#define GPIO0_IOC_GPIO0C_IE_GPIO0C2_IE_SHIFT               (2U)
#define GPIO0_IOC_GPIO0C_IE_GPIO0C2_IE_MASK                (0x1U << GPIO0_IOC_GPIO0C_IE_GPIO0C2_IE_SHIFT)               /* 0x00000004 */
#define GPIO0_IOC_GPIO0C_IE_GPIO0C3_IE_SHIFT               (3U)
#define GPIO0_IOC_GPIO0C_IE_GPIO0C3_IE_MASK                (0x1U << GPIO0_IOC_GPIO0C_IE_GPIO0C3_IE_SHIFT)               /* 0x00000008 */
#define GPIO0_IOC_GPIO0C_IE_GPIO0C4_IE_SHIFT               (4U)
#define GPIO0_IOC_GPIO0C_IE_GPIO0C4_IE_MASK                (0x1U << GPIO0_IOC_GPIO0C_IE_GPIO0C4_IE_SHIFT)               /* 0x00000010 */
#define GPIO0_IOC_GPIO0C_IE_GPIO0C5_IE_SHIFT               (5U)
#define GPIO0_IOC_GPIO0C_IE_GPIO0C5_IE_MASK                (0x1U << GPIO0_IOC_GPIO0C_IE_GPIO0C5_IE_SHIFT)               /* 0x00000020 */
#define GPIO0_IOC_GPIO0C_IE_GPIO0C6_IE_SHIFT               (6U)
#define GPIO0_IOC_GPIO0C_IE_GPIO0C6_IE_MASK                (0x1U << GPIO0_IOC_GPIO0C_IE_GPIO0C6_IE_SHIFT)               /* 0x00000040 */
#define GPIO0_IOC_GPIO0C_IE_GPIO0C7_IE_SHIFT               (7U)
#define GPIO0_IOC_GPIO0C_IE_GPIO0C7_IE_MASK                (0x1U << GPIO0_IOC_GPIO0C_IE_GPIO0C7_IE_SHIFT)               /* 0x00000080 */
/* GPIO0A_SMT */
#define GPIO0_IOC_GPIO0A_SMT_OFFSET                        (0x400U)
#define GPIO0_IOC_GPIO0A_SMT_GPIO0A0_SMT_SHIFT             (0U)
#define GPIO0_IOC_GPIO0A_SMT_GPIO0A0_SMT_MASK              (0x1U << GPIO0_IOC_GPIO0A_SMT_GPIO0A0_SMT_SHIFT)             /* 0x00000001 */
#define GPIO0_IOC_GPIO0A_SMT_GPIO0A1_SMT_SHIFT             (1U)
#define GPIO0_IOC_GPIO0A_SMT_GPIO0A1_SMT_MASK              (0x1U << GPIO0_IOC_GPIO0A_SMT_GPIO0A1_SMT_SHIFT)             /* 0x00000002 */
#define GPIO0_IOC_GPIO0A_SMT_GPIO0A2_SMT_SHIFT             (2U)
#define GPIO0_IOC_GPIO0A_SMT_GPIO0A2_SMT_MASK              (0x1U << GPIO0_IOC_GPIO0A_SMT_GPIO0A2_SMT_SHIFT)             /* 0x00000004 */
#define GPIO0_IOC_GPIO0A_SMT_GPIO0A3_SMT_SHIFT             (3U)
#define GPIO0_IOC_GPIO0A_SMT_GPIO0A3_SMT_MASK              (0x1U << GPIO0_IOC_GPIO0A_SMT_GPIO0A3_SMT_SHIFT)             /* 0x00000008 */
#define GPIO0_IOC_GPIO0A_SMT_GPIO0A4_SMT_SHIFT             (4U)
#define GPIO0_IOC_GPIO0A_SMT_GPIO0A4_SMT_MASK              (0x1U << GPIO0_IOC_GPIO0A_SMT_GPIO0A4_SMT_SHIFT)             /* 0x00000010 */
#define GPIO0_IOC_GPIO0A_SMT_GPIO0A5_SMT_SHIFT             (5U)
#define GPIO0_IOC_GPIO0A_SMT_GPIO0A5_SMT_MASK              (0x1U << GPIO0_IOC_GPIO0A_SMT_GPIO0A5_SMT_SHIFT)             /* 0x00000020 */
#define GPIO0_IOC_GPIO0A_SMT_GPIO0A6_SMT_SHIFT             (6U)
#define GPIO0_IOC_GPIO0A_SMT_GPIO0A6_SMT_MASK              (0x1U << GPIO0_IOC_GPIO0A_SMT_GPIO0A6_SMT_SHIFT)             /* 0x00000040 */
#define GPIO0_IOC_GPIO0A_SMT_GPIO0A7_SMT_SHIFT             (7U)
#define GPIO0_IOC_GPIO0A_SMT_GPIO0A7_SMT_MASK              (0x1U << GPIO0_IOC_GPIO0A_SMT_GPIO0A7_SMT_SHIFT)             /* 0x00000080 */
/* GPIO0B_SMT */
#define GPIO0_IOC_GPIO0B_SMT_OFFSET                        (0x404U)
#define GPIO0_IOC_GPIO0B_SMT_GPIO0B0_SMT_SHIFT             (0U)
#define GPIO0_IOC_GPIO0B_SMT_GPIO0B0_SMT_MASK              (0x1U << GPIO0_IOC_GPIO0B_SMT_GPIO0B0_SMT_SHIFT)             /* 0x00000001 */
#define GPIO0_IOC_GPIO0B_SMT_GPIO0B1_SMT_SHIFT             (1U)
#define GPIO0_IOC_GPIO0B_SMT_GPIO0B1_SMT_MASK              (0x1U << GPIO0_IOC_GPIO0B_SMT_GPIO0B1_SMT_SHIFT)             /* 0x00000002 */
#define GPIO0_IOC_GPIO0B_SMT_GPIO0B2_SMT_SHIFT             (2U)
#define GPIO0_IOC_GPIO0B_SMT_GPIO0B2_SMT_MASK              (0x1U << GPIO0_IOC_GPIO0B_SMT_GPIO0B2_SMT_SHIFT)             /* 0x00000004 */
#define GPIO0_IOC_GPIO0B_SMT_GPIO0B3_SMT_SHIFT             (3U)
#define GPIO0_IOC_GPIO0B_SMT_GPIO0B3_SMT_MASK              (0x1U << GPIO0_IOC_GPIO0B_SMT_GPIO0B3_SMT_SHIFT)             /* 0x00000008 */
#define GPIO0_IOC_GPIO0B_SMT_GPIO0B4_SMT_SHIFT             (4U)
#define GPIO0_IOC_GPIO0B_SMT_GPIO0B4_SMT_MASK              (0x1U << GPIO0_IOC_GPIO0B_SMT_GPIO0B4_SMT_SHIFT)             /* 0x00000010 */
#define GPIO0_IOC_GPIO0B_SMT_GPIO0B5_SMT_SHIFT             (5U)
#define GPIO0_IOC_GPIO0B_SMT_GPIO0B5_SMT_MASK              (0x1U << GPIO0_IOC_GPIO0B_SMT_GPIO0B5_SMT_SHIFT)             /* 0x00000020 */
#define GPIO0_IOC_GPIO0B_SMT_GPIO0B6_SMT_SHIFT             (6U)
#define GPIO0_IOC_GPIO0B_SMT_GPIO0B6_SMT_MASK              (0x1U << GPIO0_IOC_GPIO0B_SMT_GPIO0B6_SMT_SHIFT)             /* 0x00000040 */
#define GPIO0_IOC_GPIO0B_SMT_GPIO0B7_SMT_SHIFT             (7U)
#define GPIO0_IOC_GPIO0B_SMT_GPIO0B7_SMT_MASK              (0x1U << GPIO0_IOC_GPIO0B_SMT_GPIO0B7_SMT_SHIFT)             /* 0x00000080 */
/* GPIO0C_SMT */
#define GPIO0_IOC_GPIO0C_SMT_OFFSET                        (0x408U)
#define GPIO0_IOC_GPIO0C_SMT_GPIO0C0_SMT_SHIFT             (0U)
#define GPIO0_IOC_GPIO0C_SMT_GPIO0C0_SMT_MASK              (0x1U << GPIO0_IOC_GPIO0C_SMT_GPIO0C0_SMT_SHIFT)             /* 0x00000001 */
#define GPIO0_IOC_GPIO0C_SMT_GPIO0C1_SMT_SHIFT             (1U)
#define GPIO0_IOC_GPIO0C_SMT_GPIO0C1_SMT_MASK              (0x1U << GPIO0_IOC_GPIO0C_SMT_GPIO0C1_SMT_SHIFT)             /* 0x00000002 */
#define GPIO0_IOC_GPIO0C_SMT_GPIO0C2_SMT_SHIFT             (2U)
#define GPIO0_IOC_GPIO0C_SMT_GPIO0C2_SMT_MASK              (0x1U << GPIO0_IOC_GPIO0C_SMT_GPIO0C2_SMT_SHIFT)             /* 0x00000004 */
#define GPIO0_IOC_GPIO0C_SMT_GPIO0C3_SMT_SHIFT             (3U)
#define GPIO0_IOC_GPIO0C_SMT_GPIO0C3_SMT_MASK              (0x1U << GPIO0_IOC_GPIO0C_SMT_GPIO0C3_SMT_SHIFT)             /* 0x00000008 */
#define GPIO0_IOC_GPIO0C_SMT_GPIO0C4_SMT_SHIFT             (4U)
#define GPIO0_IOC_GPIO0C_SMT_GPIO0C4_SMT_MASK              (0x1U << GPIO0_IOC_GPIO0C_SMT_GPIO0C4_SMT_SHIFT)             /* 0x00000010 */
#define GPIO0_IOC_GPIO0C_SMT_GPIO0C5_SMT_SHIFT             (5U)
#define GPIO0_IOC_GPIO0C_SMT_GPIO0C5_SMT_MASK              (0x1U << GPIO0_IOC_GPIO0C_SMT_GPIO0C5_SMT_SHIFT)             /* 0x00000020 */
#define GPIO0_IOC_GPIO0C_SMT_GPIO0C6_SMT_SHIFT             (6U)
#define GPIO0_IOC_GPIO0C_SMT_GPIO0C6_SMT_MASK              (0x1U << GPIO0_IOC_GPIO0C_SMT_GPIO0C6_SMT_SHIFT)             /* 0x00000040 */
#define GPIO0_IOC_GPIO0C_SMT_GPIO0C7_SMT_SHIFT             (7U)
#define GPIO0_IOC_GPIO0C_SMT_GPIO0C7_SMT_MASK              (0x1U << GPIO0_IOC_GPIO0C_SMT_GPIO0C7_SMT_SHIFT)             /* 0x00000080 */
/* GPIO0A_SUS */
#define GPIO0_IOC_GPIO0A_SUS_OFFSET                        (0x500U)
#define GPIO0_IOC_GPIO0A_SUS_GPIO0A0_SUS_SHIFT             (0U)
#define GPIO0_IOC_GPIO0A_SUS_GPIO0A0_SUS_MASK              (0x1U << GPIO0_IOC_GPIO0A_SUS_GPIO0A0_SUS_SHIFT)             /* 0x00000001 */
#define GPIO0_IOC_GPIO0A_SUS_GPIO0A1_SUS_SHIFT             (1U)
#define GPIO0_IOC_GPIO0A_SUS_GPIO0A1_SUS_MASK              (0x1U << GPIO0_IOC_GPIO0A_SUS_GPIO0A1_SUS_SHIFT)             /* 0x00000002 */
#define GPIO0_IOC_GPIO0A_SUS_GPIO0A2_SUS_SHIFT             (2U)
#define GPIO0_IOC_GPIO0A_SUS_GPIO0A2_SUS_MASK              (0x1U << GPIO0_IOC_GPIO0A_SUS_GPIO0A2_SUS_SHIFT)             /* 0x00000004 */
#define GPIO0_IOC_GPIO0A_SUS_GPIO0A3_SUS_SHIFT             (3U)
#define GPIO0_IOC_GPIO0A_SUS_GPIO0A3_SUS_MASK              (0x1U << GPIO0_IOC_GPIO0A_SUS_GPIO0A3_SUS_SHIFT)             /* 0x00000008 */
#define GPIO0_IOC_GPIO0A_SUS_GPIO0A4_SUS_SHIFT             (4U)
#define GPIO0_IOC_GPIO0A_SUS_GPIO0A4_SUS_MASK              (0x1U << GPIO0_IOC_GPIO0A_SUS_GPIO0A4_SUS_SHIFT)             /* 0x00000010 */
#define GPIO0_IOC_GPIO0A_SUS_GPIO0A5_SUS_SHIFT             (5U)
#define GPIO0_IOC_GPIO0A_SUS_GPIO0A5_SUS_MASK              (0x1U << GPIO0_IOC_GPIO0A_SUS_GPIO0A5_SUS_SHIFT)             /* 0x00000020 */
#define GPIO0_IOC_GPIO0A_SUS_GPIO0A6_SUS_SHIFT             (6U)
#define GPIO0_IOC_GPIO0A_SUS_GPIO0A6_SUS_MASK              (0x1U << GPIO0_IOC_GPIO0A_SUS_GPIO0A6_SUS_SHIFT)             /* 0x00000040 */
#define GPIO0_IOC_GPIO0A_SUS_GPIO0A7_SUS_SHIFT             (7U)
#define GPIO0_IOC_GPIO0A_SUS_GPIO0A7_SUS_MASK              (0x1U << GPIO0_IOC_GPIO0A_SUS_GPIO0A7_SUS_SHIFT)             /* 0x00000080 */
/* GPIO0B_SUS */
#define GPIO0_IOC_GPIO0B_SUS_OFFSET                        (0x504U)
#define GPIO0_IOC_GPIO0B_SUS_GPIO0B0_SUS_SHIFT             (0U)
#define GPIO0_IOC_GPIO0B_SUS_GPIO0B0_SUS_MASK              (0x1U << GPIO0_IOC_GPIO0B_SUS_GPIO0B0_SUS_SHIFT)             /* 0x00000001 */
#define GPIO0_IOC_GPIO0B_SUS_GPIO0B1_SUS_SHIFT             (1U)
#define GPIO0_IOC_GPIO0B_SUS_GPIO0B1_SUS_MASK              (0x1U << GPIO0_IOC_GPIO0B_SUS_GPIO0B1_SUS_SHIFT)             /* 0x00000002 */
#define GPIO0_IOC_GPIO0B_SUS_GPIO0B2_SUS_SHIFT             (2U)
#define GPIO0_IOC_GPIO0B_SUS_GPIO0B2_SUS_MASK              (0x1U << GPIO0_IOC_GPIO0B_SUS_GPIO0B2_SUS_SHIFT)             /* 0x00000004 */
#define GPIO0_IOC_GPIO0B_SUS_GPIO0B3_SUS_SHIFT             (3U)
#define GPIO0_IOC_GPIO0B_SUS_GPIO0B3_SUS_MASK              (0x1U << GPIO0_IOC_GPIO0B_SUS_GPIO0B3_SUS_SHIFT)             /* 0x00000008 */
#define GPIO0_IOC_GPIO0B_SUS_GPIO0B4_SUS_SHIFT             (4U)
#define GPIO0_IOC_GPIO0B_SUS_GPIO0B4_SUS_MASK              (0x1U << GPIO0_IOC_GPIO0B_SUS_GPIO0B4_SUS_SHIFT)             /* 0x00000010 */
#define GPIO0_IOC_GPIO0B_SUS_GPIO0B5_SUS_SHIFT             (5U)
#define GPIO0_IOC_GPIO0B_SUS_GPIO0B5_SUS_MASK              (0x1U << GPIO0_IOC_GPIO0B_SUS_GPIO0B5_SUS_SHIFT)             /* 0x00000020 */
#define GPIO0_IOC_GPIO0B_SUS_GPIO0B6_SUS_SHIFT             (6U)
#define GPIO0_IOC_GPIO0B_SUS_GPIO0B6_SUS_MASK              (0x1U << GPIO0_IOC_GPIO0B_SUS_GPIO0B6_SUS_SHIFT)             /* 0x00000040 */
#define GPIO0_IOC_GPIO0B_SUS_GPIO0B7_SUS_SHIFT             (7U)
#define GPIO0_IOC_GPIO0B_SUS_GPIO0B7_SUS_MASK              (0x1U << GPIO0_IOC_GPIO0B_SUS_GPIO0B7_SUS_SHIFT)             /* 0x00000080 */
/* GPIO0C_SUS */
#define GPIO0_IOC_GPIO0C_SUS_OFFSET                        (0x508U)
#define GPIO0_IOC_GPIO0C_SUS_GPIO0C0_SUS_SHIFT             (0U)
#define GPIO0_IOC_GPIO0C_SUS_GPIO0C0_SUS_MASK              (0x1U << GPIO0_IOC_GPIO0C_SUS_GPIO0C0_SUS_SHIFT)             /* 0x00000001 */
#define GPIO0_IOC_GPIO0C_SUS_GPIO0C1_SUS_SHIFT             (1U)
#define GPIO0_IOC_GPIO0C_SUS_GPIO0C1_SUS_MASK              (0x1U << GPIO0_IOC_GPIO0C_SUS_GPIO0C1_SUS_SHIFT)             /* 0x00000002 */
#define GPIO0_IOC_GPIO0C_SUS_GPIO0C2_SUS_SHIFT             (2U)
#define GPIO0_IOC_GPIO0C_SUS_GPIO0C2_SUS_MASK              (0x1U << GPIO0_IOC_GPIO0C_SUS_GPIO0C2_SUS_SHIFT)             /* 0x00000004 */
#define GPIO0_IOC_GPIO0C_SUS_GPIO0C3_SUS_SHIFT             (3U)
#define GPIO0_IOC_GPIO0C_SUS_GPIO0C3_SUS_MASK              (0x1U << GPIO0_IOC_GPIO0C_SUS_GPIO0C3_SUS_SHIFT)             /* 0x00000008 */
#define GPIO0_IOC_GPIO0C_SUS_GPIO0C4_SUS_SHIFT             (4U)
#define GPIO0_IOC_GPIO0C_SUS_GPIO0C4_SUS_MASK              (0x1U << GPIO0_IOC_GPIO0C_SUS_GPIO0C4_SUS_SHIFT)             /* 0x00000010 */
#define GPIO0_IOC_GPIO0C_SUS_GPIO0C5_SUS_SHIFT             (5U)
#define GPIO0_IOC_GPIO0C_SUS_GPIO0C5_SUS_MASK              (0x1U << GPIO0_IOC_GPIO0C_SUS_GPIO0C5_SUS_SHIFT)             /* 0x00000020 */
#define GPIO0_IOC_GPIO0C_SUS_GPIO0C6_SUS_SHIFT             (6U)
#define GPIO0_IOC_GPIO0C_SUS_GPIO0C6_SUS_MASK              (0x1U << GPIO0_IOC_GPIO0C_SUS_GPIO0C6_SUS_SHIFT)             /* 0x00000040 */
#define GPIO0_IOC_GPIO0C_SUS_GPIO0C7_SUS_SHIFT             (7U)
#define GPIO0_IOC_GPIO0C_SUS_GPIO0C7_SUS_MASK              (0x1U << GPIO0_IOC_GPIO0C_SUS_GPIO0C7_SUS_SHIFT)             /* 0x00000080 */
/* GPIO0A_SL */
#define GPIO0_IOC_GPIO0A_SL_OFFSET                         (0x600U)
#define GPIO0_IOC_GPIO0A_SL_GPIO0A0_SL_SHIFT               (0U)
#define GPIO0_IOC_GPIO0A_SL_GPIO0A0_SL_MASK                (0x3U << GPIO0_IOC_GPIO0A_SL_GPIO0A0_SL_SHIFT)               /* 0x00000003 */
#define GPIO0_IOC_GPIO0A_SL_GPIO0A1_SL_SHIFT               (2U)
#define GPIO0_IOC_GPIO0A_SL_GPIO0A1_SL_MASK                (0x3U << GPIO0_IOC_GPIO0A_SL_GPIO0A1_SL_SHIFT)               /* 0x0000000C */
#define GPIO0_IOC_GPIO0A_SL_GPIO0A2_SL_SHIFT               (4U)
#define GPIO0_IOC_GPIO0A_SL_GPIO0A2_SL_MASK                (0x3U << GPIO0_IOC_GPIO0A_SL_GPIO0A2_SL_SHIFT)               /* 0x00000030 */
#define GPIO0_IOC_GPIO0A_SL_GPIO0A3_SL_SHIFT               (6U)
#define GPIO0_IOC_GPIO0A_SL_GPIO0A3_SL_MASK                (0x3U << GPIO0_IOC_GPIO0A_SL_GPIO0A3_SL_SHIFT)               /* 0x000000C0 */
#define GPIO0_IOC_GPIO0A_SL_GPIO0A4_SL_SHIFT               (8U)
#define GPIO0_IOC_GPIO0A_SL_GPIO0A4_SL_MASK                (0x3U << GPIO0_IOC_GPIO0A_SL_GPIO0A4_SL_SHIFT)               /* 0x00000300 */
#define GPIO0_IOC_GPIO0A_SL_GPIO0A5_SL_SHIFT               (10U)
#define GPIO0_IOC_GPIO0A_SL_GPIO0A5_SL_MASK                (0x3U << GPIO0_IOC_GPIO0A_SL_GPIO0A5_SL_SHIFT)               /* 0x00000C00 */
#define GPIO0_IOC_GPIO0A_SL_GPIO0A6_SL_SHIFT               (12U)
#define GPIO0_IOC_GPIO0A_SL_GPIO0A6_SL_MASK                (0x3U << GPIO0_IOC_GPIO0A_SL_GPIO0A6_SL_SHIFT)               /* 0x00003000 */
#define GPIO0_IOC_GPIO0A_SL_GPIO0A7_SL_SHIFT               (14U)
#define GPIO0_IOC_GPIO0A_SL_GPIO0A7_SL_MASK                (0x3U << GPIO0_IOC_GPIO0A_SL_GPIO0A7_SL_SHIFT)               /* 0x0000C000 */
/* GPIO0B_SL */
#define GPIO0_IOC_GPIO0B_SL_OFFSET                         (0x604U)
#define GPIO0_IOC_GPIO0B_SL_GPIO0B0_SL_SHIFT               (0U)
#define GPIO0_IOC_GPIO0B_SL_GPIO0B0_SL_MASK                (0x3U << GPIO0_IOC_GPIO0B_SL_GPIO0B0_SL_SHIFT)               /* 0x00000003 */
#define GPIO0_IOC_GPIO0B_SL_GPIO0B1_SL_SHIFT               (2U)
#define GPIO0_IOC_GPIO0B_SL_GPIO0B1_SL_MASK                (0x3U << GPIO0_IOC_GPIO0B_SL_GPIO0B1_SL_SHIFT)               /* 0x0000000C */
#define GPIO0_IOC_GPIO0B_SL_GPIO0B2_SL_SHIFT               (4U)
#define GPIO0_IOC_GPIO0B_SL_GPIO0B2_SL_MASK                (0x3U << GPIO0_IOC_GPIO0B_SL_GPIO0B2_SL_SHIFT)               /* 0x00000030 */
#define GPIO0_IOC_GPIO0B_SL_GPIO0B3_SL_SHIFT               (6U)
#define GPIO0_IOC_GPIO0B_SL_GPIO0B3_SL_MASK                (0x3U << GPIO0_IOC_GPIO0B_SL_GPIO0B3_SL_SHIFT)               /* 0x000000C0 */
#define GPIO0_IOC_GPIO0B_SL_GPIO0B4_SL_SHIFT               (8U)
#define GPIO0_IOC_GPIO0B_SL_GPIO0B4_SL_MASK                (0x3U << GPIO0_IOC_GPIO0B_SL_GPIO0B4_SL_SHIFT)               /* 0x00000300 */
#define GPIO0_IOC_GPIO0B_SL_GPIO0B5_SL_SHIFT               (10U)
#define GPIO0_IOC_GPIO0B_SL_GPIO0B5_SL_MASK                (0x3U << GPIO0_IOC_GPIO0B_SL_GPIO0B5_SL_SHIFT)               /* 0x00000C00 */
#define GPIO0_IOC_GPIO0B_SL_GPIO0B6_SL_SHIFT               (12U)
#define GPIO0_IOC_GPIO0B_SL_GPIO0B6_SL_MASK                (0x3U << GPIO0_IOC_GPIO0B_SL_GPIO0B6_SL_SHIFT)               /* 0x00003000 */
#define GPIO0_IOC_GPIO0B_SL_GPIO0B7_SL_SHIFT               (14U)
#define GPIO0_IOC_GPIO0B_SL_GPIO0B7_SL_MASK                (0x3U << GPIO0_IOC_GPIO0B_SL_GPIO0B7_SL_SHIFT)               /* 0x0000C000 */
/* GPIO0C_SL */
#define GPIO0_IOC_GPIO0C_SL_OFFSET                         (0x608U)
#define GPIO0_IOC_GPIO0C_SL_GPIO0C0_SL_SHIFT               (0U)
#define GPIO0_IOC_GPIO0C_SL_GPIO0C0_SL_MASK                (0x3U << GPIO0_IOC_GPIO0C_SL_GPIO0C0_SL_SHIFT)               /* 0x00000003 */
#define GPIO0_IOC_GPIO0C_SL_GPIO0C1_SL_SHIFT               (2U)
#define GPIO0_IOC_GPIO0C_SL_GPIO0C1_SL_MASK                (0x3U << GPIO0_IOC_GPIO0C_SL_GPIO0C1_SL_SHIFT)               /* 0x0000000C */
#define GPIO0_IOC_GPIO0C_SL_GPIO0C2_SL_SHIFT               (4U)
#define GPIO0_IOC_GPIO0C_SL_GPIO0C2_SL_MASK                (0x3U << GPIO0_IOC_GPIO0C_SL_GPIO0C2_SL_SHIFT)               /* 0x00000030 */
#define GPIO0_IOC_GPIO0C_SL_GPIO0C3_SL_SHIFT               (6U)
#define GPIO0_IOC_GPIO0C_SL_GPIO0C3_SL_MASK                (0x3U << GPIO0_IOC_GPIO0C_SL_GPIO0C3_SL_SHIFT)               /* 0x000000C0 */
#define GPIO0_IOC_GPIO0C_SL_GPIO0C4_SL_SHIFT               (8U)
#define GPIO0_IOC_GPIO0C_SL_GPIO0C4_SL_MASK                (0x3U << GPIO0_IOC_GPIO0C_SL_GPIO0C4_SL_SHIFT)               /* 0x00000300 */
#define GPIO0_IOC_GPIO0C_SL_GPIO0C5_SL_SHIFT               (10U)
#define GPIO0_IOC_GPIO0C_SL_GPIO0C5_SL_MASK                (0x3U << GPIO0_IOC_GPIO0C_SL_GPIO0C5_SL_SHIFT)               /* 0x00000C00 */
#define GPIO0_IOC_GPIO0C_SL_GPIO0C6_SL_SHIFT               (12U)
#define GPIO0_IOC_GPIO0C_SL_GPIO0C6_SL_MASK                (0x3U << GPIO0_IOC_GPIO0C_SL_GPIO0C6_SL_SHIFT)               /* 0x00003000 */
#define GPIO0_IOC_GPIO0C_SL_GPIO0C7_SL_SHIFT               (14U)
#define GPIO0_IOC_GPIO0C_SL_GPIO0C7_SL_MASK                (0x3U << GPIO0_IOC_GPIO0C_SL_GPIO0C7_SL_SHIFT)               /* 0x0000C000 */
/* GPIO0A_OD */
#define GPIO0_IOC_GPIO0A_OD_OFFSET                         (0x700U)
#define GPIO0_IOC_GPIO0A_OD_GPIO0A0_OD_SHIFT               (0U)
#define GPIO0_IOC_GPIO0A_OD_GPIO0A0_OD_MASK                (0x1U << GPIO0_IOC_GPIO0A_OD_GPIO0A0_OD_SHIFT)               /* 0x00000001 */
#define GPIO0_IOC_GPIO0A_OD_GPIO0A1_OD_SHIFT               (1U)
#define GPIO0_IOC_GPIO0A_OD_GPIO0A1_OD_MASK                (0x1U << GPIO0_IOC_GPIO0A_OD_GPIO0A1_OD_SHIFT)               /* 0x00000002 */
#define GPIO0_IOC_GPIO0A_OD_GPIO0A2_OD_SHIFT               (2U)
#define GPIO0_IOC_GPIO0A_OD_GPIO0A2_OD_MASK                (0x1U << GPIO0_IOC_GPIO0A_OD_GPIO0A2_OD_SHIFT)               /* 0x00000004 */
#define GPIO0_IOC_GPIO0A_OD_GPIO0A3_OD_SHIFT               (3U)
#define GPIO0_IOC_GPIO0A_OD_GPIO0A3_OD_MASK                (0x1U << GPIO0_IOC_GPIO0A_OD_GPIO0A3_OD_SHIFT)               /* 0x00000008 */
#define GPIO0_IOC_GPIO0A_OD_GPIO0A4_OD_SHIFT               (4U)
#define GPIO0_IOC_GPIO0A_OD_GPIO0A4_OD_MASK                (0x1U << GPIO0_IOC_GPIO0A_OD_GPIO0A4_OD_SHIFT)               /* 0x00000010 */
#define GPIO0_IOC_GPIO0A_OD_GPIO0A5_OD_SHIFT               (5U)
#define GPIO0_IOC_GPIO0A_OD_GPIO0A5_OD_MASK                (0x1U << GPIO0_IOC_GPIO0A_OD_GPIO0A5_OD_SHIFT)               /* 0x00000020 */
#define GPIO0_IOC_GPIO0A_OD_GPIO0A6_OD_SHIFT               (6U)
#define GPIO0_IOC_GPIO0A_OD_GPIO0A6_OD_MASK                (0x1U << GPIO0_IOC_GPIO0A_OD_GPIO0A6_OD_SHIFT)               /* 0x00000040 */
#define GPIO0_IOC_GPIO0A_OD_GPIO0A7_OD_SHIFT               (7U)
#define GPIO0_IOC_GPIO0A_OD_GPIO0A7_OD_MASK                (0x1U << GPIO0_IOC_GPIO0A_OD_GPIO0A7_OD_SHIFT)               /* 0x00000080 */
/* GPIO0B_OD */
#define GPIO0_IOC_GPIO0B_OD_OFFSET                         (0x704U)
#define GPIO0_IOC_GPIO0B_OD_GPIO0B0_OD_SHIFT               (0U)
#define GPIO0_IOC_GPIO0B_OD_GPIO0B0_OD_MASK                (0x1U << GPIO0_IOC_GPIO0B_OD_GPIO0B0_OD_SHIFT)               /* 0x00000001 */
#define GPIO0_IOC_GPIO0B_OD_GPIO0B1_OD_SHIFT               (1U)
#define GPIO0_IOC_GPIO0B_OD_GPIO0B1_OD_MASK                (0x1U << GPIO0_IOC_GPIO0B_OD_GPIO0B1_OD_SHIFT)               /* 0x00000002 */
#define GPIO0_IOC_GPIO0B_OD_GPIO0B2_OD_SHIFT               (2U)
#define GPIO0_IOC_GPIO0B_OD_GPIO0B2_OD_MASK                (0x1U << GPIO0_IOC_GPIO0B_OD_GPIO0B2_OD_SHIFT)               /* 0x00000004 */
#define GPIO0_IOC_GPIO0B_OD_GPIO0B3_OD_SHIFT               (3U)
#define GPIO0_IOC_GPIO0B_OD_GPIO0B3_OD_MASK                (0x1U << GPIO0_IOC_GPIO0B_OD_GPIO0B3_OD_SHIFT)               /* 0x00000008 */
#define GPIO0_IOC_GPIO0B_OD_GPIO0B4_OD_SHIFT               (4U)
#define GPIO0_IOC_GPIO0B_OD_GPIO0B4_OD_MASK                (0x1U << GPIO0_IOC_GPIO0B_OD_GPIO0B4_OD_SHIFT)               /* 0x00000010 */
#define GPIO0_IOC_GPIO0B_OD_GPIO0B5_OD_SHIFT               (5U)
#define GPIO0_IOC_GPIO0B_OD_GPIO0B5_OD_MASK                (0x1U << GPIO0_IOC_GPIO0B_OD_GPIO0B5_OD_SHIFT)               /* 0x00000020 */
#define GPIO0_IOC_GPIO0B_OD_GPIO0B6_OD_SHIFT               (6U)
#define GPIO0_IOC_GPIO0B_OD_GPIO0B6_OD_MASK                (0x1U << GPIO0_IOC_GPIO0B_OD_GPIO0B6_OD_SHIFT)               /* 0x00000040 */
#define GPIO0_IOC_GPIO0B_OD_GPIO0B7_OD_SHIFT               (7U)
#define GPIO0_IOC_GPIO0B_OD_GPIO0B7_OD_MASK                (0x1U << GPIO0_IOC_GPIO0B_OD_GPIO0B7_OD_SHIFT)               /* 0x00000080 */
/* GPIO0C_OD */
#define GPIO0_IOC_GPIO0C_OD_OFFSET                         (0x708U)
#define GPIO0_IOC_GPIO0C_OD_GPIO0C0_OD_SHIFT               (0U)
#define GPIO0_IOC_GPIO0C_OD_GPIO0C0_OD_MASK                (0x1U << GPIO0_IOC_GPIO0C_OD_GPIO0C0_OD_SHIFT)               /* 0x00000001 */
#define GPIO0_IOC_GPIO0C_OD_GPIO0C1_OD_SHIFT               (1U)
#define GPIO0_IOC_GPIO0C_OD_GPIO0C1_OD_MASK                (0x1U << GPIO0_IOC_GPIO0C_OD_GPIO0C1_OD_SHIFT)               /* 0x00000002 */
#define GPIO0_IOC_GPIO0C_OD_GPIO0C2_OD_SHIFT               (2U)
#define GPIO0_IOC_GPIO0C_OD_GPIO0C2_OD_MASK                (0x1U << GPIO0_IOC_GPIO0C_OD_GPIO0C2_OD_SHIFT)               /* 0x00000004 */
#define GPIO0_IOC_GPIO0C_OD_GPIO0C3_OD_SHIFT               (3U)
#define GPIO0_IOC_GPIO0C_OD_GPIO0C3_OD_MASK                (0x1U << GPIO0_IOC_GPIO0C_OD_GPIO0C3_OD_SHIFT)               /* 0x00000008 */
#define GPIO0_IOC_GPIO0C_OD_GPIO0C4_OD_SHIFT               (4U)
#define GPIO0_IOC_GPIO0C_OD_GPIO0C4_OD_MASK                (0x1U << GPIO0_IOC_GPIO0C_OD_GPIO0C4_OD_SHIFT)               /* 0x00000010 */
#define GPIO0_IOC_GPIO0C_OD_GPIO0C5_OD_SHIFT               (5U)
#define GPIO0_IOC_GPIO0C_OD_GPIO0C5_OD_MASK                (0x1U << GPIO0_IOC_GPIO0C_OD_GPIO0C5_OD_SHIFT)               /* 0x00000020 */
#define GPIO0_IOC_GPIO0C_OD_GPIO0C6_OD_SHIFT               (6U)
#define GPIO0_IOC_GPIO0C_OD_GPIO0C6_OD_MASK                (0x1U << GPIO0_IOC_GPIO0C_OD_GPIO0C6_OD_SHIFT)               /* 0x00000040 */
#define GPIO0_IOC_GPIO0C_OD_GPIO0C7_OD_SHIFT               (7U)
#define GPIO0_IOC_GPIO0C_OD_GPIO0C7_OD_MASK                (0x1U << GPIO0_IOC_GPIO0C_OD_GPIO0C7_OD_SHIFT)               /* 0x00000080 */
/* IDDQ_PMUIO */
#define GPIO0_IOC_IDDQ_PMUIO_OFFSET                        (0x800U)
#define GPIO0_IOC_IDDQ_PMUIO_PMUIO_SHIFT                   (0U)
#define GPIO0_IOC_IDDQ_PMUIO_PMUIO_MASK                    (0x1U << GPIO0_IOC_IDDQ_PMUIO_PMUIO_SHIFT)                   /* 0x00000001 */
/* GPIO0D_CON */
#define GPIO0_IOC_GPIO0D_CON_OFFSET                        (0x830U)
#define GPIO0_IOC_GPIO0D_CON_GPIO0D0_SEL_SHIFT             (0U)
#define GPIO0_IOC_GPIO0D_CON_GPIO0D0_SEL_MASK              (0x3U << GPIO0_IOC_GPIO0D_CON_GPIO0D0_SEL_SHIFT)             /* 0x00000003 */
#define GPIO0_IOC_GPIO0D_CON_GPIO0D0_IE_SHIFT              (2U)
#define GPIO0_IOC_GPIO0D_CON_GPIO0D0_IE_MASK               (0x1U << GPIO0_IOC_GPIO0D_CON_GPIO0D0_IE_SHIFT)              /* 0x00000004 */
#define GPIO0_IOC_GPIO0D_CON_GPIO0D0_DS_SHIFT              (3U)
#define GPIO0_IOC_GPIO0D_CON_GPIO0D0_DS_MASK               (0x3U << GPIO0_IOC_GPIO0D_CON_GPIO0D0_DS_SHIFT)              /* 0x00000018 */
#define GPIO0_IOC_GPIO0D_CON_GPIO0D0_PE_SHIFT              (5U)
#define GPIO0_IOC_GPIO0D_CON_GPIO0D0_PE_MASK               (0x1U << GPIO0_IOC_GPIO0D_CON_GPIO0D0_PE_SHIFT)              /* 0x00000020 */
#define GPIO0_IOC_GPIO0D_CON_GPIO0D0_PS_SHIFT              (6U)
#define GPIO0_IOC_GPIO0D_CON_GPIO0D0_PS_MASK               (0x1U << GPIO0_IOC_GPIO0D_CON_GPIO0D0_PS_SHIFT)              /* 0x00000040 */
#define GPIO0_IOC_GPIO0D_CON_GPIO0D0_HE_SHIFT              (7U)
#define GPIO0_IOC_GPIO0D_CON_GPIO0D0_HE_MASK               (0x1U << GPIO0_IOC_GPIO0D_CON_GPIO0D0_HE_SHIFT)              /* 0x00000080 */
#define GPIO0_IOC_GPIO0D_CON_GPIO0D0_SL_SHIFT              (8U)
#define GPIO0_IOC_GPIO0D_CON_GPIO0D0_SL_MASK               (0x1U << GPIO0_IOC_GPIO0D_CON_GPIO0D0_SL_SHIFT)              /* 0x00000100 */
#define GPIO0_IOC_GPIO0D_CON_GPIO0D0_SMT_SHIFT             (9U)
#define GPIO0_IOC_GPIO0D_CON_GPIO0D0_SMT_MASK              (0x3U << GPIO0_IOC_GPIO0D_CON_GPIO0D0_SMT_SHIFT)             /* 0x00000600 */
/**************************************TOUCH_SENSOR**************************************/
/* CH_START */
#define TOUCH_SENSOR_CH_START_OFFSET                       (0x0U)
#define TOUCH_SENSOR_CH_START_START_SHIFT                  (0U)
#define TOUCH_SENSOR_CH_START_START_MASK                   (0x1U << TOUCH_SENSOR_CH_START_START_SHIFT)                  /* 0x00000001 */
/* CH_ENABLE0 */
#define TOUCH_SENSOR_CH_ENABLE0_OFFSET                     (0x4U)
#define TOUCH_SENSOR_CH_ENABLE0_ENABLE_SHIFT               (0U)
#define TOUCH_SENSOR_CH_ENABLE0_ENABLE_MASK                (0xFFFFU << TOUCH_SENSOR_CH_ENABLE0_ENABLE_SHIFT)            /* 0x0000FFFF */
/* CH_ENABLE1 */
#define TOUCH_SENSOR_CH_ENABLE1_OFFSET                     (0x8U)
#define TOUCH_SENSOR_CH_ENABLE1_ENABLE_SHIFT               (0U)
#define TOUCH_SENSOR_CH_ENABLE1_ENABLE_MASK                (0xFU << TOUCH_SENSOR_CH_ENABLE1_ENABLE_SHIFT)               /* 0x0000000F */
/* CH_DIV */
#define TOUCH_SENSOR_CH_DIV_OFFSET                         (0xCU)
#define TOUCH_SENSOR_CH_DIV_DRIVE_PULSE_DIV_SHIFT          (0U)
#define TOUCH_SENSOR_CH_DIV_DRIVE_PULSE_DIV_MASK           (0xFFFFFU << TOUCH_SENSOR_CH_DIV_DRIVE_PULSE_DIV_SHIFT)      /* 0x000FFFFF */
/* CH_IRQ_EN0 */
#define TOUCH_SENSOR_CH_IRQ_EN0_OFFSET                     (0x10U)
#define TOUCH_SENSOR_CH_IRQ_EN0_CHARGE_IRQ_POS_EN_SHIFT    (0U)
#define TOUCH_SENSOR_CH_IRQ_EN0_CHARGE_IRQ_POS_EN_MASK     (0xFFFFU << TOUCH_SENSOR_CH_IRQ_EN0_CHARGE_IRQ_POS_EN_SHIFT) /* 0x0000FFFF */
/* CH_IRQ_EN1 */
#define TOUCH_SENSOR_CH_IRQ_EN1_OFFSET                     (0x14U)
#define TOUCH_SENSOR_CH_IRQ_EN1_CHARGE_IRQ_POS_EN_SHIFT    (0U)
#define TOUCH_SENSOR_CH_IRQ_EN1_CHARGE_IRQ_POS_EN_MASK     (0xFU << TOUCH_SENSOR_CH_IRQ_EN1_CHARGE_IRQ_POS_EN_SHIFT)    /* 0x0000000F */
/* CH_IRQ_EN2 */
#define TOUCH_SENSOR_CH_IRQ_EN2_OFFSET                     (0x18U)
#define TOUCH_SENSOR_CH_IRQ_EN2_CHARGE_IRQ_NEG_EN_SHIFT    (0U)
#define TOUCH_SENSOR_CH_IRQ_EN2_CHARGE_IRQ_NEG_EN_MASK     (0xFU << TOUCH_SENSOR_CH_IRQ_EN2_CHARGE_IRQ_NEG_EN_SHIFT)    /* 0x0000000F */
/* CH_IRQ_EN3 */
#define TOUCH_SENSOR_CH_IRQ_EN3_OFFSET                     (0x1CU)
#define TOUCH_SENSOR_CH_IRQ_EN3_CHARGE_IRQ_NEG_EN_SHIFT    (0U)
#define TOUCH_SENSOR_CH_IRQ_EN3_CHARGE_IRQ_NEG_EN_MASK     (0xFU << TOUCH_SENSOR_CH_IRQ_EN3_CHARGE_IRQ_NEG_EN_SHIFT)    /* 0x0000000F */
/* CH_IRQ_ST_POS */
#define TOUCH_SENSOR_CH_IRQ_ST_POS_OFFSET                  (0x20U)
#define TOUCH_SENSOR_CH_IRQ_ST_POS_CHARGE_IRQ_SHIFT        (0U)
#define TOUCH_SENSOR_CH_IRQ_ST_POS_CHARGE_IRQ_MASK         (0xFFFFFU << TOUCH_SENSOR_CH_IRQ_ST_POS_CHARGE_IRQ_SHIFT)    /* 0x000FFFFF */
/* CH_IRQ_ST_NEG */
#define TOUCH_SENSOR_CH_IRQ_ST_NEG_OFFSET                  (0x24U)
#define TOUCH_SENSOR_CH_IRQ_ST_NEG_CHARGE_IRQ_SHIFT        (0U)
#define TOUCH_SENSOR_CH_IRQ_ST_NEG_CHARGE_IRQ_MASK         (0xFFFFFU << TOUCH_SENSOR_CH_IRQ_ST_NEG_CHARGE_IRQ_SHIFT)    /* 0x000FFFFF */
/* CH_IRQ_RAW */
#define TOUCH_SENSOR_CH_IRQ_RAW_OFFSET                     (0x28U)
#define TOUCH_SENSOR_CH_IRQ_RAW_CHARGE_IRQ_SHIFT           (0U)
#define TOUCH_SENSOR_CH_IRQ_RAW_CHARGE_IRQ_MASK            (0xFFFFFU << TOUCH_SENSOR_CH_IRQ_RAW_CHARGE_IRQ_SHIFT)       /* 0x000FFFFF */
/* CH_IRQ_CLEAR0 */
#define TOUCH_SENSOR_CH_IRQ_CLEAR0_OFFSET                  (0x2CU)
#define TOUCH_SENSOR_CH_IRQ_CLEAR0_CHARGE_IRQ_POS_CLEAR_SHIFT (0U)
#define TOUCH_SENSOR_CH_IRQ_CLEAR0_CHARGE_IRQ_POS_CLEAR_MASK (0xFFFFFU << TOUCH_SENSOR_CH_IRQ_CLEAR0_CHARGE_IRQ_POS_CLEAR_SHIFT) /* 0x000FFFFF */
/* CH_IRQ_CLEAR1 */
#define TOUCH_SENSOR_CH_IRQ_CLEAR1_OFFSET                  (0x30U)
#define TOUCH_SENSOR_CH_IRQ_CLEAR1_CHARGE_IRQ_NEG_CLEAR_SHIFT (0U)
#define TOUCH_SENSOR_CH_IRQ_CLEAR1_CHARGE_IRQ_NEG_CLEAR_MASK (0xFFFFFU << TOUCH_SENSOR_CH_IRQ_CLEAR1_CHARGE_IRQ_NEG_CLEAR_SHIFT) /* 0x000FFFFF */
/* CH_CHARGE_THRESHOLD */
#define TOUCH_SENSOR_CH_CHARGE_THRESHOLD_OFFSET            (0x34U)
#define TOUCH_SENSOR_CH_CHARGE_THRESHOLD_CHARGE_THRESHOLD_SHIFT (0U)
#define TOUCH_SENSOR_CH_CHARGE_THRESHOLD_CHARGE_THRESHOLD_MASK (0xFFFFFU << TOUCH_SENSOR_CH_CHARGE_THRESHOLD_CHARGE_THRESHOLD_SHIFT) /* 0x000FFFFF */
/* CH_FILTER_STABLE_TIME */
#define TOUCH_SENSOR_CH_FILTER_STABLE_TIME_OFFSET          (0x38U)
#define TOUCH_SENSOR_CH_FILTER_STABLE_TIME_FILTER_THRESHOLD_SHIFT (0U)
#define TOUCH_SENSOR_CH_FILTER_STABLE_TIME_FILTER_THRESHOLD_MASK (0xFFFFU << TOUCH_SENSOR_CH_FILTER_STABLE_TIME_FILTER_THRESHOLD_SHIFT) /* 0x0000FFFF */
/* CH_IRQ_SEL */
#define TOUCH_SENSOR_CH_IRQ_SEL_OFFSET                     (0x3CU)
#define TOUCH_SENSOR_CH_IRQ_SEL_IRQ_SEL_SHIFT              (0U)
#define TOUCH_SENSOR_CH_IRQ_SEL_IRQ_SEL_MASK               (0x1U << TOUCH_SENSOR_CH_IRQ_SEL_IRQ_SEL_SHIFT)              /* 0x00000001 */
/* CH_LOCK */
#define TOUCH_SENSOR_CH_LOCK_OFFSET                        (0x40U)
#define TOUCH_SENSOR_CH_LOCK_CH_LOCK_SHIFT                 (0U)
#define TOUCH_SENSOR_CH_LOCK_CH_LOCK_MASK                  (0x1U << TOUCH_SENSOR_CH_LOCK_CH_LOCK_SHIFT)                 /* 0x00000001 */
#define TOUCH_SENSOR_CH_LOCK_CH_KICK_SHIFT                 (1U)
#define TOUCH_SENSOR_CH_LOCK_CH_KICK_MASK                  (0x1U << TOUCH_SENSOR_CH_LOCK_CH_KICK_SHIFT)                 /* 0x00000002 */
/* CH_RC_TYPE_SEL */
#define TOUCH_SENSOR_CH_RC_TYPE_SEL_OFFSET                 (0x44U)
#define TOUCH_SENSOR_CH_RC_TYPE_SEL_RC_TYPE_SEL_SHIFT      (0U)
#define TOUCH_SENSOR_CH_RC_TYPE_SEL_RC_TYPE_SEL_MASK       (0x3U << TOUCH_SENSOR_CH_RC_TYPE_SEL_RC_TYPE_SEL_SHIFT)      /* 0x00000003 */
/* CH_RC_SPEED_STEP_CNT */
#define TOUCH_SENSOR_CH_RC_SPEED_STEP_CNT_OFFSET           (0x48U)
#define TOUCH_SENSOR_CH_RC_SPEED_STEP_CNT_RC_SPEED_STEP_CNT_SHIFT (0U)
#define TOUCH_SENSOR_CH_RC_SPEED_STEP_CNT_RC_SPEED_STEP_CNT_MASK (0xFFFFFU << TOUCH_SENSOR_CH_RC_SPEED_STEP_CNT_RC_SPEED_STEP_CNT_SHIFT) /* 0x000FFFFF */
/* CH0_CNT */
#define TOUCH_SENSOR_CH0_CNT_OFFSET                        (0x100U)
#define TOUCH_SENSOR_CH0_CNT_CH0_CNT_SHIFT                 (0U)
#define TOUCH_SENSOR_CH0_CNT_CH0_CNT_MASK                  (0xFFFFU << TOUCH_SENSOR_CH0_CNT_CH0_CNT_SHIFT)              /* 0x0000FFFF */
/* CH0_CNT_DC */
#define TOUCH_SENSOR_CH0_CNT_DC_OFFSET                     (0x104U)
#define TOUCH_SENSOR_CH0_CNT_DC_CH0_CNT_DC_SHIFT           (0U)
#define TOUCH_SENSOR_CH0_CNT_DC_CH0_CNT_DC_MASK            (0xFFFFFFU << TOUCH_SENSOR_CH0_CNT_DC_CH0_CNT_DC_SHIFT)      /* 0x00FFFFFF */
/* CH0_CNT_DO */
#define TOUCH_SENSOR_CH0_CNT_DO_OFFSET                     (0x108U)
#define TOUCH_SENSOR_CH0_CNT_DO_CH0_CNT_DO_SHIFT           (0U)
#define TOUCH_SENSOR_CH0_CNT_DO_CH0_CNT_DO_MASK            (0xFFFFU << TOUCH_SENSOR_CH0_CNT_DO_CH0_CNT_DO_SHIFT)        /* 0x0000FFFF */
/* CH0_CNT_FILTER */
#define TOUCH_SENSOR_CH0_CNT_FILTER_OFFSET                 (0x10CU)
#define TOUCH_SENSOR_CH0_CNT_FILTER_CH0_CNT_FILTER_SHIFT   (0U)
#define TOUCH_SENSOR_CH0_CNT_FILTER_CH0_CNT_FILTER_MASK    (0xFFFFU << TOUCH_SENSOR_CH0_CNT_FILTER_CH0_CNT_FILTER_SHIFT) /* 0x0000FFFF */
/* CH1_CNT */
#define TOUCH_SENSOR_CH1_CNT_OFFSET                        (0x200U)
#define TOUCH_SENSOR_CH1_CNT_CH1_CNT_SHIFT                 (0U)
#define TOUCH_SENSOR_CH1_CNT_CH1_CNT_MASK                  (0xFFFFU << TOUCH_SENSOR_CH1_CNT_CH1_CNT_SHIFT)              /* 0x0000FFFF */
/* CH1_CNT_DC */
#define TOUCH_SENSOR_CH1_CNT_DC_OFFSET                     (0x204U)
#define TOUCH_SENSOR_CH1_CNT_DC_CH1_CNT_DC_SHIFT           (0U)
#define TOUCH_SENSOR_CH1_CNT_DC_CH1_CNT_DC_MASK            (0xFFFFFFU << TOUCH_SENSOR_CH1_CNT_DC_CH1_CNT_DC_SHIFT)      /* 0x00FFFFFF */
/* CH1_CNT_DO */
#define TOUCH_SENSOR_CH1_CNT_DO_OFFSET                     (0x208U)
#define TOUCH_SENSOR_CH1_CNT_DO_CH1_CNT_DO_SHIFT           (0U)
#define TOUCH_SENSOR_CH1_CNT_DO_CH1_CNT_DO_MASK            (0xFFFFU << TOUCH_SENSOR_CH1_CNT_DO_CH1_CNT_DO_SHIFT)        /* 0x0000FFFF */
/* CH1_CNT_FILTER */
#define TOUCH_SENSOR_CH1_CNT_FILTER_OFFSET                 (0x20CU)
#define TOUCH_SENSOR_CH1_CNT_FILTER_CH1_CNT_FILTER_SHIFT   (0U)
#define TOUCH_SENSOR_CH1_CNT_FILTER_CH1_CNT_FILTER_MASK    (0xFFFFU << TOUCH_SENSOR_CH1_CNT_FILTER_CH1_CNT_FILTER_SHIFT) /* 0x0000FFFF */
/* CH2_CNT */
#define TOUCH_SENSOR_CH2_CNT_OFFSET                        (0x300U)
#define TOUCH_SENSOR_CH2_CNT_CH2_CNT_SHIFT                 (0U)
#define TOUCH_SENSOR_CH2_CNT_CH2_CNT_MASK                  (0xFFFFU << TOUCH_SENSOR_CH2_CNT_CH2_CNT_SHIFT)              /* 0x0000FFFF */
/* CH2_CNT_DC */
#define TOUCH_SENSOR_CH2_CNT_DC_OFFSET                     (0x304U)
#define TOUCH_SENSOR_CH2_CNT_DC_CH2_CNT_DC_SHIFT           (0U)
#define TOUCH_SENSOR_CH2_CNT_DC_CH2_CNT_DC_MASK            (0xFFFFFFU << TOUCH_SENSOR_CH2_CNT_DC_CH2_CNT_DC_SHIFT)      /* 0x00FFFFFF */
/* CH2_CNT_DO */
#define TOUCH_SENSOR_CH2_CNT_DO_OFFSET                     (0x308U)
#define TOUCH_SENSOR_CH2_CNT_DO_CH2_CNT_DO_SHIFT           (0U)
#define TOUCH_SENSOR_CH2_CNT_DO_CH2_CNT_DO_MASK            (0xFFFFU << TOUCH_SENSOR_CH2_CNT_DO_CH2_CNT_DO_SHIFT)        /* 0x0000FFFF */
/* CH2_CNT_FILTER */
#define TOUCH_SENSOR_CH2_CNT_FILTER_OFFSET                 (0x30CU)
#define TOUCH_SENSOR_CH2_CNT_FILTER_CH2_CNT_FILTER_SHIFT   (0U)
#define TOUCH_SENSOR_CH2_CNT_FILTER_CH2_CNT_FILTER_MASK    (0xFFFFU << TOUCH_SENSOR_CH2_CNT_FILTER_CH2_CNT_FILTER_SHIFT) /* 0x0000FFFF */
/* CH3_CNT */
#define TOUCH_SENSOR_CH3_CNT_OFFSET                        (0x400U)
#define TOUCH_SENSOR_CH3_CNT_CH3_CNT_SHIFT                 (0U)
#define TOUCH_SENSOR_CH3_CNT_CH3_CNT_MASK                  (0xFFFFU << TOUCH_SENSOR_CH3_CNT_CH3_CNT_SHIFT)              /* 0x0000FFFF */
/* CH3_CNT_DC */
#define TOUCH_SENSOR_CH3_CNT_DC_OFFSET                     (0x404U)
#define TOUCH_SENSOR_CH3_CNT_DC_CH3_CNT_DC_SHIFT           (0U)
#define TOUCH_SENSOR_CH3_CNT_DC_CH3_CNT_DC_MASK            (0xFFFFFFU << TOUCH_SENSOR_CH3_CNT_DC_CH3_CNT_DC_SHIFT)      /* 0x00FFFFFF */
/* CH3_CNT_DO */
#define TOUCH_SENSOR_CH3_CNT_DO_OFFSET                     (0x408U)
#define TOUCH_SENSOR_CH3_CNT_DO_CH3_CNT_DO_SHIFT           (0U)
#define TOUCH_SENSOR_CH3_CNT_DO_CH3_CNT_DO_MASK            (0xFFFFU << TOUCH_SENSOR_CH3_CNT_DO_CH3_CNT_DO_SHIFT)        /* 0x0000FFFF */
/* CH3_CNT_FILTER */
#define TOUCH_SENSOR_CH3_CNT_FILTER_OFFSET                 (0x40CU)
#define TOUCH_SENSOR_CH3_CNT_FILTER_CH3_CNT_FILTER_SHIFT   (0U)
#define TOUCH_SENSOR_CH3_CNT_FILTER_CH3_CNT_FILTER_MASK    (0xFFFFU << TOUCH_SENSOR_CH3_CNT_FILTER_CH3_CNT_FILTER_SHIFT) /* 0x0000FFFF */
/* CH4_CNT */
#define TOUCH_SENSOR_CH4_CNT_OFFSET                        (0x500U)
#define TOUCH_SENSOR_CH4_CNT_CH4_CNT_SHIFT                 (0U)
#define TOUCH_SENSOR_CH4_CNT_CH4_CNT_MASK                  (0xFFFFU << TOUCH_SENSOR_CH4_CNT_CH4_CNT_SHIFT)              /* 0x0000FFFF */
/* CH4_CNT_DC */
#define TOUCH_SENSOR_CH4_CNT_DC_OFFSET                     (0x504U)
#define TOUCH_SENSOR_CH4_CNT_DC_CH4_CNT_DC_SHIFT           (0U)
#define TOUCH_SENSOR_CH4_CNT_DC_CH4_CNT_DC_MASK            (0xFFFFFFU << TOUCH_SENSOR_CH4_CNT_DC_CH4_CNT_DC_SHIFT)      /* 0x00FFFFFF */
/* CH4_CNT_DO */
#define TOUCH_SENSOR_CH4_CNT_DO_OFFSET                     (0x508U)
#define TOUCH_SENSOR_CH4_CNT_DO_CH4_CNT_DO_SHIFT           (0U)
#define TOUCH_SENSOR_CH4_CNT_DO_CH4_CNT_DO_MASK            (0xFFFFU << TOUCH_SENSOR_CH4_CNT_DO_CH4_CNT_DO_SHIFT)        /* 0x0000FFFF */
/* CH4_CNT_FILTER */
#define TOUCH_SENSOR_CH4_CNT_FILTER_OFFSET                 (0x50CU)
#define TOUCH_SENSOR_CH4_CNT_FILTER_CH4_CNT_FILTER_SHIFT   (0U)
#define TOUCH_SENSOR_CH4_CNT_FILTER_CH4_CNT_FILTER_MASK    (0xFFFFU << TOUCH_SENSOR_CH4_CNT_FILTER_CH4_CNT_FILTER_SHIFT) /* 0x0000FFFF */
/* CH5_CNT */
#define TOUCH_SENSOR_CH5_CNT_OFFSET                        (0x600U)
#define TOUCH_SENSOR_CH5_CNT_CH5_CNT_SHIFT                 (0U)
#define TOUCH_SENSOR_CH5_CNT_CH5_CNT_MASK                  (0xFFFFU << TOUCH_SENSOR_CH5_CNT_CH5_CNT_SHIFT)              /* 0x0000FFFF */
/* CH5_CNT_DC */
#define TOUCH_SENSOR_CH5_CNT_DC_OFFSET                     (0x604U)
#define TOUCH_SENSOR_CH5_CNT_DC_CH5_CNT_DC_SHIFT           (0U)
#define TOUCH_SENSOR_CH5_CNT_DC_CH5_CNT_DC_MASK            (0xFFFFFFU << TOUCH_SENSOR_CH5_CNT_DC_CH5_CNT_DC_SHIFT)      /* 0x00FFFFFF */
/* CH5_CNT_DO */
#define TOUCH_SENSOR_CH5_CNT_DO_OFFSET                     (0x608U)
#define TOUCH_SENSOR_CH5_CNT_DO_CH5_CNT_DO_SHIFT           (0U)
#define TOUCH_SENSOR_CH5_CNT_DO_CH5_CNT_DO_MASK            (0xFFFFU << TOUCH_SENSOR_CH5_CNT_DO_CH5_CNT_DO_SHIFT)        /* 0x0000FFFF */
/* CH5_CNT_FILTER */
#define TOUCH_SENSOR_CH5_CNT_FILTER_OFFSET                 (0x60CU)
#define TOUCH_SENSOR_CH5_CNT_FILTER_CH5_CNT_FILTER_SHIFT   (0U)
#define TOUCH_SENSOR_CH5_CNT_FILTER_CH5_CNT_FILTER_MASK    (0xFFFFU << TOUCH_SENSOR_CH5_CNT_FILTER_CH5_CNT_FILTER_SHIFT) /* 0x0000FFFF */
/* CH6_CNT */
#define TOUCH_SENSOR_CH6_CNT_OFFSET                        (0x700U)
#define TOUCH_SENSOR_CH6_CNT_CH6_CNT_SHIFT                 (0U)
#define TOUCH_SENSOR_CH6_CNT_CH6_CNT_MASK                  (0xFFFFU << TOUCH_SENSOR_CH6_CNT_CH6_CNT_SHIFT)              /* 0x0000FFFF */
/* CH6_CNT_DC */
#define TOUCH_SENSOR_CH6_CNT_DC_OFFSET                     (0x704U)
#define TOUCH_SENSOR_CH6_CNT_DC_CH6_CNT_DC_SHIFT           (0U)
#define TOUCH_SENSOR_CH6_CNT_DC_CH6_CNT_DC_MASK            (0xFFFFFFU << TOUCH_SENSOR_CH6_CNT_DC_CH6_CNT_DC_SHIFT)      /* 0x00FFFFFF */
/* CH6_CNT_DO */
#define TOUCH_SENSOR_CH6_CNT_DO_OFFSET                     (0x708U)
#define TOUCH_SENSOR_CH6_CNT_DO_CH6_CNT_DO_SHIFT           (0U)
#define TOUCH_SENSOR_CH6_CNT_DO_CH6_CNT_DO_MASK            (0xFFFFU << TOUCH_SENSOR_CH6_CNT_DO_CH6_CNT_DO_SHIFT)        /* 0x0000FFFF */
/* CH6_CNT_FILTER */
#define TOUCH_SENSOR_CH6_CNT_FILTER_OFFSET                 (0x70CU)
#define TOUCH_SENSOR_CH6_CNT_FILTER_CH6_CNT_FILTER_SHIFT   (0U)
#define TOUCH_SENSOR_CH6_CNT_FILTER_CH6_CNT_FILTER_MASK    (0xFFFFU << TOUCH_SENSOR_CH6_CNT_FILTER_CH6_CNT_FILTER_SHIFT) /* 0x0000FFFF */
/* CH7_CNT */
#define TOUCH_SENSOR_CH7_CNT_OFFSET                        (0x800U)
#define TOUCH_SENSOR_CH7_CNT_CH7_CNT_SHIFT                 (0U)
#define TOUCH_SENSOR_CH7_CNT_CH7_CNT_MASK                  (0xFFFFU << TOUCH_SENSOR_CH7_CNT_CH7_CNT_SHIFT)              /* 0x0000FFFF */
/* CH7_CNT_DC */
#define TOUCH_SENSOR_CH7_CNT_DC_OFFSET                     (0x804U)
#define TOUCH_SENSOR_CH7_CNT_DC_CH7_CNT_DC_SHIFT           (0U)
#define TOUCH_SENSOR_CH7_CNT_DC_CH7_CNT_DC_MASK            (0xFFFFFFU << TOUCH_SENSOR_CH7_CNT_DC_CH7_CNT_DC_SHIFT)      /* 0x00FFFFFF */
/* CH7_CNT_DO */
#define TOUCH_SENSOR_CH7_CNT_DO_OFFSET                     (0x808U)
#define TOUCH_SENSOR_CH7_CNT_DO_CH7_CNT_DO_SHIFT           (0U)
#define TOUCH_SENSOR_CH7_CNT_DO_CH7_CNT_DO_MASK            (0xFFFFU << TOUCH_SENSOR_CH7_CNT_DO_CH7_CNT_DO_SHIFT)        /* 0x0000FFFF */
/* CH7_CNT_FILTER */
#define TOUCH_SENSOR_CH7_CNT_FILTER_OFFSET                 (0x80CU)
#define TOUCH_SENSOR_CH7_CNT_FILTER_CH7_CNT_FILTER_SHIFT   (0U)
#define TOUCH_SENSOR_CH7_CNT_FILTER_CH7_CNT_FILTER_MASK    (0xFFFFU << TOUCH_SENSOR_CH7_CNT_FILTER_CH7_CNT_FILTER_SHIFT) /* 0x0000FFFF */
/* CH8_CNT */
#define TOUCH_SENSOR_CH8_CNT_OFFSET                        (0x900U)
#define TOUCH_SENSOR_CH8_CNT_CH8_CNT_SHIFT                 (0U)
#define TOUCH_SENSOR_CH8_CNT_CH8_CNT_MASK                  (0xFFFFU << TOUCH_SENSOR_CH8_CNT_CH8_CNT_SHIFT)              /* 0x0000FFFF */
/* CH8_CNT_DC */
#define TOUCH_SENSOR_CH8_CNT_DC_OFFSET                     (0x904U)
#define TOUCH_SENSOR_CH8_CNT_DC_CH8_CNT_DC_SHIFT           (0U)
#define TOUCH_SENSOR_CH8_CNT_DC_CH8_CNT_DC_MASK            (0xFFFFFFU << TOUCH_SENSOR_CH8_CNT_DC_CH8_CNT_DC_SHIFT)      /* 0x00FFFFFF */
/* CH8_CNT_DO */
#define TOUCH_SENSOR_CH8_CNT_DO_OFFSET                     (0x908U)
#define TOUCH_SENSOR_CH8_CNT_DO_CH8_CNT_DO_SHIFT           (0U)
#define TOUCH_SENSOR_CH8_CNT_DO_CH8_CNT_DO_MASK            (0xFFFFU << TOUCH_SENSOR_CH8_CNT_DO_CH8_CNT_DO_SHIFT)        /* 0x0000FFFF */
/* CH8_CNT_FILTER */
#define TOUCH_SENSOR_CH8_CNT_FILTER_OFFSET                 (0x90CU)
#define TOUCH_SENSOR_CH8_CNT_FILTER_CH8_CNT_FILTER_SHIFT   (0U)
#define TOUCH_SENSOR_CH8_CNT_FILTER_CH8_CNT_FILTER_MASK    (0xFFFFU << TOUCH_SENSOR_CH8_CNT_FILTER_CH8_CNT_FILTER_SHIFT) /* 0x0000FFFF */
/* CH9_CNT */
#define TOUCH_SENSOR_CH9_CNT_OFFSET                        (0x1000U)
#define TOUCH_SENSOR_CH9_CNT_CH9_CNT_SHIFT                 (0U)
#define TOUCH_SENSOR_CH9_CNT_CH9_CNT_MASK                  (0xFFFFU << TOUCH_SENSOR_CH9_CNT_CH9_CNT_SHIFT)              /* 0x0000FFFF */
/* CH9_CNT_DC */
#define TOUCH_SENSOR_CH9_CNT_DC_OFFSET                     (0x1004U)
#define TOUCH_SENSOR_CH9_CNT_DC_CH9_CNT_DC_SHIFT           (0U)
#define TOUCH_SENSOR_CH9_CNT_DC_CH9_CNT_DC_MASK            (0xFFFFFFU << TOUCH_SENSOR_CH9_CNT_DC_CH9_CNT_DC_SHIFT)      /* 0x00FFFFFF */
/* CH9_CNT_DO */
#define TOUCH_SENSOR_CH9_CNT_DO_OFFSET                     (0x1008U)
#define TOUCH_SENSOR_CH9_CNT_DO_CH9_CNT_DO_SHIFT           (0U)
#define TOUCH_SENSOR_CH9_CNT_DO_CH9_CNT_DO_MASK            (0xFFFFU << TOUCH_SENSOR_CH9_CNT_DO_CH9_CNT_DO_SHIFT)        /* 0x0000FFFF */
/* CH9_CNT_FILTER */
#define TOUCH_SENSOR_CH9_CNT_FILTER_OFFSET                 (0x100CU)
#define TOUCH_SENSOR_CH9_CNT_FILTER_CH9_CNT_FILTER_SHIFT   (0U)
#define TOUCH_SENSOR_CH9_CNT_FILTER_CH9_CNT_FILTER_MASK    (0xFFFFU << TOUCH_SENSOR_CH9_CNT_FILTER_CH9_CNT_FILTER_SHIFT) /* 0x0000FFFF */
/* CH10_CNT */
#define TOUCH_SENSOR_CH10_CNT_OFFSET                       (0x1100U)
#define TOUCH_SENSOR_CH10_CNT_CH10_CNT_SHIFT               (0U)
#define TOUCH_SENSOR_CH10_CNT_CH10_CNT_MASK                (0xFFFFU << TOUCH_SENSOR_CH10_CNT_CH10_CNT_SHIFT)            /* 0x0000FFFF */
/* CH10_CNT_DC */
#define TOUCH_SENSOR_CH10_CNT_DC_OFFSET                    (0x1104U)
#define TOUCH_SENSOR_CH10_CNT_DC_CH10_CNT_DC_SHIFT         (0U)
#define TOUCH_SENSOR_CH10_CNT_DC_CH10_CNT_DC_MASK          (0xFFFFFFU << TOUCH_SENSOR_CH10_CNT_DC_CH10_CNT_DC_SHIFT)    /* 0x00FFFFFF */
/* CH10_CNT_DO */
#define TOUCH_SENSOR_CH10_CNT_DO_OFFSET                    (0x1108U)
#define TOUCH_SENSOR_CH10_CNT_DO_CH10_CNT_DO_SHIFT         (0U)
#define TOUCH_SENSOR_CH10_CNT_DO_CH10_CNT_DO_MASK          (0xFFFFU << TOUCH_SENSOR_CH10_CNT_DO_CH10_CNT_DO_SHIFT)      /* 0x0000FFFF */
/* CH10_CNT_FILTER */
#define TOUCH_SENSOR_CH10_CNT_FILTER_OFFSET                (0x110CU)
#define TOUCH_SENSOR_CH10_CNT_FILTER_CH10_CNT_FILTER_SHIFT (0U)
#define TOUCH_SENSOR_CH10_CNT_FILTER_CH10_CNT_FILTER_MASK  (0xFFFFU << TOUCH_SENSOR_CH10_CNT_FILTER_CH10_CNT_FILTER_SHIFT) /* 0x0000FFFF */
/* CH11_CNT */
#define TOUCH_SENSOR_CH11_CNT_OFFSET                       (0x1200U)
#define TOUCH_SENSOR_CH11_CNT_CH11_CNT_SHIFT               (0U)
#define TOUCH_SENSOR_CH11_CNT_CH11_CNT_MASK                (0xFFFFU << TOUCH_SENSOR_CH11_CNT_CH11_CNT_SHIFT)            /* 0x0000FFFF */
/* CH11_CNT_DC */
#define TOUCH_SENSOR_CH11_CNT_DC_OFFSET                    (0x1204U)
#define TOUCH_SENSOR_CH11_CNT_DC_CH11_CNT_DC_SHIFT         (0U)
#define TOUCH_SENSOR_CH11_CNT_DC_CH11_CNT_DC_MASK          (0xFFFFFFU << TOUCH_SENSOR_CH11_CNT_DC_CH11_CNT_DC_SHIFT)    /* 0x00FFFFFF */
/* CH11_CNT_DO */
#define TOUCH_SENSOR_CH11_CNT_DO_OFFSET                    (0x1208U)
#define TOUCH_SENSOR_CH11_CNT_DO_CH11_CNT_DO_SHIFT         (0U)
#define TOUCH_SENSOR_CH11_CNT_DO_CH11_CNT_DO_MASK          (0xFFFFU << TOUCH_SENSOR_CH11_CNT_DO_CH11_CNT_DO_SHIFT)      /* 0x0000FFFF */
/* CH11_CNT_FILTER */
#define TOUCH_SENSOR_CH11_CNT_FILTER_OFFSET                (0x120CU)
#define TOUCH_SENSOR_CH11_CNT_FILTER_CH11_CNT_FILTER_SHIFT (0U)
#define TOUCH_SENSOR_CH11_CNT_FILTER_CH11_CNT_FILTER_MASK  (0xFFFFU << TOUCH_SENSOR_CH11_CNT_FILTER_CH11_CNT_FILTER_SHIFT) /* 0x0000FFFF */
/* CH12_CNT */
#define TOUCH_SENSOR_CH12_CNT_OFFSET                       (0x1300U)
#define TOUCH_SENSOR_CH12_CNT_CH12_CNT_SHIFT               (0U)
#define TOUCH_SENSOR_CH12_CNT_CH12_CNT_MASK                (0xFFFFU << TOUCH_SENSOR_CH12_CNT_CH12_CNT_SHIFT)            /* 0x0000FFFF */
/* CH12_CNT_DC */
#define TOUCH_SENSOR_CH12_CNT_DC_OFFSET                    (0x1304U)
#define TOUCH_SENSOR_CH12_CNT_DC_CH12_CNT_DC_SHIFT         (0U)
#define TOUCH_SENSOR_CH12_CNT_DC_CH12_CNT_DC_MASK          (0xFFFFFFU << TOUCH_SENSOR_CH12_CNT_DC_CH12_CNT_DC_SHIFT)    /* 0x00FFFFFF */
/* CH12_CNT_DO */
#define TOUCH_SENSOR_CH12_CNT_DO_OFFSET                    (0x1308U)
#define TOUCH_SENSOR_CH12_CNT_DO_CH12_CNT_DO_SHIFT         (0U)
#define TOUCH_SENSOR_CH12_CNT_DO_CH12_CNT_DO_MASK          (0xFFFFU << TOUCH_SENSOR_CH12_CNT_DO_CH12_CNT_DO_SHIFT)      /* 0x0000FFFF */
/* CH12_CNT_FILTER */
#define TOUCH_SENSOR_CH12_CNT_FILTER_OFFSET                (0x130CU)
#define TOUCH_SENSOR_CH12_CNT_FILTER_CH12_CNT_FILTER_SHIFT (0U)
#define TOUCH_SENSOR_CH12_CNT_FILTER_CH12_CNT_FILTER_MASK  (0xFFFFU << TOUCH_SENSOR_CH12_CNT_FILTER_CH12_CNT_FILTER_SHIFT) /* 0x0000FFFF */
/* CH13_CNT */
#define TOUCH_SENSOR_CH13_CNT_OFFSET                       (0x1400U)
#define TOUCH_SENSOR_CH13_CNT_CH13_CNT_SHIFT               (0U)
#define TOUCH_SENSOR_CH13_CNT_CH13_CNT_MASK                (0xFFFFU << TOUCH_SENSOR_CH13_CNT_CH13_CNT_SHIFT)            /* 0x0000FFFF */
/* CH13_CNT_DC */
#define TOUCH_SENSOR_CH13_CNT_DC_OFFSET                    (0x1404U)
#define TOUCH_SENSOR_CH13_CNT_DC_CH13_CNT_DC_SHIFT         (0U)
#define TOUCH_SENSOR_CH13_CNT_DC_CH13_CNT_DC_MASK          (0xFFFFFFU << TOUCH_SENSOR_CH13_CNT_DC_CH13_CNT_DC_SHIFT)    /* 0x00FFFFFF */
/* CH13_CNT_DO */
#define TOUCH_SENSOR_CH13_CNT_DO_OFFSET                    (0x1408U)
#define TOUCH_SENSOR_CH13_CNT_DO_CH13_CNT_DO_SHIFT         (0U)
#define TOUCH_SENSOR_CH13_CNT_DO_CH13_CNT_DO_MASK          (0xFFFFU << TOUCH_SENSOR_CH13_CNT_DO_CH13_CNT_DO_SHIFT)      /* 0x0000FFFF */
/* CH13_CNT_FILTER */
#define TOUCH_SENSOR_CH13_CNT_FILTER_OFFSET                (0x140CU)
#define TOUCH_SENSOR_CH13_CNT_FILTER_CH13_CNT_FILTER_SHIFT (0U)
#define TOUCH_SENSOR_CH13_CNT_FILTER_CH13_CNT_FILTER_MASK  (0xFFFFU << TOUCH_SENSOR_CH13_CNT_FILTER_CH13_CNT_FILTER_SHIFT) /* 0x0000FFFF */
/* CH14_CNT */
#define TOUCH_SENSOR_CH14_CNT_OFFSET                       (0x1500U)
#define TOUCH_SENSOR_CH14_CNT_CH14_CNT_SHIFT               (0U)
#define TOUCH_SENSOR_CH14_CNT_CH14_CNT_MASK                (0xFFFFU << TOUCH_SENSOR_CH14_CNT_CH14_CNT_SHIFT)            /* 0x0000FFFF */
/* CH14_CNT_DC */
#define TOUCH_SENSOR_CH14_CNT_DC_OFFSET                    (0x1504U)
#define TOUCH_SENSOR_CH14_CNT_DC_CH14_CNT_DC_SHIFT         (0U)
#define TOUCH_SENSOR_CH14_CNT_DC_CH14_CNT_DC_MASK          (0xFFFFFFU << TOUCH_SENSOR_CH14_CNT_DC_CH14_CNT_DC_SHIFT)    /* 0x00FFFFFF */
/* CH14_CNT_DO */
#define TOUCH_SENSOR_CH14_CNT_DO_OFFSET                    (0x1508U)
#define TOUCH_SENSOR_CH14_CNT_DO_CH14_CNT_DO_SHIFT         (0U)
#define TOUCH_SENSOR_CH14_CNT_DO_CH14_CNT_DO_MASK          (0xFFFFU << TOUCH_SENSOR_CH14_CNT_DO_CH14_CNT_DO_SHIFT)      /* 0x0000FFFF */
/* CH14_CNT_FILTER */
#define TOUCH_SENSOR_CH14_CNT_FILTER_OFFSET                (0x150CU)
#define TOUCH_SENSOR_CH14_CNT_FILTER_CH14_CNT_FILTER_SHIFT (0U)
#define TOUCH_SENSOR_CH14_CNT_FILTER_CH14_CNT_FILTER_MASK  (0xFFFFU << TOUCH_SENSOR_CH14_CNT_FILTER_CH14_CNT_FILTER_SHIFT) /* 0x0000FFFF */
/* CH15_CNT */
#define TOUCH_SENSOR_CH15_CNT_OFFSET                       (0x1600U)
#define TOUCH_SENSOR_CH15_CNT_CH15_CNT_SHIFT               (0U)
#define TOUCH_SENSOR_CH15_CNT_CH15_CNT_MASK                (0xFFFFU << TOUCH_SENSOR_CH15_CNT_CH15_CNT_SHIFT)            /* 0x0000FFFF */
/* CH15_CNT_DC */
#define TOUCH_SENSOR_CH15_CNT_DC_OFFSET                    (0x1604U)
#define TOUCH_SENSOR_CH15_CNT_DC_CH15_CNT_DC_SHIFT         (0U)
#define TOUCH_SENSOR_CH15_CNT_DC_CH15_CNT_DC_MASK          (0xFFFFFFU << TOUCH_SENSOR_CH15_CNT_DC_CH15_CNT_DC_SHIFT)    /* 0x00FFFFFF */
/* CH15_CNT_DO */
#define TOUCH_SENSOR_CH15_CNT_DO_OFFSET                    (0x1608U)
#define TOUCH_SENSOR_CH15_CNT_DO_CH15_CNT_DO_SHIFT         (0U)
#define TOUCH_SENSOR_CH15_CNT_DO_CH15_CNT_DO_MASK          (0xFFFFU << TOUCH_SENSOR_CH15_CNT_DO_CH15_CNT_DO_SHIFT)      /* 0x0000FFFF */
/* CH15_CNT_FILTER */
#define TOUCH_SENSOR_CH15_CNT_FILTER_OFFSET                (0x160CU)
#define TOUCH_SENSOR_CH15_CNT_FILTER_CH15_CNT_FILTER_SHIFT (0U)
#define TOUCH_SENSOR_CH15_CNT_FILTER_CH15_CNT_FILTER_MASK  (0xFFFFU << TOUCH_SENSOR_CH15_CNT_FILTER_CH15_CNT_FILTER_SHIFT) /* 0x0000FFFF */
/* CH16_CNT */
#define TOUCH_SENSOR_CH16_CNT_OFFSET                       (0x1700U)
#define TOUCH_SENSOR_CH16_CNT_CH16_CNT_SHIFT               (0U)
#define TOUCH_SENSOR_CH16_CNT_CH16_CNT_MASK                (0xFFFFU << TOUCH_SENSOR_CH16_CNT_CH16_CNT_SHIFT)            /* 0x0000FFFF */
/* CH16_CNT_DC */
#define TOUCH_SENSOR_CH16_CNT_DC_OFFSET                    (0x1704U)
#define TOUCH_SENSOR_CH16_CNT_DC_CH16_CNT_DC_SHIFT         (0U)
#define TOUCH_SENSOR_CH16_CNT_DC_CH16_CNT_DC_MASK          (0xFFFFFFU << TOUCH_SENSOR_CH16_CNT_DC_CH16_CNT_DC_SHIFT)    /* 0x00FFFFFF */
/* CH16_CNT_DO */
#define TOUCH_SENSOR_CH16_CNT_DO_OFFSET                    (0x1708U)
#define TOUCH_SENSOR_CH16_CNT_DO_CH16_CNT_DO_SHIFT         (0U)
#define TOUCH_SENSOR_CH16_CNT_DO_CH16_CNT_DO_MASK          (0xFFFFU << TOUCH_SENSOR_CH16_CNT_DO_CH16_CNT_DO_SHIFT)      /* 0x0000FFFF */
/* CH16_CNT_FILTER */
#define TOUCH_SENSOR_CH16_CNT_FILTER_OFFSET                (0x170CU)
#define TOUCH_SENSOR_CH16_CNT_FILTER_CH16_CNT_FILTER_SHIFT (0U)
#define TOUCH_SENSOR_CH16_CNT_FILTER_CH16_CNT_FILTER_MASK  (0xFFFFU << TOUCH_SENSOR_CH16_CNT_FILTER_CH16_CNT_FILTER_SHIFT) /* 0x0000FFFF */
/* CH17_CNT */
#define TOUCH_SENSOR_CH17_CNT_OFFSET                       (0x1800U)
#define TOUCH_SENSOR_CH17_CNT_CH17_CNT_SHIFT               (0U)
#define TOUCH_SENSOR_CH17_CNT_CH17_CNT_MASK                (0xFFFFU << TOUCH_SENSOR_CH17_CNT_CH17_CNT_SHIFT)            /* 0x0000FFFF */
/* CH17_CNT_DC */
#define TOUCH_SENSOR_CH17_CNT_DC_OFFSET                    (0x1804U)
#define TOUCH_SENSOR_CH17_CNT_DC_CH17_CNT_DC_SHIFT         (0U)
#define TOUCH_SENSOR_CH17_CNT_DC_CH17_CNT_DC_MASK          (0xFFFFFFU << TOUCH_SENSOR_CH17_CNT_DC_CH17_CNT_DC_SHIFT)    /* 0x00FFFFFF */
/* CH17_CNT_DO */
#define TOUCH_SENSOR_CH17_CNT_DO_OFFSET                    (0x1808U)
#define TOUCH_SENSOR_CH17_CNT_DO_CH17_CNT_DO_SHIFT         (0U)
#define TOUCH_SENSOR_CH17_CNT_DO_CH17_CNT_DO_MASK          (0xFFFFU << TOUCH_SENSOR_CH17_CNT_DO_CH17_CNT_DO_SHIFT)      /* 0x0000FFFF */
/* CH17_CNT_FILTER */
#define TOUCH_SENSOR_CH17_CNT_FILTER_OFFSET                (0x180CU)
#define TOUCH_SENSOR_CH17_CNT_FILTER_CH17_CNT_FILTER_SHIFT (0U)
#define TOUCH_SENSOR_CH17_CNT_FILTER_CH17_CNT_FILTER_MASK  (0xFFFFU << TOUCH_SENSOR_CH17_CNT_FILTER_CH17_CNT_FILTER_SHIFT) /* 0x0000FFFF */
/* CH18_CNT */
#define TOUCH_SENSOR_CH18_CNT_OFFSET                       (0x1900U)
#define TOUCH_SENSOR_CH18_CNT_CH18_CNT_SHIFT               (0U)
#define TOUCH_SENSOR_CH18_CNT_CH18_CNT_MASK                (0xFFFFU << TOUCH_SENSOR_CH18_CNT_CH18_CNT_SHIFT)            /* 0x0000FFFF */
/* CH18_CNT_DC */
#define TOUCH_SENSOR_CH18_CNT_DC_OFFSET                    (0x1904U)
#define TOUCH_SENSOR_CH18_CNT_DC_CH18_CNT_DC_SHIFT         (0U)
#define TOUCH_SENSOR_CH18_CNT_DC_CH18_CNT_DC_MASK          (0xFFFFFFU << TOUCH_SENSOR_CH18_CNT_DC_CH18_CNT_DC_SHIFT)    /* 0x00FFFFFF */
/* CH18_CNT_DO */
#define TOUCH_SENSOR_CH18_CNT_DO_OFFSET                    (0x1908U)
#define TOUCH_SENSOR_CH18_CNT_DO_CH18_CNT_DC_SHIFT         (0U)
#define TOUCH_SENSOR_CH18_CNT_DO_CH18_CNT_DC_MASK          (0xFFFFFFU << TOUCH_SENSOR_CH18_CNT_DO_CH18_CNT_DC_SHIFT)    /* 0x00FFFFFF */
/* CH18_CNT_FILTER */
#define TOUCH_SENSOR_CH18_CNT_FILTER_OFFSET                (0x190CU)
#define TOUCH_SENSOR_CH18_CNT_FILTER_CH18_CNT_FILTER_SHIFT (0U)
#define TOUCH_SENSOR_CH18_CNT_FILTER_CH18_CNT_FILTER_MASK  (0xFFFFU << TOUCH_SENSOR_CH18_CNT_FILTER_CH18_CNT_FILTER_SHIFT) /* 0x0000FFFF */
/* CH19_CNT */
#define TOUCH_SENSOR_CH19_CNT_OFFSET                       (0x2000U)
#define TOUCH_SENSOR_CH19_CNT_CH19_CNT_SHIFT               (0U)
#define TOUCH_SENSOR_CH19_CNT_CH19_CNT_MASK                (0xFFFFU << TOUCH_SENSOR_CH19_CNT_CH19_CNT_SHIFT)            /* 0x0000FFFF */
/* CH19_CNT_DC */
#define TOUCH_SENSOR_CH19_CNT_DC_OFFSET                    (0x2004U)
#define TOUCH_SENSOR_CH19_CNT_DC_CH19_CNT_DC_SHIFT         (0U)
#define TOUCH_SENSOR_CH19_CNT_DC_CH19_CNT_DC_MASK          (0xFFFFFFU << TOUCH_SENSOR_CH19_CNT_DC_CH19_CNT_DC_SHIFT)    /* 0x00FFFFFF */
/* CH19_CNT_DO */
#define TOUCH_SENSOR_CH19_CNT_DO_OFFSET                    (0x2008U)
#define TOUCH_SENSOR_CH19_CNT_DO_CH19_CNT_DO_SHIFT         (0U)
#define TOUCH_SENSOR_CH19_CNT_DO_CH19_CNT_DO_MASK          (0xFFFFFFU << TOUCH_SENSOR_CH19_CNT_DO_CH19_CNT_DO_SHIFT)    /* 0x00FFFFFF */
/* CH19_CNT_FILTER */
#define TOUCH_SENSOR_CH19_CNT_FILTER_OFFSET                (0x200CU)
#define TOUCH_SENSOR_CH19_CNT_FILTER_CH19_CNT_FILTER_SHIFT (0U)
#define TOUCH_SENSOR_CH19_CNT_FILTER_CH19_CNT_FILTER_MASK  (0xFFFFU << TOUCH_SENSOR_CH19_CNT_FILTER_CH19_CNT_FILTER_SHIFT) /* 0x0000FFFF */
/******************************************CRU*******************************************/
/* MODE_CON00 */
#define CRU_MODE_CON00_OFFSET                              (0x280U)
#define CRU_MODE_CON00_CLK_GPLL_MODE_SHIFT                 (0U)
#define CRU_MODE_CON00_CLK_GPLL_MODE_MASK                  (0x3U << CRU_MODE_CON00_CLK_GPLL_MODE_SHIFT)                 /* 0x00000003 */
#define CRU_MODE_CON00_CLK_V0PLL_MODE_SHIFT                (2U)
#define CRU_MODE_CON00_CLK_V0PLL_MODE_MASK                 (0x3U << CRU_MODE_CON00_CLK_V0PLL_MODE_SHIFT)                /* 0x0000000C */
#define CRU_MODE_CON00_CLK_V1PLL_MODE_SHIFT                (4U)
#define CRU_MODE_CON00_CLK_V1PLL_MODE_MASK                 (0x3U << CRU_MODE_CON00_CLK_V1PLL_MODE_SHIFT)                /* 0x00000030 */
/* CLKSEL_CON00 */
#define CRU_CLKSEL_CON00_OFFSET                            (0x300U)
#define CRU_CLKSEL_CON00_CLK_GPLL_DIV_DIV_SHIFT            (6U)
#define CRU_CLKSEL_CON00_CLK_GPLL_DIV_DIV_MASK             (0xFU << CRU_CLKSEL_CON00_CLK_GPLL_DIV_DIV_SHIFT)            /* 0x000003C0 */
#define CRU_CLKSEL_CON00_CLK_GPLL_DIV_100M_DIV_SHIFT       (10U)
#define CRU_CLKSEL_CON00_CLK_GPLL_DIV_100M_DIV_MASK        (0xFU << CRU_CLKSEL_CON00_CLK_GPLL_DIV_100M_DIV_SHIFT)       /* 0x00003C00 */
/* CLKSEL_CON01 */
#define CRU_CLKSEL_CON01_OFFSET                            (0x304U)
#define CRU_CLKSEL_CON01_CLK_V0PLL_DIV_DIV_SHIFT           (0U)
#define CRU_CLKSEL_CON01_CLK_V0PLL_DIV_DIV_MASK            (0xFU << CRU_CLKSEL_CON01_CLK_V0PLL_DIV_DIV_SHIFT)           /* 0x0000000F */
#define CRU_CLKSEL_CON01_CLK_V1PLL_DIV_DIV_SHIFT           (4U)
#define CRU_CLKSEL_CON01_CLK_V1PLL_DIV_DIV_MASK            (0xFU << CRU_CLKSEL_CON01_CLK_V1PLL_DIV_DIV_SHIFT)           /* 0x000000F0 */
#define CRU_CLKSEL_CON01_CLK_INT_VOICE_MATRIX0_DIV_SHIFT   (8U)
#define CRU_CLKSEL_CON01_CLK_INT_VOICE_MATRIX0_DIV_MASK    (0x1FU << CRU_CLKSEL_CON01_CLK_INT_VOICE_MATRIX0_DIV_SHIFT)  /* 0x00001F00 */
/* CLKSEL_CON02 */
#define CRU_CLKSEL_CON02_OFFSET                            (0x308U)
#define CRU_CLKSEL_CON02_CLK_INT_VOICE_MATRIX1_DIV_SHIFT   (0U)
#define CRU_CLKSEL_CON02_CLK_INT_VOICE_MATRIX1_DIV_MASK    (0x1FU << CRU_CLKSEL_CON02_CLK_INT_VOICE_MATRIX1_DIV_SHIFT)  /* 0x0000001F */
#define CRU_CLKSEL_CON02_CLK_INT_VOICE_MATRIX2_DIV_SHIFT   (5U)
#define CRU_CLKSEL_CON02_CLK_INT_VOICE_MATRIX2_DIV_MASK    (0x1FU << CRU_CLKSEL_CON02_CLK_INT_VOICE_MATRIX2_DIV_SHIFT)  /* 0x000003E0 */
/* CLKSEL_CON03 */
#define CRU_CLKSEL_CON03_OFFSET                            (0x30CU)
#define CRU_CLKSEL_CON03_CLK_TESTOUT_DIV_SHIFT             (0U)
#define CRU_CLKSEL_CON03_CLK_TESTOUT_DIV_MASK              (0x1FU << CRU_CLKSEL_CON03_CLK_TESTOUT_DIV_SHIFT)            /* 0x0000001F */
#define CRU_CLKSEL_CON03_CLK_TESTOUT_SEL_SHIFT             (5U)
#define CRU_CLKSEL_CON03_CLK_TESTOUT_SEL_MASK              (0xFU << CRU_CLKSEL_CON03_CLK_TESTOUT_SEL_SHIFT)             /* 0x000001E0 */
#define CRU_CLKSEL_CON03_CLK_FRAC_UART_MATRIX0_MUX_SEL_SHIFT (9U)
#define CRU_CLKSEL_CON03_CLK_FRAC_UART_MATRIX0_MUX_SEL_MASK (0x3U << CRU_CLKSEL_CON03_CLK_FRAC_UART_MATRIX0_MUX_SEL_SHIFT) /* 0x00000600 */
#define CRU_CLKSEL_CON03_CLK_FRAC_UART_MATRIX1_MUX_SEL_SHIFT (11U)
#define CRU_CLKSEL_CON03_CLK_FRAC_UART_MATRIX1_MUX_SEL_MASK (0x3U << CRU_CLKSEL_CON03_CLK_FRAC_UART_MATRIX1_MUX_SEL_SHIFT) /* 0x00001800 */
#define CRU_CLKSEL_CON03_CLK_FRAC_VOICE_MATRIX0_MUX_SEL_SHIFT (13U)
#define CRU_CLKSEL_CON03_CLK_FRAC_VOICE_MATRIX0_MUX_SEL_MASK (0x3U << CRU_CLKSEL_CON03_CLK_FRAC_VOICE_MATRIX0_MUX_SEL_SHIFT) /* 0x00006000 */
/* CLKSEL_CON04 */
#define CRU_CLKSEL_CON04_OFFSET                            (0x310U)
#define CRU_CLKSEL_CON04_CLK_FRAC_VOICE_MATRIX1_MUX_SEL_SHIFT (0U)
#define CRU_CLKSEL_CON04_CLK_FRAC_VOICE_MATRIX1_MUX_SEL_MASK (0x3U << CRU_CLKSEL_CON04_CLK_FRAC_VOICE_MATRIX1_MUX_SEL_SHIFT) /* 0x00000003 */
#define CRU_CLKSEL_CON04_CLK_FRAC_COMMON_MATRIX0_MUX_SEL_SHIFT (2U)
#define CRU_CLKSEL_CON04_CLK_FRAC_COMMON_MATRIX0_MUX_SEL_MASK (0x3U << CRU_CLKSEL_CON04_CLK_FRAC_COMMON_MATRIX0_MUX_SEL_SHIFT) /* 0x0000000C */
#define CRU_CLKSEL_CON04_CLK_FRAC_COMMON_MATRIX1_MUX_SEL_SHIFT (4U)
#define CRU_CLKSEL_CON04_CLK_FRAC_COMMON_MATRIX1_MUX_SEL_MASK (0x3U << CRU_CLKSEL_CON04_CLK_FRAC_COMMON_MATRIX1_MUX_SEL_SHIFT) /* 0x00000030 */
#define CRU_CLKSEL_CON04_CLK_FRAC_COMMON_MATRIX2_MUX_SEL_SHIFT (6U)
#define CRU_CLKSEL_CON04_CLK_FRAC_COMMON_MATRIX2_MUX_SEL_MASK (0x3U << CRU_CLKSEL_CON04_CLK_FRAC_COMMON_MATRIX2_MUX_SEL_SHIFT) /* 0x000000C0 */
/* CLKSEL_CON05 */
#define CRU_CLKSEL_CON05_OFFSET                            (0x314U)
#define CRU_CLKSEL_CON05_CLK_FRAC_UART_MATRIX0_DIV_SHIFT   (0U)
#define CRU_CLKSEL_CON05_CLK_FRAC_UART_MATRIX0_DIV_MASK    (0xFFFFFFFFU << CRU_CLKSEL_CON05_CLK_FRAC_UART_MATRIX0_DIV_SHIFT) /* 0xFFFFFFFF */
/* CLKSEL_CON06 */
#define CRU_CLKSEL_CON06_OFFSET                            (0x318U)
#define CRU_CLKSEL_CON06_CLK_FRAC_UART_MATRIX1_DIV_SHIFT   (0U)
#define CRU_CLKSEL_CON06_CLK_FRAC_UART_MATRIX1_DIV_MASK    (0xFFFFFFFFU << CRU_CLKSEL_CON06_CLK_FRAC_UART_MATRIX1_DIV_SHIFT) /* 0xFFFFFFFF */
/* CLKSEL_CON07 */
#define CRU_CLKSEL_CON07_OFFSET                            (0x31CU)
#define CRU_CLKSEL_CON07_CLK_FRAC_VOICE_MATRIX0_DIV_SHIFT  (0U)
#define CRU_CLKSEL_CON07_CLK_FRAC_VOICE_MATRIX0_DIV_MASK   (0xFFFFFFFFU << CRU_CLKSEL_CON07_CLK_FRAC_VOICE_MATRIX0_DIV_SHIFT) /* 0xFFFFFFFF */
/* CLKSEL_CON08 */
#define CRU_CLKSEL_CON08_OFFSET                            (0x320U)
#define CRU_CLKSEL_CON08_CLK_FRAC_VOICE_MATRIX0_DIV_HIGH_SHIFT (0U)
#define CRU_CLKSEL_CON08_CLK_FRAC_VOICE_MATRIX0_DIV_HIGH_MASK (0xFFFFU << CRU_CLKSEL_CON08_CLK_FRAC_VOICE_MATRIX0_DIV_HIGH_SHIFT) /* 0x0000FFFF */
/* CLKSEL_CON09 */
#define CRU_CLKSEL_CON09_OFFSET                            (0x324U)
#define CRU_CLKSEL_CON09_CLK_FRAC_VOICE_MATRIX1_DIV_SHIFT  (0U)
#define CRU_CLKSEL_CON09_CLK_FRAC_VOICE_MATRIX1_DIV_MASK   (0xFFFFFFFFU << CRU_CLKSEL_CON09_CLK_FRAC_VOICE_MATRIX1_DIV_SHIFT) /* 0xFFFFFFFF */
/* CLKSEL_CON10 */
#define CRU_CLKSEL_CON10_OFFSET                            (0x328U)
#define CRU_CLKSEL_CON10_CLK_FRAC_VOICE_MATRIX1_DIV_HIGH_SHIFT (0U)
#define CRU_CLKSEL_CON10_CLK_FRAC_VOICE_MATRIX1_DIV_HIGH_MASK (0xFFFFFFFFU << CRU_CLKSEL_CON10_CLK_FRAC_VOICE_MATRIX1_DIV_HIGH_SHIFT) /* 0xFFFFFFFF */
/* CLKSEL_CON11 */
#define CRU_CLKSEL_CON11_OFFSET                            (0x32CU)
#define CRU_CLKSEL_CON11_CLK_FRAC_COMMON_MATRIX0_DIV_SHIFT (0U)
#define CRU_CLKSEL_CON11_CLK_FRAC_COMMON_MATRIX0_DIV_MASK  (0xFFFFFFFFU << CRU_CLKSEL_CON11_CLK_FRAC_COMMON_MATRIX0_DIV_SHIFT) /* 0xFFFFFFFF */
/* CLKSEL_CON12 */
#define CRU_CLKSEL_CON12_OFFSET                            (0x330U)
#define CRU_CLKSEL_CON12_CLK_FRAC_COMMON_MATRIX1_DIV_SHIFT (0U)
#define CRU_CLKSEL_CON12_CLK_FRAC_COMMON_MATRIX1_DIV_MASK  (0xFFFFFFFFU << CRU_CLKSEL_CON12_CLK_FRAC_COMMON_MATRIX1_DIV_SHIFT) /* 0xFFFFFFFF */
/* CLKSEL_CON13 */
#define CRU_CLKSEL_CON13_OFFSET                            (0x334U)
#define CRU_CLKSEL_CON13_CLK_FRAC_COMMON_MATRIX2_DIV_SHIFT (0U)
#define CRU_CLKSEL_CON13_CLK_FRAC_COMMON_MATRIX2_DIV_MASK  (0xFFFFFFFFU << CRU_CLKSEL_CON13_CLK_FRAC_COMMON_MATRIX2_DIV_SHIFT) /* 0xFFFFFFFF */
/* CLKSEL_CON15 */
#define CRU_CLKSEL_CON15_OFFSET                            (0x33CU)
#define CRU_CLKSEL_CON15_CLK_CORE_SRC_DIV_DIV_SHIFT        (0U)
#define CRU_CLKSEL_CON15_CLK_CORE_SRC_DIV_DIV_MASK         (0x1FU << CRU_CLKSEL_CON15_CLK_CORE_SRC_DIV_DIV_SHIFT)       /* 0x0000001F */
#define CRU_CLKSEL_CON15_CLK_CORE_SRC_DIV_SEL_SHIFT        (5U)
#define CRU_CLKSEL_CON15_CLK_CORE_SRC_DIV_SEL_MASK         (0x3U << CRU_CLKSEL_CON15_CLK_CORE_SRC_DIV_SEL_SHIFT)        /* 0x00000060 */
#define CRU_CLKSEL_CON15_CLK_CORE_PVTPLL_SRC_SEL_SHIFT     (7U)
#define CRU_CLKSEL_CON15_CLK_CORE_PVTPLL_SRC_SEL_MASK      (0x1U << CRU_CLKSEL_CON15_CLK_CORE_PVTPLL_SRC_SEL_SHIFT)     /* 0x00000080 */
#define CRU_CLKSEL_CON15_CLK_CORE_SRC_PVTMUX_SEL_SHIFT     (8U)
#define CRU_CLKSEL_CON15_CLK_CORE_SRC_PVTMUX_SEL_MASK      (0x1U << CRU_CLKSEL_CON15_CLK_CORE_SRC_PVTMUX_SEL_SHIFT)     /* 0x00000100 */
#define CRU_CLKSEL_CON15_ACLK_CORE_ROOT_DIV_SHIFT          (9U)
#define CRU_CLKSEL_CON15_ACLK_CORE_ROOT_DIV_MASK           (0xFU << CRU_CLKSEL_CON15_ACLK_CORE_ROOT_DIV_SHIFT)          /* 0x00001E00 */
/* CLKSEL_CON16 */
#define CRU_CLKSEL_CON16_OFFSET                            (0x340U)
#define CRU_CLKSEL_CON16_PCLK_CORE_ROOT_DIV_SHIFT          (0U)
#define CRU_CLKSEL_CON16_PCLK_CORE_ROOT_DIV_MASK           (0xFU << CRU_CLKSEL_CON16_PCLK_CORE_ROOT_DIV_SHIFT)          /* 0x0000000F */
/* CLKSEL_CON18 */
#define CRU_CLKSEL_CON18_OFFSET                            (0x348U)
#define CRU_CLKSEL_CON18_ACLK_CORE_PERI_ROOT_DIV_SHIFT     (0U)
#define CRU_CLKSEL_CON18_ACLK_CORE_PERI_ROOT_DIV_MASK      (0x1FU << CRU_CLKSEL_CON18_ACLK_CORE_PERI_ROOT_DIV_SHIFT)    /* 0x0000001F */
#define CRU_CLKSEL_CON18_ACLK_CORE_PERI_ROOT_SEL_SHIFT     (5U)
#define CRU_CLKSEL_CON18_ACLK_CORE_PERI_ROOT_SEL_MASK      (0x3U << CRU_CLKSEL_CON18_ACLK_CORE_PERI_ROOT_SEL_SHIFT)     /* 0x00000060 */
#define CRU_CLKSEL_CON18_CLK_DSMC_DIV_SHIFT                (7U)
#define CRU_CLKSEL_CON18_CLK_DSMC_DIV_MASK                 (0x1FU << CRU_CLKSEL_CON18_CLK_DSMC_DIV_SHIFT)               /* 0x00000F80 */
#define CRU_CLKSEL_CON18_CLK_DSMC_SEL_SHIFT                (12U)
#define CRU_CLKSEL_CON18_CLK_DSMC_SEL_MASK                 (0x3U << CRU_CLKSEL_CON18_CLK_DSMC_SEL_SHIFT)                /* 0x00003000 */
/* CLKSEL_CON19 */
#define CRU_CLKSEL_CON19_OFFSET                            (0x34CU)
#define CRU_CLKSEL_CON19_CLK_FLEXBUS_TX_DIV_SHIFT          (0U)
#define CRU_CLKSEL_CON19_CLK_FLEXBUS_TX_DIV_MASK           (0x1FU << CRU_CLKSEL_CON19_CLK_FLEXBUS_TX_DIV_SHIFT)         /* 0x0000001F */
#define CRU_CLKSEL_CON19_CLK_FLEXBUS_TX_SEL_SHIFT          (5U)
#define CRU_CLKSEL_CON19_CLK_FLEXBUS_TX_SEL_MASK           (0x3U << CRU_CLKSEL_CON19_CLK_FLEXBUS_TX_SEL_SHIFT)          /* 0x00000060 */
#define CRU_CLKSEL_CON19_CLK_FLEXBUS_RX_DIV_SHIFT          (7U)
#define CRU_CLKSEL_CON19_CLK_FLEXBUS_RX_DIV_MASK           (0x1FU << CRU_CLKSEL_CON19_CLK_FLEXBUS_RX_DIV_SHIFT)         /* 0x00000F80 */
#define CRU_CLKSEL_CON19_CLK_FLEXBUS_RX_SEL_SHIFT          (12U)
#define CRU_CLKSEL_CON19_CLK_FLEXBUS_RX_SEL_MASK           (0x3U << CRU_CLKSEL_CON19_CLK_FLEXBUS_RX_SEL_SHIFT)          /* 0x00003000 */
/* CLKSEL_CON21 */
#define CRU_CLKSEL_CON21_OFFSET                            (0x354U)
#define CRU_CLKSEL_CON21_ACLK_BUS_ROOT_DIV_SHIFT           (0U)
#define CRU_CLKSEL_CON21_ACLK_BUS_ROOT_DIV_MASK            (0x1FU << CRU_CLKSEL_CON21_ACLK_BUS_ROOT_DIV_SHIFT)          /* 0x0000001F */
#define CRU_CLKSEL_CON21_ACLK_BUS_ROOT_SEL_SHIFT           (5U)
#define CRU_CLKSEL_CON21_ACLK_BUS_ROOT_SEL_MASK            (0x3U << CRU_CLKSEL_CON21_ACLK_BUS_ROOT_SEL_SHIFT)           /* 0x00000060 */
#define CRU_CLKSEL_CON21_HCLK_BUS_ROOT_DIV_SHIFT           (7U)
#define CRU_CLKSEL_CON21_HCLK_BUS_ROOT_DIV_MASK            (0x1FU << CRU_CLKSEL_CON21_HCLK_BUS_ROOT_DIV_SHIFT)          /* 0x00000F80 */
#define CRU_CLKSEL_CON21_HCLK_BUS_ROOT_SEL_SHIFT           (12U)
#define CRU_CLKSEL_CON21_HCLK_BUS_ROOT_SEL_MASK            (0x3U << CRU_CLKSEL_CON21_HCLK_BUS_ROOT_SEL_SHIFT)           /* 0x00003000 */
/* CLKSEL_CON22 */
#define CRU_CLKSEL_CON22_OFFSET                            (0x358U)
#define CRU_CLKSEL_CON22_PCLK_BUS_ROOT_DIV_SHIFT           (0U)
#define CRU_CLKSEL_CON22_PCLK_BUS_ROOT_DIV_MASK            (0x1FU << CRU_CLKSEL_CON22_PCLK_BUS_ROOT_DIV_SHIFT)          /* 0x0000001F */
#define CRU_CLKSEL_CON22_PCLK_BUS_ROOT_SEL_SHIFT           (5U)
#define CRU_CLKSEL_CON22_PCLK_BUS_ROOT_SEL_MASK            (0x3U << CRU_CLKSEL_CON22_PCLK_BUS_ROOT_SEL_SHIFT)           /* 0x00000060 */
#define CRU_CLKSEL_CON22_CLK_TIMER0_CH0_SEL_SHIFT          (7U)
#define CRU_CLKSEL_CON22_CLK_TIMER0_CH0_SEL_MASK           (0x7U << CRU_CLKSEL_CON22_CLK_TIMER0_CH0_SEL_SHIFT)          /* 0x00000380 */
#define CRU_CLKSEL_CON22_CLK_TIMER0_CH1_SEL_SHIFT          (10U)
#define CRU_CLKSEL_CON22_CLK_TIMER0_CH1_SEL_MASK           (0x7U << CRU_CLKSEL_CON22_CLK_TIMER0_CH1_SEL_SHIFT)          /* 0x00001C00 */
#define CRU_CLKSEL_CON22_CLK_TIMER0_CH2_SEL_SHIFT          (13U)
#define CRU_CLKSEL_CON22_CLK_TIMER0_CH2_SEL_MASK           (0x7U << CRU_CLKSEL_CON22_CLK_TIMER0_CH2_SEL_SHIFT)          /* 0x0000E000 */
/* CLKSEL_CON23 */
#define CRU_CLKSEL_CON23_OFFSET                            (0x35CU)
#define CRU_CLKSEL_CON23_CLK_TIMER0_CH3_SEL_SHIFT          (0U)
#define CRU_CLKSEL_CON23_CLK_TIMER0_CH3_SEL_MASK           (0x7U << CRU_CLKSEL_CON23_CLK_TIMER0_CH3_SEL_SHIFT)          /* 0x00000007 */
#define CRU_CLKSEL_CON23_CLK_TIMER0_CH4_SEL_SHIFT          (3U)
#define CRU_CLKSEL_CON23_CLK_TIMER0_CH4_SEL_MASK           (0x7U << CRU_CLKSEL_CON23_CLK_TIMER0_CH4_SEL_SHIFT)          /* 0x00000038 */
#define CRU_CLKSEL_CON23_CLK_TIMER0_CH5_SEL_SHIFT          (6U)
#define CRU_CLKSEL_CON23_CLK_TIMER0_CH5_SEL_MASK           (0x7U << CRU_CLKSEL_CON23_CLK_TIMER0_CH5_SEL_SHIFT)          /* 0x000001C0 */
#define CRU_CLKSEL_CON23_STCLK_M0_DIV_SHIFT                (9U)
#define CRU_CLKSEL_CON23_STCLK_M0_DIV_MASK                 (0x3FU << CRU_CLKSEL_CON23_STCLK_M0_DIV_SHIFT)               /* 0x00007E00 */
/* CLKSEL_CON29 */
#define CRU_CLKSEL_CON29_OFFSET                            (0x374U)
#define CRU_CLKSEL_CON29_HCLK_LSPERI_ROOT_DIV_SHIFT        (0U)
#define CRU_CLKSEL_CON29_HCLK_LSPERI_ROOT_DIV_MASK         (0x1FU << CRU_CLKSEL_CON29_HCLK_LSPERI_ROOT_DIV_SHIFT)       /* 0x0000001F */
#define CRU_CLKSEL_CON29_HCLK_LSPERI_ROOT_SEL_SHIFT        (5U)
#define CRU_CLKSEL_CON29_HCLK_LSPERI_ROOT_SEL_MASK         (0x3U << CRU_CLKSEL_CON29_HCLK_LSPERI_ROOT_SEL_SHIFT)        /* 0x00000060 */
#define CRU_CLKSEL_CON29_SCLK_UART0_DIV_SHIFT              (7U)
#define CRU_CLKSEL_CON29_SCLK_UART0_DIV_MASK               (0x1FU << CRU_CLKSEL_CON29_SCLK_UART0_DIV_SHIFT)             /* 0x00000F80 */
#define CRU_CLKSEL_CON29_SCLK_UART0_SEL_SHIFT              (12U)
#define CRU_CLKSEL_CON29_SCLK_UART0_SEL_MASK               (0x7U << CRU_CLKSEL_CON29_SCLK_UART0_SEL_SHIFT)              /* 0x00007000 */
/* CLKSEL_CON30 */
#define CRU_CLKSEL_CON30_OFFSET                            (0x378U)
#define CRU_CLKSEL_CON30_SCLK_UART1_DIV_SHIFT              (0U)
#define CRU_CLKSEL_CON30_SCLK_UART1_DIV_MASK               (0x1FU << CRU_CLKSEL_CON30_SCLK_UART1_DIV_SHIFT)             /* 0x0000001F */
#define CRU_CLKSEL_CON30_SCLK_UART1_SEL_SHIFT              (5U)
#define CRU_CLKSEL_CON30_SCLK_UART1_SEL_MASK               (0x7U << CRU_CLKSEL_CON30_SCLK_UART1_SEL_SHIFT)              /* 0x000000E0 */
#define CRU_CLKSEL_CON30_SCLK_UART2_DIV_SHIFT              (8U)
#define CRU_CLKSEL_CON30_SCLK_UART2_DIV_MASK               (0x1FU << CRU_CLKSEL_CON30_SCLK_UART2_DIV_SHIFT)             /* 0x00001F00 */
#define CRU_CLKSEL_CON30_SCLK_UART2_SEL_SHIFT              (13U)
#define CRU_CLKSEL_CON30_SCLK_UART2_SEL_MASK               (0x7U << CRU_CLKSEL_CON30_SCLK_UART2_SEL_SHIFT)              /* 0x0000E000 */
/* CLKSEL_CON31 */
#define CRU_CLKSEL_CON31_OFFSET                            (0x37CU)
#define CRU_CLKSEL_CON31_SCLK_UART3_DIV_SHIFT              (0U)
#define CRU_CLKSEL_CON31_SCLK_UART3_DIV_MASK               (0x1FU << CRU_CLKSEL_CON31_SCLK_UART3_DIV_SHIFT)             /* 0x0000001F */
#define CRU_CLKSEL_CON31_SCLK_UART3_SEL_SHIFT              (5U)
#define CRU_CLKSEL_CON31_SCLK_UART3_SEL_MASK               (0x7U << CRU_CLKSEL_CON31_SCLK_UART3_SEL_SHIFT)              /* 0x000000E0 */
#define CRU_CLKSEL_CON31_SCLK_UART4_DIV_SHIFT              (8U)
#define CRU_CLKSEL_CON31_SCLK_UART4_DIV_MASK               (0x1FU << CRU_CLKSEL_CON31_SCLK_UART4_DIV_SHIFT)             /* 0x00001F00 */
#define CRU_CLKSEL_CON31_SCLK_UART4_SEL_SHIFT              (13U)
#define CRU_CLKSEL_CON31_SCLK_UART4_SEL_MASK               (0x7U << CRU_CLKSEL_CON31_SCLK_UART4_SEL_SHIFT)              /* 0x0000E000 */
/* CLKSEL_CON32 */
#define CRU_CLKSEL_CON32_OFFSET                            (0x380U)
#define CRU_CLKSEL_CON32_CLK_I2C0_DIV_SHIFT                (0U)
#define CRU_CLKSEL_CON32_CLK_I2C0_DIV_MASK                 (0xFU << CRU_CLKSEL_CON32_CLK_I2C0_DIV_SHIFT)                /* 0x0000000F */
#define CRU_CLKSEL_CON32_CLK_I2C0_SEL_SHIFT                (4U)
#define CRU_CLKSEL_CON32_CLK_I2C0_SEL_MASK                 (0x3U << CRU_CLKSEL_CON32_CLK_I2C0_SEL_SHIFT)                /* 0x00000030 */
#define CRU_CLKSEL_CON32_CLK_I2C1_DIV_SHIFT                (6U)
#define CRU_CLKSEL_CON32_CLK_I2C1_DIV_MASK                 (0xFU << CRU_CLKSEL_CON32_CLK_I2C1_DIV_SHIFT)                /* 0x000003C0 */
#define CRU_CLKSEL_CON32_CLK_I2C1_SEL_SHIFT                (10U)
#define CRU_CLKSEL_CON32_CLK_I2C1_SEL_MASK                 (0x3U << CRU_CLKSEL_CON32_CLK_I2C1_SEL_SHIFT)                /* 0x00000C00 */
/* CLKSEL_CON33 */
#define CRU_CLKSEL_CON33_OFFSET                            (0x384U)
#define CRU_CLKSEL_CON33_CLK_I2C2_DIV_SHIFT                (0U)
#define CRU_CLKSEL_CON33_CLK_I2C2_DIV_MASK                 (0xFU << CRU_CLKSEL_CON33_CLK_I2C2_DIV_SHIFT)                /* 0x0000000F */
#define CRU_CLKSEL_CON33_CLK_I2C2_SEL_SHIFT                (4U)
#define CRU_CLKSEL_CON33_CLK_I2C2_SEL_MASK                 (0x3U << CRU_CLKSEL_CON33_CLK_I2C2_SEL_SHIFT)                /* 0x00000030 */
#define CRU_CLKSEL_CON33_CLK_PWM1_DIV_SHIFT                (6U)
#define CRU_CLKSEL_CON33_CLK_PWM1_DIV_MASK                 (0xFU << CRU_CLKSEL_CON33_CLK_PWM1_DIV_SHIFT)                /* 0x000003C0 */
#define CRU_CLKSEL_CON33_CLK_PWM1_SEL_SHIFT                (10U)
#define CRU_CLKSEL_CON33_CLK_PWM1_SEL_MASK                 (0x3U << CRU_CLKSEL_CON33_CLK_PWM1_SEL_SHIFT)                /* 0x00000C00 */
#define CRU_CLKSEL_CON33_CLK_FREQ_PWM1_SEL_SHIFT           (12U)
#define CRU_CLKSEL_CON33_CLK_FREQ_PWM1_SEL_MASK            (0xFU << CRU_CLKSEL_CON33_CLK_FREQ_PWM1_SEL_SHIFT)           /* 0x0000F000 */
/* CLKSEL_CON34 */
#define CRU_CLKSEL_CON34_OFFSET                            (0x388U)
#define CRU_CLKSEL_CON34_CLK_COUNTER_PWM1_SEL_SHIFT        (0U)
#define CRU_CLKSEL_CON34_CLK_COUNTER_PWM1_SEL_MASK         (0xFU << CRU_CLKSEL_CON34_CLK_COUNTER_PWM1_SEL_SHIFT)        /* 0x0000000F */
#define CRU_CLKSEL_CON34_CLK_SPI0_DIV_SHIFT                (4U)
#define CRU_CLKSEL_CON34_CLK_SPI0_DIV_MASK                 (0xFU << CRU_CLKSEL_CON34_CLK_SPI0_DIV_SHIFT)                /* 0x000000F0 */
#define CRU_CLKSEL_CON34_CLK_SPI0_SEL_SHIFT                (8U)
#define CRU_CLKSEL_CON34_CLK_SPI0_SEL_MASK                 (0x3U << CRU_CLKSEL_CON34_CLK_SPI0_SEL_SHIFT)                /* 0x00000300 */
#define CRU_CLKSEL_CON34_CLK_SPI1_DIV_SHIFT                (10U)
#define CRU_CLKSEL_CON34_CLK_SPI1_DIV_MASK                 (0xFU << CRU_CLKSEL_CON34_CLK_SPI1_DIV_SHIFT)                /* 0x00003C00 */
#define CRU_CLKSEL_CON34_CLK_SPI1_SEL_SHIFT                (14U)
#define CRU_CLKSEL_CON34_CLK_SPI1_SEL_MASK                 (0x3U << CRU_CLKSEL_CON34_CLK_SPI1_SEL_SHIFT)                /* 0x0000C000 */
/* CLKSEL_CON35 */
#define CRU_CLKSEL_CON35_OFFSET                            (0x38CU)
#define CRU_CLKSEL_CON35_DBCLK_GPIO2_SEL_SHIFT             (0U)
#define CRU_CLKSEL_CON35_DBCLK_GPIO2_SEL_MASK              (0x3U << CRU_CLKSEL_CON35_DBCLK_GPIO2_SEL_SHIFT)             /* 0x00000003 */
#define CRU_CLKSEL_CON35_DBCLK_GPIO3_SEL_SHIFT             (2U)
#define CRU_CLKSEL_CON35_DBCLK_GPIO3_SEL_MASK              (0x3U << CRU_CLKSEL_CON35_DBCLK_GPIO3_SEL_SHIFT)             /* 0x0000000C */
#define CRU_CLKSEL_CON35_DBCLK_GPIO4_SEL_SHIFT             (4U)
#define CRU_CLKSEL_CON35_DBCLK_GPIO4_SEL_MASK              (0x3U << CRU_CLKSEL_CON35_DBCLK_GPIO4_SEL_SHIFT)             /* 0x00000030 */
#define CRU_CLKSEL_CON35_CLK_CAN0_DIV_SHIFT                (6U)
#define CRU_CLKSEL_CON35_CLK_CAN0_DIV_MASK                 (0x1FU << CRU_CLKSEL_CON35_CLK_CAN0_DIV_SHIFT)               /* 0x000007C0 */
#define CRU_CLKSEL_CON35_CLK_CAN0_SEL_SHIFT                (11U)
#define CRU_CLKSEL_CON35_CLK_CAN0_SEL_MASK                 (0x7U << CRU_CLKSEL_CON35_CLK_CAN0_SEL_SHIFT)                /* 0x00003800 */
/* CLKSEL_CON36 */
#define CRU_CLKSEL_CON36_OFFSET                            (0x390U)
#define CRU_CLKSEL_CON36_CLK_CAN1_DIV_SHIFT                (0U)
#define CRU_CLKSEL_CON36_CLK_CAN1_DIV_MASK                 (0x1FU << CRU_CLKSEL_CON36_CLK_CAN1_DIV_SHIFT)               /* 0x0000001F */
#define CRU_CLKSEL_CON36_CLK_CAN1_SEL_SHIFT                (5U)
#define CRU_CLKSEL_CON36_CLK_CAN1_SEL_MASK                 (0x7U << CRU_CLKSEL_CON36_CLK_CAN1_SEL_SHIFT)                /* 0x000000E0 */
/* CLKSEL_CON37 */
#define CRU_CLKSEL_CON37_OFFSET                            (0x394U)
#define CRU_CLKSEL_CON37_MCLK_PDM_DIV_SHIFT                (0U)
#define CRU_CLKSEL_CON37_MCLK_PDM_DIV_MASK                 (0x1FU << CRU_CLKSEL_CON37_MCLK_PDM_DIV_SHIFT)               /* 0x0000001F */
#define CRU_CLKSEL_CON37_MCLK_PDM_SEL_SHIFT                (5U)
#define CRU_CLKSEL_CON37_MCLK_PDM_SEL_MASK                 (0xFU << CRU_CLKSEL_CON37_MCLK_PDM_SEL_SHIFT)                /* 0x000001E0 */
/* CLKSEL_CON38 */
#define CRU_CLKSEL_CON38_OFFSET                            (0x398U)
#define CRU_CLKSEL_CON38_CLKOUT_PDM_DIV_SHIFT              (0U)
#define CRU_CLKSEL_CON38_CLKOUT_PDM_DIV_MASK               (0x3FFU << CRU_CLKSEL_CON38_CLKOUT_PDM_DIV_SHIFT)            /* 0x000003FF */
#define CRU_CLKSEL_CON38_CLKOUT_PDM_SEL_SHIFT              (10U)
#define CRU_CLKSEL_CON38_CLKOUT_PDM_SEL_MASK               (0xFU << CRU_CLKSEL_CON38_CLKOUT_PDM_SEL_SHIFT)              /* 0x00003C00 */
/* CLKSEL_CON39 */
#define CRU_CLKSEL_CON39_OFFSET                            (0x39CU)
#define CRU_CLKSEL_CON39_MCLK_SPDIFTX_DIV_SHIFT            (0U)
#define CRU_CLKSEL_CON39_MCLK_SPDIFTX_DIV_MASK             (0x1FU << CRU_CLKSEL_CON39_MCLK_SPDIFTX_DIV_SHIFT)           /* 0x0000001F */
#define CRU_CLKSEL_CON39_MCLK_SPDIFTX_SEL_SHIFT            (5U)
#define CRU_CLKSEL_CON39_MCLK_SPDIFTX_SEL_MASK             (0xFU << CRU_CLKSEL_CON39_MCLK_SPDIFTX_SEL_SHIFT)            /* 0x000001E0 */
#define CRU_CLKSEL_CON39_MCLK_SPDIFRX_DIV_SHIFT            (9U)
#define CRU_CLKSEL_CON39_MCLK_SPDIFRX_DIV_MASK             (0x1FU << CRU_CLKSEL_CON39_MCLK_SPDIFRX_DIV_SHIFT)           /* 0x00003E00 */
#define CRU_CLKSEL_CON39_MCLK_SPDIFRX_SEL_SHIFT            (14U)
#define CRU_CLKSEL_CON39_MCLK_SPDIFRX_SEL_MASK             (0x3U << CRU_CLKSEL_CON39_MCLK_SPDIFRX_SEL_SHIFT)            /* 0x0000C000 */
/* CLKSEL_CON40 */
#define CRU_CLKSEL_CON40_OFFSET                            (0x3A0U)
#define CRU_CLKSEL_CON40_MCLK_SAI0_DIV_SHIFT               (0U)
#define CRU_CLKSEL_CON40_MCLK_SAI0_DIV_MASK                (0xFFU << CRU_CLKSEL_CON40_MCLK_SAI0_DIV_SHIFT)              /* 0x000000FF */
#define CRU_CLKSEL_CON40_MCLK_SAI0_SEL_SHIFT               (8U)
#define CRU_CLKSEL_CON40_MCLK_SAI0_SEL_MASK                (0xFU << CRU_CLKSEL_CON40_MCLK_SAI0_SEL_SHIFT)               /* 0x00000F00 */
/* CLKSEL_CON41 */
#define CRU_CLKSEL_CON41_OFFSET                            (0x3A4U)
#define CRU_CLKSEL_CON41_MCLK_SAI1_DIV_SHIFT               (0U)
#define CRU_CLKSEL_CON41_MCLK_SAI1_DIV_MASK                (0xFFU << CRU_CLKSEL_CON41_MCLK_SAI1_DIV_SHIFT)              /* 0x000000FF */
#define CRU_CLKSEL_CON41_MCLK_SAI1_SEL_SHIFT               (8U)
#define CRU_CLKSEL_CON41_MCLK_SAI1_SEL_MASK                (0xFU << CRU_CLKSEL_CON41_MCLK_SAI1_SEL_SHIFT)               /* 0x00000F00 */
/* CLKSEL_CON42 */
#define CRU_CLKSEL_CON42_OFFSET                            (0x3A8U)
#define CRU_CLKSEL_CON42_CLK_ASRC0_DIV_SHIFT               (0U)
#define CRU_CLKSEL_CON42_CLK_ASRC0_DIV_MASK                (0x1FU << CRU_CLKSEL_CON42_CLK_ASRC0_DIV_SHIFT)              /* 0x0000001F */
#define CRU_CLKSEL_CON42_CLK_ASRC0_SEL_SHIFT               (5U)
#define CRU_CLKSEL_CON42_CLK_ASRC0_SEL_MASK                (0x3U << CRU_CLKSEL_CON42_CLK_ASRC0_SEL_SHIFT)               /* 0x00000060 */
#define CRU_CLKSEL_CON42_CLK_ASRC1_DIV_SHIFT               (7U)
#define CRU_CLKSEL_CON42_CLK_ASRC1_DIV_MASK                (0x1FU << CRU_CLKSEL_CON42_CLK_ASRC1_DIV_SHIFT)              /* 0x00000F80 */
#define CRU_CLKSEL_CON42_CLK_ASRC1_SEL_SHIFT               (12U)
#define CRU_CLKSEL_CON42_CLK_ASRC1_SEL_MASK                (0x3U << CRU_CLKSEL_CON42_CLK_ASRC1_SEL_SHIFT)               /* 0x00003000 */
/* CLKSEL_CON46 */
#define CRU_CLKSEL_CON46_OFFSET                            (0x3B8U)
#define CRU_CLKSEL_CON46_MCLK_ASRC0_SEL_SHIFT              (0U)
#define CRU_CLKSEL_CON46_MCLK_ASRC0_SEL_MASK               (0xFU << CRU_CLKSEL_CON46_MCLK_ASRC0_SEL_SHIFT)              /* 0x0000000F */
#define CRU_CLKSEL_CON46_MCLK_ASRC1_SEL_SHIFT              (4U)
#define CRU_CLKSEL_CON46_MCLK_ASRC1_SEL_MASK               (0xFU << CRU_CLKSEL_CON46_MCLK_ASRC1_SEL_SHIFT)              /* 0x000000F0 */
#define CRU_CLKSEL_CON46_MCLK_ASRC2_SEL_SHIFT              (8U)
#define CRU_CLKSEL_CON46_MCLK_ASRC2_SEL_MASK               (0xFU << CRU_CLKSEL_CON46_MCLK_ASRC2_SEL_SHIFT)              /* 0x00000F00 */
#define CRU_CLKSEL_CON46_MCLK_ASRC3_SEL_SHIFT              (12U)
#define CRU_CLKSEL_CON46_MCLK_ASRC3_SEL_MASK               (0xFU << CRU_CLKSEL_CON46_MCLK_ASRC3_SEL_SHIFT)              /* 0x0000F000 */
/* CLKSEL_CON47 */
#define CRU_CLKSEL_CON47_OFFSET                            (0x3BCU)
#define CRU_CLKSEL_CON47_LRCK_ASRC0_SRC_SEL_SHIFT          (0U)
#define CRU_CLKSEL_CON47_LRCK_ASRC0_SRC_SEL_MASK           (0xFU << CRU_CLKSEL_CON47_LRCK_ASRC0_SRC_SEL_SHIFT)          /* 0x0000000F */
#define CRU_CLKSEL_CON47_LRCK_ASRC0_DST_SEL_SHIFT          (4U)
#define CRU_CLKSEL_CON47_LRCK_ASRC0_DST_SEL_MASK           (0xFU << CRU_CLKSEL_CON47_LRCK_ASRC0_DST_SEL_SHIFT)          /* 0x000000F0 */
#define CRU_CLKSEL_CON47_LRCK_ASRC1_SRC_SEL_SHIFT          (8U)
#define CRU_CLKSEL_CON47_LRCK_ASRC1_SRC_SEL_MASK           (0xFU << CRU_CLKSEL_CON47_LRCK_ASRC1_SRC_SEL_SHIFT)          /* 0x00000F00 */
#define CRU_CLKSEL_CON47_LRCK_ASRC1_DST_SEL_SHIFT          (12U)
#define CRU_CLKSEL_CON47_LRCK_ASRC1_DST_SEL_MASK           (0xFU << CRU_CLKSEL_CON47_LRCK_ASRC1_DST_SEL_SHIFT)          /* 0x0000F000 */
/* CLKSEL_CON49 */
#define CRU_CLKSEL_CON49_OFFSET                            (0x3C4U)
#define CRU_CLKSEL_CON49_ACLK_HSPERI_ROOT_DIV_SHIFT        (0U)
#define CRU_CLKSEL_CON49_ACLK_HSPERI_ROOT_DIV_MASK         (0x1FU << CRU_CLKSEL_CON49_ACLK_HSPERI_ROOT_DIV_SHIFT)       /* 0x0000001F */
#define CRU_CLKSEL_CON49_ACLK_HSPERI_ROOT_SEL_SHIFT        (5U)
#define CRU_CLKSEL_CON49_ACLK_HSPERI_ROOT_SEL_MASK         (0x3U << CRU_CLKSEL_CON49_ACLK_HSPERI_ROOT_SEL_SHIFT)        /* 0x00000060 */
#define CRU_CLKSEL_CON49_CCLK_SRC_SDMMC_DIV_SHIFT          (7U)
#define CRU_CLKSEL_CON49_CCLK_SRC_SDMMC_DIV_MASK           (0x3FU << CRU_CLKSEL_CON49_CCLK_SRC_SDMMC_DIV_SHIFT)         /* 0x00001F80 */
#define CRU_CLKSEL_CON49_CCLK_SRC_SDMMC_SEL_SHIFT          (13U)
#define CRU_CLKSEL_CON49_CCLK_SRC_SDMMC_SEL_MASK           (0x3U << CRU_CLKSEL_CON49_CCLK_SRC_SDMMC_SEL_SHIFT)          /* 0x00006000 */
/* CLKSEL_CON50 */
#define CRU_CLKSEL_CON50_OFFSET                            (0x3C8U)
#define CRU_CLKSEL_CON50_SCLK_FSPI_DIV_SHIFT               (0U)
#define CRU_CLKSEL_CON50_SCLK_FSPI_DIV_MASK                (0x1FU << CRU_CLKSEL_CON50_SCLK_FSPI_DIV_SHIFT)              /* 0x0000001F */
#define CRU_CLKSEL_CON50_SCLK_FSPI_SEL_SHIFT               (5U)
#define CRU_CLKSEL_CON50_SCLK_FSPI_SEL_MASK                (0x3U << CRU_CLKSEL_CON50_SCLK_FSPI_SEL_SHIFT)               /* 0x00000060 */
#define CRU_CLKSEL_CON50_CLK_MAC_ROOT_DIV_SHIFT            (7U)
#define CRU_CLKSEL_CON50_CLK_MAC_ROOT_DIV_MASK             (0x1FU << CRU_CLKSEL_CON50_CLK_MAC_ROOT_DIV_SHIFT)           /* 0x00000F80 */
/* CLKSEL_CON51 */
#define CRU_CLKSEL_CON51_OFFSET                            (0x3CCU)
#define CRU_CLKSEL_CON51_MCLK_SAI2_DIV_SHIFT               (0U)
#define CRU_CLKSEL_CON51_MCLK_SAI2_DIV_MASK                (0xFFU << CRU_CLKSEL_CON51_MCLK_SAI2_DIV_SHIFT)              /* 0x000000FF */
#define CRU_CLKSEL_CON51_MCLK_SAI2_SEL_SHIFT               (8U)
#define CRU_CLKSEL_CON51_MCLK_SAI2_SEL_MASK                (0xFU << CRU_CLKSEL_CON51_MCLK_SAI2_SEL_SHIFT)               /* 0x00000F00 */
/* CLKSEL_CON52 */
#define CRU_CLKSEL_CON52_OFFSET                            (0x3D0U)
#define CRU_CLKSEL_CON52_MCLK_SAI3_SRC_DIV_SHIFT           (0U)
#define CRU_CLKSEL_CON52_MCLK_SAI3_SRC_DIV_MASK            (0xFFU << CRU_CLKSEL_CON52_MCLK_SAI3_SRC_DIV_SHIFT)          /* 0x000000FF */
#define CRU_CLKSEL_CON52_MCLK_SAI3_SRC_SEL_SHIFT           (8U)
#define CRU_CLKSEL_CON52_MCLK_SAI3_SRC_SEL_MASK            (0xFU << CRU_CLKSEL_CON52_MCLK_SAI3_SRC_SEL_SHIFT)           /* 0x00000F00 */
/* CLKSEL_CON53 */
#define CRU_CLKSEL_CON53_OFFSET                            (0x3D4U)
#define CRU_CLKSEL_CON53_MCLK_SAI4_SRC_DIV_SHIFT           (0U)
#define CRU_CLKSEL_CON53_MCLK_SAI4_SRC_DIV_MASK            (0xFFU << CRU_CLKSEL_CON53_MCLK_SAI4_SRC_DIV_SHIFT)          /* 0x000000FF */
#define CRU_CLKSEL_CON53_MCLK_SAI4_SRC_SEL_SHIFT           (8U)
#define CRU_CLKSEL_CON53_MCLK_SAI4_SRC_SEL_MASK            (0xFU << CRU_CLKSEL_CON53_MCLK_SAI4_SRC_SEL_SHIFT)           /* 0x00000F00 */
/* CLKSEL_CON54 */
#define CRU_CLKSEL_CON54_OFFSET                            (0x3D8U)
#define CRU_CLKSEL_CON54_CLK_SARADC_DIV_SHIFT              (0U)
#define CRU_CLKSEL_CON54_CLK_SARADC_DIV_MASK               (0xFU << CRU_CLKSEL_CON54_CLK_SARADC_DIV_SHIFT)              /* 0x0000000F */
#define CRU_CLKSEL_CON54_CLK_SARADC_SEL_SHIFT              (4U)
#define CRU_CLKSEL_CON54_CLK_SARADC_SEL_MASK               (0x3U << CRU_CLKSEL_CON54_CLK_SARADC_SEL_SHIFT)              /* 0x00000030 */
#define CRU_CLKSEL_CON54_SCLK_UART5_DIV_SHIFT              (6U)
#define CRU_CLKSEL_CON54_SCLK_UART5_DIV_MASK               (0x1FU << CRU_CLKSEL_CON54_SCLK_UART5_DIV_SHIFT)             /* 0x000007C0 */
#define CRU_CLKSEL_CON54_SCLK_UART5_SEL_SHIFT              (11U)
#define CRU_CLKSEL_CON54_SCLK_UART5_SEL_MASK               (0x7U << CRU_CLKSEL_CON54_SCLK_UART5_SEL_SHIFT)              /* 0x00003800 */
/* CLKSEL_CON55 */
#define CRU_CLKSEL_CON55_OFFSET                            (0x3DCU)
#define CRU_CLKSEL_CON55_CLK_MAC_PTP_ROOT_DIV_SHIFT        (0U)
#define CRU_CLKSEL_CON55_CLK_MAC_PTP_ROOT_DIV_MASK         (0x1FU << CRU_CLKSEL_CON55_CLK_MAC_PTP_ROOT_DIV_SHIFT)       /* 0x0000001F */
#define CRU_CLKSEL_CON55_CLK_MAC_PTP_ROOT_SEL_SHIFT        (5U)
#define CRU_CLKSEL_CON55_CLK_MAC_PTP_ROOT_SEL_MASK         (0x3U << CRU_CLKSEL_CON55_CLK_MAC_PTP_ROOT_SEL_SHIFT)        /* 0x00000060 */
/* CLKSEL_CON58 */
#define CRU_CLKSEL_CON58_OFFSET                            (0x3E8U)
#define CRU_CLKSEL_CON58_ACLK_VIO_ROOT_DIV_SHIFT           (0U)
#define CRU_CLKSEL_CON58_ACLK_VIO_ROOT_DIV_MASK            (0x1FU << CRU_CLKSEL_CON58_ACLK_VIO_ROOT_DIV_SHIFT)          /* 0x0000001F */
#define CRU_CLKSEL_CON58_ACLK_VIO_ROOT_SEL_SHIFT           (5U)
#define CRU_CLKSEL_CON58_ACLK_VIO_ROOT_SEL_MASK            (0x3U << CRU_CLKSEL_CON58_ACLK_VIO_ROOT_SEL_SHIFT)           /* 0x00000060 */
#define CRU_CLKSEL_CON58_HCLK_VIO_ROOT_DIV_SHIFT           (7U)
#define CRU_CLKSEL_CON58_HCLK_VIO_ROOT_DIV_MASK            (0x1FU << CRU_CLKSEL_CON58_HCLK_VIO_ROOT_DIV_SHIFT)          /* 0x00000F80 */
#define CRU_CLKSEL_CON58_HCLK_VIO_ROOT_SEL_SHIFT           (12U)
#define CRU_CLKSEL_CON58_HCLK_VIO_ROOT_SEL_MASK            (0x3U << CRU_CLKSEL_CON58_HCLK_VIO_ROOT_SEL_SHIFT)           /* 0x00003000 */
/* CLKSEL_CON59 */
#define CRU_CLKSEL_CON59_OFFSET                            (0x3ECU)
#define CRU_CLKSEL_CON59_CLK_CORE_RGA_DIV_SHIFT            (0U)
#define CRU_CLKSEL_CON59_CLK_CORE_RGA_DIV_MASK             (0x1FU << CRU_CLKSEL_CON59_CLK_CORE_RGA_DIV_SHIFT)           /* 0x0000001F */
#define CRU_CLKSEL_CON59_CLK_CORE_RGA_SEL_SHIFT            (5U)
#define CRU_CLKSEL_CON59_CLK_CORE_RGA_SEL_MASK             (0x3U << CRU_CLKSEL_CON59_CLK_CORE_RGA_SEL_SHIFT)            /* 0x00000060 */
/* CLKSEL_CON60 */
#define CRU_CLKSEL_CON60_OFFSET                            (0x3F0U)
#define CRU_CLKSEL_CON60_DCLK_VOP_DIV_SHIFT                (0U)
#define CRU_CLKSEL_CON60_DCLK_VOP_DIV_MASK                 (0xFFU << CRU_CLKSEL_CON60_DCLK_VOP_DIV_SHIFT)               /* 0x000000FF */
#define CRU_CLKSEL_CON60_DCLK_VOP_SEL_SHIFT                (8U)
#define CRU_CLKSEL_CON60_DCLK_VOP_SEL_MASK                 (0x7U << CRU_CLKSEL_CON60_DCLK_VOP_SEL_SHIFT)                /* 0x00000700 */
/* CLKSEL_CON61 */
#define CRU_CLKSEL_CON61_OFFSET                            (0x3F4U)
#define CRU_CLKSEL_CON61_CLK_TSADC_DIV_SHIFT               (0U)
#define CRU_CLKSEL_CON61_CLK_TSADC_DIV_MASK                (0xFFU << CRU_CLKSEL_CON61_CLK_TSADC_DIV_SHIFT)              /* 0x000000FF */
#define CRU_CLKSEL_CON61_CLK_TSADC_TSEN_DIV_SHIFT          (8U)
#define CRU_CLKSEL_CON61_CLK_TSADC_TSEN_DIV_MASK           (0x7U << CRU_CLKSEL_CON61_CLK_TSADC_TSEN_DIV_SHIFT)          /* 0x00000700 */
/* GATE_CON00 */
#define CRU_GATE_CON00_OFFSET                              (0x800U)
#define CRU_GATE_CON00_XIN_OSC0_FUNC_EN_SHIFT              (1U)
#define CRU_GATE_CON00_XIN_OSC0_FUNC_EN_MASK               (0x1U << CRU_GATE_CON00_XIN_OSC0_FUNC_EN_SHIFT)              /* 0x00000002 */
#define CRU_GATE_CON00_CLK_GPLL_MUX_EN_SHIFT               (2U)
#define CRU_GATE_CON00_CLK_GPLL_MUX_EN_MASK                (0x1U << CRU_GATE_CON00_CLK_GPLL_MUX_EN_SHIFT)               /* 0x00000004 */
#define CRU_GATE_CON00_CLK_V0PLL_MUX_EN_SHIFT              (3U)
#define CRU_GATE_CON00_CLK_V0PLL_MUX_EN_MASK               (0x1U << CRU_GATE_CON00_CLK_V0PLL_MUX_EN_SHIFT)              /* 0x00000008 */
#define CRU_GATE_CON00_CLK_V1PLL_MUX_EN_SHIFT              (4U)
#define CRU_GATE_CON00_CLK_V1PLL_MUX_EN_MASK               (0x1U << CRU_GATE_CON00_CLK_V1PLL_MUX_EN_SHIFT)              /* 0x00000010 */
#define CRU_GATE_CON00_CLK_GPLL_DIV_EN_SHIFT               (5U)
#define CRU_GATE_CON00_CLK_GPLL_DIV_EN_MASK                (0x1U << CRU_GATE_CON00_CLK_GPLL_DIV_EN_SHIFT)               /* 0x00000020 */
#define CRU_GATE_CON00_CLK_GPLL_DIV_100M_EN_SHIFT          (6U)
#define CRU_GATE_CON00_CLK_GPLL_DIV_100M_EN_MASK           (0x1U << CRU_GATE_CON00_CLK_GPLL_DIV_100M_EN_SHIFT)          /* 0x00000040 */
#define CRU_GATE_CON00_CLK_V0PLL_DIV_EN_SHIFT              (7U)
#define CRU_GATE_CON00_CLK_V0PLL_DIV_EN_MASK               (0x1U << CRU_GATE_CON00_CLK_V0PLL_DIV_EN_SHIFT)              /* 0x00000080 */
#define CRU_GATE_CON00_CLK_V1PLL_DIV_EN_SHIFT              (8U)
#define CRU_GATE_CON00_CLK_V1PLL_DIV_EN_MASK               (0x1U << CRU_GATE_CON00_CLK_V1PLL_DIV_EN_SHIFT)              /* 0x00000100 */
#define CRU_GATE_CON00_CLK_INT_VOICE_MATRIX0_EN_SHIFT      (9U)
#define CRU_GATE_CON00_CLK_INT_VOICE_MATRIX0_EN_MASK       (0x1U << CRU_GATE_CON00_CLK_INT_VOICE_MATRIX0_EN_SHIFT)      /* 0x00000200 */
#define CRU_GATE_CON00_CLK_INT_VOICE_MATRIX1_EN_SHIFT      (10U)
#define CRU_GATE_CON00_CLK_INT_VOICE_MATRIX1_EN_MASK       (0x1U << CRU_GATE_CON00_CLK_INT_VOICE_MATRIX1_EN_SHIFT)      /* 0x00000400 */
#define CRU_GATE_CON00_CLK_INT_VOICE_MATRIX2_EN_SHIFT      (11U)
#define CRU_GATE_CON00_CLK_INT_VOICE_MATRIX2_EN_MASK       (0x1U << CRU_GATE_CON00_CLK_INT_VOICE_MATRIX2_EN_SHIFT)      /* 0x00000800 */
#define CRU_GATE_CON00_CLK_TESTOUT_EN_SHIFT                (12U)
#define CRU_GATE_CON00_CLK_TESTOUT_EN_MASK                 (0x1U << CRU_GATE_CON00_CLK_TESTOUT_EN_SHIFT)                /* 0x00001000 */
#define CRU_GATE_CON00_CLK_FRAC_UART_MATRIX0_EN_SHIFT      (13U)
#define CRU_GATE_CON00_CLK_FRAC_UART_MATRIX0_EN_MASK       (0x1U << CRU_GATE_CON00_CLK_FRAC_UART_MATRIX0_EN_SHIFT)      /* 0x00002000 */
#define CRU_GATE_CON00_CLK_FRAC_UART_MATRIX1_EN_SHIFT      (14U)
#define CRU_GATE_CON00_CLK_FRAC_UART_MATRIX1_EN_MASK       (0x1U << CRU_GATE_CON00_CLK_FRAC_UART_MATRIX1_EN_SHIFT)      /* 0x00004000 */
#define CRU_GATE_CON00_CLK_FRAC_VOICE_MATRIX0_EN_SHIFT     (15U)
#define CRU_GATE_CON00_CLK_FRAC_VOICE_MATRIX0_EN_MASK      (0x1U << CRU_GATE_CON00_CLK_FRAC_VOICE_MATRIX0_EN_SHIFT)     /* 0x00008000 */
/* GATE_CON01 */
#define CRU_GATE_CON01_OFFSET                              (0x804U)
#define CRU_GATE_CON01_CLK_FRAC_VOICE_MATRIX1_EN_SHIFT     (0U)
#define CRU_GATE_CON01_CLK_FRAC_VOICE_MATRIX1_EN_MASK      (0x1U << CRU_GATE_CON01_CLK_FRAC_VOICE_MATRIX1_EN_SHIFT)     /* 0x00000001 */
#define CRU_GATE_CON01_CLK_FRAC_COMMON_MATRIX0_EN_SHIFT    (1U)
#define CRU_GATE_CON01_CLK_FRAC_COMMON_MATRIX0_EN_MASK     (0x1U << CRU_GATE_CON01_CLK_FRAC_COMMON_MATRIX0_EN_SHIFT)    /* 0x00000002 */
#define CRU_GATE_CON01_CLK_FRAC_COMMON_MATRIX1_EN_SHIFT    (2U)
#define CRU_GATE_CON01_CLK_FRAC_COMMON_MATRIX1_EN_MASK     (0x1U << CRU_GATE_CON01_CLK_FRAC_COMMON_MATRIX1_EN_SHIFT)    /* 0x00000004 */
#define CRU_GATE_CON01_CLK_FRAC_COMMON_MATRIX2_EN_SHIFT    (3U)
#define CRU_GATE_CON01_CLK_FRAC_COMMON_MATRIX2_EN_MASK     (0x1U << CRU_GATE_CON01_CLK_FRAC_COMMON_MATRIX2_EN_SHIFT)    /* 0x00000008 */
#define CRU_GATE_CON01_CLK_REF_SRC_USBPHY_EN_SHIFT         (4U)
#define CRU_GATE_CON01_CLK_REF_SRC_USBPHY_EN_MASK          (0x1U << CRU_GATE_CON01_CLK_REF_SRC_USBPHY_EN_SHIFT)         /* 0x00000010 */
#define CRU_GATE_CON01_CLK_REF_SRC_DPHY_EN_SHIFT           (5U)
#define CRU_GATE_CON01_CLK_REF_SRC_DPHY_EN_MASK            (0x1U << CRU_GATE_CON01_CLK_REF_SRC_DPHY_EN_SHIFT)           /* 0x00000020 */
/* GATE_CON02 */
#define CRU_GATE_CON02_OFFSET                              (0x808U)
#define CRU_GATE_CON02_CLK_CORE_DIV_EN_SHIFT               (0U)
#define CRU_GATE_CON02_CLK_CORE_DIV_EN_MASK                (0x1U << CRU_GATE_CON02_CLK_CORE_DIV_EN_SHIFT)               /* 0x00000001 */
#define CRU_GATE_CON02_CLK_CORE_EN_SHIFT                   (1U)
#define CRU_GATE_CON02_CLK_CORE_EN_MASK                    (0x1U << CRU_GATE_CON02_CLK_CORE_EN_SHIFT)                   /* 0x00000002 */
#define CRU_GATE_CON02_ACLK_CORE_ROOT_EN_SHIFT             (11U)
#define CRU_GATE_CON02_ACLK_CORE_ROOT_EN_MASK              (0x1U << CRU_GATE_CON02_ACLK_CORE_ROOT_EN_SHIFT)             /* 0x00000800 */
#define CRU_GATE_CON02_PCLK_CORE_ROOT_EN_SHIFT             (12U)
#define CRU_GATE_CON02_PCLK_CORE_ROOT_EN_MASK              (0x1U << CRU_GATE_CON02_PCLK_CORE_ROOT_EN_SHIFT)             /* 0x00001000 */
#define CRU_GATE_CON02_ACLK_CORE_BIU_EN_SHIFT              (13U)
#define CRU_GATE_CON02_ACLK_CORE_BIU_EN_MASK               (0x1U << CRU_GATE_CON02_ACLK_CORE_BIU_EN_SHIFT)              /* 0x00002000 */
#define CRU_GATE_CON02_PCLK_CORE_BIU_EN_SHIFT              (14U)
#define CRU_GATE_CON02_PCLK_CORE_BIU_EN_MASK               (0x1U << CRU_GATE_CON02_PCLK_CORE_BIU_EN_SHIFT)              /* 0x00004000 */
/* GATE_CON03 */
#define CRU_GATE_CON03_OFFSET                              (0x80CU)
#define CRU_GATE_CON03_PCLK_DBG_EN_SHIFT                   (1U)
#define CRU_GATE_CON03_PCLK_DBG_EN_MASK                    (0x1U << CRU_GATE_CON03_PCLK_DBG_EN_SHIFT)                   /* 0x00000002 */
#define CRU_GATE_CON03_SWCLKTCK_EN_SHIFT                   (2U)
#define CRU_GATE_CON03_SWCLKTCK_EN_MASK                    (0x1U << CRU_GATE_CON03_SWCLKTCK_EN_SHIFT)                   /* 0x00000004 */
#define CRU_GATE_CON03_PCLK_CORE_GRF_EN_SHIFT              (4U)
#define CRU_GATE_CON03_PCLK_CORE_GRF_EN_MASK               (0x1U << CRU_GATE_CON03_PCLK_CORE_GRF_EN_SHIFT)              /* 0x00000010 */
#define CRU_GATE_CON03_CLK_CORE_EMA_DETECT_EN_SHIFT        (6U)
#define CRU_GATE_CON03_CLK_CORE_EMA_DETECT_EN_MASK         (0x1U << CRU_GATE_CON03_CLK_CORE_EMA_DETECT_EN_SHIFT)        /* 0x00000040 */
#define CRU_GATE_CON03_CLK_REF_PVTPLL_CORE_EN_SHIFT        (7U)
#define CRU_GATE_CON03_CLK_REF_PVTPLL_CORE_EN_MASK         (0x1U << CRU_GATE_CON03_CLK_REF_PVTPLL_CORE_EN_SHIFT)        /* 0x00000080 */
#define CRU_GATE_CON03_PCLK_GPIO1_EN_SHIFT                 (8U)
#define CRU_GATE_CON03_PCLK_GPIO1_EN_MASK                  (0x1U << CRU_GATE_CON03_PCLK_GPIO1_EN_SHIFT)                 /* 0x00000100 */
#define CRU_GATE_CON03_DBCLK_GPIO1_EN_SHIFT                (9U)
#define CRU_GATE_CON03_DBCLK_GPIO1_EN_MASK                 (0x1U << CRU_GATE_CON03_DBCLK_GPIO1_EN_SHIFT)                /* 0x00000200 */
/* GATE_CON04 */
#define CRU_GATE_CON04_OFFSET                              (0x810U)
#define CRU_GATE_CON04_ACLK_CORE_PERI_ROOT_EN_SHIFT        (0U)
#define CRU_GATE_CON04_ACLK_CORE_PERI_ROOT_EN_MASK         (0x1U << CRU_GATE_CON04_ACLK_CORE_PERI_ROOT_EN_SHIFT)        /* 0x00000001 */
#define CRU_GATE_CON04_HCLK_CORE_PERI_ROOT_EN_SHIFT        (1U)
#define CRU_GATE_CON04_HCLK_CORE_PERI_ROOT_EN_MASK         (0x1U << CRU_GATE_CON04_HCLK_CORE_PERI_ROOT_EN_SHIFT)        /* 0x00000002 */
#define CRU_GATE_CON04_PCLK_CORE_PERI_ROOT_EN_SHIFT        (2U)
#define CRU_GATE_CON04_PCLK_CORE_PERI_ROOT_EN_MASK         (0x1U << CRU_GATE_CON04_PCLK_CORE_PERI_ROOT_EN_SHIFT)        /* 0x00000004 */
#define CRU_GATE_CON04_ACLK_CORE_PERI_BIU_EN_SHIFT         (3U)
#define CRU_GATE_CON04_ACLK_CORE_PERI_BIU_EN_MASK          (0x1U << CRU_GATE_CON04_ACLK_CORE_PERI_BIU_EN_SHIFT)         /* 0x00000008 */
#define CRU_GATE_CON04_CLK_DSMC_EN_SHIFT                   (4U)
#define CRU_GATE_CON04_CLK_DSMC_EN_MASK                    (0x1U << CRU_GATE_CON04_CLK_DSMC_EN_SHIFT)                   /* 0x00000010 */
#define CRU_GATE_CON04_ACLK_DSMC_EN_SHIFT                  (5U)
#define CRU_GATE_CON04_ACLK_DSMC_EN_MASK                   (0x1U << CRU_GATE_CON04_ACLK_DSMC_EN_SHIFT)                  /* 0x00000020 */
#define CRU_GATE_CON04_PCLK_DSMC_EN_SHIFT                  (6U)
#define CRU_GATE_CON04_PCLK_DSMC_EN_MASK                   (0x1U << CRU_GATE_CON04_PCLK_DSMC_EN_SHIFT)                  /* 0x00000040 */
#define CRU_GATE_CON04_CLK_FLEXBUS_TX_EN_SHIFT             (7U)
#define CRU_GATE_CON04_CLK_FLEXBUS_TX_EN_MASK              (0x1U << CRU_GATE_CON04_CLK_FLEXBUS_TX_EN_SHIFT)             /* 0x00000080 */
#define CRU_GATE_CON04_CLK_FLEXBUS_RX_EN_SHIFT             (8U)
#define CRU_GATE_CON04_CLK_FLEXBUS_RX_EN_MASK              (0x1U << CRU_GATE_CON04_CLK_FLEXBUS_RX_EN_SHIFT)             /* 0x00000100 */
#define CRU_GATE_CON04_ACLK_FLEXBUS_EN_SHIFT               (9U)
#define CRU_GATE_CON04_ACLK_FLEXBUS_EN_MASK                (0x1U << CRU_GATE_CON04_ACLK_FLEXBUS_EN_SHIFT)               /* 0x00000200 */
#define CRU_GATE_CON04_HCLK_FLEXBUS_EN_SHIFT               (10U)
#define CRU_GATE_CON04_HCLK_FLEXBUS_EN_MASK                (0x1U << CRU_GATE_CON04_HCLK_FLEXBUS_EN_SHIFT)               /* 0x00000400 */
#define CRU_GATE_CON04_ACLK_DSMC_SLV_EN_SHIFT              (11U)
#define CRU_GATE_CON04_ACLK_DSMC_SLV_EN_MASK               (0x1U << CRU_GATE_CON04_ACLK_DSMC_SLV_EN_SHIFT)              /* 0x00000800 */
#define CRU_GATE_CON04_HCLK_DSMC_SLV_EN_SHIFT              (12U)
#define CRU_GATE_CON04_HCLK_DSMC_SLV_EN_MASK               (0x1U << CRU_GATE_CON04_HCLK_DSMC_SLV_EN_SHIFT)              /* 0x00001000 */
/* GATE_CON05 */
#define CRU_GATE_CON05_OFFSET                              (0x814U)
#define CRU_GATE_CON05_ACLK_BUS_ROOT_EN_SHIFT              (0U)
#define CRU_GATE_CON05_ACLK_BUS_ROOT_EN_MASK               (0x1U << CRU_GATE_CON05_ACLK_BUS_ROOT_EN_SHIFT)              /* 0x00000001 */
#define CRU_GATE_CON05_HCLK_BUS_ROOT_EN_SHIFT              (1U)
#define CRU_GATE_CON05_HCLK_BUS_ROOT_EN_MASK               (0x1U << CRU_GATE_CON05_HCLK_BUS_ROOT_EN_SHIFT)              /* 0x00000002 */
#define CRU_GATE_CON05_PCLK_BUS_ROOT_EN_SHIFT              (2U)
#define CRU_GATE_CON05_PCLK_BUS_ROOT_EN_MASK               (0x1U << CRU_GATE_CON05_PCLK_BUS_ROOT_EN_SHIFT)              /* 0x00000004 */
#define CRU_GATE_CON05_ACLK_BUS_BIU_EN_SHIFT               (3U)
#define CRU_GATE_CON05_ACLK_BUS_BIU_EN_MASK                (0x1U << CRU_GATE_CON05_ACLK_BUS_BIU_EN_SHIFT)               /* 0x00000008 */
#define CRU_GATE_CON05_HCLK_BUS_BIU_EN_SHIFT               (4U)
#define CRU_GATE_CON05_HCLK_BUS_BIU_EN_MASK                (0x1U << CRU_GATE_CON05_HCLK_BUS_BIU_EN_SHIFT)               /* 0x00000010 */
#define CRU_GATE_CON05_PCLK_BUS_BIU_EN_SHIFT               (5U)
#define CRU_GATE_CON05_PCLK_BUS_BIU_EN_MASK                (0x1U << CRU_GATE_CON05_PCLK_BUS_BIU_EN_SHIFT)               /* 0x00000020 */
#define CRU_GATE_CON05_ACLK_SYSRAM_EN_SHIFT                (6U)
#define CRU_GATE_CON05_ACLK_SYSRAM_EN_MASK                 (0x1U << CRU_GATE_CON05_ACLK_SYSRAM_EN_SHIFT)                /* 0x00000040 */
#define CRU_GATE_CON05_HCLK_SYSRAM_EN_SHIFT                (7U)
#define CRU_GATE_CON05_HCLK_SYSRAM_EN_MASK                 (0x1U << CRU_GATE_CON05_HCLK_SYSRAM_EN_SHIFT)                /* 0x00000080 */
#define CRU_GATE_CON05_ACLK_DMAC0_EN_SHIFT                 (8U)
#define CRU_GATE_CON05_ACLK_DMAC0_EN_MASK                  (0x1U << CRU_GATE_CON05_ACLK_DMAC0_EN_SHIFT)                 /* 0x00000100 */
#define CRU_GATE_CON05_ACLK_DMAC1_EN_SHIFT                 (9U)
#define CRU_GATE_CON05_ACLK_DMAC1_EN_MASK                  (0x1U << CRU_GATE_CON05_ACLK_DMAC1_EN_SHIFT)                 /* 0x00000200 */
#define CRU_GATE_CON05_HCLK_M0_EN_SHIFT                    (10U)
#define CRU_GATE_CON05_HCLK_M0_EN_MASK                     (0x1U << CRU_GATE_CON05_HCLK_M0_EN_SHIFT)                    /* 0x00000400 */
#define CRU_GATE_CON05_SWCLKTCK_M0_EN_SHIFT                (11U)
#define CRU_GATE_CON05_SWCLKTCK_M0_EN_MASK                 (0x1U << CRU_GATE_CON05_SWCLKTCK_M0_EN_SHIFT)                /* 0x00000800 */
#define CRU_GATE_CON05_CLK_CORE_CRYPTO_NS_EN_SHIFT         (12U)
#define CRU_GATE_CON05_CLK_CORE_CRYPTO_NS_EN_MASK          (0x1U << CRU_GATE_CON05_CLK_CORE_CRYPTO_NS_EN_SHIFT)         /* 0x00001000 */
#define CRU_GATE_CON05_CLK_PKA_CRYPTO_NS_EN_SHIFT          (13U)
#define CRU_GATE_CON05_CLK_PKA_CRYPTO_NS_EN_MASK           (0x1U << CRU_GATE_CON05_CLK_PKA_CRYPTO_NS_EN_SHIFT)          /* 0x00002000 */
#define CRU_GATE_CON05_ACLK_CRYPTO_NS_EN_SHIFT             (14U)
#define CRU_GATE_CON05_ACLK_CRYPTO_NS_EN_MASK              (0x1U << CRU_GATE_CON05_ACLK_CRYPTO_NS_EN_SHIFT)             /* 0x00004000 */
#define CRU_GATE_CON05_HCLK_CRYPTO_EN_SHIFT                (15U)
#define CRU_GATE_CON05_HCLK_CRYPTO_EN_MASK                 (0x1U << CRU_GATE_CON05_HCLK_CRYPTO_EN_SHIFT)                /* 0x00008000 */
/* GATE_CON06 */
#define CRU_GATE_CON06_OFFSET                              (0x818U)
#define CRU_GATE_CON06_HCLK_RNG_EN_SHIFT                   (0U)
#define CRU_GATE_CON06_HCLK_RNG_EN_MASK                    (0x1U << CRU_GATE_CON06_HCLK_RNG_EN_SHIFT)                   /* 0x00000001 */
#define CRU_GATE_CON06_PCLK_BUS_GRF_EN_SHIFT               (1U)
#define CRU_GATE_CON06_PCLK_BUS_GRF_EN_MASK                (0x1U << CRU_GATE_CON06_PCLK_BUS_GRF_EN_SHIFT)               /* 0x00000002 */
#define CRU_GATE_CON06_PCLK_TIMER0_EN_SHIFT                (2U)
#define CRU_GATE_CON06_PCLK_TIMER0_EN_MASK                 (0x1U << CRU_GATE_CON06_PCLK_TIMER0_EN_SHIFT)                /* 0x00000004 */
#define CRU_GATE_CON06_CLK_TIMER0_CH0_EN_SHIFT             (3U)
#define CRU_GATE_CON06_CLK_TIMER0_CH0_EN_MASK              (0x1U << CRU_GATE_CON06_CLK_TIMER0_CH0_EN_SHIFT)             /* 0x00000008 */
#define CRU_GATE_CON06_CLK_TIMER0_CH1_EN_SHIFT             (4U)
#define CRU_GATE_CON06_CLK_TIMER0_CH1_EN_MASK              (0x1U << CRU_GATE_CON06_CLK_TIMER0_CH1_EN_SHIFT)             /* 0x00000010 */
#define CRU_GATE_CON06_CLK_TIMER0_CH2_EN_SHIFT             (5U)
#define CRU_GATE_CON06_CLK_TIMER0_CH2_EN_MASK              (0x1U << CRU_GATE_CON06_CLK_TIMER0_CH2_EN_SHIFT)             /* 0x00000020 */
#define CRU_GATE_CON06_CLK_TIMER0_CH3_EN_SHIFT             (6U)
#define CRU_GATE_CON06_CLK_TIMER0_CH3_EN_MASK              (0x1U << CRU_GATE_CON06_CLK_TIMER0_CH3_EN_SHIFT)             /* 0x00000040 */
#define CRU_GATE_CON06_CLK_TIMER0_CH4_EN_SHIFT             (7U)
#define CRU_GATE_CON06_CLK_TIMER0_CH4_EN_MASK              (0x1U << CRU_GATE_CON06_CLK_TIMER0_CH4_EN_SHIFT)             /* 0x00000080 */
#define CRU_GATE_CON06_CLK_TIMER0_CH5_EN_SHIFT             (8U)
#define CRU_GATE_CON06_CLK_TIMER0_CH5_EN_MASK              (0x1U << CRU_GATE_CON06_CLK_TIMER0_CH5_EN_SHIFT)             /* 0x00000100 */
#define CRU_GATE_CON06_PCLK_WDT0_EN_SHIFT                  (9U)
#define CRU_GATE_CON06_PCLK_WDT0_EN_MASK                   (0x1U << CRU_GATE_CON06_PCLK_WDT0_EN_SHIFT)                  /* 0x00000200 */
#define CRU_GATE_CON06_TCLK_WDT0_EN_SHIFT                  (10U)
#define CRU_GATE_CON06_TCLK_WDT0_EN_MASK                   (0x1U << CRU_GATE_CON06_TCLK_WDT0_EN_SHIFT)                  /* 0x00000400 */
#define CRU_GATE_CON06_PCLK_WDT1_EN_SHIFT                  (11U)
#define CRU_GATE_CON06_PCLK_WDT1_EN_MASK                   (0x1U << CRU_GATE_CON06_PCLK_WDT1_EN_SHIFT)                  /* 0x00000800 */
#define CRU_GATE_CON06_TCLK_WDT1_EN_SHIFT                  (12U)
#define CRU_GATE_CON06_TCLK_WDT1_EN_MASK                   (0x1U << CRU_GATE_CON06_TCLK_WDT1_EN_SHIFT)                  /* 0x00001000 */
#define CRU_GATE_CON06_PCLK_MAILBOX_EN_SHIFT               (13U)
#define CRU_GATE_CON06_PCLK_MAILBOX_EN_MASK                (0x1U << CRU_GATE_CON06_PCLK_MAILBOX_EN_SHIFT)               /* 0x00002000 */
#define CRU_GATE_CON06_PCLK_INTMUX_EN_SHIFT                (14U)
#define CRU_GATE_CON06_PCLK_INTMUX_EN_MASK                 (0x1U << CRU_GATE_CON06_PCLK_INTMUX_EN_SHIFT)                /* 0x00004000 */
#define CRU_GATE_CON06_PCLK_SPINLOCK_EN_SHIFT              (15U)
#define CRU_GATE_CON06_PCLK_SPINLOCK_EN_MASK               (0x1U << CRU_GATE_CON06_PCLK_SPINLOCK_EN_SHIFT)              /* 0x00008000 */
/* GATE_CON07 */
#define CRU_GATE_CON07_OFFSET                              (0x81CU)
#define CRU_GATE_CON07_PCLK_DDRC_EN_SHIFT                  (0U)
#define CRU_GATE_CON07_PCLK_DDRC_EN_MASK                   (0x1U << CRU_GATE_CON07_PCLK_DDRC_EN_SHIFT)                  /* 0x00000001 */
#define CRU_GATE_CON07_HCLK_DDRPHY_EN_SHIFT                (1U)
#define CRU_GATE_CON07_HCLK_DDRPHY_EN_MASK                 (0x1U << CRU_GATE_CON07_HCLK_DDRPHY_EN_SHIFT)                /* 0x00000002 */
#define CRU_GATE_CON07_PCLK_DDRMON_EN_SHIFT                (2U)
#define CRU_GATE_CON07_PCLK_DDRMON_EN_MASK                 (0x1U << CRU_GATE_CON07_PCLK_DDRMON_EN_SHIFT)                /* 0x00000004 */
#define CRU_GATE_CON07_CLK_DDRMON_OSC_EN_SHIFT             (3U)
#define CRU_GATE_CON07_CLK_DDRMON_OSC_EN_MASK              (0x1U << CRU_GATE_CON07_CLK_DDRMON_OSC_EN_SHIFT)             /* 0x00000008 */
#define CRU_GATE_CON07_PCLK_DDR_LPC_EN_SHIFT               (4U)
#define CRU_GATE_CON07_PCLK_DDR_LPC_EN_MASK                (0x1U << CRU_GATE_CON07_PCLK_DDR_LPC_EN_SHIFT)               /* 0x00000010 */
#define CRU_GATE_CON07_HCLK_USBOTG0_EN_SHIFT               (5U)
#define CRU_GATE_CON07_HCLK_USBOTG0_EN_MASK                (0x1U << CRU_GATE_CON07_HCLK_USBOTG0_EN_SHIFT)               /* 0x00000020 */
#define CRU_GATE_CON07_HCLK_USBOTG0_PMU_EN_SHIFT           (6U)
#define CRU_GATE_CON07_HCLK_USBOTG0_PMU_EN_MASK            (0x1U << CRU_GATE_CON07_HCLK_USBOTG0_PMU_EN_SHIFT)           /* 0x00000040 */
#define CRU_GATE_CON07_CLK_USBOTG0_ADP_EN_SHIFT            (7U)
#define CRU_GATE_CON07_CLK_USBOTG0_ADP_EN_MASK             (0x1U << CRU_GATE_CON07_CLK_USBOTG0_ADP_EN_SHIFT)            /* 0x00000080 */
#define CRU_GATE_CON07_HCLK_USBOTG1_EN_SHIFT               (8U)
#define CRU_GATE_CON07_HCLK_USBOTG1_EN_MASK                (0x1U << CRU_GATE_CON07_HCLK_USBOTG1_EN_SHIFT)               /* 0x00000100 */
#define CRU_GATE_CON07_HCLK_USBOTG1_PMU_EN_SHIFT           (9U)
#define CRU_GATE_CON07_HCLK_USBOTG1_PMU_EN_MASK            (0x1U << CRU_GATE_CON07_HCLK_USBOTG1_PMU_EN_SHIFT)           /* 0x00000200 */
#define CRU_GATE_CON07_CLK_USBOTG1_ADP_EN_SHIFT            (10U)
#define CRU_GATE_CON07_CLK_USBOTG1_ADP_EN_MASK             (0x1U << CRU_GATE_CON07_CLK_USBOTG1_ADP_EN_SHIFT)            /* 0x00000400 */
#define CRU_GATE_CON07_PCLK_USBPHY_EN_SHIFT                (11U)
#define CRU_GATE_CON07_PCLK_USBPHY_EN_MASK                 (0x1U << CRU_GATE_CON07_PCLK_USBPHY_EN_SHIFT)                /* 0x00000800 */
/* GATE_CON08 */
#define CRU_GATE_CON08_OFFSET                              (0x820U)
#define CRU_GATE_CON08_ACLK_DMA2DDR_EN_SHIFT               (0U)
#define CRU_GATE_CON08_ACLK_DMA2DDR_EN_MASK                (0x1U << CRU_GATE_CON08_ACLK_DMA2DDR_EN_SHIFT)               /* 0x00000001 */
#define CRU_GATE_CON08_PCLK_DMA2DDR_EN_SHIFT               (1U)
#define CRU_GATE_CON08_PCLK_DMA2DDR_EN_MASK                (0x1U << CRU_GATE_CON08_PCLK_DMA2DDR_EN_SHIFT)               /* 0x00000002 */
#define CRU_GATE_CON08_STCLK_M0_EN_SHIFT                   (2U)
#define CRU_GATE_CON08_STCLK_M0_EN_MASK                    (0x1U << CRU_GATE_CON08_STCLK_M0_EN_SHIFT)                   /* 0x00000004 */
/* GATE_CON10 */
#define CRU_GATE_CON10_OFFSET                              (0x828U)
#define CRU_GATE_CON10_ACLK_DDRC_0_EN_SHIFT                (0U)
#define CRU_GATE_CON10_ACLK_DDRC_0_EN_MASK                 (0x1U << CRU_GATE_CON10_ACLK_DDRC_0_EN_SHIFT)                /* 0x00000001 */
#define CRU_GATE_CON10_ACLK_DDRC_1_EN_SHIFT                (1U)
#define CRU_GATE_CON10_ACLK_DDRC_1_EN_MASK                 (0x1U << CRU_GATE_CON10_ACLK_DDRC_1_EN_SHIFT)                /* 0x00000002 */
#define CRU_GATE_CON10_ACLK_DDR_BIU_EN_SHIFT               (2U)
#define CRU_GATE_CON10_ACLK_DDR_BIU_EN_MASK                (0x1U << CRU_GATE_CON10_ACLK_DDR_BIU_EN_SHIFT)               /* 0x00000004 */
#define CRU_GATE_CON10_CLK_DDRC_EN_SHIFT                   (3U)
#define CRU_GATE_CON10_CLK_DDRC_EN_MASK                    (0x1U << CRU_GATE_CON10_CLK_DDRC_EN_SHIFT)                   /* 0x00000008 */
#define CRU_GATE_CON10_CLK_DDRMON_EN_SHIFT                 (4U)
#define CRU_GATE_CON10_CLK_DDRMON_EN_MASK                  (0x1U << CRU_GATE_CON10_CLK_DDRMON_EN_SHIFT)                 /* 0x00000010 */
/* GATE_CON11 */
#define CRU_GATE_CON11_OFFSET                              (0x82CU)
#define CRU_GATE_CON11_HCLK_LSPERI_ROOT_EN_SHIFT           (0U)
#define CRU_GATE_CON11_HCLK_LSPERI_ROOT_EN_MASK            (0x1U << CRU_GATE_CON11_HCLK_LSPERI_ROOT_EN_SHIFT)           /* 0x00000001 */
#define CRU_GATE_CON11_PCLK_LSPERI_ROOT_EN_SHIFT           (1U)
#define CRU_GATE_CON11_PCLK_LSPERI_ROOT_EN_MASK            (0x1U << CRU_GATE_CON11_PCLK_LSPERI_ROOT_EN_SHIFT)           /* 0x00000002 */
#define CRU_GATE_CON11_HCLK_LSPERI_BIU_EN_SHIFT            (2U)
#define CRU_GATE_CON11_HCLK_LSPERI_BIU_EN_MASK             (0x1U << CRU_GATE_CON11_HCLK_LSPERI_BIU_EN_SHIFT)            /* 0x00000004 */
#define CRU_GATE_CON11_PCLK_UART0_EN_SHIFT                 (4U)
#define CRU_GATE_CON11_PCLK_UART0_EN_MASK                  (0x1U << CRU_GATE_CON11_PCLK_UART0_EN_SHIFT)                 /* 0x00000010 */
#define CRU_GATE_CON11_PCLK_UART1_EN_SHIFT                 (5U)
#define CRU_GATE_CON11_PCLK_UART1_EN_MASK                  (0x1U << CRU_GATE_CON11_PCLK_UART1_EN_SHIFT)                 /* 0x00000020 */
#define CRU_GATE_CON11_PCLK_UART2_EN_SHIFT                 (6U)
#define CRU_GATE_CON11_PCLK_UART2_EN_MASK                  (0x1U << CRU_GATE_CON11_PCLK_UART2_EN_SHIFT)                 /* 0x00000040 */
#define CRU_GATE_CON11_PCLK_UART3_EN_SHIFT                 (7U)
#define CRU_GATE_CON11_PCLK_UART3_EN_MASK                  (0x1U << CRU_GATE_CON11_PCLK_UART3_EN_SHIFT)                 /* 0x00000080 */
#define CRU_GATE_CON11_PCLK_UART4_EN_SHIFT                 (8U)
#define CRU_GATE_CON11_PCLK_UART4_EN_MASK                  (0x1U << CRU_GATE_CON11_PCLK_UART4_EN_SHIFT)                 /* 0x00000100 */
#define CRU_GATE_CON11_SCLK_UART0_SRC_EN_SHIFT             (9U)
#define CRU_GATE_CON11_SCLK_UART0_SRC_EN_MASK              (0x1U << CRU_GATE_CON11_SCLK_UART0_SRC_EN_SHIFT)             /* 0x00000200 */
#define CRU_GATE_CON11_SCLK_UART1_SRC_EN_SHIFT             (10U)
#define CRU_GATE_CON11_SCLK_UART1_SRC_EN_MASK              (0x1U << CRU_GATE_CON11_SCLK_UART1_SRC_EN_SHIFT)             /* 0x00000400 */
#define CRU_GATE_CON11_SCLK_UART2_SRC_EN_SHIFT             (11U)
#define CRU_GATE_CON11_SCLK_UART2_SRC_EN_MASK              (0x1U << CRU_GATE_CON11_SCLK_UART2_SRC_EN_SHIFT)             /* 0x00000800 */
#define CRU_GATE_CON11_SCLK_UART3_SRC_EN_SHIFT             (12U)
#define CRU_GATE_CON11_SCLK_UART3_SRC_EN_MASK              (0x1U << CRU_GATE_CON11_SCLK_UART3_SRC_EN_SHIFT)             /* 0x00001000 */
#define CRU_GATE_CON11_SCLK_UART4_SRC_EN_SHIFT             (13U)
#define CRU_GATE_CON11_SCLK_UART4_SRC_EN_MASK              (0x1U << CRU_GATE_CON11_SCLK_UART4_SRC_EN_SHIFT)             /* 0x00002000 */
#define CRU_GATE_CON11_PCLK_I2C0_EN_SHIFT                  (14U)
#define CRU_GATE_CON11_PCLK_I2C0_EN_MASK                   (0x1U << CRU_GATE_CON11_PCLK_I2C0_EN_SHIFT)                  /* 0x00004000 */
#define CRU_GATE_CON11_CLK_I2C0_EN_SHIFT                   (15U)
#define CRU_GATE_CON11_CLK_I2C0_EN_MASK                    (0x1U << CRU_GATE_CON11_CLK_I2C0_EN_SHIFT)                   /* 0x00008000 */
/* GATE_CON12 */
#define CRU_GATE_CON12_OFFSET                              (0x830U)
#define CRU_GATE_CON12_PCLK_I2C1_EN_SHIFT                  (0U)
#define CRU_GATE_CON12_PCLK_I2C1_EN_MASK                   (0x1U << CRU_GATE_CON12_PCLK_I2C1_EN_SHIFT)                  /* 0x00000001 */
#define CRU_GATE_CON12_CLK_I2C1_EN_SHIFT                   (1U)
#define CRU_GATE_CON12_CLK_I2C1_EN_MASK                    (0x1U << CRU_GATE_CON12_CLK_I2C1_EN_SHIFT)                   /* 0x00000002 */
#define CRU_GATE_CON12_PCLK_I2C2_EN_SHIFT                  (2U)
#define CRU_GATE_CON12_PCLK_I2C2_EN_MASK                   (0x1U << CRU_GATE_CON12_PCLK_I2C2_EN_SHIFT)                  /* 0x00000004 */
#define CRU_GATE_CON12_CLK_I2C2_EN_SHIFT                   (3U)
#define CRU_GATE_CON12_CLK_I2C2_EN_MASK                    (0x1U << CRU_GATE_CON12_CLK_I2C2_EN_SHIFT)                   /* 0x00000008 */
#define CRU_GATE_CON12_PCLK_PWM1_EN_SHIFT                  (4U)
#define CRU_GATE_CON12_PCLK_PWM1_EN_MASK                   (0x1U << CRU_GATE_CON12_PCLK_PWM1_EN_SHIFT)                  /* 0x00000010 */
#define CRU_GATE_CON12_CLK_PWM1_EN_SHIFT                   (5U)
#define CRU_GATE_CON12_CLK_PWM1_EN_MASK                    (0x1U << CRU_GATE_CON12_CLK_PWM1_EN_SHIFT)                   /* 0x00000020 */
#define CRU_GATE_CON12_CLK_OSC_PWM1_EN_SHIFT               (6U)
#define CRU_GATE_CON12_CLK_OSC_PWM1_EN_MASK                (0x1U << CRU_GATE_CON12_CLK_OSC_PWM1_EN_SHIFT)               /* 0x00000040 */
#define CRU_GATE_CON12_CLK_RC_PWM1_EN_SHIFT                (7U)
#define CRU_GATE_CON12_CLK_RC_PWM1_EN_MASK                 (0x1U << CRU_GATE_CON12_CLK_RC_PWM1_EN_SHIFT)                /* 0x00000080 */
#define CRU_GATE_CON12_CLK_FREQ_PWM1_EN_SHIFT              (8U)
#define CRU_GATE_CON12_CLK_FREQ_PWM1_EN_MASK               (0x1U << CRU_GATE_CON12_CLK_FREQ_PWM1_EN_SHIFT)              /* 0x00000100 */
#define CRU_GATE_CON12_CLK_COUNTER_PWM1_EN_SHIFT           (9U)
#define CRU_GATE_CON12_CLK_COUNTER_PWM1_EN_MASK            (0x1U << CRU_GATE_CON12_CLK_COUNTER_PWM1_EN_SHIFT)           /* 0x00000200 */
#define CRU_GATE_CON12_PCLK_SPI0_EN_SHIFT                  (10U)
#define CRU_GATE_CON12_PCLK_SPI0_EN_MASK                   (0x1U << CRU_GATE_CON12_PCLK_SPI0_EN_SHIFT)                  /* 0x00000400 */
#define CRU_GATE_CON12_CLK_SPI0_EN_SHIFT                   (11U)
#define CRU_GATE_CON12_CLK_SPI0_EN_MASK                    (0x1U << CRU_GATE_CON12_CLK_SPI0_EN_SHIFT)                   /* 0x00000800 */
#define CRU_GATE_CON12_PCLK_SPI1_EN_SHIFT                  (12U)
#define CRU_GATE_CON12_PCLK_SPI1_EN_MASK                   (0x1U << CRU_GATE_CON12_PCLK_SPI1_EN_SHIFT)                  /* 0x00001000 */
#define CRU_GATE_CON12_CLK_SPI1_EN_SHIFT                   (13U)
#define CRU_GATE_CON12_CLK_SPI1_EN_MASK                    (0x1U << CRU_GATE_CON12_CLK_SPI1_EN_SHIFT)                   /* 0x00002000 */
#define CRU_GATE_CON12_PCLK_GPIO2_EN_SHIFT                 (14U)
#define CRU_GATE_CON12_PCLK_GPIO2_EN_MASK                  (0x1U << CRU_GATE_CON12_PCLK_GPIO2_EN_SHIFT)                 /* 0x00004000 */
#define CRU_GATE_CON12_DBCLK_GPIO2_EN_SHIFT                (15U)
#define CRU_GATE_CON12_DBCLK_GPIO2_EN_MASK                 (0x1U << CRU_GATE_CON12_DBCLK_GPIO2_EN_SHIFT)                /* 0x00008000 */
/* GATE_CON13 */
#define CRU_GATE_CON13_OFFSET                              (0x834U)
#define CRU_GATE_CON13_PCLK_GPIO3_EN_SHIFT                 (0U)
#define CRU_GATE_CON13_PCLK_GPIO3_EN_MASK                  (0x1U << CRU_GATE_CON13_PCLK_GPIO3_EN_SHIFT)                 /* 0x00000001 */
#define CRU_GATE_CON13_DBCLK_GPIO3_EN_SHIFT                (1U)
#define CRU_GATE_CON13_DBCLK_GPIO3_EN_MASK                 (0x1U << CRU_GATE_CON13_DBCLK_GPIO3_EN_SHIFT)                /* 0x00000002 */
#define CRU_GATE_CON13_PCLK_GPIO4_EN_SHIFT                 (2U)
#define CRU_GATE_CON13_PCLK_GPIO4_EN_MASK                  (0x1U << CRU_GATE_CON13_PCLK_GPIO4_EN_SHIFT)                 /* 0x00000004 */
#define CRU_GATE_CON13_DBCLK_GPIO4_EN_SHIFT                (3U)
#define CRU_GATE_CON13_DBCLK_GPIO4_EN_MASK                 (0x1U << CRU_GATE_CON13_DBCLK_GPIO4_EN_SHIFT)                /* 0x00000008 */
#define CRU_GATE_CON13_PCLK_CAN0_EN_SHIFT                  (4U)
#define CRU_GATE_CON13_PCLK_CAN0_EN_MASK                   (0x1U << CRU_GATE_CON13_PCLK_CAN0_EN_SHIFT)                  /* 0x00000010 */
#define CRU_GATE_CON13_CLK_CAN0_EN_SHIFT                   (5U)
#define CRU_GATE_CON13_CLK_CAN0_EN_MASK                    (0x1U << CRU_GATE_CON13_CLK_CAN0_EN_SHIFT)                   /* 0x00000020 */
#define CRU_GATE_CON13_PCLK_CAN1_EN_SHIFT                  (6U)
#define CRU_GATE_CON13_PCLK_CAN1_EN_MASK                   (0x1U << CRU_GATE_CON13_PCLK_CAN1_EN_SHIFT)                  /* 0x00000040 */
#define CRU_GATE_CON13_CLK_CAN1_EN_SHIFT                   (7U)
#define CRU_GATE_CON13_CLK_CAN1_EN_MASK                    (0x1U << CRU_GATE_CON13_CLK_CAN1_EN_SHIFT)                   /* 0x00000080 */
#define CRU_GATE_CON13_HCLK_PDM_EN_SHIFT                   (8U)
#define CRU_GATE_CON13_HCLK_PDM_EN_MASK                    (0x1U << CRU_GATE_CON13_HCLK_PDM_EN_SHIFT)                   /* 0x00000100 */
#define CRU_GATE_CON13_MCLK_PDM_EN_SHIFT                   (9U)
#define CRU_GATE_CON13_MCLK_PDM_EN_MASK                    (0x1U << CRU_GATE_CON13_MCLK_PDM_EN_SHIFT)                   /* 0x00000200 */
#define CRU_GATE_CON13_CLKOUT_PDM_EN_SHIFT                 (10U)
#define CRU_GATE_CON13_CLKOUT_PDM_EN_MASK                  (0x1U << CRU_GATE_CON13_CLKOUT_PDM_EN_SHIFT)                 /* 0x00000400 */
#define CRU_GATE_CON13_MCLK_SPDIFTX_EN_SHIFT               (11U)
#define CRU_GATE_CON13_MCLK_SPDIFTX_EN_MASK                (0x1U << CRU_GATE_CON13_MCLK_SPDIFTX_EN_SHIFT)               /* 0x00000800 */
#define CRU_GATE_CON13_HCLK_SPDIFTX_EN_SHIFT               (12U)
#define CRU_GATE_CON13_HCLK_SPDIFTX_EN_MASK                (0x1U << CRU_GATE_CON13_HCLK_SPDIFTX_EN_SHIFT)               /* 0x00001000 */
#define CRU_GATE_CON13_HCLK_SPDIFRX_EN_SHIFT               (13U)
#define CRU_GATE_CON13_HCLK_SPDIFRX_EN_MASK                (0x1U << CRU_GATE_CON13_HCLK_SPDIFRX_EN_SHIFT)               /* 0x00002000 */
#define CRU_GATE_CON13_MCLK_SPDIFRX_EN_SHIFT               (14U)
#define CRU_GATE_CON13_MCLK_SPDIFRX_EN_MASK                (0x1U << CRU_GATE_CON13_MCLK_SPDIFRX_EN_SHIFT)               /* 0x00004000 */
#define CRU_GATE_CON13_MCLK_SAI0_EN_SHIFT                  (15U)
#define CRU_GATE_CON13_MCLK_SAI0_EN_MASK                   (0x1U << CRU_GATE_CON13_MCLK_SAI0_EN_SHIFT)                  /* 0x00008000 */
/* GATE_CON14 */
#define CRU_GATE_CON14_OFFSET                              (0x838U)
#define CRU_GATE_CON14_HCLK_SAI0_EN_SHIFT                  (0U)
#define CRU_GATE_CON14_HCLK_SAI0_EN_MASK                   (0x1U << CRU_GATE_CON14_HCLK_SAI0_EN_SHIFT)                  /* 0x00000001 */
#define CRU_GATE_CON14_MCLK_OUT_SAI0_EN_SHIFT              (1U)
#define CRU_GATE_CON14_MCLK_OUT_SAI0_EN_MASK               (0x1U << CRU_GATE_CON14_MCLK_OUT_SAI0_EN_SHIFT)              /* 0x00000002 */
#define CRU_GATE_CON14_MCLK_SAI1_EN_SHIFT                  (2U)
#define CRU_GATE_CON14_MCLK_SAI1_EN_MASK                   (0x1U << CRU_GATE_CON14_MCLK_SAI1_EN_SHIFT)                  /* 0x00000004 */
#define CRU_GATE_CON14_HCLK_SAI1_EN_SHIFT                  (3U)
#define CRU_GATE_CON14_HCLK_SAI1_EN_MASK                   (0x1U << CRU_GATE_CON14_HCLK_SAI1_EN_SHIFT)                  /* 0x00000008 */
#define CRU_GATE_CON14_MCLK_OUT_SAI1_EN_SHIFT              (4U)
#define CRU_GATE_CON14_MCLK_OUT_SAI1_EN_MASK               (0x1U << CRU_GATE_CON14_MCLK_OUT_SAI1_EN_SHIFT)              /* 0x00000010 */
#define CRU_GATE_CON14_HCLK_ASRC0_EN_SHIFT                 (5U)
#define CRU_GATE_CON14_HCLK_ASRC0_EN_MASK                  (0x1U << CRU_GATE_CON14_HCLK_ASRC0_EN_SHIFT)                 /* 0x00000020 */
#define CRU_GATE_CON14_CLK_ASRC0_EN_SHIFT                  (6U)
#define CRU_GATE_CON14_CLK_ASRC0_EN_MASK                   (0x1U << CRU_GATE_CON14_CLK_ASRC0_EN_SHIFT)                  /* 0x00000040 */
#define CRU_GATE_CON14_HCLK_ASRC1_EN_SHIFT                 (7U)
#define CRU_GATE_CON14_HCLK_ASRC1_EN_MASK                  (0x1U << CRU_GATE_CON14_HCLK_ASRC1_EN_SHIFT)                 /* 0x00000080 */
#define CRU_GATE_CON14_CLK_ASRC1_EN_SHIFT                  (8U)
#define CRU_GATE_CON14_CLK_ASRC1_EN_MASK                   (0x1U << CRU_GATE_CON14_CLK_ASRC1_EN_SHIFT)                  /* 0x00000100 */
#define CRU_GATE_CON14_PCLK_CRU_EN_SHIFT                   (9U)
#define CRU_GATE_CON14_PCLK_CRU_EN_MASK                    (0x1U << CRU_GATE_CON14_PCLK_CRU_EN_SHIFT)                   /* 0x00000200 */
#define CRU_GATE_CON14_PCLK_PMU_ROOT_EN_SHIFT              (10U)
#define CRU_GATE_CON14_PCLK_PMU_ROOT_EN_MASK               (0x1U << CRU_GATE_CON14_PCLK_PMU_ROOT_EN_SHIFT)              /* 0x00000400 */
/* GATE_CON16 */
#define CRU_GATE_CON16_OFFSET                              (0x840U)
#define CRU_GATE_CON16_MCLK_ASRC0_SRC_EN_SHIFT             (0U)
#define CRU_GATE_CON16_MCLK_ASRC0_SRC_EN_MASK              (0x1U << CRU_GATE_CON16_MCLK_ASRC0_SRC_EN_SHIFT)             /* 0x00000001 */
#define CRU_GATE_CON16_MCLK_ASRC1_SRC_EN_SHIFT             (1U)
#define CRU_GATE_CON16_MCLK_ASRC1_SRC_EN_MASK              (0x1U << CRU_GATE_CON16_MCLK_ASRC1_SRC_EN_SHIFT)             /* 0x00000002 */
#define CRU_GATE_CON16_MCLK_ASRC2_SRC_EN_SHIFT             (2U)
#define CRU_GATE_CON16_MCLK_ASRC2_SRC_EN_MASK              (0x1U << CRU_GATE_CON16_MCLK_ASRC2_SRC_EN_SHIFT)             /* 0x00000004 */
#define CRU_GATE_CON16_MCLK_ASRC3_SRC_EN_SHIFT             (3U)
#define CRU_GATE_CON16_MCLK_ASRC3_SRC_EN_MASK              (0x1U << CRU_GATE_CON16_MCLK_ASRC3_SRC_EN_SHIFT)             /* 0x00000008 */
#define CRU_GATE_CON16_LRCK_ASRC0_SRC_EN_SHIFT             (4U)
#define CRU_GATE_CON16_LRCK_ASRC0_SRC_EN_MASK              (0x1U << CRU_GATE_CON16_LRCK_ASRC0_SRC_EN_SHIFT)             /* 0x00000010 */
#define CRU_GATE_CON16_LRCK_ASRC0_DST_EN_SHIFT             (5U)
#define CRU_GATE_CON16_LRCK_ASRC0_DST_EN_MASK              (0x1U << CRU_GATE_CON16_LRCK_ASRC0_DST_EN_SHIFT)             /* 0x00000020 */
#define CRU_GATE_CON16_LRCK_ASRC1_SRC_EN_SHIFT             (6U)
#define CRU_GATE_CON16_LRCK_ASRC1_SRC_EN_MASK              (0x1U << CRU_GATE_CON16_LRCK_ASRC1_SRC_EN_SHIFT)             /* 0x00000040 */
#define CRU_GATE_CON16_LRCK_ASRC1_DST_EN_SHIFT             (7U)
#define CRU_GATE_CON16_LRCK_ASRC1_DST_EN_MASK              (0x1U << CRU_GATE_CON16_LRCK_ASRC1_DST_EN_SHIFT)             /* 0x00000080 */
/* GATE_CON17 */
#define CRU_GATE_CON17_OFFSET                              (0x844U)
#define CRU_GATE_CON17_ACLK_HSPERIROOT_EN_SHIFT            (0U)
#define CRU_GATE_CON17_ACLK_HSPERIROOT_EN_MASK             (0x1U << CRU_GATE_CON17_ACLK_HSPERIROOT_EN_SHIFT)            /* 0x00000001 */
#define CRU_GATE_CON17_HCLK_HSPERI_ROOT_EN_SHIFT           (1U)
#define CRU_GATE_CON17_HCLK_HSPERI_ROOT_EN_MASK            (0x1U << CRU_GATE_CON17_HCLK_HSPERI_ROOT_EN_SHIFT)           /* 0x00000002 */
#define CRU_GATE_CON17_PCLK_HSPERI_ROOT_EN_SHIFT           (2U)
#define CRU_GATE_CON17_PCLK_HSPERI_ROOT_EN_MASK            (0x1U << CRU_GATE_CON17_PCLK_HSPERI_ROOT_EN_SHIFT)           /* 0x00000004 */
#define CRU_GATE_CON17_HCLK_HSPERI_BIU_EN_SHIFT            (4U)
#define CRU_GATE_CON17_HCLK_HSPERI_BIU_EN_MASK             (0x1U << CRU_GATE_CON17_HCLK_HSPERI_BIU_EN_SHIFT)            /* 0x00000010 */
#define CRU_GATE_CON17_CCLK_SRC_SDMMC_EN_SHIFT             (6U)
#define CRU_GATE_CON17_CCLK_SRC_SDMMC_EN_MASK              (0x1U << CRU_GATE_CON17_CCLK_SRC_SDMMC_EN_SHIFT)             /* 0x00000040 */
#define CRU_GATE_CON17_HCLK_SDMMC_EN_SHIFT                 (7U)
#define CRU_GATE_CON17_HCLK_SDMMC_EN_MASK                  (0x1U << CRU_GATE_CON17_HCLK_SDMMC_EN_SHIFT)                 /* 0x00000080 */
#define CRU_GATE_CON17_HCLK_FSPI_EN_SHIFT                  (8U)
#define CRU_GATE_CON17_HCLK_FSPI_EN_MASK                   (0x1U << CRU_GATE_CON17_HCLK_FSPI_EN_SHIFT)                  /* 0x00000100 */
#define CRU_GATE_CON17_SCLK_FSPI_EN_SHIFT                  (9U)
#define CRU_GATE_CON17_SCLK_FSPI_EN_MASK                   (0x1U << CRU_GATE_CON17_SCLK_FSPI_EN_SHIFT)                  /* 0x00000200 */
#define CRU_GATE_CON17_PCLK_SPI2_EN_SHIFT                  (10U)
#define CRU_GATE_CON17_PCLK_SPI2_EN_MASK                   (0x1U << CRU_GATE_CON17_PCLK_SPI2_EN_SHIFT)                  /* 0x00000400 */
#define CRU_GATE_CON17_ACLK_MAC0_EN_SHIFT                  (11U)
#define CRU_GATE_CON17_ACLK_MAC0_EN_MASK                   (0x1U << CRU_GATE_CON17_ACLK_MAC0_EN_SHIFT)                  /* 0x00000800 */
#define CRU_GATE_CON17_ACLK_MAC1_EN_SHIFT                  (12U)
#define CRU_GATE_CON17_ACLK_MAC1_EN_MASK                   (0x1U << CRU_GATE_CON17_ACLK_MAC1_EN_SHIFT)                  /* 0x00001000 */
#define CRU_GATE_CON17_PCLK_MAC0_EN_SHIFT                  (13U)
#define CRU_GATE_CON17_PCLK_MAC0_EN_MASK                   (0x1U << CRU_GATE_CON17_PCLK_MAC0_EN_SHIFT)                  /* 0x00002000 */
#define CRU_GATE_CON17_PCLK_MAC1_EN_SHIFT                  (14U)
#define CRU_GATE_CON17_PCLK_MAC1_EN_MASK                   (0x1U << CRU_GATE_CON17_PCLK_MAC1_EN_SHIFT)                  /* 0x00004000 */
#define CRU_GATE_CON17_CLK_MAC_ROOT_EN_SHIFT               (15U)
#define CRU_GATE_CON17_CLK_MAC_ROOT_EN_MASK                (0x1U << CRU_GATE_CON17_CLK_MAC_ROOT_EN_SHIFT)               /* 0x00008000 */
/* GATE_CON18 */
#define CRU_GATE_CON18_OFFSET                              (0x848U)
#define CRU_GATE_CON18_CLK_MAC0_EN_SHIFT                   (0U)
#define CRU_GATE_CON18_CLK_MAC0_EN_MASK                    (0x1U << CRU_GATE_CON18_CLK_MAC0_EN_SHIFT)                   /* 0x00000001 */
#define CRU_GATE_CON18_CLK_MAC1_EN_SHIFT                   (1U)
#define CRU_GATE_CON18_CLK_MAC1_EN_MASK                    (0x1U << CRU_GATE_CON18_CLK_MAC1_EN_SHIFT)                   /* 0x00000002 */
#define CRU_GATE_CON18_MCLK_SAI2_EN_SHIFT                  (2U)
#define CRU_GATE_CON18_MCLK_SAI2_EN_MASK                   (0x1U << CRU_GATE_CON18_MCLK_SAI2_EN_SHIFT)                  /* 0x00000004 */
#define CRU_GATE_CON18_HCLK_SAI2_EN_SHIFT                  (3U)
#define CRU_GATE_CON18_HCLK_SAI2_EN_MASK                   (0x1U << CRU_GATE_CON18_HCLK_SAI2_EN_SHIFT)                  /* 0x00000008 */
#define CRU_GATE_CON18_MCLK_OUT_SAI2_EN_SHIFT              (4U)
#define CRU_GATE_CON18_MCLK_OUT_SAI2_EN_MASK               (0x1U << CRU_GATE_CON18_MCLK_OUT_SAI2_EN_SHIFT)              /* 0x00000010 */
#define CRU_GATE_CON18_MCLK_SAI3_SRC_EN_SHIFT              (5U)
#define CRU_GATE_CON18_MCLK_SAI3_SRC_EN_MASK               (0x1U << CRU_GATE_CON18_MCLK_SAI3_SRC_EN_SHIFT)              /* 0x00000020 */
#define CRU_GATE_CON18_HCLK_SAI3_EN_SHIFT                  (6U)
#define CRU_GATE_CON18_HCLK_SAI3_EN_MASK                   (0x1U << CRU_GATE_CON18_HCLK_SAI3_EN_SHIFT)                  /* 0x00000040 */
#define CRU_GATE_CON18_MCLK_SAI3_EN_SHIFT                  (7U)
#define CRU_GATE_CON18_MCLK_SAI3_EN_MASK                   (0x1U << CRU_GATE_CON18_MCLK_SAI3_EN_SHIFT)                  /* 0x00000080 */
#define CRU_GATE_CON18_MCLK_OUT_SAI3_EN_SHIFT              (8U)
#define CRU_GATE_CON18_MCLK_OUT_SAI3_EN_MASK               (0x1U << CRU_GATE_CON18_MCLK_OUT_SAI3_EN_SHIFT)              /* 0x00000100 */
#define CRU_GATE_CON18_MCLK_SAI4_SRC_EN_SHIFT              (9U)
#define CRU_GATE_CON18_MCLK_SAI4_SRC_EN_MASK               (0x1U << CRU_GATE_CON18_MCLK_SAI4_SRC_EN_SHIFT)              /* 0x00000200 */
#define CRU_GATE_CON18_HCLK_SAI4_EN_SHIFT                  (10U)
#define CRU_GATE_CON18_HCLK_SAI4_EN_MASK                   (0x1U << CRU_GATE_CON18_HCLK_SAI4_EN_SHIFT)                  /* 0x00000400 */
#define CRU_GATE_CON18_MCLK_SAI4_EN_SHIFT                  (11U)
#define CRU_GATE_CON18_MCLK_SAI4_EN_MASK                   (0x1U << CRU_GATE_CON18_MCLK_SAI4_EN_SHIFT)                  /* 0x00000800 */
#define CRU_GATE_CON18_HCLK_DSM_EN_SHIFT                   (12U)
#define CRU_GATE_CON18_HCLK_DSM_EN_MASK                    (0x1U << CRU_GATE_CON18_HCLK_DSM_EN_SHIFT)                   /* 0x00001000 */
#define CRU_GATE_CON18_MCLK_DSM_EN_SHIFT                   (13U)
#define CRU_GATE_CON18_MCLK_DSM_EN_MASK                    (0x1U << CRU_GATE_CON18_MCLK_DSM_EN_SHIFT)                   /* 0x00002000 */
#define CRU_GATE_CON18_PCLK_AUDIO_ADC_EN_SHIFT             (14U)
#define CRU_GATE_CON18_PCLK_AUDIO_ADC_EN_MASK              (0x1U << CRU_GATE_CON18_PCLK_AUDIO_ADC_EN_SHIFT)             /* 0x00004000 */
#define CRU_GATE_CON18_MCLK_AUDIO_ADC_EN_SHIFT             (15U)
#define CRU_GATE_CON18_MCLK_AUDIO_ADC_EN_MASK              (0x1U << CRU_GATE_CON18_MCLK_AUDIO_ADC_EN_SHIFT)             /* 0x00008000 */
/* GATE_CON19 */
#define CRU_GATE_CON19_OFFSET                              (0x84CU)
#define CRU_GATE_CON19_PCLK_SARADC_EN_SHIFT                (0U)
#define CRU_GATE_CON19_PCLK_SARADC_EN_MASK                 (0x1U << CRU_GATE_CON19_PCLK_SARADC_EN_SHIFT)                /* 0x00000001 */
#define CRU_GATE_CON19_CLK_SARADC_EN_SHIFT                 (1U)
#define CRU_GATE_CON19_CLK_SARADC_EN_MASK                  (0x1U << CRU_GATE_CON19_CLK_SARADC_EN_SHIFT)                 /* 0x00000002 */
#define CRU_GATE_CON19_PCLK_OTPC_NS_EN_SHIFT               (3U)
#define CRU_GATE_CON19_PCLK_OTPC_NS_EN_MASK                (0x1U << CRU_GATE_CON19_PCLK_OTPC_NS_EN_SHIFT)               /* 0x00000008 */
#define CRU_GATE_CON19_CLK_SBPI_OTPC_NS_EN_SHIFT           (4U)
#define CRU_GATE_CON19_CLK_SBPI_OTPC_NS_EN_MASK            (0x1U << CRU_GATE_CON19_CLK_SBPI_OTPC_NS_EN_SHIFT)           /* 0x00000010 */
#define CRU_GATE_CON19_PCLK_UART5_EN_SHIFT                 (6U)
#define CRU_GATE_CON19_PCLK_UART5_EN_MASK                  (0x1U << CRU_GATE_CON19_PCLK_UART5_EN_SHIFT)                 /* 0x00000040 */
#define CRU_GATE_CON19_SCLK_UART5_EN_SHIFT                 (7U)
#define CRU_GATE_CON19_SCLK_UART5_EN_MASK                  (0x1U << CRU_GATE_CON19_SCLK_UART5_EN_SHIFT)                 /* 0x00000080 */
#define CRU_GATE_CON19_PCLK_GPIO234_IOC_EN_SHIFT           (8U)
#define CRU_GATE_CON19_PCLK_GPIO234_IOC_EN_MASK            (0x1U << CRU_GATE_CON19_PCLK_GPIO234_IOC_EN_SHIFT)           /* 0x00000100 */
#define CRU_GATE_CON19_CLK_MAC_PTP_ROOT_EN_SHIFT           (9U)
#define CRU_GATE_CON19_CLK_MAC_PTP_ROOT_EN_MASK            (0x1U << CRU_GATE_CON19_CLK_MAC_PTP_ROOT_EN_SHIFT)           /* 0x00000200 */
#define CRU_GATE_CON19_CLK_MAC0_PTP_EN_SHIFT               (10U)
#define CRU_GATE_CON19_CLK_MAC0_PTP_EN_MASK                (0x1U << CRU_GATE_CON19_CLK_MAC0_PTP_EN_SHIFT)               /* 0x00000400 */
#define CRU_GATE_CON19_CLK_MAC1_PTP_EN_SHIFT               (11U)
#define CRU_GATE_CON19_CLK_MAC1_PTP_EN_MASK                (0x1U << CRU_GATE_CON19_CLK_MAC1_PTP_EN_SHIFT)               /* 0x00000800 */
/* GATE_CON20 */
#define CRU_GATE_CON20_OFFSET                              (0x850U)
#define CRU_GATE_CON20_CLK_SPI2_EN_SHIFT                   (0U)
#define CRU_GATE_CON20_CLK_SPI2_EN_MASK                    (0x1U << CRU_GATE_CON20_CLK_SPI2_EN_SHIFT)                   /* 0x00000001 */
/* GATE_CON21 */
#define CRU_GATE_CON21_OFFSET                              (0x854U)
#define CRU_GATE_CON21_ACLK_VIO_ROOT_EN_SHIFT              (0U)
#define CRU_GATE_CON21_ACLK_VIO_ROOT_EN_MASK               (0x1U << CRU_GATE_CON21_ACLK_VIO_ROOT_EN_SHIFT)              /* 0x00000001 */
#define CRU_GATE_CON21_HCLK_VIO_ROOT_EN_SHIFT              (1U)
#define CRU_GATE_CON21_HCLK_VIO_ROOT_EN_MASK               (0x1U << CRU_GATE_CON21_HCLK_VIO_ROOT_EN_SHIFT)              /* 0x00000002 */
#define CRU_GATE_CON21_PCLK_VIO_ROOT_EN_SHIFT              (2U)
#define CRU_GATE_CON21_PCLK_VIO_ROOT_EN_MASK               (0x1U << CRU_GATE_CON21_PCLK_VIO_ROOT_EN_SHIFT)              /* 0x00000004 */
#define CRU_GATE_CON21_ACLK_VIO_BIU_EN_SHIFT               (3U)
#define CRU_GATE_CON21_ACLK_VIO_BIU_EN_MASK                (0x1U << CRU_GATE_CON21_ACLK_VIO_BIU_EN_SHIFT)               /* 0x00000008 */
#define CRU_GATE_CON21_HCLK_VIO_BIU_EN_SHIFT               (4U)
#define CRU_GATE_CON21_HCLK_VIO_BIU_EN_MASK                (0x1U << CRU_GATE_CON21_HCLK_VIO_BIU_EN_SHIFT)               /* 0x00000010 */
#define CRU_GATE_CON21_HCLK_RGA_EN_SHIFT                   (6U)
#define CRU_GATE_CON21_HCLK_RGA_EN_MASK                    (0x1U << CRU_GATE_CON21_HCLK_RGA_EN_SHIFT)                   /* 0x00000040 */
#define CRU_GATE_CON21_ACLK_RGA_EN_SHIFT                   (7U)
#define CRU_GATE_CON21_ACLK_RGA_EN_MASK                    (0x1U << CRU_GATE_CON21_ACLK_RGA_EN_SHIFT)                   /* 0x00000080 */
#define CRU_GATE_CON21_CLK_CORE_RGA_EN_SHIFT               (8U)
#define CRU_GATE_CON21_CLK_CORE_RGA_EN_MASK                (0x1U << CRU_GATE_CON21_CLK_CORE_RGA_EN_SHIFT)               /* 0x00000100 */
#define CRU_GATE_CON21_ACLK_VOP_EN_SHIFT                   (9U)
#define CRU_GATE_CON21_ACLK_VOP_EN_MASK                    (0x1U << CRU_GATE_CON21_ACLK_VOP_EN_SHIFT)                   /* 0x00000200 */
#define CRU_GATE_CON21_HCLK_VOP_EN_SHIFT                   (10U)
#define CRU_GATE_CON21_HCLK_VOP_EN_MASK                    (0x1U << CRU_GATE_CON21_HCLK_VOP_EN_SHIFT)                   /* 0x00000400 */
#define CRU_GATE_CON21_DCLK_VOP_EN_SHIFT                   (11U)
#define CRU_GATE_CON21_DCLK_VOP_EN_MASK                    (0x1U << CRU_GATE_CON21_DCLK_VOP_EN_SHIFT)                   /* 0x00000800 */
#define CRU_GATE_CON21_PCLK_DPHY_EN_SHIFT                  (12U)
#define CRU_GATE_CON21_PCLK_DPHY_EN_MASK                   (0x1U << CRU_GATE_CON21_PCLK_DPHY_EN_SHIFT)                  /* 0x00001000 */
#define CRU_GATE_CON21_PCLK_DSI_HOST_EN_SHIFT              (13U)
#define CRU_GATE_CON21_PCLK_DSI_HOST_EN_MASK               (0x1U << CRU_GATE_CON21_PCLK_DSI_HOST_EN_SHIFT)              /* 0x00002000 */
#define CRU_GATE_CON21_PCLK_TSADC_EN_SHIFT                 (14U)
#define CRU_GATE_CON21_PCLK_TSADC_EN_MASK                  (0x1U << CRU_GATE_CON21_PCLK_TSADC_EN_SHIFT)                 /* 0x00004000 */
#define CRU_GATE_CON21_CLK_TSADC_EN_SHIFT                  (15U)
#define CRU_GATE_CON21_CLK_TSADC_EN_MASK                   (0x1U << CRU_GATE_CON21_CLK_TSADC_EN_SHIFT)                  /* 0x00008000 */
/* GATE_CON22 */
#define CRU_GATE_CON22_OFFSET                              (0x858U)
#define CRU_GATE_CON22_CLK_TSADC_TSEN_EN_SHIFT             (0U)
#define CRU_GATE_CON22_CLK_TSADC_TSEN_EN_MASK              (0x1U << CRU_GATE_CON22_CLK_TSADC_TSEN_EN_SHIFT)             /* 0x00000001 */
#define CRU_GATE_CON22_PCLK_GPIO1_IOC_EN_SHIFT             (1U)
#define CRU_GATE_CON22_PCLK_GPIO1_IOC_EN_MASK              (0x1U << CRU_GATE_CON22_PCLK_GPIO1_IOC_EN_SHIFT)             /* 0x00000002 */
/* SOFTRST_CON00 */
#define CRU_SOFTRST_CON00_OFFSET                           (0xA00U)
#define CRU_SOFTRST_CON00_NCOREPORESET0_AC_SHIFT           (0U)
#define CRU_SOFTRST_CON00_NCOREPORESET0_AC_MASK            (0x1U << CRU_SOFTRST_CON00_NCOREPORESET0_AC_SHIFT)           /* 0x00000001 */
#define CRU_SOFTRST_CON00_NCOREPORESET1_AC_SHIFT           (1U)
#define CRU_SOFTRST_CON00_NCOREPORESET1_AC_MASK            (0x1U << CRU_SOFTRST_CON00_NCOREPORESET1_AC_SHIFT)           /* 0x00000002 */
#define CRU_SOFTRST_CON00_NCOREPORESET2_AC_SHIFT           (2U)
#define CRU_SOFTRST_CON00_NCOREPORESET2_AC_MASK            (0x1U << CRU_SOFTRST_CON00_NCOREPORESET2_AC_SHIFT)           /* 0x00000004 */
#define CRU_SOFTRST_CON00_NCORESET0_AC_SHIFT               (4U)
#define CRU_SOFTRST_CON00_NCORESET0_AC_MASK                (0x1U << CRU_SOFTRST_CON00_NCORESET0_AC_SHIFT)               /* 0x00000010 */
#define CRU_SOFTRST_CON00_NCORESET1_AC_SHIFT               (5U)
#define CRU_SOFTRST_CON00_NCORESET1_AC_MASK                (0x1U << CRU_SOFTRST_CON00_NCORESET1_AC_SHIFT)               /* 0x00000020 */
#define CRU_SOFTRST_CON00_NCORESET2_AC_SHIFT               (6U)
#define CRU_SOFTRST_CON00_NCORESET2_AC_MASK                (0x1U << CRU_SOFTRST_CON00_NCORESET2_AC_SHIFT)               /* 0x00000040 */
#define CRU_SOFTRST_CON00_NL2RESET_AC_SHIFT                (8U)
#define CRU_SOFTRST_CON00_NL2RESET_AC_MASK                 (0x1U << CRU_SOFTRST_CON00_NL2RESET_AC_SHIFT)                /* 0x00000100 */
#define CRU_SOFTRST_CON00_ARESETN_CORE_BIU_AC_SHIFT        (9U)
#define CRU_SOFTRST_CON00_ARESETN_CORE_BIU_AC_MASK         (0x1U << CRU_SOFTRST_CON00_ARESETN_CORE_BIU_AC_SHIFT)        /* 0x00000200 */
#define CRU_SOFTRST_CON00_HRESETN_M0_AC_SHIFT              (10U)
#define CRU_SOFTRST_CON00_HRESETN_M0_AC_MASK               (0x1U << CRU_SOFTRST_CON00_HRESETN_M0_AC_SHIFT)              /* 0x00000400 */
/* SOFTRST_CON02 */
#define CRU_SOFTRST_CON02_OFFSET                           (0xA08U)
#define CRU_SOFTRST_CON02_NDBGRESET_SHIFT                  (10U)
#define CRU_SOFTRST_CON02_NDBGRESET_MASK                   (0x1U << CRU_SOFTRST_CON02_NDBGRESET_SHIFT)                  /* 0x00000400 */
#define CRU_SOFTRST_CON02_PRESETN_CORE_BIU_SHIFT           (14U)
#define CRU_SOFTRST_CON02_PRESETN_CORE_BIU_MASK            (0x1U << CRU_SOFTRST_CON02_PRESETN_CORE_BIU_SHIFT)           /* 0x00004000 */
#define CRU_SOFTRST_CON02_RESETN_PMU_SHIFT                 (15U)
#define CRU_SOFTRST_CON02_RESETN_PMU_MASK                  (0x1U << CRU_SOFTRST_CON02_RESETN_PMU_SHIFT)                 /* 0x00008000 */
/* SOFTRST_CON03 */
#define CRU_SOFTRST_CON03_OFFSET                           (0xA0CU)
#define CRU_SOFTRST_CON03_PRESETN_DBG_SHIFT                (1U)
#define CRU_SOFTRST_CON03_PRESETN_DBG_MASK                 (0x1U << CRU_SOFTRST_CON03_PRESETN_DBG_SHIFT)                /* 0x00000002 */
#define CRU_SOFTRST_CON03_POTRESETN_DBG_SHIFT              (2U)
#define CRU_SOFTRST_CON03_POTRESETN_DBG_MASK               (0x1U << CRU_SOFTRST_CON03_POTRESETN_DBG_SHIFT)              /* 0x00000004 */
#define CRU_SOFTRST_CON03_PRESETN_CORE_GRF_SHIFT           (4U)
#define CRU_SOFTRST_CON03_PRESETN_CORE_GRF_MASK            (0x1U << CRU_SOFTRST_CON03_PRESETN_CORE_GRF_SHIFT)           /* 0x00000010 */
#define CRU_SOFTRST_CON03_RESETN_CORE_EMA_DETECT_SHIFT     (6U)
#define CRU_SOFTRST_CON03_RESETN_CORE_EMA_DETECT_MASK      (0x1U << CRU_SOFTRST_CON03_RESETN_CORE_EMA_DETECT_SHIFT)     /* 0x00000040 */
#define CRU_SOFTRST_CON03_RESETN_REF_PVTPLL_CORE_SHIFT     (7U)
#define CRU_SOFTRST_CON03_RESETN_REF_PVTPLL_CORE_MASK      (0x1U << CRU_SOFTRST_CON03_RESETN_REF_PVTPLL_CORE_SHIFT)     /* 0x00000080 */
#define CRU_SOFTRST_CON03_PRESETN_GPIO1_SHIFT              (8U)
#define CRU_SOFTRST_CON03_PRESETN_GPIO1_MASK               (0x1U << CRU_SOFTRST_CON03_PRESETN_GPIO1_SHIFT)              /* 0x00000100 */
#define CRU_SOFTRST_CON03_DBRESETN_GPIO1_SHIFT             (9U)
#define CRU_SOFTRST_CON03_DBRESETN_GPIO1_MASK              (0x1U << CRU_SOFTRST_CON03_DBRESETN_GPIO1_SHIFT)             /* 0x00000200 */
/* SOFTRST_CON04 */
#define CRU_SOFTRST_CON04_OFFSET                           (0xA10U)
#define CRU_SOFTRST_CON04_ARESETN_CORE_PERI_BIU_SHIFT      (3U)
#define CRU_SOFTRST_CON04_ARESETN_CORE_PERI_BIU_MASK       (0x1U << CRU_SOFTRST_CON04_ARESETN_CORE_PERI_BIU_SHIFT)      /* 0x00000008 */
#define CRU_SOFTRST_CON04_ARESETN_DSMC_SHIFT               (5U)
#define CRU_SOFTRST_CON04_ARESETN_DSMC_MASK                (0x1U << CRU_SOFTRST_CON04_ARESETN_DSMC_SHIFT)               /* 0x00000020 */
#define CRU_SOFTRST_CON04_PRESETN_DSMC_SHIFT               (6U)
#define CRU_SOFTRST_CON04_PRESETN_DSMC_MASK                (0x1U << CRU_SOFTRST_CON04_PRESETN_DSMC_SHIFT)               /* 0x00000040 */
#define CRU_SOFTRST_CON04_RESETN_FLEXBUS_SHIFT             (7U)
#define CRU_SOFTRST_CON04_RESETN_FLEXBUS_MASK              (0x1U << CRU_SOFTRST_CON04_RESETN_FLEXBUS_SHIFT)             /* 0x00000080 */
#define CRU_SOFTRST_CON04_ARESETN_FLEXBUS_SHIFT            (9U)
#define CRU_SOFTRST_CON04_ARESETN_FLEXBUS_MASK             (0x1U << CRU_SOFTRST_CON04_ARESETN_FLEXBUS_SHIFT)            /* 0x00000200 */
#define CRU_SOFTRST_CON04_HRESETN_FLEXBUS_SHIFT            (10U)
#define CRU_SOFTRST_CON04_HRESETN_FLEXBUS_MASK             (0x1U << CRU_SOFTRST_CON04_HRESETN_FLEXBUS_SHIFT)            /* 0x00000400 */
#define CRU_SOFTRST_CON04_ARESETN_DSMC_SLV_SHIFT           (11U)
#define CRU_SOFTRST_CON04_ARESETN_DSMC_SLV_MASK            (0x1U << CRU_SOFTRST_CON04_ARESETN_DSMC_SLV_SHIFT)           /* 0x00000800 */
#define CRU_SOFTRST_CON04_HRESETN_DSMC_SLV_SHIFT           (12U)
#define CRU_SOFTRST_CON04_HRESETN_DSMC_SLV_MASK            (0x1U << CRU_SOFTRST_CON04_HRESETN_DSMC_SLV_SHIFT)           /* 0x00001000 */
#define CRU_SOFTRST_CON04_RESETN_DSMC_SLV_SHIFT            (13U)
#define CRU_SOFTRST_CON04_RESETN_DSMC_SLV_MASK             (0x1U << CRU_SOFTRST_CON04_RESETN_DSMC_SLV_SHIFT)            /* 0x00002000 */
/* SOFTRST_CON05 */
#define CRU_SOFTRST_CON05_OFFSET                           (0xA14U)
#define CRU_SOFTRST_CON05_ARESETN_BUS_BIU_SHIFT            (3U)
#define CRU_SOFTRST_CON05_ARESETN_BUS_BIU_MASK             (0x1U << CRU_SOFTRST_CON05_ARESETN_BUS_BIU_SHIFT)            /* 0x00000008 */
#define CRU_SOFTRST_CON05_HRESETN_BUS_BIU_SHIFT            (4U)
#define CRU_SOFTRST_CON05_HRESETN_BUS_BIU_MASK             (0x1U << CRU_SOFTRST_CON05_HRESETN_BUS_BIU_SHIFT)            /* 0x00000010 */
#define CRU_SOFTRST_CON05_PRESETN_BUS_BIU_SHIFT            (5U)
#define CRU_SOFTRST_CON05_PRESETN_BUS_BIU_MASK             (0x1U << CRU_SOFTRST_CON05_PRESETN_BUS_BIU_SHIFT)            /* 0x00000020 */
#define CRU_SOFTRST_CON05_ARESETN_SYSRAM_SHIFT             (6U)
#define CRU_SOFTRST_CON05_ARESETN_SYSRAM_MASK              (0x1U << CRU_SOFTRST_CON05_ARESETN_SYSRAM_SHIFT)             /* 0x00000040 */
#define CRU_SOFTRST_CON05_HRESETN_SYSRAM_SHIFT             (7U)
#define CRU_SOFTRST_CON05_HRESETN_SYSRAM_MASK              (0x1U << CRU_SOFTRST_CON05_HRESETN_SYSRAM_SHIFT)             /* 0x00000080 */
#define CRU_SOFTRST_CON05_ARESETN_DMAC0_SHIFT              (8U)
#define CRU_SOFTRST_CON05_ARESETN_DMAC0_MASK               (0x1U << CRU_SOFTRST_CON05_ARESETN_DMAC0_SHIFT)              /* 0x00000100 */
#define CRU_SOFTRST_CON05_ARESETN_DMAC1_SHIFT              (9U)
#define CRU_SOFTRST_CON05_ARESETN_DMAC1_MASK               (0x1U << CRU_SOFTRST_CON05_ARESETN_DMAC1_SHIFT)              /* 0x00000200 */
#define CRU_SOFTRST_CON05_HRESETN_M0_SHIFT                 (10U)
#define CRU_SOFTRST_CON05_HRESETN_M0_MASK                  (0x1U << CRU_SOFTRST_CON05_HRESETN_M0_SHIFT)                 /* 0x00000400 */
#define CRU_SOFTRST_CON05_RESETN_M0_JTAG_SHIFT             (11U)
#define CRU_SOFTRST_CON05_RESETN_M0_JTAG_MASK              (0x1U << CRU_SOFTRST_CON05_RESETN_M0_JTAG_SHIFT)             /* 0x00000800 */
#define CRU_SOFTRST_CON05_HRESETN_CRYPTO_SHIFT             (15U)
#define CRU_SOFTRST_CON05_HRESETN_CRYPTO_MASK              (0x1U << CRU_SOFTRST_CON05_HRESETN_CRYPTO_SHIFT)             /* 0x00008000 */
/* SOFTRST_CON06 */
#define CRU_SOFTRST_CON06_OFFSET                           (0xA18U)
#define CRU_SOFTRST_CON06_HRESETN_RNG_SHIFT                (0U)
#define CRU_SOFTRST_CON06_HRESETN_RNG_MASK                 (0x1U << CRU_SOFTRST_CON06_HRESETN_RNG_SHIFT)                /* 0x00000001 */
#define CRU_SOFTRST_CON06_PRESETN_BUS_GRF_SHIFT            (1U)
#define CRU_SOFTRST_CON06_PRESETN_BUS_GRF_MASK             (0x1U << CRU_SOFTRST_CON06_PRESETN_BUS_GRF_SHIFT)            /* 0x00000002 */
#define CRU_SOFTRST_CON06_PRESETN_TIMER0_SHIFT             (2U)
#define CRU_SOFTRST_CON06_PRESETN_TIMER0_MASK              (0x1U << CRU_SOFTRST_CON06_PRESETN_TIMER0_SHIFT)             /* 0x00000004 */
#define CRU_SOFTRST_CON06_RESETN_TIMER0_CH0_SHIFT          (3U)
#define CRU_SOFTRST_CON06_RESETN_TIMER0_CH0_MASK           (0x1U << CRU_SOFTRST_CON06_RESETN_TIMER0_CH0_SHIFT)          /* 0x00000008 */
#define CRU_SOFTRST_CON06_RESETN_TIMER0_CH1_SHIFT          (4U)
#define CRU_SOFTRST_CON06_RESETN_TIMER0_CH1_MASK           (0x1U << CRU_SOFTRST_CON06_RESETN_TIMER0_CH1_SHIFT)          /* 0x00000010 */
#define CRU_SOFTRST_CON06_RESETN_TIMER0_CH2_SHIFT          (5U)
#define CRU_SOFTRST_CON06_RESETN_TIMER0_CH2_MASK           (0x1U << CRU_SOFTRST_CON06_RESETN_TIMER0_CH2_SHIFT)          /* 0x00000020 */
#define CRU_SOFTRST_CON06_RESETN_TIMER0_CH3_SHIFT          (6U)
#define CRU_SOFTRST_CON06_RESETN_TIMER0_CH3_MASK           (0x1U << CRU_SOFTRST_CON06_RESETN_TIMER0_CH3_SHIFT)          /* 0x00000040 */
#define CRU_SOFTRST_CON06_RESETN_TIMER0_CH4_SHIFT          (7U)
#define CRU_SOFTRST_CON06_RESETN_TIMER0_CH4_MASK           (0x1U << CRU_SOFTRST_CON06_RESETN_TIMER0_CH4_SHIFT)          /* 0x00000080 */
#define CRU_SOFTRST_CON06_RESETN_TIMER0_CH5_SHIFT          (8U)
#define CRU_SOFTRST_CON06_RESETN_TIMER0_CH5_MASK           (0x1U << CRU_SOFTRST_CON06_RESETN_TIMER0_CH5_SHIFT)          /* 0x00000100 */
#define CRU_SOFTRST_CON06_PRESETN_WDT0_SHIFT               (9U)
#define CRU_SOFTRST_CON06_PRESETN_WDT0_MASK                (0x1U << CRU_SOFTRST_CON06_PRESETN_WDT0_SHIFT)               /* 0x00000200 */
#define CRU_SOFTRST_CON06_TRESETN_WDT0_SHIFT               (10U)
#define CRU_SOFTRST_CON06_TRESETN_WDT0_MASK                (0x1U << CRU_SOFTRST_CON06_TRESETN_WDT0_SHIFT)               /* 0x00000400 */
#define CRU_SOFTRST_CON06_PRESETN_WDT1_SHIFT               (11U)
#define CRU_SOFTRST_CON06_PRESETN_WDT1_MASK                (0x1U << CRU_SOFTRST_CON06_PRESETN_WDT1_SHIFT)               /* 0x00000800 */
#define CRU_SOFTRST_CON06_TRESETN_WDT1_SHIFT               (12U)
#define CRU_SOFTRST_CON06_TRESETN_WDT1_MASK                (0x1U << CRU_SOFTRST_CON06_TRESETN_WDT1_SHIFT)               /* 0x00001000 */
#define CRU_SOFTRST_CON06_PRESETN_MAILBOX_SHIFT            (13U)
#define CRU_SOFTRST_CON06_PRESETN_MAILBOX_MASK             (0x1U << CRU_SOFTRST_CON06_PRESETN_MAILBOX_SHIFT)            /* 0x00002000 */
#define CRU_SOFTRST_CON06_PRESETN_INTMUX_SHIFT             (14U)
#define CRU_SOFTRST_CON06_PRESETN_INTMUX_MASK              (0x1U << CRU_SOFTRST_CON06_PRESETN_INTMUX_SHIFT)             /* 0x00004000 */
#define CRU_SOFTRST_CON06_PRESETN_SPINLOCK_SHIFT           (15U)
#define CRU_SOFTRST_CON06_PRESETN_SPINLOCK_MASK            (0x1U << CRU_SOFTRST_CON06_PRESETN_SPINLOCK_SHIFT)           /* 0x00008000 */
/* SOFTRST_CON07 */
#define CRU_SOFTRST_CON07_OFFSET                           (0xA1CU)
#define CRU_SOFTRST_CON07_PRESETN_DDRC_SHIFT               (0U)
#define CRU_SOFTRST_CON07_PRESETN_DDRC_MASK                (0x1U << CRU_SOFTRST_CON07_PRESETN_DDRC_SHIFT)               /* 0x00000001 */
#define CRU_SOFTRST_CON07_HRESETN_DDRPHY_SHIFT             (1U)
#define CRU_SOFTRST_CON07_HRESETN_DDRPHY_MASK              (0x1U << CRU_SOFTRST_CON07_HRESETN_DDRPHY_SHIFT)             /* 0x00000002 */
#define CRU_SOFTRST_CON07_PRESETN_DDRMON_SHIFT             (2U)
#define CRU_SOFTRST_CON07_PRESETN_DDRMON_MASK              (0x1U << CRU_SOFTRST_CON07_PRESETN_DDRMON_SHIFT)             /* 0x00000004 */
#define CRU_SOFTRST_CON07_RESETN_DDRMON_OSC_SHIFT          (3U)
#define CRU_SOFTRST_CON07_RESETN_DDRMON_OSC_MASK           (0x1U << CRU_SOFTRST_CON07_RESETN_DDRMON_OSC_SHIFT)          /* 0x00000008 */
#define CRU_SOFTRST_CON07_PRESETN_DDR_LPC_SHIFT            (4U)
#define CRU_SOFTRST_CON07_PRESETN_DDR_LPC_MASK             (0x1U << CRU_SOFTRST_CON07_PRESETN_DDR_LPC_SHIFT)            /* 0x00000010 */
#define CRU_SOFTRST_CON07_HRESETN_USBOTG0_SHIFT            (5U)
#define CRU_SOFTRST_CON07_HRESETN_USBOTG0_MASK             (0x1U << CRU_SOFTRST_CON07_HRESETN_USBOTG0_SHIFT)            /* 0x00000020 */
#define CRU_SOFTRST_CON07_RESETN_USBOTG0_ADP_SHIFT         (7U)
#define CRU_SOFTRST_CON07_RESETN_USBOTG0_ADP_MASK          (0x1U << CRU_SOFTRST_CON07_RESETN_USBOTG0_ADP_SHIFT)         /* 0x00000080 */
#define CRU_SOFTRST_CON07_HRESETN_USBOTG1_SHIFT            (8U)
#define CRU_SOFTRST_CON07_HRESETN_USBOTG1_MASK             (0x1U << CRU_SOFTRST_CON07_HRESETN_USBOTG1_SHIFT)            /* 0x00000100 */
#define CRU_SOFTRST_CON07_RESETN_USBOTG1_ADP_SHIFT         (10U)
#define CRU_SOFTRST_CON07_RESETN_USBOTG1_ADP_MASK          (0x1U << CRU_SOFTRST_CON07_RESETN_USBOTG1_ADP_SHIFT)         /* 0x00000400 */
#define CRU_SOFTRST_CON07_PRESETN_USBPHY_SHIFT             (11U)
#define CRU_SOFTRST_CON07_PRESETN_USBPHY_MASK              (0x1U << CRU_SOFTRST_CON07_PRESETN_USBPHY_SHIFT)             /* 0x00000800 */
#define CRU_SOFTRST_CON07_RESETN_USBPHY_POR_SHIFT          (12U)
#define CRU_SOFTRST_CON07_RESETN_USBPHY_POR_MASK           (0x1U << CRU_SOFTRST_CON07_RESETN_USBPHY_POR_SHIFT)          /* 0x00001000 */
#define CRU_SOFTRST_CON07_RESETN_USBPHY_OTG0_SHIFT         (13U)
#define CRU_SOFTRST_CON07_RESETN_USBPHY_OTG0_MASK          (0x1U << CRU_SOFTRST_CON07_RESETN_USBPHY_OTG0_SHIFT)         /* 0x00002000 */
#define CRU_SOFTRST_CON07_RESETN_USBPHY_OTG1_SHIFT         (14U)
#define CRU_SOFTRST_CON07_RESETN_USBPHY_OTG1_MASK          (0x1U << CRU_SOFTRST_CON07_RESETN_USBPHY_OTG1_SHIFT)         /* 0x00004000 */
/* SOFTRST_CON08 */
#define CRU_SOFTRST_CON08_OFFSET                           (0xA20U)
#define CRU_SOFTRST_CON08_ARESETN_DMA2DDR_SHIFT            (0U)
#define CRU_SOFTRST_CON08_ARESETN_DMA2DDR_MASK             (0x1U << CRU_SOFTRST_CON08_ARESETN_DMA2DDR_SHIFT)            /* 0x00000001 */
#define CRU_SOFTRST_CON08_PRESETN_DMA2DDR_SHIFT            (1U)
#define CRU_SOFTRST_CON08_PRESETN_DMA2DDR_MASK             (0x1U << CRU_SOFTRST_CON08_PRESETN_DMA2DDR_SHIFT)            /* 0x00000002 */
/* SOFTRST_CON09 */
#define CRU_SOFTRST_CON09_OFFSET                           (0xA24U)
#define CRU_SOFTRST_CON09_RESETN_USBOTG0_UTMI_SHIFT        (0U)
#define CRU_SOFTRST_CON09_RESETN_USBOTG0_UTMI_MASK         (0x1U << CRU_SOFTRST_CON09_RESETN_USBOTG0_UTMI_SHIFT)        /* 0x00000001 */
#define CRU_SOFTRST_CON09_RESETN_USBOTG1_UTMI_SHIFT        (1U)
#define CRU_SOFTRST_CON09_RESETN_USBOTG1_UTMI_MASK         (0x1U << CRU_SOFTRST_CON09_RESETN_USBOTG1_UTMI_SHIFT)        /* 0x00000002 */
/* SOFTRST_CON10 */
#define CRU_SOFTRST_CON10_OFFSET                           (0xA28U)
#define CRU_SOFTRST_CON10_ARESETN_DDRC_0_SHIFT             (0U)
#define CRU_SOFTRST_CON10_ARESETN_DDRC_0_MASK              (0x1U << CRU_SOFTRST_CON10_ARESETN_DDRC_0_SHIFT)             /* 0x00000001 */
#define CRU_SOFTRST_CON10_ARESETN_DDRC_1_SHIFT             (1U)
#define CRU_SOFTRST_CON10_ARESETN_DDRC_1_MASK              (0x1U << CRU_SOFTRST_CON10_ARESETN_DDRC_1_SHIFT)             /* 0x00000002 */
#define CRU_SOFTRST_CON10_ARESETN_DDR_BIU_SHIFT            (2U)
#define CRU_SOFTRST_CON10_ARESETN_DDR_BIU_MASK             (0x1U << CRU_SOFTRST_CON10_ARESETN_DDR_BIU_SHIFT)            /* 0x00000004 */
#define CRU_SOFTRST_CON10_RESETN_DDRC_SHIFT                (3U)
#define CRU_SOFTRST_CON10_RESETN_DDRC_MASK                 (0x1U << CRU_SOFTRST_CON10_RESETN_DDRC_SHIFT)                /* 0x00000008 */
#define CRU_SOFTRST_CON10_RESETN_DDRMON_SHIFT              (4U)
#define CRU_SOFTRST_CON10_RESETN_DDRMON_MASK               (0x1U << CRU_SOFTRST_CON10_RESETN_DDRMON_SHIFT)              /* 0x00000010 */
/* SOFTRST_CON11 */
#define CRU_SOFTRST_CON11_OFFSET                           (0xA2CU)
#define CRU_SOFTRST_CON11_HRESETN_LSPERI_BIU_SHIFT         (2U)
#define CRU_SOFTRST_CON11_HRESETN_LSPERI_BIU_MASK          (0x1U << CRU_SOFTRST_CON11_HRESETN_LSPERI_BIU_SHIFT)         /* 0x00000004 */
#define CRU_SOFTRST_CON11_PRESETN_UART0_SHIFT              (4U)
#define CRU_SOFTRST_CON11_PRESETN_UART0_MASK               (0x1U << CRU_SOFTRST_CON11_PRESETN_UART0_SHIFT)              /* 0x00000010 */
#define CRU_SOFTRST_CON11_PRESETN_UART1_SHIFT              (5U)
#define CRU_SOFTRST_CON11_PRESETN_UART1_MASK               (0x1U << CRU_SOFTRST_CON11_PRESETN_UART1_SHIFT)              /* 0x00000020 */
#define CRU_SOFTRST_CON11_PRESETN_UART2_SHIFT              (6U)
#define CRU_SOFTRST_CON11_PRESETN_UART2_MASK               (0x1U << CRU_SOFTRST_CON11_PRESETN_UART2_SHIFT)              /* 0x00000040 */
#define CRU_SOFTRST_CON11_PRESETN_UART3_SHIFT              (7U)
#define CRU_SOFTRST_CON11_PRESETN_UART3_MASK               (0x1U << CRU_SOFTRST_CON11_PRESETN_UART3_SHIFT)              /* 0x00000080 */
#define CRU_SOFTRST_CON11_PRESETN_UART4_SHIFT              (8U)
#define CRU_SOFTRST_CON11_PRESETN_UART4_MASK               (0x1U << CRU_SOFTRST_CON11_PRESETN_UART4_SHIFT)              /* 0x00000100 */
#define CRU_SOFTRST_CON11_RESETN_UART0_SHIFT               (9U)
#define CRU_SOFTRST_CON11_RESETN_UART0_MASK                (0x1U << CRU_SOFTRST_CON11_RESETN_UART0_SHIFT)               /* 0x00000200 */
#define CRU_SOFTRST_CON11_RESETN_UART1_SHIFT               (10U)
#define CRU_SOFTRST_CON11_RESETN_UART1_MASK                (0x1U << CRU_SOFTRST_CON11_RESETN_UART1_SHIFT)               /* 0x00000400 */
#define CRU_SOFTRST_CON11_RESETN_UART2_SHIFT               (11U)
#define CRU_SOFTRST_CON11_RESETN_UART2_MASK                (0x1U << CRU_SOFTRST_CON11_RESETN_UART2_SHIFT)               /* 0x00000800 */
#define CRU_SOFTRST_CON11_RESETN_UART3_SHIFT               (12U)
#define CRU_SOFTRST_CON11_RESETN_UART3_MASK                (0x1U << CRU_SOFTRST_CON11_RESETN_UART3_SHIFT)               /* 0x00001000 */
#define CRU_SOFTRST_CON11_RESETN_UART4_SHIFT               (13U)
#define CRU_SOFTRST_CON11_RESETN_UART4_MASK                (0x1U << CRU_SOFTRST_CON11_RESETN_UART4_SHIFT)               /* 0x00002000 */
#define CRU_SOFTRST_CON11_PRESETN_I2C0_SHIFT               (14U)
#define CRU_SOFTRST_CON11_PRESETN_I2C0_MASK                (0x1U << CRU_SOFTRST_CON11_PRESETN_I2C0_SHIFT)               /* 0x00004000 */
#define CRU_SOFTRST_CON11_RESETN_I2C0_SHIFT                (15U)
#define CRU_SOFTRST_CON11_RESETN_I2C0_MASK                 (0x1U << CRU_SOFTRST_CON11_RESETN_I2C0_SHIFT)                /* 0x00008000 */
/* SOFTRST_CON12 */
#define CRU_SOFTRST_CON12_OFFSET                           (0xA30U)
#define CRU_SOFTRST_CON12_PRESETN_I2C1_SHIFT               (0U)
#define CRU_SOFTRST_CON12_PRESETN_I2C1_MASK                (0x1U << CRU_SOFTRST_CON12_PRESETN_I2C1_SHIFT)               /* 0x00000001 */
#define CRU_SOFTRST_CON12_RESETN_I2C1_SHIFT                (1U)
#define CRU_SOFTRST_CON12_RESETN_I2C1_MASK                 (0x1U << CRU_SOFTRST_CON12_RESETN_I2C1_SHIFT)                /* 0x00000002 */
#define CRU_SOFTRST_CON12_PRESETN_I2C2_SHIFT               (2U)
#define CRU_SOFTRST_CON12_PRESETN_I2C2_MASK                (0x1U << CRU_SOFTRST_CON12_PRESETN_I2C2_SHIFT)               /* 0x00000004 */
#define CRU_SOFTRST_CON12_RESETN_I2C2_SHIFT                (3U)
#define CRU_SOFTRST_CON12_RESETN_I2C2_MASK                 (0x1U << CRU_SOFTRST_CON12_RESETN_I2C2_SHIFT)                /* 0x00000008 */
#define CRU_SOFTRST_CON12_PRESETN_PWM1_SHIFT               (4U)
#define CRU_SOFTRST_CON12_PRESETN_PWM1_MASK                (0x1U << CRU_SOFTRST_CON12_PRESETN_PWM1_SHIFT)               /* 0x00000010 */
#define CRU_SOFTRST_CON12_RESETN_PWM1_SHIFT                (5U)
#define CRU_SOFTRST_CON12_RESETN_PWM1_MASK                 (0x1U << CRU_SOFTRST_CON12_RESETN_PWM1_SHIFT)                /* 0x00000020 */
#define CRU_SOFTRST_CON12_PRESETN_SPI0_SHIFT               (10U)
#define CRU_SOFTRST_CON12_PRESETN_SPI0_MASK                (0x1U << CRU_SOFTRST_CON12_PRESETN_SPI0_SHIFT)               /* 0x00000400 */
#define CRU_SOFTRST_CON12_RESETN_SPI0_SHIFT                (11U)
#define CRU_SOFTRST_CON12_RESETN_SPI0_MASK                 (0x1U << CRU_SOFTRST_CON12_RESETN_SPI0_SHIFT)                /* 0x00000800 */
#define CRU_SOFTRST_CON12_PRESETN_SPI1_SHIFT               (12U)
#define CRU_SOFTRST_CON12_PRESETN_SPI1_MASK                (0x1U << CRU_SOFTRST_CON12_PRESETN_SPI1_SHIFT)               /* 0x00001000 */
#define CRU_SOFTRST_CON12_RESETN_SPI1_SHIFT                (13U)
#define CRU_SOFTRST_CON12_RESETN_SPI1_MASK                 (0x1U << CRU_SOFTRST_CON12_RESETN_SPI1_SHIFT)                /* 0x00002000 */
#define CRU_SOFTRST_CON12_PRESETN_GPIO2_SHIFT              (14U)
#define CRU_SOFTRST_CON12_PRESETN_GPIO2_MASK               (0x1U << CRU_SOFTRST_CON12_PRESETN_GPIO2_SHIFT)              /* 0x00004000 */
#define CRU_SOFTRST_CON12_DBRESETN_GPIO2_SHIFT             (15U)
#define CRU_SOFTRST_CON12_DBRESETN_GPIO2_MASK              (0x1U << CRU_SOFTRST_CON12_DBRESETN_GPIO2_SHIFT)             /* 0x00008000 */
/* SOFTRST_CON13 */
#define CRU_SOFTRST_CON13_OFFSET                           (0xA34U)
#define CRU_SOFTRST_CON13_PRESETN_GPIO3_SHIFT              (0U)
#define CRU_SOFTRST_CON13_PRESETN_GPIO3_MASK               (0x1U << CRU_SOFTRST_CON13_PRESETN_GPIO3_SHIFT)              /* 0x00000001 */
#define CRU_SOFTRST_CON13_DBRESETN_GPIO3_SHIFT             (1U)
#define CRU_SOFTRST_CON13_DBRESETN_GPIO3_MASK              (0x1U << CRU_SOFTRST_CON13_DBRESETN_GPIO3_SHIFT)             /* 0x00000002 */
#define CRU_SOFTRST_CON13_PRESETN_GPIO4_SHIFT              (2U)
#define CRU_SOFTRST_CON13_PRESETN_GPIO4_MASK               (0x1U << CRU_SOFTRST_CON13_PRESETN_GPIO4_SHIFT)              /* 0x00000004 */
#define CRU_SOFTRST_CON13_DBRESETN_GPIO4_SHIFT             (3U)
#define CRU_SOFTRST_CON13_DBRESETN_GPIO4_MASK              (0x1U << CRU_SOFTRST_CON13_DBRESETN_GPIO4_SHIFT)             /* 0x00000008 */
#define CRU_SOFTRST_CON13_HRESETN_CAN0_SHIFT               (4U)
#define CRU_SOFTRST_CON13_HRESETN_CAN0_MASK                (0x1U << CRU_SOFTRST_CON13_HRESETN_CAN0_SHIFT)               /* 0x00000010 */
#define CRU_SOFTRST_CON13_RESETN_CAN0_SHIFT                (5U)
#define CRU_SOFTRST_CON13_RESETN_CAN0_MASK                 (0x1U << CRU_SOFTRST_CON13_RESETN_CAN0_SHIFT)                /* 0x00000020 */
#define CRU_SOFTRST_CON13_HRESETN_CAN1_SHIFT               (6U)
#define CRU_SOFTRST_CON13_HRESETN_CAN1_MASK                (0x1U << CRU_SOFTRST_CON13_HRESETN_CAN1_SHIFT)               /* 0x00000040 */
#define CRU_SOFTRST_CON13_RESETN_CAN1_SHIFT                (7U)
#define CRU_SOFTRST_CON13_RESETN_CAN1_MASK                 (0x1U << CRU_SOFTRST_CON13_RESETN_CAN1_SHIFT)                /* 0x00000080 */
#define CRU_SOFTRST_CON13_HRESETN_PDM_SHIFT                (8U)
#define CRU_SOFTRST_CON13_HRESETN_PDM_MASK                 (0x1U << CRU_SOFTRST_CON13_HRESETN_PDM_SHIFT)                /* 0x00000100 */
#define CRU_SOFTRST_CON13_MRESETN_PDM_SHIFT                (9U)
#define CRU_SOFTRST_CON13_MRESETN_PDM_MASK                 (0x1U << CRU_SOFTRST_CON13_MRESETN_PDM_SHIFT)                /* 0x00000200 */
#define CRU_SOFTRST_CON13_RESETN_PDM_SHIFT                 (10U)
#define CRU_SOFTRST_CON13_RESETN_PDM_MASK                  (0x1U << CRU_SOFTRST_CON13_RESETN_PDM_SHIFT)                 /* 0x00000400 */
#define CRU_SOFTRST_CON13_RESETN_SPDIFTX_SHIFT             (11U)
#define CRU_SOFTRST_CON13_RESETN_SPDIFTX_MASK              (0x1U << CRU_SOFTRST_CON13_RESETN_SPDIFTX_SHIFT)             /* 0x00000800 */
#define CRU_SOFTRST_CON13_HRESETN_SPDIFTX_SHIFT            (12U)
#define CRU_SOFTRST_CON13_HRESETN_SPDIFTX_MASK             (0x1U << CRU_SOFTRST_CON13_HRESETN_SPDIFTX_SHIFT)            /* 0x00001000 */
#define CRU_SOFTRST_CON13_HRESETN_SPDIFRX_SHIFT            (13U)
#define CRU_SOFTRST_CON13_HRESETN_SPDIFRX_MASK             (0x1U << CRU_SOFTRST_CON13_HRESETN_SPDIFRX_SHIFT)            /* 0x00002000 */
#define CRU_SOFTRST_CON13_RESETN_SPDIFRX_SHIFT             (14U)
#define CRU_SOFTRST_CON13_RESETN_SPDIFRX_MASK              (0x1U << CRU_SOFTRST_CON13_RESETN_SPDIFRX_SHIFT)             /* 0x00004000 */
#define CRU_SOFTRST_CON13_MRESETN_SAI0_SHIFT               (15U)
#define CRU_SOFTRST_CON13_MRESETN_SAI0_MASK                (0x1U << CRU_SOFTRST_CON13_MRESETN_SAI0_SHIFT)               /* 0x00008000 */
/* SOFTRST_CON14 */
#define CRU_SOFTRST_CON14_OFFSET                           (0xA38U)
#define CRU_SOFTRST_CON14_HRESETN_SAI0_SHIFT               (0U)
#define CRU_SOFTRST_CON14_HRESETN_SAI0_MASK                (0x1U << CRU_SOFTRST_CON14_HRESETN_SAI0_SHIFT)               /* 0x00000001 */
#define CRU_SOFTRST_CON14_MRESETN_SAI1_SHIFT               (2U)
#define CRU_SOFTRST_CON14_MRESETN_SAI1_MASK                (0x1U << CRU_SOFTRST_CON14_MRESETN_SAI1_SHIFT)               /* 0x00000004 */
#define CRU_SOFTRST_CON14_HRESETN_SAI1_SHIFT               (3U)
#define CRU_SOFTRST_CON14_HRESETN_SAI1_MASK                (0x1U << CRU_SOFTRST_CON14_HRESETN_SAI1_SHIFT)               /* 0x00000008 */
#define CRU_SOFTRST_CON14_HRESETN_ASRC0_SHIFT              (5U)
#define CRU_SOFTRST_CON14_HRESETN_ASRC0_MASK               (0x1U << CRU_SOFTRST_CON14_HRESETN_ASRC0_SHIFT)              /* 0x00000020 */
#define CRU_SOFTRST_CON14_RESETN_ASRC0_SHIFT               (6U)
#define CRU_SOFTRST_CON14_RESETN_ASRC0_MASK                (0x1U << CRU_SOFTRST_CON14_RESETN_ASRC0_SHIFT)               /* 0x00000040 */
#define CRU_SOFTRST_CON14_HRESETN_ASRC1_SHIFT              (7U)
#define CRU_SOFTRST_CON14_HRESETN_ASRC1_MASK               (0x1U << CRU_SOFTRST_CON14_HRESETN_ASRC1_SHIFT)              /* 0x00000080 */
#define CRU_SOFTRST_CON14_RESETN_ASRC1_SHIFT               (8U)
#define CRU_SOFTRST_CON14_RESETN_ASRC1_MASK                (0x1U << CRU_SOFTRST_CON14_RESETN_ASRC1_SHIFT)               /* 0x00000100 */
/* SOFTRST_CON17 */
#define CRU_SOFTRST_CON17_OFFSET                           (0xA44U)
#define CRU_SOFTRST_CON17_HRESETN_HSPERI_BIU_SHIFT         (4U)
#define CRU_SOFTRST_CON17_HRESETN_HSPERI_BIU_MASK          (0x1U << CRU_SOFTRST_CON17_HRESETN_HSPERI_BIU_SHIFT)         /* 0x00000010 */
#define CRU_SOFTRST_CON17_HRESETN_SDMMC_SHIFT              (7U)
#define CRU_SOFTRST_CON17_HRESETN_SDMMC_MASK               (0x1U << CRU_SOFTRST_CON17_HRESETN_SDMMC_SHIFT)              /* 0x00000080 */
#define CRU_SOFTRST_CON17_HRESETN_FSPI_SHIFT               (8U)
#define CRU_SOFTRST_CON17_HRESETN_FSPI_MASK                (0x1U << CRU_SOFTRST_CON17_HRESETN_FSPI_SHIFT)               /* 0x00000100 */
#define CRU_SOFTRST_CON17_SRESETN_FSPI_SHIFT               (9U)
#define CRU_SOFTRST_CON17_SRESETN_FSPI_MASK                (0x1U << CRU_SOFTRST_CON17_SRESETN_FSPI_SHIFT)               /* 0x00000200 */
#define CRU_SOFTRST_CON17_PRESETN_SPI2_SHIFT               (10U)
#define CRU_SOFTRST_CON17_PRESETN_SPI2_MASK                (0x1U << CRU_SOFTRST_CON17_PRESETN_SPI2_SHIFT)               /* 0x00000400 */
#define CRU_SOFTRST_CON17_ARESETN_MAC0_SHIFT               (11U)
#define CRU_SOFTRST_CON17_ARESETN_MAC0_MASK                (0x1U << CRU_SOFTRST_CON17_ARESETN_MAC0_SHIFT)               /* 0x00000800 */
#define CRU_SOFTRST_CON17_ARESETN_MAC1_SHIFT               (12U)
#define CRU_SOFTRST_CON17_ARESETN_MAC1_MASK                (0x1U << CRU_SOFTRST_CON17_ARESETN_MAC1_SHIFT)               /* 0x00001000 */
/* SOFTRST_CON18 */
#define CRU_SOFTRST_CON18_OFFSET                           (0xA48U)
#define CRU_SOFTRST_CON18_MRESETN_SAI2_SHIFT               (2U)
#define CRU_SOFTRST_CON18_MRESETN_SAI2_MASK                (0x1U << CRU_SOFTRST_CON18_MRESETN_SAI2_SHIFT)               /* 0x00000004 */
#define CRU_SOFTRST_CON18_HRESETN_SAI2_SHIFT               (3U)
#define CRU_SOFTRST_CON18_HRESETN_SAI2_MASK                (0x1U << CRU_SOFTRST_CON18_HRESETN_SAI2_SHIFT)               /* 0x00000008 */
#define CRU_SOFTRST_CON18_HRESETN_SAI3_SHIFT               (6U)
#define CRU_SOFTRST_CON18_HRESETN_SAI3_MASK                (0x1U << CRU_SOFTRST_CON18_HRESETN_SAI3_SHIFT)               /* 0x00000040 */
#define CRU_SOFTRST_CON18_MRESETN_SAI3_SHIFT               (7U)
#define CRU_SOFTRST_CON18_MRESETN_SAI3_MASK                (0x1U << CRU_SOFTRST_CON18_MRESETN_SAI3_SHIFT)               /* 0x00000080 */
#define CRU_SOFTRST_CON18_HRESETN_SAI4_SHIFT               (10U)
#define CRU_SOFTRST_CON18_HRESETN_SAI4_MASK                (0x1U << CRU_SOFTRST_CON18_HRESETN_SAI4_SHIFT)               /* 0x00000400 */
#define CRU_SOFTRST_CON18_MRESETN_SAI4_SHIFT               (11U)
#define CRU_SOFTRST_CON18_MRESETN_SAI4_MASK                (0x1U << CRU_SOFTRST_CON18_MRESETN_SAI4_SHIFT)               /* 0x00000800 */
#define CRU_SOFTRST_CON18_HRESETN_DSM_SHIFT                (12U)
#define CRU_SOFTRST_CON18_HRESETN_DSM_MASK                 (0x1U << CRU_SOFTRST_CON18_HRESETN_DSM_SHIFT)                /* 0x00001000 */
#define CRU_SOFTRST_CON18_MRESETN_DSM_SHIFT                (13U)
#define CRU_SOFTRST_CON18_MRESETN_DSM_MASK                 (0x1U << CRU_SOFTRST_CON18_MRESETN_DSM_SHIFT)                /* 0x00002000 */
#define CRU_SOFTRST_CON18_PRESETN_AUDIO_ADC_SHIFT          (14U)
#define CRU_SOFTRST_CON18_PRESETN_AUDIO_ADC_MASK           (0x1U << CRU_SOFTRST_CON18_PRESETN_AUDIO_ADC_SHIFT)          /* 0x00004000 */
#define CRU_SOFTRST_CON18_MRESETN_AUDIO_ADC_SHIFT          (15U)
#define CRU_SOFTRST_CON18_MRESETN_AUDIO_ADC_MASK           (0x1U << CRU_SOFTRST_CON18_MRESETN_AUDIO_ADC_SHIFT)          /* 0x00008000 */
/* SOFTRST_CON19 */
#define CRU_SOFTRST_CON19_OFFSET                           (0xA4CU)
#define CRU_SOFTRST_CON19_PRESETN_SARADC_SHIFT             (0U)
#define CRU_SOFTRST_CON19_PRESETN_SARADC_MASK              (0x1U << CRU_SOFTRST_CON19_PRESETN_SARADC_SHIFT)             /* 0x00000001 */
#define CRU_SOFTRST_CON19_RESETN_SARADC_SHIFT              (1U)
#define CRU_SOFTRST_CON19_RESETN_SARADC_MASK               (0x1U << CRU_SOFTRST_CON19_RESETN_SARADC_SHIFT)              /* 0x00000002 */
#define CRU_SOFTRST_CON19_RESETN_SARADC_PHY_SHIFT          (2U)
#define CRU_SOFTRST_CON19_RESETN_SARADC_PHY_MASK           (0x1U << CRU_SOFTRST_CON19_RESETN_SARADC_PHY_SHIFT)          /* 0x00000004 */
#define CRU_SOFTRST_CON19_PRESETN_OTPC_NS_SHIFT            (3U)
#define CRU_SOFTRST_CON19_PRESETN_OTPC_NS_MASK             (0x1U << CRU_SOFTRST_CON19_PRESETN_OTPC_NS_SHIFT)            /* 0x00000008 */
#define CRU_SOFTRST_CON19_RESETN_SBPI_OTPC_NS_SHIFT        (4U)
#define CRU_SOFTRST_CON19_RESETN_SBPI_OTPC_NS_MASK         (0x1U << CRU_SOFTRST_CON19_RESETN_SBPI_OTPC_NS_SHIFT)        /* 0x00000010 */
#define CRU_SOFTRST_CON19_RESETN_USER_OTPC_NS_SHIFT        (5U)
#define CRU_SOFTRST_CON19_RESETN_USER_OTPC_NS_MASK         (0x1U << CRU_SOFTRST_CON19_RESETN_USER_OTPC_NS_SHIFT)        /* 0x00000020 */
#define CRU_SOFTRST_CON19_PRESETN_UART5_SHIFT              (6U)
#define CRU_SOFTRST_CON19_PRESETN_UART5_MASK               (0x1U << CRU_SOFTRST_CON19_PRESETN_UART5_SHIFT)              /* 0x00000040 */
#define CRU_SOFTRST_CON19_RESETN_UART5_SHIFT               (7U)
#define CRU_SOFTRST_CON19_RESETN_UART5_MASK                (0x1U << CRU_SOFTRST_CON19_RESETN_UART5_SHIFT)               /* 0x00000080 */
#define CRU_SOFTRST_CON19_PRESETN_GPIO234_IOC_SHIFT        (8U)
#define CRU_SOFTRST_CON19_PRESETN_GPIO234_IOC_MASK         (0x1U << CRU_SOFTRST_CON19_PRESETN_GPIO234_IOC_SHIFT)        /* 0x00000100 */
/* SOFTRST_CON21 */
#define CRU_SOFTRST_CON21_OFFSET                           (0xA54U)
#define CRU_SOFTRST_CON21_ARESETN_VIO_BIU_SHIFT            (3U)
#define CRU_SOFTRST_CON21_ARESETN_VIO_BIU_MASK             (0x1U << CRU_SOFTRST_CON21_ARESETN_VIO_BIU_SHIFT)            /* 0x00000008 */
#define CRU_SOFTRST_CON21_HRESETN_VIO_BIU_SHIFT            (4U)
#define CRU_SOFTRST_CON21_HRESETN_VIO_BIU_MASK             (0x1U << CRU_SOFTRST_CON21_HRESETN_VIO_BIU_SHIFT)            /* 0x00000010 */
#define CRU_SOFTRST_CON21_HRESETN_RGA_SHIFT                (6U)
#define CRU_SOFTRST_CON21_HRESETN_RGA_MASK                 (0x1U << CRU_SOFTRST_CON21_HRESETN_RGA_SHIFT)                /* 0x00000040 */
#define CRU_SOFTRST_CON21_ARESETN_RGA_SHIFT                (7U)
#define CRU_SOFTRST_CON21_ARESETN_RGA_MASK                 (0x1U << CRU_SOFTRST_CON21_ARESETN_RGA_SHIFT)                /* 0x00000080 */
#define CRU_SOFTRST_CON21_RESETN_CORE_RGA_SHIFT            (8U)
#define CRU_SOFTRST_CON21_RESETN_CORE_RGA_MASK             (0x1U << CRU_SOFTRST_CON21_RESETN_CORE_RGA_SHIFT)            /* 0x00000100 */
#define CRU_SOFTRST_CON21_ARESETN_VOP_SHIFT                (9U)
#define CRU_SOFTRST_CON21_ARESETN_VOP_MASK                 (0x1U << CRU_SOFTRST_CON21_ARESETN_VOP_SHIFT)                /* 0x00000200 */
#define CRU_SOFTRST_CON21_HRESETN_VOP_SHIFT                (10U)
#define CRU_SOFTRST_CON21_HRESETN_VOP_MASK                 (0x1U << CRU_SOFTRST_CON21_HRESETN_VOP_SHIFT)                /* 0x00000400 */
#define CRU_SOFTRST_CON21_RESETN_VOP_SHIFT                 (11U)
#define CRU_SOFTRST_CON21_RESETN_VOP_MASK                  (0x1U << CRU_SOFTRST_CON21_RESETN_VOP_SHIFT)                 /* 0x00000800 */
#define CRU_SOFTRST_CON21_PRESETN_DPHY_SHIFT               (12U)
#define CRU_SOFTRST_CON21_PRESETN_DPHY_MASK                (0x1U << CRU_SOFTRST_CON21_PRESETN_DPHY_SHIFT)               /* 0x00001000 */
#define CRU_SOFTRST_CON21_PRESETN_DSI_HOST_SHIFT           (13U)
#define CRU_SOFTRST_CON21_PRESETN_DSI_HOST_MASK            (0x1U << CRU_SOFTRST_CON21_PRESETN_DSI_HOST_SHIFT)           /* 0x00002000 */
#define CRU_SOFTRST_CON21_PRESETN_TSADC_SHIFT              (14U)
#define CRU_SOFTRST_CON21_PRESETN_TSADC_MASK               (0x1U << CRU_SOFTRST_CON21_PRESETN_TSADC_SHIFT)              /* 0x00004000 */
#define CRU_SOFTRST_CON21_RESETN_TSADC_SHIFT               (15U)
#define CRU_SOFTRST_CON21_RESETN_TSADC_MASK                (0x1U << CRU_SOFTRST_CON21_RESETN_TSADC_SHIFT)               /* 0x00008000 */
/* SOFTRST_CON22 */
#define CRU_SOFTRST_CON22_OFFSET                           (0xA58U)
#define CRU_SOFTRST_CON22_PRESETN_GPIO1_IOC_SHIFT          (1U)
#define CRU_SOFTRST_CON22_PRESETN_GPIO1_IOC_MASK           (0x1U << CRU_SOFTRST_CON22_PRESETN_GPIO1_IOC_SHIFT)          /* 0x00000002 */
/* GLB_CNT_TH */
#define CRU_GLB_CNT_TH_OFFSET                              (0xC00U)
#define CRU_GLB_CNT_TH_GLOBAL_RESET_COUNTER_THRESHOLD_SHIFT (0U)
#define CRU_GLB_CNT_TH_GLOBAL_RESET_COUNTER_THRESHOLD_MASK (0xFFFFFFFU << CRU_GLB_CNT_TH_GLOBAL_RESET_COUNTER_THRESHOLD_SHIFT) /* 0x0FFFFFFF */
/* GLB_RST_ST */
#define CRU_GLB_RST_ST_OFFSET                              (0xC04U)
#define CRU_GLB_RST_ST_FST_GLB_RST_ST_SHIFT                (0U)
#define CRU_GLB_RST_ST_FST_GLB_RST_ST_MASK                 (0x1U << CRU_GLB_RST_ST_FST_GLB_RST_ST_SHIFT)                /* 0x00000001 */
#define CRU_GLB_RST_ST_SND_GLB_RST_ST_SHIFT                (1U)
#define CRU_GLB_RST_ST_SND_GLB_RST_ST_MASK                 (0x1U << CRU_GLB_RST_ST_SND_GLB_RST_ST_SHIFT)                /* 0x00000002 */
#define CRU_GLB_RST_ST_FST_GLB_TSADC_RST_ST_SHIFT          (2U)
#define CRU_GLB_RST_ST_FST_GLB_TSADC_RST_ST_MASK           (0x1U << CRU_GLB_RST_ST_FST_GLB_TSADC_RST_ST_SHIFT)          /* 0x00000004 */
#define CRU_GLB_RST_ST_SND_GLB_TSADC_RST_ST_SHIFT          (3U)
#define CRU_GLB_RST_ST_SND_GLB_TSADC_RST_ST_MASK           (0x1U << CRU_GLB_RST_ST_SND_GLB_TSADC_RST_ST_SHIFT)          /* 0x00000008 */
#define CRU_GLB_RST_ST_FST_GLB_WDT_RST_ST_SHIFT            (4U)
#define CRU_GLB_RST_ST_FST_GLB_WDT_RST_ST_MASK             (0x1U << CRU_GLB_RST_ST_FST_GLB_WDT_RST_ST_SHIFT)            /* 0x00000010 */
#define CRU_GLB_RST_ST_SND_GLB_WDT_RST_ST_SHIFT            (5U)
#define CRU_GLB_RST_ST_SND_GLB_WDT_RST_ST_MASK             (0x1U << CRU_GLB_RST_ST_SND_GLB_WDT_RST_ST_SHIFT)            /* 0x00000020 */
#define CRU_GLB_RST_ST_GLBRST_WDT0_RST_ST_SHIFT            (6U)
#define CRU_GLB_RST_ST_GLBRST_WDT0_RST_ST_MASK             (0x1U << CRU_GLB_RST_ST_GLBRST_WDT0_RST_ST_SHIFT)            /* 0x00000040 */
#define CRU_GLB_RST_ST_GLBRST_WDT1_RST_ST_SHIFT            (7U)
#define CRU_GLB_RST_ST_GLBRST_WDT1_RST_ST_MASK             (0x1U << CRU_GLB_RST_ST_GLBRST_WDT1_RST_ST_SHIFT)            /* 0x00000080 */
#define CRU_GLB_RST_ST_WDT0_S_SRC_ST_SHIFT                 (11U)
#define CRU_GLB_RST_ST_WDT0_S_SRC_ST_MASK                  (0x1U << CRU_GLB_RST_ST_WDT0_S_SRC_ST_SHIFT)                 /* 0x00000800 */
#define CRU_GLB_RST_ST_WDT1_S_SRC_ST_SHIFT                 (12U)
#define CRU_GLB_RST_ST_WDT1_S_SRC_ST_MASK                  (0x1U << CRU_GLB_RST_ST_WDT1_S_SRC_ST_SHIFT)                 /* 0x00001000 */
/* GLB_SRST_FST */
#define CRU_GLB_SRST_FST_VALUE_OFFSET                      (0xC08U)
#define CRU_GLB_SRST_FST_VALUE_GLB_SRST_FST_SHIFT          (0U)
#define CRU_GLB_SRST_FST_VALUE_GLB_SRST_FST_MASK           (0xFFFFU << CRU_GLB_SRST_FST_VALUE_GLB_SRST_FST_SHIFT)       /* 0x0000FFFF */
/* GLB_SRST_SND */
#define CRU_GLB_SRST_SND_VALUE_OFFSET                      (0xC0CU)
#define CRU_GLB_SRST_SND_VALUE_GLB_SRST_SND_SHIFT          (0U)
#define CRU_GLB_SRST_SND_VALUE_GLB_SRST_SND_MASK           (0xFFFFU << CRU_GLB_SRST_SND_VALUE_GLB_SRST_SND_SHIFT)       /* 0x0000FFFF */
/* GLB_RST_CON */
#define CRU_GLB_RST_CON_OFFSET                             (0xC10U)
#define CRU_GLB_RST_CON_TSADC_GLB_SRST_CTRL_SHIFT          (0U)
#define CRU_GLB_RST_CON_TSADC_GLB_SRST_CTRL_MASK           (0x1U << CRU_GLB_RST_CON_TSADC_GLB_SRST_CTRL_SHIFT)          /* 0x00000001 */
#define CRU_GLB_RST_CON_TSADC_GLB_SRST_EN_SHIFT            (1U)
#define CRU_GLB_RST_CON_TSADC_GLB_SRST_EN_MASK             (0x1U << CRU_GLB_RST_CON_TSADC_GLB_SRST_EN_SHIFT)            /* 0x00000002 */
#define CRU_GLB_RST_CON_PMU_SRST_GLB_CTRL_SHIFT            (2U)
#define CRU_GLB_RST_CON_PMU_SRST_GLB_CTRL_MASK             (0x1U << CRU_GLB_RST_CON_PMU_SRST_GLB_CTRL_SHIFT)            /* 0x00000004 */
#define CRU_GLB_RST_CON_PMU_SRST_GLB_EN_SHIFT              (3U)
#define CRU_GLB_RST_CON_PMU_SRST_GLB_EN_MASK               (0x1U << CRU_GLB_RST_CON_PMU_SRST_GLB_EN_SHIFT)              /* 0x00000008 */
#define CRU_GLB_RST_CON_PMU_SRST_WDT_EN_SHIFT              (4U)
#define CRU_GLB_RST_CON_PMU_SRST_WDT_EN_MASK               (0x1U << CRU_GLB_RST_CON_PMU_SRST_WDT_EN_SHIFT)              /* 0x00000010 */
#define CRU_GLB_RST_CON_TSADC_WDT_GLB_EXPEND_EN_SHIFT      (5U)
#define CRU_GLB_RST_CON_TSADC_WDT_GLB_EXPEND_EN_MASK       (0x1U << CRU_GLB_RST_CON_TSADC_WDT_GLB_EXPEND_EN_SHIFT)      /* 0x00000020 */
#define CRU_GLB_RST_CON_CRU_WDT0_EN_SHIFT                  (6U)
#define CRU_GLB_RST_CON_CRU_WDT0_EN_MASK                   (0x1U << CRU_GLB_RST_CON_CRU_WDT0_EN_SHIFT)                  /* 0x00000040 */
#define CRU_GLB_RST_CON_CRU_WDT1_EN_SHIFT                  (7U)
#define CRU_GLB_RST_CON_CRU_WDT1_EN_MASK                   (0x1U << CRU_GLB_RST_CON_CRU_WDT1_EN_SHIFT)                  /* 0x00000080 */
#define CRU_GLB_RST_CON_CRU_WDT0_CON_SHIFT                 (11U)
#define CRU_GLB_RST_CON_CRU_WDT0_CON_MASK                  (0x1U << CRU_GLB_RST_CON_CRU_WDT0_CON_SHIFT)                 /* 0x00000800 */
#define CRU_GLB_RST_CON_CRU_WDT1_CON_SHIFT                 (12U)
#define CRU_GLB_RST_CON_CRU_WDT1_CON_MASK                  (0x1U << CRU_GLB_RST_CON_CRU_WDT1_CON_SHIFT)                 /* 0x00001000 */
/* COREWFI_CON */
#define CRU_COREWFI_CON_OFFSET                             (0xC2CU)
#define CRU_COREWFI_CON_CORE_SRST_WFIEN_SHIFT              (0U)
#define CRU_COREWFI_CON_CORE_SRST_WFIEN_MASK               (0x1U << CRU_COREWFI_CON_CORE_SRST_WFIEN_SHIFT)              /* 0x00000001 */
#define CRU_COREWFI_CON_COREPO_SRST_WFIEN_SHIFT            (1U)
#define CRU_COREWFI_CON_COREPO_SRST_WFIEN_MASK             (0x1U << CRU_COREWFI_CON_COREPO_SRST_WFIEN_SHIFT)            /* 0x00000002 */
/******************************************SCRU******************************************/
/* CLKSEL_CON00 */
#define SCRU_CLKSEL_CON00_OFFSET                           (0x10U)
#define SCRU_CLKSEL_CON00_CLK_CORE_CRYPTO_DIV_SHIFT        (0U)
#define SCRU_CLKSEL_CON00_CLK_CORE_CRYPTO_DIV_MASK         (0x1FU << SCRU_CLKSEL_CON00_CLK_CORE_CRYPTO_DIV_SHIFT)       /* 0x0000001F */
#define SCRU_CLKSEL_CON00_CLK_CORE_CRYPTO_SEL_SHIFT        (5U)
#define SCRU_CLKSEL_CON00_CLK_CORE_CRYPTO_SEL_MASK         (0x3U << SCRU_CLKSEL_CON00_CLK_CORE_CRYPTO_SEL_SHIFT)        /* 0x00000060 */
#define SCRU_CLKSEL_CON00_CLK_PKA_CRYPTO_DIV_SHIFT         (7U)
#define SCRU_CLKSEL_CON00_CLK_PKA_CRYPTO_DIV_MASK          (0x1FU << SCRU_CLKSEL_CON00_CLK_PKA_CRYPTO_DIV_SHIFT)        /* 0x00000F80 */
#define SCRU_CLKSEL_CON00_CLK_PKA_CRYPTO_SEL_SHIFT         (12U)
#define SCRU_CLKSEL_CON00_CLK_PKA_CRYPTO_SEL_MASK          (0x3U << SCRU_CLKSEL_CON00_CLK_PKA_CRYPTO_SEL_SHIFT)         /* 0x00003000 */
/* CLKSEL_CON01 */
#define SCRU_CLKSEL_CON01_OFFSET                           (0x14U)
#define SCRU_CLKSEL_CON01_CLK_TIMER1_CH0_SEL_SHIFT         (0U)
#define SCRU_CLKSEL_CON01_CLK_TIMER1_CH0_SEL_MASK          (0x7U << SCRU_CLKSEL_CON01_CLK_TIMER1_CH0_SEL_SHIFT)         /* 0x00000007 */
#define SCRU_CLKSEL_CON01_CLK_TIMER1_CH1_SEL_SHIFT         (3U)
#define SCRU_CLKSEL_CON01_CLK_TIMER1_CH1_SEL_MASK          (0x7U << SCRU_CLKSEL_CON01_CLK_TIMER1_CH1_SEL_SHIFT)         /* 0x00000038 */
#define SCRU_CLKSEL_CON01_CLK_TIMER1_CH2_SEL_SHIFT         (6U)
#define SCRU_CLKSEL_CON01_CLK_TIMER1_CH2_SEL_MASK          (0x7U << SCRU_CLKSEL_CON01_CLK_TIMER1_CH2_SEL_SHIFT)         /* 0x000001C0 */
#define SCRU_CLKSEL_CON01_CLK_TIMER1_CH3_SEL_SHIFT         (9U)
#define SCRU_CLKSEL_CON01_CLK_TIMER1_CH3_SEL_MASK          (0x7U << SCRU_CLKSEL_CON01_CLK_TIMER1_CH3_SEL_SHIFT)         /* 0x00000E00 */
#define SCRU_CLKSEL_CON01_CLK_TIMER1_CH4_SEL_SHIFT         (12U)
#define SCRU_CLKSEL_CON01_CLK_TIMER1_CH4_SEL_MASK          (0x7U << SCRU_CLKSEL_CON01_CLK_TIMER1_CH4_SEL_SHIFT)         /* 0x00007000 */
/* CLKSEL_CON02 */
#define SCRU_CLKSEL_CON02_OFFSET                           (0x18U)
#define SCRU_CLKSEL_CON02_CLK_TIMER1_CH5_SEL_SHIFT         (0U)
#define SCRU_CLKSEL_CON02_CLK_TIMER1_CH5_SEL_MASK          (0x7U << SCRU_CLKSEL_CON02_CLK_TIMER1_CH5_SEL_SHIFT)         /* 0x00000007 */
/* GATE_CON00 */
#define SCRU_GATE_CON00_OFFSET                             (0x40U)
#define SCRU_GATE_CON00_PCLK_OTPC_S_EN_SHIFT               (0U)
#define SCRU_GATE_CON00_PCLK_OTPC_S_EN_MASK                (0x1U << SCRU_GATE_CON00_PCLK_OTPC_S_EN_SHIFT)               /* 0x00000001 */
#define SCRU_GATE_CON00_CLK_SBPI_OTPC_S_EN_SHIFT           (1U)
#define SCRU_GATE_CON00_CLK_SBPI_OTPC_S_EN_MASK            (0x1U << SCRU_GATE_CON00_CLK_SBPI_OTPC_S_EN_SHIFT)           /* 0x00000002 */
#define SCRU_GATE_CON00_PCLK_OTP_MASK_EN_SHIFT             (3U)
#define SCRU_GATE_CON00_PCLK_OTP_MASK_EN_MASK              (0x1U << SCRU_GATE_CON00_PCLK_OTP_MASK_EN_SHIFT)             /* 0x00000008 */
#define SCRU_GATE_CON00_PCLK_KEYREADER_EN_SHIFT            (5U)
#define SCRU_GATE_CON00_PCLK_KEYREADER_EN_MASK             (0x1U << SCRU_GATE_CON00_PCLK_KEYREADER_EN_SHIFT)            /* 0x00000020 */
/* GATE_CON02 */
#define SCRU_GATE_CON02_OFFSET                             (0x48U)
#define SCRU_GATE_CON02_HCLK_BOOTROM_EN_SHIFT              (0U)
#define SCRU_GATE_CON02_HCLK_BOOTROM_EN_MASK               (0x1U << SCRU_GATE_CON02_HCLK_BOOTROM_EN_SHIFT)              /* 0x00000001 */
#define SCRU_GATE_CON02_PCLK_DDR_SERVICE_EN_SHIFT          (1U)
#define SCRU_GATE_CON02_PCLK_DDR_SERVICE_EN_MASK           (0x1U << SCRU_GATE_CON02_PCLK_DDR_SERVICE_EN_SHIFT)          /* 0x00000002 */
#define SCRU_GATE_CON02_HCLK_CRYPTO_S_EN_SHIFT             (2U)
#define SCRU_GATE_CON02_HCLK_CRYPTO_S_EN_MASK              (0x1U << SCRU_GATE_CON02_HCLK_CRYPTO_S_EN_SHIFT)             /* 0x00000004 */
#define SCRU_GATE_CON02_HCLK_KEYLAD_EN_SHIFT               (3U)
#define SCRU_GATE_CON02_HCLK_KEYLAD_EN_MASK                (0x1U << SCRU_GATE_CON02_HCLK_KEYLAD_EN_SHIFT)               /* 0x00000008 */
#define SCRU_GATE_CON02_CLK_CORE_CRYPTO_S_EN_SHIFT         (4U)
#define SCRU_GATE_CON02_CLK_CORE_CRYPTO_S_EN_MASK          (0x1U << SCRU_GATE_CON02_CLK_CORE_CRYPTO_S_EN_SHIFT)         /* 0x00000010 */
#define SCRU_GATE_CON02_CLK_PKA_CRYPTO_S_EN_SHIFT          (5U)
#define SCRU_GATE_CON02_CLK_PKA_CRYPTO_S_EN_MASK           (0x1U << SCRU_GATE_CON02_CLK_PKA_CRYPTO_S_EN_SHIFT)          /* 0x00000020 */
#define SCRU_GATE_CON02_ACLK_CRYPTO_S_EN_SHIFT             (6U)
#define SCRU_GATE_CON02_ACLK_CRYPTO_S_EN_MASK              (0x1U << SCRU_GATE_CON02_ACLK_CRYPTO_S_EN_SHIFT)             /* 0x00000040 */
#define SCRU_GATE_CON02_HCLK_RNG_S_EN_SHIFT                (7U)
#define SCRU_GATE_CON02_HCLK_RNG_S_EN_MASK                 (0x1U << SCRU_GATE_CON02_HCLK_RNG_S_EN_SHIFT)                /* 0x00000080 */
#define SCRU_GATE_CON02_PCLK_BUS_SGRF_EN_SHIFT             (8U)
#define SCRU_GATE_CON02_PCLK_BUS_SGRF_EN_MASK              (0x1U << SCRU_GATE_CON02_PCLK_BUS_SGRF_EN_SHIFT)             /* 0x00000100 */
#define SCRU_GATE_CON02_PCLK_TIMER1_EN_SHIFT               (9U)
#define SCRU_GATE_CON02_PCLK_TIMER1_EN_MASK                (0x1U << SCRU_GATE_CON02_PCLK_TIMER1_EN_SHIFT)               /* 0x00000200 */
#define SCRU_GATE_CON02_CLK_TIMER1_CH0_EN_SHIFT            (10U)
#define SCRU_GATE_CON02_CLK_TIMER1_CH0_EN_MASK             (0x1U << SCRU_GATE_CON02_CLK_TIMER1_CH0_EN_SHIFT)            /* 0x00000400 */
#define SCRU_GATE_CON02_CLK_TIMER1_CH1_EN_SHIFT            (11U)
#define SCRU_GATE_CON02_CLK_TIMER1_CH1_EN_MASK             (0x1U << SCRU_GATE_CON02_CLK_TIMER1_CH1_EN_SHIFT)            /* 0x00000800 */
#define SCRU_GATE_CON02_CLK_TIMER1_CH2_EN_SHIFT            (12U)
#define SCRU_GATE_CON02_CLK_TIMER1_CH2_EN_MASK             (0x1U << SCRU_GATE_CON02_CLK_TIMER1_CH2_EN_SHIFT)            /* 0x00001000 */
#define SCRU_GATE_CON02_CLK_TIMER1_CH3_EN_SHIFT            (13U)
#define SCRU_GATE_CON02_CLK_TIMER1_CH3_EN_MASK             (0x1U << SCRU_GATE_CON02_CLK_TIMER1_CH3_EN_SHIFT)            /* 0x00002000 */
#define SCRU_GATE_CON02_CLK_TIMER1_CH4_EN_SHIFT            (14U)
#define SCRU_GATE_CON02_CLK_TIMER1_CH4_EN_MASK             (0x1U << SCRU_GATE_CON02_CLK_TIMER1_CH4_EN_SHIFT)            /* 0x00004000 */
#define SCRU_GATE_CON02_CLK_TIMER1_CH5_EN_SHIFT            (15U)
#define SCRU_GATE_CON02_CLK_TIMER1_CH5_EN_MASK             (0x1U << SCRU_GATE_CON02_CLK_TIMER1_CH5_EN_SHIFT)            /* 0x00008000 */
/* SOFTRST_CON00 */
#define SCRU_SOFTRST_CON00_OFFSET                          (0x80U)
#define SCRU_SOFTRST_CON00_PRESETN_OTPC_S_SHIFT            (0U)
#define SCRU_SOFTRST_CON00_PRESETN_OTPC_S_MASK             (0x1U << SCRU_SOFTRST_CON00_PRESETN_OTPC_S_SHIFT)            /* 0x00000001 */
#define SCRU_SOFTRST_CON00_RESETN_SBPI_OTPC_S_SHIFT        (1U)
#define SCRU_SOFTRST_CON00_RESETN_SBPI_OTPC_S_MASK         (0x1U << SCRU_SOFTRST_CON00_RESETN_SBPI_OTPC_S_SHIFT)        /* 0x00000002 */
#define SCRU_SOFTRST_CON00_RESETN_USER_OTPC_S_SHIFT        (2U)
#define SCRU_SOFTRST_CON00_RESETN_USER_OTPC_S_MASK         (0x1U << SCRU_SOFTRST_CON00_RESETN_USER_OTPC_S_SHIFT)        /* 0x00000004 */
#define SCRU_SOFTRST_CON00_PRESETN_OTP_MASK_SHIFT          (3U)
#define SCRU_SOFTRST_CON00_PRESETN_OTP_MASK_MASK           (0x1U << SCRU_SOFTRST_CON00_PRESETN_OTP_MASK_SHIFT)          /* 0x00000008 */
/* SOFTRST_CON02 */
#define SCRU_SOFTRST_CON02_OFFSET                          (0x88U)
#define SCRU_SOFTRST_CON02_HRESETN_BOOTROM_SHIFT           (0U)
#define SCRU_SOFTRST_CON02_HRESETN_BOOTROM_MASK            (0x1U << SCRU_SOFTRST_CON02_HRESETN_BOOTROM_SHIFT)           /* 0x00000001 */
#define SCRU_SOFTRST_CON02_PRESETN_DDR_SERVICE_SHIFT       (1U)
#define SCRU_SOFTRST_CON02_PRESETN_DDR_SERVICE_MASK        (0x1U << SCRU_SOFTRST_CON02_PRESETN_DDR_SERVICE_SHIFT)       /* 0x00000002 */
#define SCRU_SOFTRST_CON02_HRESETN_CRYPTO_S_SHIFT          (2U)
#define SCRU_SOFTRST_CON02_HRESETN_CRYPTO_S_MASK           (0x1U << SCRU_SOFTRST_CON02_HRESETN_CRYPTO_S_SHIFT)          /* 0x00000004 */
#define SCRU_SOFTRST_CON02_HRESETN_KEYLAD_SHIFT            (3U)
#define SCRU_SOFTRST_CON02_HRESETN_KEYLAD_MASK             (0x1U << SCRU_SOFTRST_CON02_HRESETN_KEYLAD_SHIFT)            /* 0x00000008 */
#define SCRU_SOFTRST_CON02_RESETN_CORE_CRYPTO_SHIFT        (4U)
#define SCRU_SOFTRST_CON02_RESETN_CORE_CRYPTO_MASK         (0x1U << SCRU_SOFTRST_CON02_RESETN_CORE_CRYPTO_SHIFT)        /* 0x00000010 */
#define SCRU_SOFTRST_CON02_RESETN_PKA_CRYPTO_SHIFT         (5U)
#define SCRU_SOFTRST_CON02_RESETN_PKA_CRYPTO_MASK          (0x1U << SCRU_SOFTRST_CON02_RESETN_PKA_CRYPTO_SHIFT)         /* 0x00000020 */
#define SCRU_SOFTRST_CON02_ARESETN_CRYPTO_SHIFT            (6U)
#define SCRU_SOFTRST_CON02_ARESETN_CRYPTO_MASK             (0x1U << SCRU_SOFTRST_CON02_ARESETN_CRYPTO_SHIFT)            /* 0x00000040 */
#define SCRU_SOFTRST_CON02_HRESETN_RNG_S_SHIFT             (7U)
#define SCRU_SOFTRST_CON02_HRESETN_RNG_S_MASK              (0x1U << SCRU_SOFTRST_CON02_HRESETN_RNG_S_SHIFT)             /* 0x00000080 */
#define SCRU_SOFTRST_CON02_PRESETN_TIMER1_SHIFT            (9U)
#define SCRU_SOFTRST_CON02_PRESETN_TIMER1_MASK             (0x1U << SCRU_SOFTRST_CON02_PRESETN_TIMER1_SHIFT)            /* 0x00000200 */
#define SCRU_SOFTRST_CON02_RESETN_TIMER1_CH0_SHIFT         (10U)
#define SCRU_SOFTRST_CON02_RESETN_TIMER1_CH0_MASK          (0x1U << SCRU_SOFTRST_CON02_RESETN_TIMER1_CH0_SHIFT)         /* 0x00000400 */
#define SCRU_SOFTRST_CON02_RESETN_TIMER1_CH1_SHIFT         (11U)
#define SCRU_SOFTRST_CON02_RESETN_TIMER1_CH1_MASK          (0x1U << SCRU_SOFTRST_CON02_RESETN_TIMER1_CH1_SHIFT)         /* 0x00000800 */
#define SCRU_SOFTRST_CON02_RESETN_TIMER1_CH2_SHIFT         (12U)
#define SCRU_SOFTRST_CON02_RESETN_TIMER1_CH2_MASK          (0x1U << SCRU_SOFTRST_CON02_RESETN_TIMER1_CH2_SHIFT)         /* 0x00001000 */
#define SCRU_SOFTRST_CON02_RESETN_TIMER1_CH3_SHIFT         (13U)
#define SCRU_SOFTRST_CON02_RESETN_TIMER1_CH3_MASK          (0x1U << SCRU_SOFTRST_CON02_RESETN_TIMER1_CH3_SHIFT)         /* 0x00002000 */
#define SCRU_SOFTRST_CON02_RESETN_TIMER1_CH4_SHIFT         (14U)
#define SCRU_SOFTRST_CON02_RESETN_TIMER1_CH4_MASK          (0x1U << SCRU_SOFTRST_CON02_RESETN_TIMER1_CH4_SHIFT)         /* 0x00004000 */
#define SCRU_SOFTRST_CON02_RESETN_TIMER1_CH5_SHIFT         (15U)
#define SCRU_SOFTRST_CON02_RESETN_TIMER1_CH5_MASK          (0x1U << SCRU_SOFTRST_CON02_RESETN_TIMER1_CH5_SHIFT)         /* 0x00008000 */
/****************************************CRU_PMU*****************************************/
/* GPLL_CON0 */
#define CRU_PMU_GPLL_CON0_OFFSET                           (0x0U)
#define CRU_PMU_GPLL_CON0_FBDIV_SHIFT                      (0U)
#define CRU_PMU_GPLL_CON0_FBDIV_MASK                       (0xFFFU << CRU_PMU_GPLL_CON0_FBDIV_SHIFT)                    /* 0x00000FFF */
#define CRU_PMU_GPLL_CON0_POSTDIV1_SHIFT                   (12U)
#define CRU_PMU_GPLL_CON0_POSTDIV1_MASK                    (0x7U << CRU_PMU_GPLL_CON0_POSTDIV1_SHIFT)                   /* 0x00007000 */
#define CRU_PMU_GPLL_CON0_BYPASS_SHIFT                     (15U)
#define CRU_PMU_GPLL_CON0_BYPASS_MASK                      (0x1U << CRU_PMU_GPLL_CON0_BYPASS_SHIFT)                     /* 0x00008000 */
/* GPLL_CON1 */
#define CRU_PMU_GPLL_CON1_OFFSET                           (0x4U)
#define CRU_PMU_GPLL_CON1_REFDIV_SHIFT                     (0U)
#define CRU_PMU_GPLL_CON1_REFDIV_MASK                      (0x3FU << CRU_PMU_GPLL_CON1_REFDIV_SHIFT)                    /* 0x0000003F */
#define CRU_PMU_GPLL_CON1_POSTDIV2_SHIFT                   (6U)
#define CRU_PMU_GPLL_CON1_POSTDIV2_MASK                    (0x7U << CRU_PMU_GPLL_CON1_POSTDIV2_SHIFT)                   /* 0x000001C0 */
#define CRU_PMU_GPLL_CON1_PLL_LOCK_SHIFT                   (10U)
#define CRU_PMU_GPLL_CON1_PLL_LOCK_MASK                    (0x1U << CRU_PMU_GPLL_CON1_PLL_LOCK_SHIFT)                   /* 0x00000400 */
#define CRU_PMU_GPLL_CON1_DSMPD_SHIFT                      (12U)
#define CRU_PMU_GPLL_CON1_DSMPD_MASK                       (0x1U << CRU_PMU_GPLL_CON1_DSMPD_SHIFT)                      /* 0x00001000 */
#define CRU_PMU_GPLL_CON1_PLLPD_SHIFT                      (13U)
#define CRU_PMU_GPLL_CON1_PLLPD_MASK                       (0x1U << CRU_PMU_GPLL_CON1_PLLPD_SHIFT)                      /* 0x00002000 */
/* GPLL_CON2 */
#define CRU_PMU_GPLL_CON2_OFFSET                           (0x8U)
#define CRU_PMU_GPLL_CON2_FRACDIV_SHIFT                    (0U)
#define CRU_PMU_GPLL_CON2_FRACDIV_MASK                     (0xFFFFFFU << CRU_PMU_GPLL_CON2_FRACDIV_SHIFT)               /* 0x00FFFFFF */
#define CRU_PMU_GPLL_CON2_DACPD_SHIFT                      (24U)
#define CRU_PMU_GPLL_CON2_DACPD_MASK                       (0x1U << CRU_PMU_GPLL_CON2_DACPD_SHIFT)                      /* 0x01000000 */
#define CRU_PMU_GPLL_CON2_FOUTPOSTDIVPD_SHIFT              (25U)
#define CRU_PMU_GPLL_CON2_FOUTPOSTDIVPD_MASK               (0x1U << CRU_PMU_GPLL_CON2_FOUTPOSTDIVPD_SHIFT)              /* 0x02000000 */
#define CRU_PMU_GPLL_CON2_FOUTVCOPD_SHIFT                  (26U)
#define CRU_PMU_GPLL_CON2_FOUTVCOPD_MASK                   (0x1U << CRU_PMU_GPLL_CON2_FOUTVCOPD_SHIFT)                  /* 0x04000000 */
#define CRU_PMU_GPLL_CON2_FOUT4PHASEPD_SHIFT               (27U)
#define CRU_PMU_GPLL_CON2_FOUT4PHASEPD_MASK                (0x1U << CRU_PMU_GPLL_CON2_FOUT4PHASEPD_SHIFT)               /* 0x08000000 */
/* GPLL_CON3 */
#define CRU_PMU_GPLL_CON3_OFFSET                           (0xCU)
#define CRU_PMU_GPLL_CON3_SSMOD_BP_SHIFT                   (0U)
#define CRU_PMU_GPLL_CON3_SSMOD_BP_MASK                    (0x1U << CRU_PMU_GPLL_CON3_SSMOD_BP_SHIFT)                   /* 0x00000001 */
#define CRU_PMU_GPLL_CON3_SSMOD_DISABLE_SSCG_SHIFT         (1U)
#define CRU_PMU_GPLL_CON3_SSMOD_DISABLE_SSCG_MASK          (0x1U << CRU_PMU_GPLL_CON3_SSMOD_DISABLE_SSCG_SHIFT)         /* 0x00000002 */
#define CRU_PMU_GPLL_CON3_SSMOD_RESET_SHIFT                (2U)
#define CRU_PMU_GPLL_CON3_SSMOD_RESET_MASK                 (0x1U << CRU_PMU_GPLL_CON3_SSMOD_RESET_SHIFT)                /* 0x00000004 */
#define CRU_PMU_GPLL_CON3_SSMOD_DOWNSPREAD_SHIFT           (3U)
#define CRU_PMU_GPLL_CON3_SSMOD_DOWNSPREAD_MASK            (0x1U << CRU_PMU_GPLL_CON3_SSMOD_DOWNSPREAD_SHIFT)           /* 0x00000008 */
#define CRU_PMU_GPLL_CON3_SSMOD_DIVVAL_SHIFT               (4U)
#define CRU_PMU_GPLL_CON3_SSMOD_DIVVAL_MASK                (0xFU << CRU_PMU_GPLL_CON3_SSMOD_DIVVAL_SHIFT)               /* 0x000000F0 */
#define CRU_PMU_GPLL_CON3_SSMOD_SPREAD_SHIFT               (8U)
#define CRU_PMU_GPLL_CON3_SSMOD_SPREAD_MASK                (0x1FU << CRU_PMU_GPLL_CON3_SSMOD_SPREAD_SHIFT)              /* 0x00001F00 */
/* GPLL_CON4 */
#define CRU_PMU_GPLL_CON4_OFFSET                           (0x10U)
#define CRU_PMU_GPLL_CON4_SSMOD_SEL_EXT_WAVE_SHIFT         (0U)
#define CRU_PMU_GPLL_CON4_SSMOD_SEL_EXT_WAVE_MASK          (0x1U << CRU_PMU_GPLL_CON4_SSMOD_SEL_EXT_WAVE_SHIFT)         /* 0x00000001 */
#define CRU_PMU_GPLL_CON4_SSMOD_EXT_MAXADDR_SHIFT          (8U)
#define CRU_PMU_GPLL_CON4_SSMOD_EXT_MAXADDR_MASK           (0xFFU << CRU_PMU_GPLL_CON4_SSMOD_EXT_MAXADDR_SHIFT)         /* 0x0000FF00 */
/* VPLL0_CON0 */
#define CRU_PMU_VPLL0_CON0_OFFSET                          (0x20U)
#define CRU_PMU_VPLL0_CON0_FBDIV_SHIFT                     (0U)
#define CRU_PMU_VPLL0_CON0_FBDIV_MASK                      (0xFFFU << CRU_PMU_VPLL0_CON0_FBDIV_SHIFT)                   /* 0x00000FFF */
#define CRU_PMU_VPLL0_CON0_POSTDIV1_SHIFT                  (12U)
#define CRU_PMU_VPLL0_CON0_POSTDIV1_MASK                   (0x7U << CRU_PMU_VPLL0_CON0_POSTDIV1_SHIFT)                  /* 0x00007000 */
#define CRU_PMU_VPLL0_CON0_BYPASS_SHIFT                    (15U)
#define CRU_PMU_VPLL0_CON0_BYPASS_MASK                     (0x1U << CRU_PMU_VPLL0_CON0_BYPASS_SHIFT)                    /* 0x00008000 */
/* VPLL0_CON1 */
#define CRU_PMU_VPLL0_CON1_OFFSET                          (0x24U)
#define CRU_PMU_VPLL0_CON1_REFDIV_SHIFT                    (0U)
#define CRU_PMU_VPLL0_CON1_REFDIV_MASK                     (0x3FU << CRU_PMU_VPLL0_CON1_REFDIV_SHIFT)                   /* 0x0000003F */
#define CRU_PMU_VPLL0_CON1_POSTDIV2_SHIFT                  (6U)
#define CRU_PMU_VPLL0_CON1_POSTDIV2_MASK                   (0x7U << CRU_PMU_VPLL0_CON1_POSTDIV2_SHIFT)                  /* 0x000001C0 */
#define CRU_PMU_VPLL0_CON1_PLL_LOCK_SHIFT                  (10U)
#define CRU_PMU_VPLL0_CON1_PLL_LOCK_MASK                   (0x1U << CRU_PMU_VPLL0_CON1_PLL_LOCK_SHIFT)                  /* 0x00000400 */
#define CRU_PMU_VPLL0_CON1_DSMPD_SHIFT                     (12U)
#define CRU_PMU_VPLL0_CON1_DSMPD_MASK                      (0x1U << CRU_PMU_VPLL0_CON1_DSMPD_SHIFT)                     /* 0x00001000 */
#define CRU_PMU_VPLL0_CON1_PLLPD_SHIFT                     (13U)
#define CRU_PMU_VPLL0_CON1_PLLPD_MASK                      (0x1U << CRU_PMU_VPLL0_CON1_PLLPD_SHIFT)                     /* 0x00002000 */
/* VPLL0_CON2 */
#define CRU_PMU_VPLL0_CON2_OFFSET                          (0x28U)
#define CRU_PMU_VPLL0_CON2_FRACDIV_SHIFT                   (0U)
#define CRU_PMU_VPLL0_CON2_FRACDIV_MASK                    (0xFFFFFFU << CRU_PMU_VPLL0_CON2_FRACDIV_SHIFT)              /* 0x00FFFFFF */
#define CRU_PMU_VPLL0_CON2_DACPD_SHIFT                     (24U)
#define CRU_PMU_VPLL0_CON2_DACPD_MASK                      (0x1U << CRU_PMU_VPLL0_CON2_DACPD_SHIFT)                     /* 0x01000000 */
#define CRU_PMU_VPLL0_CON2_FOUTPOSTDIVPD_SHIFT             (25U)
#define CRU_PMU_VPLL0_CON2_FOUTPOSTDIVPD_MASK              (0x1U << CRU_PMU_VPLL0_CON2_FOUTPOSTDIVPD_SHIFT)             /* 0x02000000 */
#define CRU_PMU_VPLL0_CON2_FOUTVCOPD_SHIFT                 (26U)
#define CRU_PMU_VPLL0_CON2_FOUTVCOPD_MASK                  (0x1U << CRU_PMU_VPLL0_CON2_FOUTVCOPD_SHIFT)                 /* 0x04000000 */
#define CRU_PMU_VPLL0_CON2_FOUT4PHASEPD_SHIFT              (27U)
#define CRU_PMU_VPLL0_CON2_FOUT4PHASEPD_MASK               (0x1U << CRU_PMU_VPLL0_CON2_FOUT4PHASEPD_SHIFT)              /* 0x08000000 */
/* VPLL0_CON3 */
#define CRU_PMU_VPLL0_CON3_OFFSET                          (0x2CU)
#define CRU_PMU_VPLL0_CON3_SSMOD_BP_SHIFT                  (0U)
#define CRU_PMU_VPLL0_CON3_SSMOD_BP_MASK                   (0x1U << CRU_PMU_VPLL0_CON3_SSMOD_BP_SHIFT)                  /* 0x00000001 */
#define CRU_PMU_VPLL0_CON3_SSMOD_DISABLE_SSCG_SHIFT        (1U)
#define CRU_PMU_VPLL0_CON3_SSMOD_DISABLE_SSCG_MASK         (0x1U << CRU_PMU_VPLL0_CON3_SSMOD_DISABLE_SSCG_SHIFT)        /* 0x00000002 */
#define CRU_PMU_VPLL0_CON3_SSMOD_RESET_SHIFT               (2U)
#define CRU_PMU_VPLL0_CON3_SSMOD_RESET_MASK                (0x1U << CRU_PMU_VPLL0_CON3_SSMOD_RESET_SHIFT)               /* 0x00000004 */
#define CRU_PMU_VPLL0_CON3_SSMOD_DOWNSPREAD_SHIFT          (3U)
#define CRU_PMU_VPLL0_CON3_SSMOD_DOWNSPREAD_MASK           (0x1U << CRU_PMU_VPLL0_CON3_SSMOD_DOWNSPREAD_SHIFT)          /* 0x00000008 */
#define CRU_PMU_VPLL0_CON3_SSMOD_DIVVAL_SHIFT              (4U)
#define CRU_PMU_VPLL0_CON3_SSMOD_DIVVAL_MASK               (0xFU << CRU_PMU_VPLL0_CON3_SSMOD_DIVVAL_SHIFT)              /* 0x000000F0 */
#define CRU_PMU_VPLL0_CON3_SSMOD_SPREAD_SHIFT              (8U)
#define CRU_PMU_VPLL0_CON3_SSMOD_SPREAD_MASK               (0x1FU << CRU_PMU_VPLL0_CON3_SSMOD_SPREAD_SHIFT)             /* 0x00001F00 */
/* VPLL0_CON4 */
#define CRU_PMU_VPLL0_CON4_OFFSET                          (0x30U)
#define CRU_PMU_VPLL0_CON4_SSMOD_SEL_EXT_WAVE_SHIFT        (0U)
#define CRU_PMU_VPLL0_CON4_SSMOD_SEL_EXT_WAVE_MASK         (0x1U << CRU_PMU_VPLL0_CON4_SSMOD_SEL_EXT_WAVE_SHIFT)        /* 0x00000001 */
#define CRU_PMU_VPLL0_CON4_SSMOD_EXT_MAXADDR_SHIFT         (8U)
#define CRU_PMU_VPLL0_CON4_SSMOD_EXT_MAXADDR_MASK          (0xFFU << CRU_PMU_VPLL0_CON4_SSMOD_EXT_MAXADDR_SHIFT)        /* 0x0000FF00 */
/* VPLL1_CON0 */
#define CRU_PMU_VPLL1_CON0_OFFSET                          (0x40U)
#define CRU_PMU_VPLL1_CON0_FBDIV_SHIFT                     (0U)
#define CRU_PMU_VPLL1_CON0_FBDIV_MASK                      (0xFFFU << CRU_PMU_VPLL1_CON0_FBDIV_SHIFT)                   /* 0x00000FFF */
#define CRU_PMU_VPLL1_CON0_POSTDIV1_SHIFT                  (12U)
#define CRU_PMU_VPLL1_CON0_POSTDIV1_MASK                   (0x7U << CRU_PMU_VPLL1_CON0_POSTDIV1_SHIFT)                  /* 0x00007000 */
#define CRU_PMU_VPLL1_CON0_BYPASS_SHIFT                    (15U)
#define CRU_PMU_VPLL1_CON0_BYPASS_MASK                     (0x1U << CRU_PMU_VPLL1_CON0_BYPASS_SHIFT)                    /* 0x00008000 */
/* VPLL1_CON1 */
#define CRU_PMU_VPLL1_CON1_OFFSET                          (0x44U)
#define CRU_PMU_VPLL1_CON1_REFDIV_SHIFT                    (0U)
#define CRU_PMU_VPLL1_CON1_REFDIV_MASK                     (0x3FU << CRU_PMU_VPLL1_CON1_REFDIV_SHIFT)                   /* 0x0000003F */
#define CRU_PMU_VPLL1_CON1_POSTDIV2_SHIFT                  (6U)
#define CRU_PMU_VPLL1_CON1_POSTDIV2_MASK                   (0x7U << CRU_PMU_VPLL1_CON1_POSTDIV2_SHIFT)                  /* 0x000001C0 */
#define CRU_PMU_VPLL1_CON1_PLL_LOCK_SHIFT                  (10U)
#define CRU_PMU_VPLL1_CON1_PLL_LOCK_MASK                   (0x1U << CRU_PMU_VPLL1_CON1_PLL_LOCK_SHIFT)                  /* 0x00000400 */
#define CRU_PMU_VPLL1_CON1_DSMPD_SHIFT                     (12U)
#define CRU_PMU_VPLL1_CON1_DSMPD_MASK                      (0x1U << CRU_PMU_VPLL1_CON1_DSMPD_SHIFT)                     /* 0x00001000 */
#define CRU_PMU_VPLL1_CON1_PLLPD_SHIFT                     (13U)
#define CRU_PMU_VPLL1_CON1_PLLPD_MASK                      (0x1U << CRU_PMU_VPLL1_CON1_PLLPD_SHIFT)                     /* 0x00002000 */
/* VPLL1_CON2 */
#define CRU_PMU_VPLL1_CON2_OFFSET                          (0x48U)
#define CRU_PMU_VPLL1_CON2_FRACDIV_SHIFT                   (0U)
#define CRU_PMU_VPLL1_CON2_FRACDIV_MASK                    (0xFFFFFFU << CRU_PMU_VPLL1_CON2_FRACDIV_SHIFT)              /* 0x00FFFFFF */
#define CRU_PMU_VPLL1_CON2_DACPD_SHIFT                     (24U)
#define CRU_PMU_VPLL1_CON2_DACPD_MASK                      (0x1U << CRU_PMU_VPLL1_CON2_DACPD_SHIFT)                     /* 0x01000000 */
#define CRU_PMU_VPLL1_CON2_FOUTPOSTDIVPD_SHIFT             (25U)
#define CRU_PMU_VPLL1_CON2_FOUTPOSTDIVPD_MASK              (0x1U << CRU_PMU_VPLL1_CON2_FOUTPOSTDIVPD_SHIFT)             /* 0x02000000 */
#define CRU_PMU_VPLL1_CON2_FOUTVCOPD_SHIFT                 (26U)
#define CRU_PMU_VPLL1_CON2_FOUTVCOPD_MASK                  (0x1U << CRU_PMU_VPLL1_CON2_FOUTVCOPD_SHIFT)                 /* 0x04000000 */
#define CRU_PMU_VPLL1_CON2_FOUT4PHASEPD_SHIFT              (27U)
#define CRU_PMU_VPLL1_CON2_FOUT4PHASEPD_MASK               (0x1U << CRU_PMU_VPLL1_CON2_FOUT4PHASEPD_SHIFT)              /* 0x08000000 */
/* VPLL1_CON3 */
#define CRU_PMU_VPLL1_CON3_OFFSET                          (0x4CU)
#define CRU_PMU_VPLL1_CON3_SSMOD_BP_SHIFT                  (0U)
#define CRU_PMU_VPLL1_CON3_SSMOD_BP_MASK                   (0x1U << CRU_PMU_VPLL1_CON3_SSMOD_BP_SHIFT)                  /* 0x00000001 */
#define CRU_PMU_VPLL1_CON3_SSMOD_DISABLE_SSCG_SHIFT        (1U)
#define CRU_PMU_VPLL1_CON3_SSMOD_DISABLE_SSCG_MASK         (0x1U << CRU_PMU_VPLL1_CON3_SSMOD_DISABLE_SSCG_SHIFT)        /* 0x00000002 */
#define CRU_PMU_VPLL1_CON3_SSMOD_RESET_SHIFT               (2U)
#define CRU_PMU_VPLL1_CON3_SSMOD_RESET_MASK                (0x1U << CRU_PMU_VPLL1_CON3_SSMOD_RESET_SHIFT)               /* 0x00000004 */
#define CRU_PMU_VPLL1_CON3_SSMOD_DOWNSPREAD_SHIFT          (3U)
#define CRU_PMU_VPLL1_CON3_SSMOD_DOWNSPREAD_MASK           (0x1U << CRU_PMU_VPLL1_CON3_SSMOD_DOWNSPREAD_SHIFT)          /* 0x00000008 */
#define CRU_PMU_VPLL1_CON3_SSMOD_DIVVAL_SHIFT              (4U)
#define CRU_PMU_VPLL1_CON3_SSMOD_DIVVAL_MASK               (0xFU << CRU_PMU_VPLL1_CON3_SSMOD_DIVVAL_SHIFT)              /* 0x000000F0 */
#define CRU_PMU_VPLL1_CON3_SSMOD_SPREAD_SHIFT              (8U)
#define CRU_PMU_VPLL1_CON3_SSMOD_SPREAD_MASK               (0x1FU << CRU_PMU_VPLL1_CON3_SSMOD_SPREAD_SHIFT)             /* 0x00001F00 */
/* VPLL1_CON4 */
#define CRU_PMU_VPLL1_CON4_OFFSET                          (0x50U)
#define CRU_PMU_VPLL1_CON4_SSMOD_SEL_EXT_WAVE_SHIFT        (0U)
#define CRU_PMU_VPLL1_CON4_SSMOD_SEL_EXT_WAVE_MASK         (0x1U << CRU_PMU_VPLL1_CON4_SSMOD_SEL_EXT_WAVE_SHIFT)        /* 0x00000001 */
#define CRU_PMU_VPLL1_CON4_SSMOD_EXT_MAXADDR_SHIFT         (8U)
#define CRU_PMU_VPLL1_CON4_SSMOD_EXT_MAXADDR_MASK          (0xFFU << CRU_PMU_VPLL1_CON4_SSMOD_EXT_MAXADDR_SHIFT)        /* 0x0000FF00 */
/* SSGTBL0_3 */
#define CRU_PMU_SSGTBL0_3_OFFSET                           (0x140U)
#define CRU_PMU_SSGTBL0_3_SSGTBL0_3_SHIFT                  (0U)
#define CRU_PMU_SSGTBL0_3_SSGTBL0_3_MASK                   (0xFFFFFFFFU << CRU_PMU_SSGTBL0_3_SSGTBL0_3_SHIFT)           /* 0xFFFFFFFF */
/* SSGTBL4_7 */
#define CRU_PMU_SSGTBL4_7_OFFSET                           (0x144U)
#define CRU_PMU_SSGTBL4_7_SSGTBL4_7_SHIFT                  (0U)
#define CRU_PMU_SSGTBL4_7_SSGTBL4_7_MASK                   (0xFFFFFFFFU << CRU_PMU_SSGTBL4_7_SSGTBL4_7_SHIFT)           /* 0xFFFFFFFF */
/* SSGTBL8_11 */
#define CRU_PMU_SSGTBL8_11_OFFSET                          (0x148U)
#define CRU_PMU_SSGTBL8_11_SSGTBL8_11_SHIFT                (0U)
#define CRU_PMU_SSGTBL8_11_SSGTBL8_11_MASK                 (0xFFFFFFFFU << CRU_PMU_SSGTBL8_11_SSGTBL8_11_SHIFT)         /* 0xFFFFFFFF */
/* SSGTBL12_15 */
#define CRU_PMU_SSGTBL12_15_OFFSET                         (0x14CU)
#define CRU_PMU_SSGTBL12_15_SSGTBL12_15_SHIFT              (0U)
#define CRU_PMU_SSGTBL12_15_SSGTBL12_15_MASK               (0xFFFFFFFFU << CRU_PMU_SSGTBL12_15_SSGTBL12_15_SHIFT)       /* 0xFFFFFFFF */
/* SSGTBL16_19 */
#define CRU_PMU_SSGTBL16_19_OFFSET                         (0x150U)
#define CRU_PMU_SSGTBL16_19_SSGTBL16_19_SHIFT              (0U)
#define CRU_PMU_SSGTBL16_19_SSGTBL16_19_MASK               (0xFFFFFFFFU << CRU_PMU_SSGTBL16_19_SSGTBL16_19_SHIFT)       /* 0xFFFFFFFF */
/* SSGTBL20_23 */
#define CRU_PMU_SSGTBL20_23_OFFSET                         (0x154U)
#define CRU_PMU_SSGTBL20_23_SSGTBL20_23_SHIFT              (0U)
#define CRU_PMU_SSGTBL20_23_SSGTBL20_23_MASK               (0xFFFFFFFFU << CRU_PMU_SSGTBL20_23_SSGTBL20_23_SHIFT)       /* 0xFFFFFFFF */
/* SSGTBL24_27 */
#define CRU_PMU_SSGTBL24_27_OFFSET                         (0x158U)
#define CRU_PMU_SSGTBL24_27_SSGTBL24_27_SHIFT              (0U)
#define CRU_PMU_SSGTBL24_27_SSGTBL24_27_MASK               (0xFFFFFFFFU << CRU_PMU_SSGTBL24_27_SSGTBL24_27_SHIFT)       /* 0xFFFFFFFF */
/* SSGTBL28_31 */
#define CRU_PMU_SSGTBL28_31_OFFSET                         (0x15CU)
#define CRU_PMU_SSGTBL28_31_SSGTBL28_31_SHIFT              (0U)
#define CRU_PMU_SSGTBL28_31_SSGTBL28_31_MASK               (0xFFFFFFFFU << CRU_PMU_SSGTBL28_31_SSGTBL28_31_SHIFT)       /* 0xFFFFFFFF */
/* SSGTBL32_35 */
#define CRU_PMU_SSGTBL32_35_OFFSET                         (0x160U)
#define CRU_PMU_SSGTBL32_35_SSGTBL32_35_SHIFT              (0U)
#define CRU_PMU_SSGTBL32_35_SSGTBL32_35_MASK               (0xFFFFFFFFU << CRU_PMU_SSGTBL32_35_SSGTBL32_35_SHIFT)       /* 0xFFFFFFFF */
/* SSGTBL36_39 */
#define CRU_PMU_SSGTBL36_39_OFFSET                         (0x164U)
#define CRU_PMU_SSGTBL36_39_SSGTBL36_39_SHIFT              (0U)
#define CRU_PMU_SSGTBL36_39_SSGTBL36_39_MASK               (0xFFFFFFFFU << CRU_PMU_SSGTBL36_39_SSGTBL36_39_SHIFT)       /* 0xFFFFFFFF */
/* SSGTBL40_43 */
#define CRU_PMU_SSGTBL40_43_OFFSET                         (0x168U)
#define CRU_PMU_SSGTBL40_43_SSGTBL40_43_SHIFT              (0U)
#define CRU_PMU_SSGTBL40_43_SSGTBL40_43_MASK               (0xFFFFFFFFU << CRU_PMU_SSGTBL40_43_SSGTBL40_43_SHIFT)       /* 0xFFFFFFFF */
/* SSGTBL44_47 */
#define CRU_PMU_SSGTBL44_47_OFFSET                         (0x16CU)
#define CRU_PMU_SSGTBL44_47_SSGTBL44_47_SHIFT              (0U)
#define CRU_PMU_SSGTBL44_47_SSGTBL44_47_MASK               (0xFFFFFFFFU << CRU_PMU_SSGTBL44_47_SSGTBL44_47_SHIFT)       /* 0xFFFFFFFF */
/* SSGTBL48_51 */
#define CRU_PMU_SSGTBL48_51_OFFSET                         (0x170U)
#define CRU_PMU_SSGTBL48_51_SSGTBL48_51_SHIFT              (0U)
#define CRU_PMU_SSGTBL48_51_SSGTBL48_51_MASK               (0xFFFFFFFFU << CRU_PMU_SSGTBL48_51_SSGTBL48_51_SHIFT)       /* 0xFFFFFFFF */
/* SSGTBL52_55 */
#define CRU_PMU_SSGTBL52_55_OFFSET                         (0x174U)
#define CRU_PMU_SSGTBL52_55_SSGTBL52_55_SHIFT              (0U)
#define CRU_PMU_SSGTBL52_55_SSGTBL52_55_MASK               (0xFFFFFFFFU << CRU_PMU_SSGTBL52_55_SSGTBL52_55_SHIFT)       /* 0xFFFFFFFF */
/* SSGTBL56_59 */
#define CRU_PMU_SSGTBL56_59_OFFSET                         (0x178U)
#define CRU_PMU_SSGTBL56_59_SSGTBL56_59_SHIFT              (0U)
#define CRU_PMU_SSGTBL56_59_SSGTBL56_59_MASK               (0xFFFFFFFFU << CRU_PMU_SSGTBL56_59_SSGTBL56_59_SHIFT)       /* 0xFFFFFFFF */
/* SSGTBL60_63 */
#define CRU_PMU_SSGTBL60_63_OFFSET                         (0x17CU)
#define CRU_PMU_SSGTBL60_63_SSGTBL60_63_SHIFT              (0U)
#define CRU_PMU_SSGTBL60_63_SSGTBL60_63_MASK               (0xFFFFFFFFU << CRU_PMU_SSGTBL60_63_SSGTBL60_63_SHIFT)       /* 0xFFFFFFFF */
/* SSGTBL64_67 */
#define CRU_PMU_SSGTBL64_67_OFFSET                         (0x180U)
#define CRU_PMU_SSGTBL64_67_SSGTBL64_67_SHIFT              (0U)
#define CRU_PMU_SSGTBL64_67_SSGTBL64_67_MASK               (0xFFFFFFFFU << CRU_PMU_SSGTBL64_67_SSGTBL64_67_SHIFT)       /* 0xFFFFFFFF */
/* SSGTBL68_71 */
#define CRU_PMU_SSGTBL68_71_OFFSET                         (0x184U)
#define CRU_PMU_SSGTBL68_71_SSGTBL68_71_SHIFT              (0U)
#define CRU_PMU_SSGTBL68_71_SSGTBL68_71_MASK               (0xFFFFFFFFU << CRU_PMU_SSGTBL68_71_SSGTBL68_71_SHIFT)       /* 0xFFFFFFFF */
/* SSGTBL72_75 */
#define CRU_PMU_SSGTBL72_75_OFFSET                         (0x188U)
#define CRU_PMU_SSGTBL72_75_SSGTBL72_75_SHIFT              (0U)
#define CRU_PMU_SSGTBL72_75_SSGTBL72_75_MASK               (0xFFFFFFFFU << CRU_PMU_SSGTBL72_75_SSGTBL72_75_SHIFT)       /* 0xFFFFFFFF */
/* SSGTBL76_79 */
#define CRU_PMU_SSGTBL76_79_OFFSET                         (0x18CU)
#define CRU_PMU_SSGTBL76_79_SSGTBL76_79_SHIFT              (0U)
#define CRU_PMU_SSGTBL76_79_SSGTBL76_79_MASK               (0xFFFFFFFFU << CRU_PMU_SSGTBL76_79_SSGTBL76_79_SHIFT)       /* 0xFFFFFFFF */
/* SSGTBL80_83 */
#define CRU_PMU_SSGTBL80_83_OFFSET                         (0x190U)
#define CRU_PMU_SSGTBL80_83_SSGTBL80_83_SHIFT              (0U)
#define CRU_PMU_SSGTBL80_83_SSGTBL80_83_MASK               (0xFFFFFFFFU << CRU_PMU_SSGTBL80_83_SSGTBL80_83_SHIFT)       /* 0xFFFFFFFF */
/* SSGTBL84_87 */
#define CRU_PMU_SSGTBL84_87_OFFSET                         (0x194U)
#define CRU_PMU_SSGTBL84_87_SSGTBL84_87_SHIFT              (0U)
#define CRU_PMU_SSGTBL84_87_SSGTBL84_87_MASK               (0xFFFFFFFFU << CRU_PMU_SSGTBL84_87_SSGTBL84_87_SHIFT)       /* 0xFFFFFFFF */
/* SSGTBL88_91 */
#define CRU_PMU_SSGTBL88_91_OFFSET                         (0x198U)
#define CRU_PMU_SSGTBL88_91_SSGTBL88_91_SHIFT              (0U)
#define CRU_PMU_SSGTBL88_91_SSGTBL88_91_MASK               (0xFFFFFFFFU << CRU_PMU_SSGTBL88_91_SSGTBL88_91_SHIFT)       /* 0xFFFFFFFF */
/* SSGTBL92_95 */
#define CRU_PMU_SSGTBL92_95_OFFSET                         (0x19CU)
#define CRU_PMU_SSGTBL92_95_SSGTBL92_95_SHIFT              (0U)
#define CRU_PMU_SSGTBL92_95_SSGTBL92_95_MASK               (0xFFFFFFFFU << CRU_PMU_SSGTBL92_95_SSGTBL92_95_SHIFT)       /* 0xFFFFFFFF */
/* SSGTBL96_99 */
#define CRU_PMU_SSGTBL96_99_OFFSET                         (0x1A0U)
#define CRU_PMU_SSGTBL96_99_SSGTBL96_99_SHIFT              (0U)
#define CRU_PMU_SSGTBL96_99_SSGTBL96_99_MASK               (0xFFFFFFFFU << CRU_PMU_SSGTBL96_99_SSGTBL96_99_SHIFT)       /* 0xFFFFFFFF */
/* SSGTBL100_103 */
#define CRU_PMU_SSGTBL100_103_OFFSET                       (0x1A4U)
#define CRU_PMU_SSGTBL100_103_SSGTBL100_103_SHIFT          (0U)
#define CRU_PMU_SSGTBL100_103_SSGTBL100_103_MASK           (0xFFFFFFFFU << CRU_PMU_SSGTBL100_103_SSGTBL100_103_SHIFT)   /* 0xFFFFFFFF */
/* SSGTBL104_107 */
#define CRU_PMU_SSGTBL104_107_OFFSET                       (0x1A8U)
#define CRU_PMU_SSGTBL104_107_SSGTBL104_107_SHIFT          (0U)
#define CRU_PMU_SSGTBL104_107_SSGTBL104_107_MASK           (0xFFFFFFFFU << CRU_PMU_SSGTBL104_107_SSGTBL104_107_SHIFT)   /* 0xFFFFFFFF */
/* SSGTBL108_111 */
#define CRU_PMU_SSGTBL108_111_OFFSET                       (0x1ACU)
#define CRU_PMU_SSGTBL108_111_SSGTBL108_111_SHIFT          (0U)
#define CRU_PMU_SSGTBL108_111_SSGTBL108_111_MASK           (0xFFFFFFFFU << CRU_PMU_SSGTBL108_111_SSGTBL108_111_SHIFT)   /* 0xFFFFFFFF */
/* SSGTBL112_115 */
#define CRU_PMU_SSGTBL112_115_OFFSET                       (0x1B0U)
#define CRU_PMU_SSGTBL112_115_SSGTBL112_115_SHIFT          (0U)
#define CRU_PMU_SSGTBL112_115_SSGTBL112_115_MASK           (0xFFFFFFFFU << CRU_PMU_SSGTBL112_115_SSGTBL112_115_SHIFT)   /* 0xFFFFFFFF */
/* SSGTBL116_119 */
#define CRU_PMU_SSGTBL116_119_OFFSET                       (0x1B4U)
#define CRU_PMU_SSGTBL116_119_SSGTBL116_119_SHIFT          (0U)
#define CRU_PMU_SSGTBL116_119_SSGTBL116_119_MASK           (0xFFFFFFFFU << CRU_PMU_SSGTBL116_119_SSGTBL116_119_SHIFT)   /* 0xFFFFFFFF */
/* SSGTBL120_123 */
#define CRU_PMU_SSGTBL120_123_OFFSET                       (0x1B8U)
#define CRU_PMU_SSGTBL120_123_SSGTBL120_123_SHIFT          (0U)
#define CRU_PMU_SSGTBL120_123_SSGTBL120_123_MASK           (0xFFFFFFFFU << CRU_PMU_SSGTBL120_123_SSGTBL120_123_SHIFT)   /* 0xFFFFFFFF */
/* SSGTBL124_127 */
#define CRU_PMU_SSGTBL124_127_OFFSET                       (0x1BCU)
#define CRU_PMU_SSGTBL124_127_SSGTBL124_127_SHIFT          (0U)
#define CRU_PMU_SSGTBL124_127_SSGTBL124_127_MASK           (0xFFFFFFFFU << CRU_PMU_SSGTBL124_127_SSGTBL124_127_SHIFT)   /* 0xFFFFFFFF */
/* CLKSEL_CON00 */
#define CRU_PMU_CLKSEL_CON00_OFFSET                        (0x300U)
#define CRU_PMU_CLKSEL_CON00_DBCLK_GPIO0_SEL_SHIFT         (0U)
#define CRU_PMU_CLKSEL_CON00_DBCLK_GPIO0_SEL_MASK          (0x3U << CRU_PMU_CLKSEL_CON00_DBCLK_GPIO0_SEL_SHIFT)         /* 0x00000003 */
#define CRU_PMU_CLKSEL_CON00_DBCLK_GPIO1_SHADOW_SEL_SHIFT  (2U)
#define CRU_PMU_CLKSEL_CON00_DBCLK_GPIO1_SHADOW_SEL_MASK   (0x3U << CRU_PMU_CLKSEL_CON00_DBCLK_GPIO1_SHADOW_SEL_SHIFT)  /* 0x0000000C */
#define CRU_PMU_CLKSEL_CON00_CLK_PMU_HP_TIMER_SEL_SHIFT    (4U)
#define CRU_PMU_CLKSEL_CON00_CLK_PMU_HP_TIMER_SEL_MASK     (0x3U << CRU_PMU_CLKSEL_CON00_CLK_PMU_HP_TIMER_SEL_SHIFT)    /* 0x00000030 */
#define CRU_PMU_CLKSEL_CON00_CLK_PWM0_DIV_SHIFT            (6U)
#define CRU_PMU_CLKSEL_CON00_CLK_PWM0_DIV_MASK             (0xFU << CRU_PMU_CLKSEL_CON00_CLK_PWM0_DIV_SHIFT)            /* 0x000003C0 */
#define CRU_PMU_CLKSEL_CON00_CLK_MAC_OUT_DIV_SHIFT         (10U)
#define CRU_PMU_CLKSEL_CON00_CLK_MAC_OUT_DIV_MASK          (0x3FU << CRU_PMU_CLKSEL_CON00_CLK_MAC_OUT_DIV_SHIFT)        /* 0x0000FC00 */
/* CLKSEL_CON01 */
#define CRU_PMU_CLKSEL_CON01_OFFSET                        (0x304U)
#define CRU_PMU_CLKSEL_CON01_CLK_REF_OUT0_DIV_SHIFT        (0U)
#define CRU_PMU_CLKSEL_CON01_CLK_REF_OUT0_DIV_MASK         (0x3FU << CRU_PMU_CLKSEL_CON01_CLK_REF_OUT0_DIV_SHIFT)       /* 0x0000003F */
#define CRU_PMU_CLKSEL_CON01_CLK_REF_OUT0_SEL_SHIFT        (6U)
#define CRU_PMU_CLKSEL_CON01_CLK_REF_OUT0_SEL_MASK         (0x3U << CRU_PMU_CLKSEL_CON01_CLK_REF_OUT0_SEL_SHIFT)        /* 0x000000C0 */
#define CRU_PMU_CLKSEL_CON01_CLK_REF_OUT1_DIV_SHIFT        (8U)
#define CRU_PMU_CLKSEL_CON01_CLK_REF_OUT1_DIV_MASK         (0x3FU << CRU_PMU_CLKSEL_CON01_CLK_REF_OUT1_DIV_SHIFT)       /* 0x00003F00 */
#define CRU_PMU_CLKSEL_CON01_CLK_REF_OUT1_SEL_SHIFT        (14U)
#define CRU_PMU_CLKSEL_CON01_CLK_REF_OUT1_SEL_MASK         (0x3U << CRU_PMU_CLKSEL_CON01_CLK_REF_OUT1_SEL_SHIFT)        /* 0x0000C000 */
/* CLKSEL_CON02 */
#define CRU_PMU_CLKSEL_CON02_OFFSET                        (0x308U)
#define CRU_PMU_CLKSEL_CON02_CLK_DEEPSLOW_FRAC_DIV_SHIFT   (0U)
#define CRU_PMU_CLKSEL_CON02_CLK_DEEPSLOW_FRAC_DIV_MASK    (0xFFFFFFFFU << CRU_PMU_CLKSEL_CON02_CLK_DEEPSLOW_FRAC_DIV_SHIFT) /* 0xFFFFFFFF */
/* CLKSEL_CON03 */
#define CRU_PMU_CLKSEL_CON03_OFFSET                        (0x30CU)
#define CRU_PMU_CLKSEL_CON03_CLK_DEEPSLOW_FRAC_SEL_SHIFT   (0U)
#define CRU_PMU_CLKSEL_CON03_CLK_DEEPSLOW_FRAC_SEL_MASK    (0x3U << CRU_PMU_CLKSEL_CON03_CLK_DEEPSLOW_FRAC_SEL_SHIFT)   /* 0x00000003 */
#define CRU_PMU_CLKSEL_CON03_CLK_DEEPSLOW_RC_DIV_SHIFT     (2U)
#define CRU_PMU_CLKSEL_CON03_CLK_DEEPSLOW_RC_DIV_MASK      (0x1FU << CRU_PMU_CLKSEL_CON03_CLK_DEEPSLOW_RC_DIV_SHIFT)    /* 0x0000007C */
#define CRU_PMU_CLKSEL_CON03_CLK_DEEPSLOW_SEL_SHIFT        (7U)
#define CRU_PMU_CLKSEL_CON03_CLK_DEEPSLOW_SEL_MASK         (0x3U << CRU_PMU_CLKSEL_CON03_CLK_DEEPSLOW_SEL_SHIFT)        /* 0x00000180 */
#define CRU_PMU_CLKSEL_CON03_CLK_DEEPSLOW_PMU_SEL_SHIFT    (9U)
#define CRU_PMU_CLKSEL_CON03_CLK_DEEPSLOW_PMU_SEL_MASK     (0x3U << CRU_PMU_CLKSEL_CON03_CLK_DEEPSLOW_PMU_SEL_SHIFT)    /* 0x00000600 */
/* CLKSEL_CON04 */
#define CRU_PMU_CLKSEL_CON04_OFFSET                        (0x310U)
#define CRU_PMU_CLKSEL_CON04_CLK_DDRPHY_DIV_SHIFT          (0U)
#define CRU_PMU_CLKSEL_CON04_CLK_DDRPHY_DIV_MASK           (0xFU << CRU_PMU_CLKSEL_CON04_CLK_DDRPHY_DIV_SHIFT)          /* 0x0000000F */
#define CRU_PMU_CLKSEL_CON04_CLK_DDRPHY_SEL_SHIFT          (4U)
#define CRU_PMU_CLKSEL_CON04_CLK_DDRPHY_SEL_MASK           (0x3U << CRU_PMU_CLKSEL_CON04_CLK_DDRPHY_SEL_SHIFT)          /* 0x00000030 */
#define CRU_PMU_CLKSEL_CON04_CLK_REF_PHY_PLL_DIV_SHIFT     (6U)
#define CRU_PMU_CLKSEL_CON04_CLK_REF_PHY_PLL_DIV_MASK      (0x7FU << CRU_PMU_CLKSEL_CON04_CLK_REF_PHY_PLL_DIV_SHIFT)    /* 0x00001FC0 */
#define CRU_PMU_CLKSEL_CON04_CLK_REF_PHY_PLL_SEL_SHIFT     (13U)
#define CRU_PMU_CLKSEL_CON04_CLK_REF_PHY_PLL_SEL_MASK      (0x3U << CRU_PMU_CLKSEL_CON04_CLK_REF_PHY_PLL_SEL_SHIFT)     /* 0x00006000 */
#define CRU_PMU_CLKSEL_CON04_CLK_REF_PHY_PMU_MUX_SEL_SHIFT (15U)
#define CRU_PMU_CLKSEL_CON04_CLK_REF_PHY_PMU_MUX_SEL_MASK  (0x1U << CRU_PMU_CLKSEL_CON04_CLK_REF_PHY_PMU_MUX_SEL_SHIFT) /* 0x00008000 */
/* CLKSEL_CON06 */
#define CRU_PMU_CLKSEL_CON06_OFFSET                        (0x318U)
#define CRU_PMU_CLKSEL_CON06_CLK_V0PLL_REF_SEL_SHIFT       (0U)
#define CRU_PMU_CLKSEL_CON06_CLK_V0PLL_REF_SEL_MASK        (0x1U << CRU_PMU_CLKSEL_CON06_CLK_V0PLL_REF_SEL_SHIFT)       /* 0x00000001 */
#define CRU_PMU_CLKSEL_CON06_CLK_V1PLL_REF_SEL_SHIFT       (1U)
#define CRU_PMU_CLKSEL_CON06_CLK_V1PLL_REF_SEL_MASK        (0x1U << CRU_PMU_CLKSEL_CON06_CLK_V1PLL_REF_SEL_SHIFT)       /* 0x00000002 */
/* GATE_CON00 */
#define CRU_PMU_GATE_CON00_OFFSET                          (0x800U)
#define CRU_PMU_GATE_CON00_CLK_PMU_EN_SHIFT                (1U)
#define CRU_PMU_GATE_CON00_CLK_PMU_EN_MASK                 (0x1U << CRU_PMU_GATE_CON00_CLK_PMU_EN_SHIFT)                /* 0x00000002 */
#define CRU_PMU_GATE_CON00_PCLK_PMU_EN_SHIFT               (2U)
#define CRU_PMU_GATE_CON00_PCLK_PMU_EN_MASK                (0x1U << CRU_PMU_GATE_CON00_PCLK_PMU_EN_SHIFT)               /* 0x00000004 */
#define CRU_PMU_GATE_CON00_CLK_PMU_DEEPSLOW_EN_SHIFT       (3U)
#define CRU_PMU_GATE_CON00_CLK_PMU_DEEPSLOW_EN_MASK        (0x1U << CRU_PMU_GATE_CON00_CLK_PMU_DEEPSLOW_EN_SHIFT)       /* 0x00000008 */
#define CRU_PMU_GATE_CON00_PCLK_PMU_CRU_EN_SHIFT           (4U)
#define CRU_PMU_GATE_CON00_PCLK_PMU_CRU_EN_MASK            (0x1U << CRU_PMU_GATE_CON00_PCLK_PMU_CRU_EN_SHIFT)           /* 0x00000010 */
#define CRU_PMU_GATE_CON00_PCLK_PMU_GRF_EN_SHIFT           (5U)
#define CRU_PMU_GATE_CON00_PCLK_PMU_GRF_EN_MASK            (0x1U << CRU_PMU_GATE_CON00_PCLK_PMU_GRF_EN_SHIFT)           /* 0x00000020 */
#define CRU_PMU_GATE_CON00_PCLK_GPIO0_IOC_EN_SHIFT         (7U)
#define CRU_PMU_GATE_CON00_PCLK_GPIO0_IOC_EN_MASK          (0x1U << CRU_PMU_GATE_CON00_PCLK_GPIO0_IOC_EN_SHIFT)         /* 0x00000080 */
#define CRU_PMU_GATE_CON00_PCLK_GPIO0_EN_SHIFT             (8U)
#define CRU_PMU_GATE_CON00_PCLK_GPIO0_EN_MASK              (0x1U << CRU_PMU_GATE_CON00_PCLK_GPIO0_EN_SHIFT)             /* 0x00000100 */
#define CRU_PMU_GATE_CON00_DBCLK_GPIO0_EN_SHIFT            (9U)
#define CRU_PMU_GATE_CON00_DBCLK_GPIO0_EN_MASK             (0x1U << CRU_PMU_GATE_CON00_DBCLK_GPIO0_EN_SHIFT)            /* 0x00000200 */
#define CRU_PMU_GATE_CON00_PCLK_GPIO1_SHADOW_EN_SHIFT      (10U)
#define CRU_PMU_GATE_CON00_PCLK_GPIO1_SHADOW_EN_MASK       (0x1U << CRU_PMU_GATE_CON00_PCLK_GPIO1_SHADOW_EN_SHIFT)      /* 0x00000400 */
#define CRU_PMU_GATE_CON00_DBCLK_GPIO1_SHADOW_EN_SHIFT     (11U)
#define CRU_PMU_GATE_CON00_DBCLK_GPIO1_SHADOW_EN_MASK      (0x1U << CRU_PMU_GATE_CON00_DBCLK_GPIO1_SHADOW_EN_SHIFT)     /* 0x00000800 */
#define CRU_PMU_GATE_CON00_PCLK_PMU_HP_TIMER_EN_SHIFT      (12U)
#define CRU_PMU_GATE_CON00_PCLK_PMU_HP_TIMER_EN_MASK       (0x1U << CRU_PMU_GATE_CON00_PCLK_PMU_HP_TIMER_EN_SHIFT)      /* 0x00001000 */
#define CRU_PMU_GATE_CON00_CLK_PMU_HP_TIMER_EN_SHIFT       (13U)
#define CRU_PMU_GATE_CON00_CLK_PMU_HP_TIMER_EN_MASK        (0x1U << CRU_PMU_GATE_CON00_CLK_PMU_HP_TIMER_EN_SHIFT)       /* 0x00002000 */
#define CRU_PMU_GATE_CON00_CLK_PMU_HP_TIMER_DEEPSLOW_EN_SHIFT (14U)
#define CRU_PMU_GATE_CON00_CLK_PMU_HP_TIMER_DEEPSLOW_EN_MASK (0x1U << CRU_PMU_GATE_CON00_CLK_PMU_HP_TIMER_DEEPSLOW_EN_SHIFT) /* 0x00004000 */
#define CRU_PMU_GATE_CON00_PCLK_PWM0_EN_SHIFT              (15U)
#define CRU_PMU_GATE_CON00_PCLK_PWM0_EN_MASK               (0x1U << CRU_PMU_GATE_CON00_PCLK_PWM0_EN_SHIFT)              /* 0x00008000 */
/* GATE_CON01 */
#define CRU_PMU_GATE_CON01_OFFSET                          (0x804U)
#define CRU_PMU_GATE_CON01_CLK_PWM0_EN_SHIFT               (0U)
#define CRU_PMU_GATE_CON01_CLK_PWM0_EN_MASK                (0x1U << CRU_PMU_GATE_CON01_CLK_PWM0_EN_SHIFT)               /* 0x00000001 */
#define CRU_PMU_GATE_CON01_CLK_OSC_PWM0_EN_SHIFT           (1U)
#define CRU_PMU_GATE_CON01_CLK_OSC_PWM0_EN_MASK            (0x1U << CRU_PMU_GATE_CON01_CLK_OSC_PWM0_EN_SHIFT)           /* 0x00000002 */
#define CRU_PMU_GATE_CON01_CLK_RC_PWM0_EN_SHIFT            (2U)
#define CRU_PMU_GATE_CON01_CLK_RC_PWM0_EN_MASK             (0x1U << CRU_PMU_GATE_CON01_CLK_RC_PWM0_EN_SHIFT)            /* 0x00000004 */
#define CRU_PMU_GATE_CON01_CLK_MAC_OUT_EN_SHIFT            (3U)
#define CRU_PMU_GATE_CON01_CLK_MAC_OUT_EN_MASK             (0x1U << CRU_PMU_GATE_CON01_CLK_MAC_OUT_EN_SHIFT)            /* 0x00000008 */
#define CRU_PMU_GATE_CON01_CLK_REF_OUT0_EN_SHIFT           (4U)
#define CRU_PMU_GATE_CON01_CLK_REF_OUT0_EN_MASK            (0x1U << CRU_PMU_GATE_CON01_CLK_REF_OUT0_EN_SHIFT)           /* 0x00000010 */
#define CRU_PMU_GATE_CON01_CLK_REF_OUT1_EN_SHIFT           (5U)
#define CRU_PMU_GATE_CON01_CLK_REF_OUT1_EN_MASK            (0x1U << CRU_PMU_GATE_CON01_CLK_REF_OUT1_EN_SHIFT)           /* 0x00000020 */
#define CRU_PMU_GATE_CON01_CLK_DEEPSLOW_FRAC_DIV_EN_SHIFT  (6U)
#define CRU_PMU_GATE_CON01_CLK_DEEPSLOW_FRAC_DIV_EN_MASK   (0x1U << CRU_PMU_GATE_CON01_CLK_DEEPSLOW_FRAC_DIV_EN_SHIFT)  /* 0x00000040 */
#define CRU_PMU_GATE_CON01_CLK_DEEPSLOW_RC_EN_SHIFT        (7U)
#define CRU_PMU_GATE_CON01_CLK_DEEPSLOW_RC_EN_MASK         (0x1U << CRU_PMU_GATE_CON01_CLK_DEEPSLOW_RC_EN_SHIFT)        /* 0x00000080 */
#define CRU_PMU_GATE_CON01_CLK_DEEPSLOW_EN_SHIFT           (8U)
#define CRU_PMU_GATE_CON01_CLK_DEEPSLOW_EN_MASK            (0x1U << CRU_PMU_GATE_CON01_CLK_DEEPSLOW_EN_SHIFT)           /* 0x00000100 */
#define CRU_PMU_GATE_CON01_CLK_DEEPSLOW_PMU_EN_SHIFT       (9U)
#define CRU_PMU_GATE_CON01_CLK_DEEPSLOW_PMU_EN_MASK        (0x1U << CRU_PMU_GATE_CON01_CLK_DEEPSLOW_PMU_EN_SHIFT)       /* 0x00000200 */
#define CRU_PMU_GATE_CON01_CLK_UART_JTAG_EN_SHIFT          (10U)
#define CRU_PMU_GATE_CON01_CLK_UART_JTAG_EN_MASK           (0x1U << CRU_PMU_GATE_CON01_CLK_UART_JTAG_EN_SHIFT)          /* 0x00000400 */
#define CRU_PMU_GATE_CON01_CLK_DDRPHY_EN_SHIFT             (11U)
#define CRU_PMU_GATE_CON01_CLK_DDRPHY_EN_MASK              (0x1U << CRU_PMU_GATE_CON01_CLK_DDRPHY_EN_SHIFT)             /* 0x00000800 */
#define CRU_PMU_GATE_CON01_PCLK_TOUCH_KEY_EN_SHIFT         (12U)
#define CRU_PMU_GATE_CON01_PCLK_TOUCH_KEY_EN_MASK          (0x1U << CRU_PMU_GATE_CON01_PCLK_TOUCH_KEY_EN_SHIFT)         /* 0x00001000 */
#define CRU_PMU_GATE_CON01_CLK_TOUCH_KEY_EN_SHIFT          (13U)
#define CRU_PMU_GATE_CON01_CLK_TOUCH_KEY_EN_MASK           (0x1U << CRU_PMU_GATE_CON01_CLK_TOUCH_KEY_EN_SHIFT)          /* 0x00002000 */
#define CRU_PMU_GATE_CON01_CLK_REF_PHY_PLL_EN_SHIFT        (14U)
#define CRU_PMU_GATE_CON01_CLK_REF_PHY_PLL_EN_MASK         (0x1U << CRU_PMU_GATE_CON01_CLK_REF_PHY_PLL_EN_SHIFT)        /* 0x00004000 */
/* GATE_CON02 */
#define CRU_PMU_GATE_CON02_OFFSET                          (0x808U)
#define CRU_PMU_GATE_CON02_CLK_WIFI_OUT_EN_SHIFT           (0U)
#define CRU_PMU_GATE_CON02_CLK_WIFI_OUT_EN_MASK            (0x1U << CRU_PMU_GATE_CON02_CLK_WIFI_OUT_EN_SHIFT)           /* 0x00000001 */
/* SOFTRST_CON00 */
#define CRU_PMU_SOFTRST_CON00_OFFSET                       (0xA00U)
#define CRU_PMU_SOFTRST_CON00_PRESETN_PMU_GRF_SHIFT        (5U)
#define CRU_PMU_SOFTRST_CON00_PRESETN_PMU_GRF_MASK         (0x1U << CRU_PMU_SOFTRST_CON00_PRESETN_PMU_GRF_SHIFT)        /* 0x00000020 */
#define CRU_PMU_SOFTRST_CON00_PRESETN_GPIO0_IOC_SHIFT      (7U)
#define CRU_PMU_SOFTRST_CON00_PRESETN_GPIO0_IOC_MASK       (0x1U << CRU_PMU_SOFTRST_CON00_PRESETN_GPIO0_IOC_SHIFT)      /* 0x00000080 */
#define CRU_PMU_SOFTRST_CON00_PRESETN_GPIO0_SHIFT          (8U)
#define CRU_PMU_SOFTRST_CON00_PRESETN_GPIO0_MASK           (0x1U << CRU_PMU_SOFTRST_CON00_PRESETN_GPIO0_SHIFT)          /* 0x00000100 */
#define CRU_PMU_SOFTRST_CON00_DBRESETN_GPIO0_SHIFT         (9U)
#define CRU_PMU_SOFTRST_CON00_DBRESETN_GPIO0_MASK          (0x1U << CRU_PMU_SOFTRST_CON00_DBRESETN_GPIO0_SHIFT)         /* 0x00000200 */
#define CRU_PMU_SOFTRST_CON00_PRESETN_GPIO1_SHADOW_SHIFT   (10U)
#define CRU_PMU_SOFTRST_CON00_PRESETN_GPIO1_SHADOW_MASK    (0x1U << CRU_PMU_SOFTRST_CON00_PRESETN_GPIO1_SHADOW_SHIFT)   /* 0x00000400 */
#define CRU_PMU_SOFTRST_CON00_DBRESETN_GPIO1_SHADOW_SHIFT  (11U)
#define CRU_PMU_SOFTRST_CON00_DBRESETN_GPIO1_SHADOW_MASK   (0x1U << CRU_PMU_SOFTRST_CON00_DBRESETN_GPIO1_SHADOW_SHIFT)  /* 0x00000800 */
#define CRU_PMU_SOFTRST_CON00_PRESETN_PMU_HP_TIMER_SHIFT   (12U)
#define CRU_PMU_SOFTRST_CON00_PRESETN_PMU_HP_TIMER_MASK    (0x1U << CRU_PMU_SOFTRST_CON00_PRESETN_PMU_HP_TIMER_SHIFT)   /* 0x00001000 */
#define CRU_PMU_SOFTRST_CON00_RESETN_PMU_HP_TIMER_SHIFT    (13U)
#define CRU_PMU_SOFTRST_CON00_RESETN_PMU_HP_TIMER_MASK     (0x1U << CRU_PMU_SOFTRST_CON00_RESETN_PMU_HP_TIMER_SHIFT)    /* 0x00002000 */
#define CRU_PMU_SOFTRST_CON00_RESETN_PMU_HP_TIMER_DEEPSLOW_SHIFT (14U)
#define CRU_PMU_SOFTRST_CON00_RESETN_PMU_HP_TIMER_DEEPSLOW_MASK (0x1U << CRU_PMU_SOFTRST_CON00_RESETN_PMU_HP_TIMER_DEEPSLOW_SHIFT) /* 0x00004000 */
#define CRU_PMU_SOFTRST_CON00_PRESETN_PWM0_SHIFT           (15U)
#define CRU_PMU_SOFTRST_CON00_PRESETN_PWM0_MASK            (0x1U << CRU_PMU_SOFTRST_CON00_PRESETN_PWM0_SHIFT)           /* 0x00008000 */
/* SOFTRST_CON01 */
#define CRU_PMU_SOFTRST_CON01_OFFSET                       (0xA04U)
#define CRU_PMU_SOFTRST_CON01_RESETN_PWM0_SHIFT            (0U)
#define CRU_PMU_SOFTRST_CON01_RESETN_PWM0_MASK             (0x1U << CRU_PMU_SOFTRST_CON01_RESETN_PWM0_SHIFT)            /* 0x00000001 */
#define CRU_PMU_SOFTRST_CON01_RESETN_DDRPHY_SHIFT          (11U)
#define CRU_PMU_SOFTRST_CON01_RESETN_DDRPHY_MASK           (0x1U << CRU_PMU_SOFTRST_CON01_RESETN_DDRPHY_SHIFT)          /* 0x00000800 */
#define CRU_PMU_SOFTRST_CON01_PRESETN_TOUCH_KEY_SHIFT      (12U)
#define CRU_PMU_SOFTRST_CON01_PRESETN_TOUCH_KEY_MASK       (0x1U << CRU_PMU_SOFTRST_CON01_PRESETN_TOUCH_KEY_SHIFT)      /* 0x00001000 */
#define CRU_PMU_SOFTRST_CON01_RESETN_TOUCH_KEY_SHIFT       (13U)
#define CRU_PMU_SOFTRST_CON01_RESETN_TOUCH_KEY_MASK        (0x1U << CRU_PMU_SOFTRST_CON01_RESETN_TOUCH_KEY_SHIFT)       /* 0x00002000 */
/****************************************SCRU_PMU****************************************/
/* GATE_CON00 */
#define SCRU_PMU_GATE_CON00_OFFSET                         (0x40U)
#define SCRU_PMU_GATE_CON00_PCLK_PMU_SGRF_EN_SHIFT         (0U)
#define SCRU_PMU_GATE_CON00_PCLK_PMU_SGRF_EN_MASK          (0x1U << SCRU_PMU_GATE_CON00_PCLK_PMU_SGRF_EN_SHIFT)         /* 0x00000001 */
#ifdef __cplusplus
}
#endif /* __cplusplus */
#endif /* __RK3506_H */
